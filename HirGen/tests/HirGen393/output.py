import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_350 = relay.var("var_350", dtype = "float32", shape = (4, 9, 10))#candidate|350|(4, 9, 10)|var|float32
uop_351 = relay.sin(var_350.astype('float32')) # shape=(4, 9, 10)
var_355 = relay.var("var_355", dtype = "float32", shape = (4, 9, 10))#candidate|355|(4, 9, 10)|var|float32
bop_356 = relay.floor_divide(uop_351.astype('float64'), relay.reshape(var_355.astype('float64'), relay.shape_of(uop_351))) # shape=(4, 9, 10)
output = relay.Tuple([bop_356,])
output2 = relay.Tuple([bop_356,])
func_390 = relay.Function([var_350,var_355,], output)
mod['func_390'] = func_390
mod = relay.transform.InferType()(mod)
var_391 = relay.var("var_391", dtype = "float32", shape = (4, 9, 10))#candidate|391|(4, 9, 10)|var|float32
var_392 = relay.var("var_392", dtype = "float32", shape = (4, 9, 10))#candidate|392|(4, 9, 10)|var|float32
output = func_390(var_391,var_392,)
func_393 = relay.Function([var_391,var_392,], output)
mutated_mod['func_393'] = func_393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_705 = relay.var("var_705", dtype = "int64", shape = ())#candidate|705|()|var|int64
var_706 = relay.var("var_706", dtype = "int64", shape = (16, 15, 4))#candidate|706|(16, 15, 4)|var|int64
bop_707 = relay.subtract(var_705.astype('int64'), var_706.astype('int64')) # shape=(16, 15, 4)
output = relay.Tuple([bop_707,])
output2 = relay.Tuple([bop_707,])
func_710 = relay.Function([var_705,var_706,], output)
mod['func_710'] = func_710
mod = relay.transform.InferType()(mod)
var_711 = relay.var("var_711", dtype = "int64", shape = ())#candidate|711|()|var|int64
var_712 = relay.var("var_712", dtype = "int64", shape = (16, 15, 4))#candidate|712|(16, 15, 4)|var|int64
output = func_710(var_711,var_712,)
func_713 = relay.Function([var_711,var_712,], output)
mutated_mod['func_713'] = func_713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_736 = relay.var("var_736", dtype = "float32", shape = (11, 11, 3))#candidate|736|(11, 11, 3)|var|float32
uop_737 = relay.log10(var_736.astype('float32')) # shape=(11, 11, 3)
output = relay.Tuple([uop_737,])
output2 = relay.Tuple([uop_737,])
func_747 = relay.Function([var_736,], output)
mod['func_747'] = func_747
mod = relay.transform.InferType()(mod)
var_748 = relay.var("var_748", dtype = "float32", shape = (11, 11, 3))#candidate|748|(11, 11, 3)|var|float32
output = func_747(var_748)
func_749 = relay.Function([var_748], output)
mutated_mod['func_749'] = func_749
mutated_mod = relay.transform.InferType()(mutated_mod)
var_830 = relay.var("var_830", dtype = "float64", shape = (1, 15, 7))#candidate|830|(1, 15, 7)|var|float64
uop_831 = relay.cosh(var_830.astype('float64')) # shape=(1, 15, 7)
func_390_call = mod.get_global_var('func_390')
func_393_call = mutated_mod.get_global_var('func_393')
const_858 = relay.const([-9.068434,8.727464,5.557194,-0.464547,9.839509,-3.203951,-0.649594,0.765214,4.158523,-6.806566,5.920219,0.348010,-9.226029,9.539541,6.808236,5.538100,9.799981,3.095374,-9.119537,2.308057,-7.014189,-3.992540,6.887311,-1.645310,-0.515609,2.057037,-6.729436,7.030445,1.717559,-0.668097,-7.157662,1.247643,-2.084495,-2.207205,-3.103464,6.948856,6.582457,2.632808,5.039725,7.214036,8.528757,2.161511,-6.486122,-1.016926,8.540440,-6.596769,5.796659,-2.787367,-6.025959,-3.156795,-9.739216,7.824657,-1.733705,-4.116379,0.666913,5.623036,7.398912,-5.027177,2.764424,1.621316,2.955940,-0.230474,1.445094,6.461550,9.813568,4.182751,1.060218,-9.801455,3.711130,7.771775,-9.346590,7.525376,-1.131500,3.693093,3.789933,-7.094079,6.155034,9.712353,1.990246,-9.383918,-8.579031,-3.647403,7.962358,6.661583,-3.617327,8.451731,6.494897,-3.784866,-4.941535,-8.626957,-8.457105,-9.012859,8.342065,9.273473,-5.415301,-6.919294,7.559984,-6.495529,6.906652,8.458690,6.959290,-5.523482,-1.227042,-3.512421,0.599756,-0.916501,9.740128,5.164749,-3.048780,-5.095238,-6.205890,6.873752,3.305376,-9.458005,-3.460042,-3.529565,-0.111944,-7.569353,1.773426,5.849789,4.988593,6.517475,4.758208,-3.955998,0.113399,-4.963451,4.244868,6.834908,-6.790333,9.416006,8.057254,-4.722319,-3.089163,-2.195472,4.526140,-4.761983,5.644806,6.129333,-6.927680,-4.142724,-9.440237,-2.618128,9.158808,8.088235,7.953166,-7.158411,-3.907587,6.228612,5.024302,9.160595,4.089486,-5.516552,5.107980,2.063079,1.972776,5.877309,7.791093,8.022738,5.809888,-2.567248,4.068622,7.067009,5.979063,-1.084935,2.121852,6.649315,-0.937041,7.915172,2.003365,7.192197,0.819259,0.231069,-1.644141,3.602184,0.581850,3.008521,-9.003586,-8.965963,2.754400,-4.269765,-1.212059,2.244139,9.881740,-1.763381,-5.770230,6.910051,-6.376486,-4.898200,6.346582,-0.980442,7.583001,9.342058,3.626521,2.039045,7.051748,4.562899,4.946587,-2.406100,6.934936,2.078652,-8.706914,8.676778,3.987267,-5.613813,0.819432,7.405580,-9.762188,-1.025975,8.630184,-8.567998,-8.992867,-2.189852,-7.297983,-6.493102,-7.245071,8.524891,2.332968,4.270184,-6.973731,9.413279,8.266091,-3.672616,-5.480787,1.188508,-5.816526,-0.014860,9.984914,-7.735707,4.687500,1.362719,9.951656,-2.129898,-5.144998,1.375268,9.064964,-9.007344,-8.598673,-9.668705,-7.350711,-0.364122,6.135556,2.774039,1.749104,4.899637,-1.938232,-0.485082,7.066742,-0.508222,6.238860,5.271292,7.319773,1.713261,-3.989517,-1.766057,0.588543,-6.467470,7.417139,6.939572,1.154180,2.810063,4.595062,2.935309,-9.778625,-5.217908,-3.591547,2.390458,-7.404431,5.541889,-7.694243,6.235289,-9.596638,4.138338,7.527436,-2.088027,6.812101,-2.519582,-6.924947,6.718561,-3.867624,-6.655687,1.661507,-6.957512,-5.266212,8.118062,8.692192,-7.982862,-9.159482,8.602136,-8.789326,-8.420086,4.484402,-5.138133,9.701991,-0.524160,-1.070675,-2.797197,-0.866423,0.832224,-2.699266,-8.849715,3.510464,0.115690,-8.243543,8.970174,-3.885544,-4.396005,-9.973270,9.736988,-4.885929,7.465226,-5.597084,5.820894,-8.690712,8.669338,7.008153,-5.542194,-0.045357,-7.741997,-9.552716,0.908976,0.252680,-6.266731,9.283022,6.717141,-5.711164,-7.465426,-4.618341,0.333008,-2.193424,2.643049,-3.087602,-3.463638,4.975722,5.486897,-3.131698,4.215331,-8.334548,5.753613,6.342600,-9.399422,-1.158686,0.582389,-2.944785,7.133521,4.128788,-3.751863,3.607163,1.449501,0.968271,-6.976609,5.135543,3.634855,-0.041286,1.468627,-7.301792,4.843524,-1.468728,2.158416,1.758595,3.372939], dtype = "float32")#candidate|858|(360,)|const|float32
call_857 = relay.TupleGetItem(func_390_call(relay.reshape(const_858.astype('float32'), [4, 9, 10]), relay.reshape(const_858.astype('float32'), [4, 9, 10]), ), 0)
call_859 = relay.TupleGetItem(func_393_call(relay.reshape(const_858.astype('float32'), [4, 9, 10]), relay.reshape(const_858.astype('float32'), [4, 9, 10]), ), 0)
bop_864 = relay.logical_or(uop_831.astype('bool'), relay.reshape(var_830.astype('bool'), relay.shape_of(uop_831))) # shape=(1, 15, 7)
func_747_call = mod.get_global_var('func_747')
func_749_call = mutated_mod.get_global_var('func_749')
const_869 = relay.const([-6.489559,5.901966,8.238089,-1.740279,-5.763971,2.506500,-0.647300,-7.147647,-5.763583,-3.694547,3.558827,-5.869146,0.940357,-0.469734,-4.684109,-4.392294,9.317943,8.647428,2.687676,-6.855711,-5.130465,-7.920370,8.435253,-8.171512,-0.799565,2.211672,9.056982,4.689583,-8.164479,1.294904,-5.610847,3.393916,2.681299,4.553006,-1.870671,-6.393003,2.880446,9.398040,5.079312,-2.265388,6.175353,5.662362,-2.500061,3.676238,-9.568236,7.262170,-7.428333,7.136051,-9.735748,-5.219319,-9.292118,8.275886,-1.657426,-2.343900,-1.523109,9.475338,-8.677173,9.766302,3.903505,6.072071,5.773497,-3.887048,-5.993791,-3.089316,-4.462696,3.658832,3.199032,2.249987,-0.550336,-0.292677,-2.644863,-7.833584,-0.216428,8.811472,-7.840386,-3.075525,-3.398305,2.917601,-2.024607,2.045814,-9.788350,9.774370,2.569671,5.012732,-9.184788,1.286114,3.758880,6.336660,3.521008,0.400922,5.173508,8.200914,7.895952,-1.838031,-8.229334,-1.820718,8.256182,4.880128,-9.719184,-1.200873,-6.367536,-5.980913,0.289230,3.021853,-2.028591,-2.889283,-6.351605,0.433472,-3.199504,4.432595,1.809080,0.724926,1.495928,-4.337633,-9.896208,-0.487096,-3.757587,-8.759886,-1.916298,-7.394193,0.467726,8.383005,-8.249712,3.215943,-4.855075,-5.556039,-1.731184,-0.907273,-9.218086,-8.019246,8.668298,4.761487,0.023210,3.797945,4.578442,-5.107823,-0.249638,1.498153,3.324925,6.366154,5.884836,5.885918,-8.841815,-5.212216,-2.027260,9.378278,6.379861,1.323077,-3.023534,4.049706,-5.810286,-2.395471,2.363044,-0.740335,-1.443817,-0.005166,0.752173,-1.034228,-9.078403,-2.718747,8.446229,-9.973715,-2.096614,9.385498,8.501155,-6.217869,-1.888577,-1.506530,-2.139377,-0.612609,2.464938,3.250563,8.252137,-8.024641,-7.261374,-3.513008,-6.158134,-7.216577,4.889566,4.809869,-9.276077,-3.783909,4.831460,-5.705440,5.320455,-4.077202,-8.936199,7.015845,7.084024,7.612796,-4.808221,2.654213,-5.951383,5.473955,1.369704,-1.556802,1.711233,9.474587,-7.506439,-9.264260,-2.705030,-6.676391,-8.324287,-1.490613,3.353893,1.481766,-3.397274,-3.098826,8.060107,-2.576468,-7.531489,-1.042750,0.236781,-5.789244,-3.475669,-6.012390,-0.167147,5.895855,-9.154163,-7.451301,7.345855,-3.215991,6.832361,-7.205946,-7.058071,7.858009,-7.363490,-7.968037,2.400631,5.100448,-0.671316,3.986334,-4.225969,6.887793,-6.253452,-3.829841,-7.386982,7.543680,7.722783,-4.606955,-8.773619,-8.485251,7.790998,8.933933,-7.103173,-7.704768,-8.309293,0.358363,-5.910856,9.498714,-9.247779,-3.243422,-2.671354,-6.090388,-2.573909,-2.678492,0.112976,8.440662,9.680257,9.353511,6.974268,-3.639173,4.383866,-6.433545,9.219643,9.789556,0.954731,-0.652759,4.764522,3.211257,0.742263,8.652388,-9.201298,3.305357,9.898959,6.274661,3.722350,-8.374502,6.513780,-7.541248,-8.478684,0.944150,-7.361371,-9.815158,-4.311875,1.621590,1.429279,-1.132344,9.481563,1.075149,8.232975,4.562958,0.337296,6.071655,-0.823800,1.754260,4.425231,-8.157643,-5.011524,-2.490327,-7.243723,-3.356848,-4.830342,0.596509,-8.667976,-0.034528,-4.065423,-2.577404,1.881426,-6.406905,-1.373339,-5.981384,-2.952850,6.264784,5.909475,-3.971944,3.524635,2.178791,0.157477,4.487671,-2.268242,4.568310,9.807666,-9.554237,-5.483182,-5.038553,-7.934283,-4.032487,4.434364,6.248068,2.577761,-4.426912,-0.446150,-7.397735,-4.496832,4.182655,2.040039,6.963044,0.748050,0.394574,8.570575,-4.902763,0.655173,-8.735140,-5.128396,9.208228,6.354316,-1.683307,-0.864093,-5.407343,-0.156394,3.089028,-7.906618,-7.989549,-4.582737,5.908146,8.257838,8.537397,7.153256,2.016774,7.283742,8.717079,-7.427029], dtype = "float32")#candidate|869|(363,)|const|float32
call_868 = relay.TupleGetItem(func_747_call(relay.reshape(const_869.astype('float32'), [11, 11, 3])), 0)
call_870 = relay.TupleGetItem(func_749_call(relay.reshape(const_869.astype('float32'), [11, 11, 3])), 0)
output = relay.Tuple([call_857,const_858,bop_864,call_868,const_869,])
output2 = relay.Tuple([call_859,const_858,bop_864,call_870,const_869,])
func_871 = relay.Function([var_830,], output)
mod['func_871'] = func_871
mod = relay.transform.InferType()(mod)
mutated_mod['func_871'] = func_871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_872 = relay.var("var_872", dtype = "float64", shape = (1, 15, 7))#candidate|872|(1, 15, 7)|var|float64
func_871_call = mutated_mod.get_global_var('func_871')
call_873 = func_871_call(var_872)
output = call_873
func_874 = relay.Function([var_872], output)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_961 = relay.var("var_961", dtype = "float64", shape = (4, 5, 2))#candidate|961|(4, 5, 2)|var|float64
uop_962 = relay.atan(var_961.astype('float64')) # shape=(4, 5, 2)
func_710_call = mod.get_global_var('func_710')
func_713_call = mutated_mod.get_global_var('func_713')
const_965 = relay.const(10, dtype = "int64")#candidate|965|()|const|int64
var_966 = relay.var("var_966", dtype = "int64", shape = (960,))#candidate|966|(960,)|var|int64
call_964 = relay.TupleGetItem(func_710_call(relay.reshape(const_965.astype('int64'), []), relay.reshape(var_966.astype('int64'), [16, 15, 4]), ), 0)
call_967 = relay.TupleGetItem(func_713_call(relay.reshape(const_965.astype('int64'), []), relay.reshape(var_966.astype('int64'), [16, 15, 4]), ), 0)
output = relay.Tuple([uop_962,call_964,const_965,var_966,])
output2 = relay.Tuple([uop_962,call_967,const_965,var_966,])
func_984 = relay.Function([var_961,var_966,], output)
mod['func_984'] = func_984
mod = relay.transform.InferType()(mod)
var_985 = relay.var("var_985", dtype = "float64", shape = (4, 5, 2))#candidate|985|(4, 5, 2)|var|float64
var_986 = relay.var("var_986", dtype = "int64", shape = (960,))#candidate|986|(960,)|var|int64
output = func_984(var_985,var_986,)
func_987 = relay.Function([var_985,var_986,], output)
mutated_mod['func_987'] = func_987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1193 = relay.var("var_1193", dtype = "float64", shape = (15, 6, 16))#candidate|1193|(15, 6, 16)|var|float64
uop_1194 = relay.erf(var_1193.astype('float64')) # shape=(15, 6, 16)
uop_1215 = relay.sqrt(uop_1194.astype('float64')) # shape=(15, 6, 16)
bop_1246 = relay.power(var_1193.astype('float32'), relay.reshape(uop_1194.astype('float32'), relay.shape_of(var_1193))) # shape=(15, 6, 16)
output = relay.Tuple([uop_1215,bop_1246,])
output2 = relay.Tuple([uop_1215,bop_1246,])
func_1267 = relay.Function([var_1193,], output)
mod['func_1267'] = func_1267
mod = relay.transform.InferType()(mod)
mutated_mod['func_1267'] = func_1267
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1268 = relay.var("var_1268", dtype = "float64", shape = (15, 6, 16))#candidate|1268|(15, 6, 16)|var|float64
func_1267_call = mutated_mod.get_global_var('func_1267')
call_1269 = func_1267_call(var_1268)
output = call_1269
func_1270 = relay.Function([var_1268], output)
mutated_mod['func_1270'] = func_1270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1606 = relay.var("var_1606", dtype = "int8", shape = (10, 7, 1))#candidate|1606|(10, 7, 1)|var|int8
var_1607 = relay.var("var_1607", dtype = "int8", shape = (10, 7, 12))#candidate|1607|(10, 7, 12)|var|int8
bop_1608 = relay.logical_xor(var_1606.astype('int8'), var_1607.astype('int8')) # shape=(10, 7, 12)
func_984_call = mod.get_global_var('func_984')
func_987_call = mutated_mod.get_global_var('func_987')
const_1619 = relay.const([7.837343,5.846046,-2.065134,-2.860615,-6.760756,-1.463185,0.921185,4.559105,6.253495,-0.370972,-9.023870,5.458227,5.687487,9.253837,-9.704770,-8.437045,7.860174,6.320112,5.413875,3.612473,-2.202836,-8.468883,-2.331479,-4.799230,5.058983,-9.382654,-2.200817,6.981209,6.715872,-3.890538,-9.940455,-2.477900,-4.912554,5.120096,4.182261,3.587926,-9.917063,2.098768,6.377497,8.654150], dtype = "float64")#candidate|1619|(40,)|const|float64
var_1620 = relay.var("var_1620", dtype = "int64", shape = (960,))#candidate|1620|(960,)|var|int64
call_1618 = relay.TupleGetItem(func_984_call(relay.reshape(const_1619.astype('float64'), [4, 5, 2]), relay.reshape(var_1620.astype('int64'), [960,]), ), 3)
call_1621 = relay.TupleGetItem(func_987_call(relay.reshape(const_1619.astype('float64'), [4, 5, 2]), relay.reshape(var_1620.astype('int64'), [960,]), ), 3)
func_984_call = mod.get_global_var('func_984')
func_987_call = mutated_mod.get_global_var('func_987')
call_1626 = relay.TupleGetItem(func_984_call(relay.reshape(const_1619.astype('float64'), [4, 5, 2]), relay.reshape(call_1618.astype('int64'), [960,]), ), 3)
call_1627 = relay.TupleGetItem(func_987_call(relay.reshape(const_1619.astype('float64'), [4, 5, 2]), relay.reshape(call_1618.astype('int64'), [960,]), ), 3)
bop_1629 = relay.subtract(bop_1608.astype('int16'), relay.reshape(var_1607.astype('int16'), relay.shape_of(bop_1608))) # shape=(10, 7, 12)
output = relay.Tuple([call_1618,const_1619,var_1620,call_1626,bop_1629,])
output2 = relay.Tuple([call_1621,const_1619,var_1620,call_1627,bop_1629,])
func_1632 = relay.Function([var_1606,var_1607,var_1620,], output)
mod['func_1632'] = func_1632
mod = relay.transform.InferType()(mod)
mutated_mod['func_1632'] = func_1632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1632_call = mutated_mod.get_global_var('func_1632')
var_1634 = relay.var("var_1634", dtype = "int8", shape = (10, 7, 1))#candidate|1634|(10, 7, 1)|var|int8
var_1635 = relay.var("var_1635", dtype = "int8", shape = (10, 7, 12))#candidate|1635|(10, 7, 12)|var|int8
var_1636 = relay.var("var_1636", dtype = "int64", shape = (960,))#candidate|1636|(960,)|var|int64
call_1633 = func_1632_call(var_1634,var_1635,var_1636,)
output = call_1633
func_1637 = relay.Function([var_1634,var_1635,var_1636,], output)
mutated_mod['func_1637'] = func_1637
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1831 = relay.var("var_1831", dtype = "float64", shape = (4, 14, 8))#candidate|1831|(4, 14, 8)|var|float64
uop_1832 = relay.rsqrt(var_1831.astype('float64')) # shape=(4, 14, 8)
func_984_call = mod.get_global_var('func_984')
func_987_call = mutated_mod.get_global_var('func_987')
var_1835 = relay.var("var_1835", dtype = "float64", shape = (10, 4))#candidate|1835|(10, 4)|var|float64
var_1836 = relay.var("var_1836", dtype = "int64", shape = (960,))#candidate|1836|(960,)|var|int64
call_1834 = relay.TupleGetItem(func_984_call(relay.reshape(var_1835.astype('float64'), [4, 5, 2]), relay.reshape(var_1836.astype('int64'), [960,]), ), 3)
call_1837 = relay.TupleGetItem(func_987_call(relay.reshape(var_1835.astype('float64'), [4, 5, 2]), relay.reshape(var_1836.astype('int64'), [960,]), ), 3)
output = relay.Tuple([uop_1832,call_1834,var_1835,var_1836,])
output2 = relay.Tuple([uop_1832,call_1837,var_1835,var_1836,])
func_1847 = relay.Function([var_1831,var_1835,var_1836,], output)
mod['func_1847'] = func_1847
mod = relay.transform.InferType()(mod)
var_1848 = relay.var("var_1848", dtype = "float64", shape = (4, 14, 8))#candidate|1848|(4, 14, 8)|var|float64
var_1849 = relay.var("var_1849", dtype = "float64", shape = (10, 4))#candidate|1849|(10, 4)|var|float64
var_1850 = relay.var("var_1850", dtype = "int64", shape = (960,))#candidate|1850|(960,)|var|int64
output = func_1847(var_1848,var_1849,var_1850,)
func_1851 = relay.Function([var_1848,var_1849,var_1850,], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1918 = relay.var("var_1918", dtype = "int32", shape = (4, 6, 1))#candidate|1918|(4, 6, 1)|var|int32
var_1919 = relay.var("var_1919", dtype = "int32", shape = (4, 6, 16))#candidate|1919|(4, 6, 16)|var|int32
bop_1920 = relay.bitwise_and(var_1918.astype('int32'), var_1919.astype('int32')) # shape=(4, 6, 16)
output = bop_1920
output2 = bop_1920
func_1926 = relay.Function([var_1918,var_1919,], output)
mod['func_1926'] = func_1926
mod = relay.transform.InferType()(mod)
mutated_mod['func_1926'] = func_1926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1926_call = mutated_mod.get_global_var('func_1926')
var_1928 = relay.var("var_1928", dtype = "int32", shape = (4, 6, 1))#candidate|1928|(4, 6, 1)|var|int32
var_1929 = relay.var("var_1929", dtype = "int32", shape = (4, 6, 16))#candidate|1929|(4, 6, 16)|var|int32
call_1927 = func_1926_call(var_1928,var_1929,)
output = call_1927
func_1930 = relay.Function([var_1928,var_1929,], output)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1978 = relay.var("var_1978", dtype = "float32", shape = (5, 15, 5))#candidate|1978|(5, 15, 5)|var|float32
uop_1979 = relay.asin(var_1978.astype('float32')) # shape=(5, 15, 5)
output = uop_1979
output2 = uop_1979
func_1981 = relay.Function([var_1978,], output)
mod['func_1981'] = func_1981
mod = relay.transform.InferType()(mod)
mutated_mod['func_1981'] = func_1981
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1982 = relay.var("var_1982", dtype = "float32", shape = (5, 15, 5))#candidate|1982|(5, 15, 5)|var|float32
func_1981_call = mutated_mod.get_global_var('func_1981')
call_1983 = func_1981_call(var_1982)
output = call_1983
func_1984 = relay.Function([var_1982], output)
mutated_mod['func_1984'] = func_1984
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2074 = relay.var("var_2074", dtype = "uint8", shape = (6, 7, 6))#candidate|2074|(6, 7, 6)|var|uint8
var_2075 = relay.var("var_2075", dtype = "uint8", shape = (6, 7, 6))#candidate|2075|(6, 7, 6)|var|uint8
bop_2076 = relay.right_shift(var_2074.astype('uint8'), relay.reshape(var_2075.astype('uint8'), relay.shape_of(var_2074))) # shape=(6, 7, 6)
bop_2082 = relay.not_equal(var_2074.astype('bool'), relay.reshape(bop_2076.astype('bool'), relay.shape_of(var_2074))) # shape=(6, 7, 6)
func_390_call = mod.get_global_var('func_390')
func_393_call = mutated_mod.get_global_var('func_393')
var_2087 = relay.var("var_2087", dtype = "float32", shape = (36, 10))#candidate|2087|(36, 10)|var|float32
call_2086 = relay.TupleGetItem(func_390_call(relay.reshape(var_2087.astype('float32'), [4, 9, 10]), relay.reshape(var_2087.astype('float32'), [4, 9, 10]), ), 0)
call_2088 = relay.TupleGetItem(func_393_call(relay.reshape(var_2087.astype('float32'), [4, 9, 10]), relay.reshape(var_2087.astype('float32'), [4, 9, 10]), ), 0)
func_1847_call = mod.get_global_var('func_1847')
func_1851_call = mutated_mod.get_global_var('func_1851')
var_2091 = relay.var("var_2091", dtype = "float64", shape = (4, 112))#candidate|2091|(4, 112)|var|float64
const_2092 = relay.const([-8.510179,-5.219736,1.054860,-2.083651,6.824057,-7.865751,-9.832348,4.911416,-2.873882,-1.244378,1.271689,6.738672,-5.104992,-4.573942,-6.944088,-7.361121,2.188983,6.895841,-7.400958,-0.827546,-8.568081,-4.458711,8.325763,-6.766551,8.596471,-4.450889,4.688088,1.570228,4.313242,1.354701,-5.675209,-9.278772,-8.928226,-9.232338,4.343544,-1.922313,1.625284,0.689448,-0.226456,-4.465385], dtype = "float64")#candidate|2092|(40,)|const|float64
var_2093 = relay.var("var_2093", dtype = "int64", shape = (960,))#candidate|2093|(960,)|var|int64
call_2090 = relay.TupleGetItem(func_1847_call(relay.reshape(var_2091.astype('float64'), [4, 14, 8]), relay.reshape(const_2092.astype('float64'), [10, 4]), relay.reshape(var_2093.astype('int64'), [960,]), ), 1)
call_2094 = relay.TupleGetItem(func_1851_call(relay.reshape(var_2091.astype('float64'), [4, 14, 8]), relay.reshape(const_2092.astype('float64'), [10, 4]), relay.reshape(var_2093.astype('int64'), [960,]), ), 1)
uop_2100 = relay.log2(call_2090.astype('float32')) # shape=(960,)
uop_2102 = relay.log2(call_2094.astype('float32')) # shape=(960,)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
const_2105 = relay.const([0.867404,2.056529,0.504256,5.473049,3.070807,-4.138588,9.270155,-2.839971,8.977247,-3.650782,3.332632,-9.003865,-7.349882,4.693201,-4.943618,5.175179,-2.305072,6.930215,2.516718,4.090638,2.204661,3.855610,9.035578,2.899113,3.563899,1.530959,-3.403024,-1.030955,7.982108,-3.874249,-6.187205,6.181558,1.853827,-3.434821,6.425368,9.015982,2.070580,7.815370,-9.554709,8.353438,-3.063878,-0.958891,-7.616091,7.231383,-7.843531,4.958340,-1.167293,-3.187189,-2.665001,-2.113096,-6.014790,-9.186939,-7.795610,-8.900230,-7.398507,7.647882,-3.312807,3.452152,-6.470959,-1.802738,-4.952600,7.132993,-0.950864,-9.628697,5.001816,-1.051855,-0.462126,0.420948,5.741299,3.282206,-0.038301,-2.216565,-8.153803,9.776499,5.331839,-3.917458,-9.813411,-3.220196,0.472257,1.284826,8.215500,-1.547958,-1.055978,-6.366253,9.529397,4.062646,-6.668757,6.391914,8.878651,-8.704367,-3.470554,-9.197338,-8.732846,-1.459750,-0.549080,-6.100866,8.585575,8.182741,6.851452,9.067262,-5.024092,-4.092993,1.495112,5.909560,-7.370303], dtype = "float64")#candidate|2105|(105,)|const|float64
call_2104 = relay.TupleGetItem(func_871_call(relay.reshape(const_2105.astype('float64'), [1, 15, 7])), 2)
call_2106 = relay.TupleGetItem(func_874_call(relay.reshape(const_2105.astype('float64'), [1, 15, 7])), 2)
func_1926_call = mod.get_global_var('func_1926')
func_1930_call = mutated_mod.get_global_var('func_1930')
const_2113 = relay.const([-7,6,7,-7,-6,-4,-1,-10,7,-2,1,-9,-7,6,-6,9,-8,-3,-3,-3,-9,-3,-4,-3], dtype = "int32")#candidate|2113|(24,)|const|int32
const_2114 = relay.const([8,-2,-6,1,7,10,3,3,4,10,2,-2,2,-8,-5,-9,-8,9,9,3,-1,2,-3,-10,10,4,-9,-8,2,-5,8,9,4,9,2,-1,-7,5,-9,-6,-6,2,-7,-8,6,-4,-9,10,5,-9,1,9,3,5,2,-1,-2,-4,3,7,-5,-6,6,-8,-5,-9,6,-2,6,1,3,-6,6,5,4,-1,-3,-5,-2,3,1,4,1,-6,-7,7,-10,-4,-3,-6,-1,7,-1,-6,-7,-10,10,-6,10,-10,-3,-7,-9,9,-2,-10,1,8,2,-7,-2,7,-1,-2,7,9,8,2,7,-9,6,3,-7,-1,6,7,-5,7,-7,6,-3,-1,1,8,5,-8,-7,10,5,-4,-7,8,-5,-7,-5,4,8,-9,-1,8,4,-8,-8,-8,8,-1,-3,9,3,10,-1,-6,-4,-7,-3,10,10,2,-4,8,-2,-1,9,5,-5,1,-3,-4,-3,-9,-7,-8,7,-4,10,-7,4,-9,7,4,1,8,4,9,5,8,9,9,-3,10,-7,-6,-2,-4,1,3,-5,5,4,-1,-6,-1,4,-2,4,-10,9,-2,3,2,-5,-5,5,-2,-8,8,-1,-8,10,1,1,5,-9,1,-2,-5,5,7,-2,8,1,1,-6,6,10,-2,-1,1,3,-4,-6,-1,-9,-10,9,-10,-6,4,-1,-2,10,-3,8,-4,7,-7,7,3,-8,8,3,-2,10,-4,8,3,9,-2,-10,-9,2,-2,-6,6,8,-5,-3,-3,-3,-3,5,1,-2,1,7,10,6,10,-7,-7,-2,7,9,8,10,-1,7,-7,4,2,-7,-3,-4,-6,1,5,8,-1,-3,9,2,8,-3,-10,-2,8,-5,-4,-4,-8,-8,10,-5,4,-4,1,2,-7,4,-10,10,-8,1,-1,-6,1,10,-1,4,4,6,-4,-7,-3,-8,9,-5,10,1,-10,-10,3,4,-8,-1,8,10,-8,-3,-7,-6,-1,-5,6,4,-7,6,-8,-7,-9,-9,-8,9,5], dtype = "int32")#candidate|2114|(384,)|const|int32
call_2112 = func_1926_call(relay.reshape(const_2113.astype('int32'), [4, 6, 1]), relay.reshape(const_2114.astype('int32'), [4, 6, 16]), )
call_2115 = func_1926_call(relay.reshape(const_2113.astype('int32'), [4, 6, 1]), relay.reshape(const_2114.astype('int32'), [4, 6, 16]), )
func_710_call = mod.get_global_var('func_710')
func_713_call = mutated_mod.get_global_var('func_713')
const_2122 = relay.const(4, dtype = "int64")#candidate|2122|()|const|int64
call_2121 = relay.TupleGetItem(func_710_call(relay.reshape(const_2122.astype('int64'), []), relay.reshape(var_2093.astype('int64'), [16, 15, 4]), ), 0)
call_2123 = relay.TupleGetItem(func_713_call(relay.reshape(const_2122.astype('int64'), []), relay.reshape(var_2093.astype('int64'), [16, 15, 4]), ), 0)
output = relay.Tuple([bop_2082,call_2086,var_2087,var_2091,const_2092,var_2093,uop_2100,call_2104,const_2105,call_2112,const_2113,const_2114,call_2121,const_2122,])
output2 = relay.Tuple([bop_2082,call_2088,var_2087,var_2091,const_2092,var_2093,uop_2102,call_2106,const_2105,call_2115,const_2113,const_2114,call_2123,const_2122,])
func_2128 = relay.Function([var_2074,var_2075,var_2087,var_2091,var_2093,], output)
mod['func_2128'] = func_2128
mod = relay.transform.InferType()(mod)
var_2129 = relay.var("var_2129", dtype = "uint8", shape = (6, 7, 6))#candidate|2129|(6, 7, 6)|var|uint8
var_2130 = relay.var("var_2130", dtype = "uint8", shape = (6, 7, 6))#candidate|2130|(6, 7, 6)|var|uint8
var_2131 = relay.var("var_2131", dtype = "float32", shape = (36, 10))#candidate|2131|(36, 10)|var|float32
var_2132 = relay.var("var_2132", dtype = "float64", shape = (4, 112))#candidate|2132|(4, 112)|var|float64
var_2133 = relay.var("var_2133", dtype = "int64", shape = (960,))#candidate|2133|(960,)|var|int64
output = func_2128(var_2129,var_2130,var_2131,var_2132,var_2133,)
func_2134 = relay.Function([var_2129,var_2130,var_2131,var_2132,var_2133,], output)
mutated_mod['func_2134'] = func_2134
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2158 = relay.var("var_2158", dtype = "float64", shape = (11, 9, 8))#candidate|2158|(11, 9, 8)|var|float64
uop_2159 = relay.sinh(var_2158.astype('float64')) # shape=(11, 9, 8)
output = relay.Tuple([uop_2159,])
output2 = relay.Tuple([uop_2159,])
func_2172 = relay.Function([var_2158,], output)
mod['func_2172'] = func_2172
mod = relay.transform.InferType()(mod)
var_2173 = relay.var("var_2173", dtype = "float64", shape = (11, 9, 8))#candidate|2173|(11, 9, 8)|var|float64
output = func_2172(var_2173)
func_2174 = relay.Function([var_2173], output)
mutated_mod['func_2174'] = func_2174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2194 = relay.var("var_2194", dtype = "uint16", shape = (16, 6, 3))#candidate|2194|(16, 6, 3)|var|uint16
const_2195 = relay.const([[[10,-8,-1],[10,-6,1],[8,-10,6],[-2,-1,-1],[6,1,3],[-8,6,-7]],[[-9,-2,-9],[2,8,8],[7,5,1],[-5,1,-4],[8,7,-10],[-10,9,-3]],[[-5,-10,8],[7,9,5],[7,-6,-8],[5,2,9],[-4,10,-2],[-6,9,10]],[[-3,5,10],[-2,2,7],[8,-7,4],[4,-8,5],[-9,-7,-4],[-6,-7,-9]],[[-2,5,-8],[-5,6,9],[-9,-10,-7],[-7,6,3],[-10,-7,3],[-5,8,9]],[[4,-4,-8],[-2,6,-4],[-7,-7,4],[2,-10,-2],[-8,8,-6],[-2,10,1]],[[-1,-7,-5],[7,-3,-6],[4,-2,9],[-9,-10,3],[-3,6,-4],[-3,10,-9]],[[-10,-6,1],[-9,-1,1],[-2,7,5],[-8,8,4],[-3,-5,7],[-7,-10,-8]],[[-6,-6,-8],[7,7,-4],[5,-3,-7],[2,-3,2],[-1,-5,-1],[-4,3,-4]],[[-8,1,-6],[-10,-8,-3],[-1,7,-4],[-4,-8,-7],[-5,8,2],[-7,2,8]],[[4,8,-2],[-10,-7,-4],[6,7,-6],[-4,7,7],[5,-10,3],[-4,5,-10]],[[2,7,-7],[-10,1,-8],[2,-8,-8],[-8,10,-10],[7,1,-8],[8,-10,-1]],[[10,-1,-9],[-7,-3,-1],[3,-3,-1],[-7,9,-10],[-8,-6,7],[-7,-9,7]],[[-7,10,-1],[-2,2,7],[-10,-2,4],[-5,2,3],[1,8,6],[7,-10,-3]],[[9,5,-3],[-5,-9,-4],[-10,-7,2],[-4,10,2],[-7,-1,-7],[-10,-2,-10]],[[-9,9,-3],[-5,2,5],[-4,5,-1],[1,-6,-7],[-7,-9,-1],[-3,5,10]]], dtype = "uint16")#candidate|2195|(16, 6, 3)|const|uint16
bop_2196 = relay.greater_equal(var_2194.astype('bool'), relay.reshape(const_2195.astype('bool'), relay.shape_of(var_2194))) # shape=(16, 6, 3)
func_1632_call = mod.get_global_var('func_1632')
func_1637_call = mutated_mod.get_global_var('func_1637')
var_2223 = relay.var("var_2223", dtype = "int8", shape = (70,))#candidate|2223|(70,)|var|int8
const_2224 = relay.const([8,-1,-10,8,-8,-8,3,-2,9,-7,-10,-6,-4,10,10,10,-9,-2,9,3,-4,2,-2,-10,-4,3,-1,-2,-3,-6,10,-2,-8,9,4,-3,-4,8,9,-8,-5,7,-7,1,-5,-6,-3,-3,-5,-8,-6,-7,-8,-6,-3,10,-3,-3,9,-4,-3,7,-9,8,-5,-10,7,-9,4,-2,10,-4,10,-7,5,1,-10,-5,1,2,2,-4,1,6,3,-2,-9,-7,-6,-7,-4,9,9,2,9,-5,-5,-10,6,-2,3,1,-10,2,-3,-5,7,2,7,-5,9,5,-3,-2,2,-8,-8,8,9,2,-9,10,10,-2,-7,3,-1,10,5,2,4,4,-1,9,-2,-10,9,-9,-4,-8,-9,5,-9,-5,6,2,9,3,-8,-8,5,-5,9,-7,-4,4,-6,-5,-5,-9,-10,-3,9,-7,-10,1,-4,-4,-8,-8,6,8,-10,-6,7,-5,10,-4,-6,8,-7,-3,-3,5,-8,6,4,3,-8,8,6,-2,3,-5,-6,-7,10,-5,-9,-4,3,8,-5,1,3,9,-5,6,-7,-7,6,8,-5,8,-3,-10,4,4,-10,3,6,-3,-4,-9,1,-8,1,2,-10,10,7,-2,8,2,-2,-1,8,-9,4,7,-3,4,-2,-10,1,6,7,-10,-7,-5,9,7,-2,2,-4,3,6,3,-8,-8,10,6,5,4,-8,1,5,-5,-6,-2,7,-10,-5,-1,-4,1,-5,5,2,-2,-10,-10,-2,-1,5,9,-1,5,9,-10,-6,-1,7,-3,-5,1,-7,-10,7,7,7,4,-4,5,-6,10,-5,3,5,10,10,-7,4,7,-9,3,-10,-3,9,-10,2,-7,1,6,5,-7,-9,1,2,-7,2,-6,-1,7,-8,5,8,-4,1,6,7,-10,-8,2,-8,-10,10,-1,6,9,8,3,-5,7,-8,-1,-4,3,-1,-1,-3,9,8,4,-9,-9,8,-5,8,10,-2,-1,1,8,9,1,2,-5,10,-6,4,-8,-7,7,2,1,8,10,-6,-3,10,6,6,4,-5,-6,8,-3,-8,2,10,4,7,-7,-6,9,6,10,9,9,4,4,1,7,-10,9,-2,7,-9,-4,7,-1,-9,5,4,-3,-9,-10,-6,10,-8,7,-2,-1,1,3,7,10,-4,-5,9,7,-6,-8,6,10,7,-3,-2,-9,10,-10,8,2,-3,2,-6,1,8,4,-9,7,2,4,-4,6,7,-10,5,10,-10,1,-1,-8,2,-2,-6,7,-9,-3,-6,-9,-6,1,-3,-1,-3,-9,-5,-3,10,-5,4,-6,5,-8,-10,-3,5,10,-4,1,3,2,-10,4,2,-6,-3,9,-4,6,-3,-2,4,-8,-5,8,10,6,8,-10,1,-7,8,10,-5,8,9,8,-2,-4,5,4,5,-7,-2,-1,3,-7,6,-5,-6,-10,-2,10,5,10,-7,9,-6,5,3,3,6,9,7,-4,8,2,4,-4,6,-1,10,-7,6,4,-9,-5,7,10,9,-9,-10,7,-2,5,4,-5,7,9,-5,3,2,-3,-2,-2,-9,-8,-3,2,-3,-5,4,1,1,5,5,-2,-5,-5,-9,10,2,-6,-2,-10,7,5,-7,-5,6,-6,9,9,4,3,-3,-9,10,9,6,-10,-7,6,-9,2,-10,-8,6,-3,1,4,-6,8,8,1,-7,9,-5,-7,6,2,8,5,7,-4,3,-4,-1,-8,-8,-5,9,8,-8,8,2,10,-10,-4,4,-7,8,-9,-2,9,3,4,9,5,6,-1,-1,-10,7,-10,-4,9,6,10,-4,-1,-3,8,8,-9,-7,5,-1,-1,-1,-1,-5,8,8,-3,-6,-9,9,3,3,2,-2,9,3,4,-10,10,7,9,5,8,-6,10,-6,-5,-5,-10,5,4,9,4,5,5,2,-7,-7,8,-2,1,3,7,-2,-7,-6,6,9,5,2,5,-5,2,-7,-7,9,5,3,-10,-8,-3,7,10,-7,-1,-6,-4,-9,2,7,5,9,-7,-3,-7,-5,-7,-10,-10,3,-8,10,-9,10,-6,-5,2,2,-4,8,8,-4,8,4,-10,1,-8,-2,9,2,-7,-6,-9,-8,-3,-6,10,8,1,5,-10,1,-7,-5,-5,4,4,-2,-10,5,7,-6,1,-4,-5,6,-7,-3,10,-3,-5,-8,10,-1,8,-6,7,-3,-6,-3,-8,-6,7,-9,9,3,-2,-4,-9], dtype = "int8")#candidate|2224|(840,)|const|int8
const_2225 = relay.const([[-8,-9,-8,-5,10,5,-2,-8],[9,3,8,5,-1,-7,2,6],[2,10,4,-6,-3,-6,10,-10],[-10,4,-8,-7,-7,-4,2,10],[-5,3,8,-6,10,7,-4,2],[-9,1,5,-8,4,1,4,-9],[-2,8,4,10,-6,8,6,-3],[6,2,-5,4,-4,5,-6,7],[-9,-7,-9,-8,6,4,-6,6],[-4,-3,-1,-6,10,3,8,-6],[-4,-1,-4,7,-7,-1,-9,-6],[7,2,4,3,1,-4,5,-7],[4,4,-9,5,4,-2,5,6],[7,8,-5,-9,-8,-7,-10,-3],[-4,-2,10,2,5,4,2,-10],[7,-2,2,9,4,-4,-10,-9],[-8,9,8,9,-5,-3,-7,6],[4,6,-1,5,-1,-10,-10,7],[-1,3,10,-5,8,-2,5,-9],[-7,-3,10,-4,9,-5,-2,-6],[-1,-4,-2,5,-1,7,6,2],[-10,2,5,10,9,-4,8,-5],[8,1,10,-3,5,-4,-3,2],[3,3,9,3,-1,-8,6,9],[5,-7,-7,6,8,1,-8,7],[9,9,-3,6,9,2,-9,1],[-2,7,-9,-1,4,-10,-7,2],[-5,5,-5,-4,7,2,-9,-8],[-3,2,9,-9,-7,5,-6,-1],[-10,-10,9,9,-2,-2,6,-1],[6,-1,7,9,-8,10,-3,-4],[-9,-8,-10,4,8,2,7,-10],[-7,1,-10,-7,-7,4,-8,-3],[-5,-5,7,-7,-5,-6,-2,-7],[-9,2,9,10,8,5,4,-3],[8,6,-9,-8,-3,9,3,4],[-4,-3,-10,8,9,-4,-1,2],[6,3,-2,-10,-7,10,-6,-2],[-3,-3,10,-10,5,9,-4,-5],[8,6,9,5,-6,8,9,2],[6,6,-7,2,4,-1,-2,-9],[-4,-2,-2,1,-10,-9,8,5],[-7,10,9,7,5,2,-4,-10],[3,-3,9,-2,-2,9,2,-6],[7,2,-7,-9,-9,-10,9,1],[-3,8,8,-10,3,-2,3,2],[3,-6,-5,5,-8,-6,6,-1],[-10,1,-1,10,-10,8,10,5],[-6,-6,-8,6,7,-2,-7,-5],[4,-7,-7,-10,9,4,2,5],[-2,10,3,5,5,-6,-4,1],[7,4,5,4,-6,3,8,5],[-2,-2,-10,-6,6,-7,-5,10],[-8,-5,-10,7,7,-3,10,5],[-2,7,-5,7,7,4,4,-3],[8,-5,8,6,4,10,-9,5],[3,-3,9,2,6,9,7,2],[1,-6,9,-2,-5,-6,9,-4],[-7,3,-7,-3,10,-2,-3,4],[4,-1,-6,-6,9,-3,-7,-3],[6,-10,10,7,-7,-8,-5,-4],[-4,2,2,-1,1,-9,3,-3],[-7,-3,8,8,-10,6,9,-4],[7,-3,5,-9,-7,3,8,10],[-10,-4,-4,-4,9,2,1,10],[-4,-6,8,3,2,7,3,9],[2,-4,6,-3,-9,4,2,8],[9,-5,9,-6,8,-5,1,-6],[7,-1,7,9,-10,-6,7,8],[-9,-6,-5,-3,6,-5,4,-1],[-1,-6,-6,-6,8,-7,-9,-4],[2,-9,2,7,2,4,3,-8],[8,7,-9,-10,-7,3,-6,6],[-6,-2,-9,-4,-10,8,6,2],[-10,-9,1,5,8,6,2,9],[-7,6,-1,8,1,-7,-1,-2],[-7,7,2,-8,9,-2,5,1],[-2,9,-7,7,2,6,2,-2],[1,-8,3,-1,1,-5,7,-10],[1,4,-6,-6,2,2,10,-4],[-5,-3,-8,3,10,-6,2,-5],[7,10,8,-2,10,8,-9,-2],[-5,-5,1,-4,5,-5,-8,-1],[10,8,9,-10,-5,-10,1,1],[9,2,-5,9,8,7,4,1],[-1,-4,3,1,4,-2,-5,2],[-8,-2,-3,-3,4,-7,9,-4],[10,-1,2,9,-3,-1,-4,2],[9,5,4,-3,9,9,-7,-8],[-9,-10,-3,6,-9,-4,-2,-5],[10,-5,9,3,7,5,2,-10],[4,-3,8,3,-10,2,-5,5],[10,-10,-7,6,2,7,-7,-9],[9,-8,-3,6,-1,-7,7,2],[3,6,-4,5,4,-3,1,3],[-4,-6,-3,-2,3,3,-1,-7],[8,6,4,9,3,10,-4,3],[4,-4,-4,-3,4,-4,10,1],[5,-1,7,8,2,4,-8,3],[-6,1,1,-4,-10,2,-2,-10],[-8,-5,-1,-7,-10,8,-5,2],[-7,-1,8,5,-6,8,8,4],[-6,-3,1,-1,-10,-10,1,-6],[6,-7,3,-2,9,-6,7,4],[-8,-2,6,1,-2,1,-7,-10],[-6,-7,10,-9,-9,-5,4,2],[6,-2,-7,10,-6,-3,-10,5],[-1,-7,4,-10,-1,-1,-4,-7],[-9,5,-2,5,6,10,-2,-1],[9,-6,4,-6,-2,-7,2,-9],[3,-4,8,2,9,9,-8,8],[10,10,9,8,5,-10,-9,5],[-10,4,2,2,-9,5,-3,3],[-7,5,3,9,-9,4,-5,-2],[9,5,-4,-3,9,-8,-10,-6],[-6,-5,6,-6,3,5,-10,-7],[4,10,-10,-9,-2,-3,-10,1],[10,6,10,-3,3,-2,-6,1],[10,8,-8,-1,5,-5,3,-4],[4,10,-3,6,2,10,5,-8]], dtype = "int64")#candidate|2225|(120, 8)|const|int64
call_2222 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2223.astype('int8'), [10, 7, 1]), relay.reshape(const_2224.astype('int8'), [10, 7, 12]), relay.reshape(const_2225.astype('int64'), [960,]), ), 0)
call_2226 = relay.TupleGetItem(func_1637_call(relay.reshape(var_2223.astype('int8'), [10, 7, 1]), relay.reshape(const_2224.astype('int8'), [10, 7, 12]), relay.reshape(const_2225.astype('int64'), [960,]), ), 0)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
var_2230 = relay.var("var_2230", dtype = "float64", shape = (1, 105))#candidate|2230|(1, 105)|var|float64
call_2229 = relay.TupleGetItem(func_871_call(relay.reshape(var_2230.astype('float64'), [1, 15, 7])), 2)
call_2231 = relay.TupleGetItem(func_874_call(relay.reshape(var_2230.astype('float64'), [1, 15, 7])), 2)
output = relay.Tuple([bop_2196,call_2222,var_2223,const_2224,const_2225,call_2229,var_2230,])
output2 = relay.Tuple([bop_2196,call_2226,var_2223,const_2224,const_2225,call_2231,var_2230,])
func_2240 = relay.Function([var_2194,var_2223,var_2230,], output)
mod['func_2240'] = func_2240
mod = relay.transform.InferType()(mod)
mutated_mod['func_2240'] = func_2240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2240_call = mutated_mod.get_global_var('func_2240')
var_2242 = relay.var("var_2242", dtype = "uint16", shape = (16, 6, 3))#candidate|2242|(16, 6, 3)|var|uint16
var_2243 = relay.var("var_2243", dtype = "int8", shape = (70,))#candidate|2243|(70,)|var|int8
var_2244 = relay.var("var_2244", dtype = "float64", shape = (1, 105))#candidate|2244|(1, 105)|var|float64
call_2241 = func_2240_call(var_2242,var_2243,var_2244,)
output = call_2241
func_2245 = relay.Function([var_2242,var_2243,var_2244,], output)
mutated_mod['func_2245'] = func_2245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2454 = relay.var("var_2454", dtype = "float64", shape = (5, 2, 1))#candidate|2454|(5, 2, 1)|var|float64
uop_2455 = relay.sigmoid(var_2454.astype('float64')) # shape=(5, 2, 1)
bop_2457 = relay.add(var_2454.astype('uint64'), relay.reshape(uop_2455.astype('uint64'), relay.shape_of(var_2454))) # shape=(5, 2, 1)
func_390_call = mod.get_global_var('func_390')
func_393_call = mutated_mod.get_global_var('func_393')
const_2462 = relay.const([6.911840,1.739164,4.969821,-4.236700,-1.811058,7.453720,-4.654478,7.228698,0.132261,-7.444071,0.239560,7.371619,3.881358,-3.640003,3.042656,9.333289,6.296786,2.404783,6.173392,-5.539588,3.521665,3.913006,3.786849,-4.021452,4.096261,4.795708,-9.988714,-0.822660,1.696458,5.887175,-6.436940,8.488851,0.607868,-5.332214,-2.563440,-5.177279,-6.277129,9.374021,-1.293717,0.674894,-4.248556,9.278972,2.525641,-3.052625,-6.754270,7.062522,-4.882373,-0.935172,2.858190,1.705211,3.234857,2.246394,8.037802,-0.897673,-3.033141,-3.114891,-9.597692,-3.479383,0.243579,-8.357996,-9.236455,-1.072553,9.907147,-7.512806,2.162009,-2.557405,-9.346325,3.706552,5.233598,9.802290,5.037077,-5.821083,9.052272,9.159027,-6.561786,8.057800,3.056363,9.972971,-4.108047,2.291517,8.524643,2.064425,-0.006028,-8.762570,-2.827800,9.500853,6.272368,6.780631,-5.398636,7.804007,9.023219,5.922255,-8.946685,5.881375,6.574128,-7.191795,-2.496525,-6.965889,-8.964665,-5.055338,-8.654694,-4.640748,-8.264508,9.204210,-5.768138,7.744645,1.586386,-1.575056,3.709799,-3.831990,0.870042,-4.357933,-2.169317,-4.477508,2.806027,0.976141,-5.777774,1.073009,-3.281695,-9.432149,6.932961,-2.546165,-4.124665,-9.053761,-2.492893,-2.908992,9.115606,8.343322,9.929834,0.779568,2.653424,6.057442,-4.392730,-2.614234,9.971949,-1.213553,-0.726862,4.189745,9.822061,-9.872138,-5.279436,7.908630,1.763526,-9.154101,-4.403208,2.916888,-6.753277,-9.970917,4.127619,0.104233,4.932626,3.655158,-8.187462,-6.524937,-2.901936,1.368146,-6.207103,4.291963,-5.238823,-9.812860,8.983547,-6.836719,-1.055752,-7.733529,5.587699,-9.090485,1.230628,-8.418800,-0.175334,-3.656284,9.421779,-2.949047,-6.998670,-6.797202,0.880500,-3.865245,-5.686771,-0.564732,0.905724,7.899698,3.522577,5.493920,8.421190,-4.500429,-2.934060,0.470760,8.901503,2.914974,2.947028,-2.414601,2.953515,2.592167,0.443771,-3.616065,-8.701513,2.916007,-7.821609,6.691903,-9.249542,5.103436,-9.488665,-5.170720,-8.173718,3.863324,3.822130,-2.833482,-4.003933,3.256948,-4.531059,-5.991283,5.831723,-0.844777,-7.056513,8.398355,4.432518,-9.712523,5.147661,6.071260,-3.612624,8.093829,-8.289786,-8.302388,2.641541,-2.412054,-9.763480,9.470109,-2.823109,6.392149,2.799873,0.392931,0.986239,-5.261258,2.772938,7.578317,-2.096499,8.378389,-0.930423,-6.307903,0.200226,2.055310,5.859891,5.825955,-8.430530,7.995689,-9.483843,3.237409,-5.384888,-6.964248,0.784560,3.028505,3.989520,1.223779,3.779458,4.818597,-8.442748,-9.601798,6.613153,-2.148585,-0.349291,7.185771,-5.154642,-1.795619,-9.756321,-9.530949,-7.222873,-8.669624,6.678454,-7.849028,0.888224,4.141344,-7.585684,9.909543,-1.380888,-7.070967,6.006160,9.140434,-3.790884,-3.074177,-8.596267,-6.686171,0.911460,-0.944887,-2.305151,2.459935,3.846730,-7.452753,-5.688398,5.837457,2.680346,5.916161,-3.531627,-2.412523,-2.060094,1.230434,-4.176180,-0.423796,-9.588321,-8.946597,4.279430,-8.644429,-9.962824,-2.292896,7.916200,0.723372,2.632571,3.912628,9.079062,-9.416331,5.324577,2.630092,-9.455465,8.261760,-4.442927,6.021502,7.163228,-7.750676,-8.982715,-5.107865,1.358920,-2.532334,-7.955341,-1.708062,-4.834888,6.043751,-5.878660,8.627927,-0.983527,-7.612815,-4.797688,-4.276178,8.914006,8.184396,-1.775590,2.096052,-2.209855,-7.429161,-0.855973,-7.336720,-6.996354,-9.281031,-8.288580,7.908972,-3.599461,-7.932705,7.854372,-9.603805,1.722695,0.827907,0.911379,6.483290,-4.506447,-6.051844,-7.613124,3.590427,-9.606941,-5.060889,3.156647,-7.228369,0.849221,-7.017420], dtype = "float32")#candidate|2462|(360,)|const|float32
call_2461 = relay.TupleGetItem(func_390_call(relay.reshape(const_2462.astype('float32'), [4, 9, 10]), relay.reshape(const_2462.astype('float32'), [4, 9, 10]), ), 0)
call_2463 = relay.TupleGetItem(func_393_call(relay.reshape(const_2462.astype('float32'), [4, 9, 10]), relay.reshape(const_2462.astype('float32'), [4, 9, 10]), ), 0)
uop_2470 = relay.rsqrt(call_2461.astype('float32')) # shape=(4, 9, 10)
uop_2472 = relay.rsqrt(call_2463.astype('float32')) # shape=(4, 9, 10)
output = relay.Tuple([bop_2457,const_2462,uop_2470,])
output2 = relay.Tuple([bop_2457,const_2462,uop_2472,])
func_2480 = relay.Function([var_2454,], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2481 = relay.var("var_2481", dtype = "float64", shape = (5, 2, 1))#candidate|2481|(5, 2, 1)|var|float64
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2482 = func_2480_call(var_2481)
output = call_2482
func_2483 = relay.Function([var_2481], output)
mutated_mod['func_2483'] = func_2483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2509 = relay.var("var_2509", dtype = "float32", shape = (5, 4, 13))#candidate|2509|(5, 4, 13)|var|float32
uop_2510 = relay.exp(var_2509.astype('float32')) # shape=(5, 4, 13)
bop_2519 = relay.bitwise_xor(uop_2510.astype('int32'), relay.reshape(var_2509.astype('int32'), relay.shape_of(uop_2510))) # shape=(5, 4, 13)
func_1632_call = mod.get_global_var('func_1632')
func_1637_call = mutated_mod.get_global_var('func_1637')
var_2526 = relay.var("var_2526", dtype = "int8", shape = (70, 1))#candidate|2526|(70, 1)|var|int8
var_2527 = relay.var("var_2527", dtype = "int8", shape = (840,))#candidate|2527|(840,)|var|int8
const_2528 = relay.const([7,2,6,3,-1,2,3,9,4,-6,7,-10,4,-5,-5,6,6,2,-7,7,3,-5,-9,-4,-2,-8,2,-5,-6,-7,-1,-3,-9,9,9,6,-5,10,-7,9,-7,-10,6,5,6,-5,3,3,4,-9,-10,-6,-10,-9,1,6,-6,6,10,6,-3,4,-10,9,-1,-6,7,-5,8,-4,3,-6,-4,1,-6,-1,-9,-7,4,-2,8,7,9,2,8,-6,-6,10,-7,-6,-1,3,4,8,8,4,-7,3,10,3,1,-1,-4,-7,-3,5,9,-3,-10,2,10,-5,-4,-2,4,-4,-7,-4,-5,3,5,1,7,-9,-4,6,7,-10,-8,5,8,-8,2,5,6,-5,-7,7,4,-1,-8,-4,-8,4,-5,-9,8,-7,1,10,-9,8,-5,1,2,-8,9,-5,-4,-3,10,3,9,-10,3,8,7,9,-3,-1,-2,-7,-1,-8,-3,-6,-4,3,-1,4,5,8,-7,3,-7,5,3,10,4,9,-2,-10,-5,10,6,-2,5,2,-8,4,-1,-5,-10,-8,-7,-2,1,-5,-5,-6,8,-3,-9,7,-3,-3,9,-9,-4,-5,-4,-10,-9,5,10,8,-9,-1,9,6,-8,-6,-8,5,-4,5,-7,4,9,-3,-1,5,3,8,3,-4,4,9,7,-6,-6,10,7,1,-5,5,5,-4,7,10,6,2,-6,-2,4,-5,-10,-4,-10,2,-1,-1,-6,-7,-9,-2,1,-4,4,-1,7,-9,-10,3,9,-5,-2,-7,3,1,10,-6,-9,9,8,2,-5,-4,7,3,5,-6,-6,5,-8,-9,10,-1,-8,2,10,3,6,-10,-7,1,-3,-8,2,6,10,8,3,-8,-2,8,6,-7,1,7,10,-7,-7,-10,8,8,-5,7,8,10,-8,1,-10,-8,8,6,-3,1,-9,8,-8,7,-5,-3,2,2,-10,5,3,-2,9,9,2,-2,2,10,8,-5,-2,5,-10,7,4,-1,-5,8,-10,8,6,6,-1,9,-4,10,1,-3,6,2,-1,-7,-5,-2,3,-8,1,-8,-10,10,1,3,9,2,5,-5,6,-5,-8,-5,-9,1,-7,-2,6,-3,4,-9,-2,-6,7,-5,3,4,-9,2,4,-9,2,9,3,-7,8,8,8,-6,7,-2,1,2,6,9,-7,2,10,-7,5,-10,1,4,-1,-6,2,-9,-3,5,4,9,4,1,5,9,-4,-3,-4,-4,-7,-5,8,4,-8,-1,6,-6,-3,6,-6,8,-1,-3,-5,-4,-7,3,-5,-9,7,5,-3,-6,7,4,7,3,2,5,-5,2,-7,9,2,-7,9,-4,5,9,-10,-7,-7,-4,-6,-6,7,-3,3,-10,-10,-3,3,9,5,-1,-3,3,7,-8,-10,4,-2,-4,8,9,-3,7,10,-3,6,-2,-10,-6,6,-2,8,-4,2,5,-3,10,-9,-1,2,3,-6,6,4,5,-6,6,2,4,1,-5,-8,-2,1,3,7,-3,3,-1,1,-8,-4,1,-6,3,6,2,3,10,-5,-7,-1,7,10,-2,5,-8,-4,-8,-3,8,9,5,3,-5,-10,-3,5,-8,8,-7,-10,6,3,-6,5,10,-5,-5,2,-9,4,-5,3,-5,-3,-6,7,-1,-5,9,-3,1,5,8,-6,4,-10,9,4,4,4,2,-1,-4,-2,-4,3,6,-3,-9,-3,9,4,7,-1,5,1,9,-2,10,-7,10,-2,-1,-1,4,-3,-7,2,-5,5,10,-9,1,3,5,6,1,-4,-2,3,8,10,5,9,5,-1,-3,-4,-2,-6,9,4,7,-4,-2,-5,-5,6,-7,3,1,4,4,10,7,3,-5,7,3,-3,10,-5,-4,-6,-6,-2,-3,-4,-6,-3,10,2,2,-9,3,-2,-3,8,8,10,-5,2,9,-4,-10,-10,2,-6,-3,1,-1,9,-8,3,2,-9,-6,-6,-8,-1,-9,7,-5,8,-9,4,-2,6,-1,-5,2,10,6,4,6,10,-6,-9,-3,-9,-5,-4,5,6,-1,-10,4,3,-8,4,2,-1,5,9,6,10,-2,-8,-6,-4,-5,10,-4,1,-1,6,-1,2,-7,-3,1,-4,-2,2,7,5,-8,-3,-9,6,1,3,-9,9,-8,-6,-10,1,-3,7,9,-1,-8,-3,9,9,9,4,-9,-3,7,-5,10,-6,3,2,-7,10,5,4,-1,6,5,10,-4,10,-2,8,-4,-6,2,-8,-1,4,-10,-4,9,2,1,-9,-5,-6,-5,1,-3,-4,-9,3,1,-9,-6,-1,-2,-1,5,8,9,6,-2,-1,8,-9,-10,-6,-10,1,8,10,-6,-3,-1,8,-6,-1,-3,-5,-10,7,-7,-2,-10,10,6,9,1,3,-6,-9,7,-3,4,3,-2,-7,-7,-3,-3,-8,3,1,1,5,6,2,-5,6,-2,-3,-1,-3,-9,-7,1,1,3,9,7,1,-7,-5,-7,2,-9,-6,-7,-9,5,-9,9,2,4,-6,-3,-2,-2,-5,-9,-10,1,-9,3,7,3,-6,-7,-6,8,-2,1], dtype = "int64")#candidate|2528|(960,)|const|int64
call_2525 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2526.astype('int8'), [10, 7, 1]), relay.reshape(var_2527.astype('int8'), [10, 7, 12]), relay.reshape(const_2528.astype('int64'), [960,]), ), 2)
call_2529 = relay.TupleGetItem(func_1637_call(relay.reshape(var_2526.astype('int8'), [10, 7, 1]), relay.reshape(var_2527.astype('int8'), [10, 7, 12]), relay.reshape(const_2528.astype('int64'), [960,]), ), 2)
output = relay.Tuple([bop_2519,call_2525,var_2526,var_2527,const_2528,])
output2 = relay.Tuple([bop_2519,call_2529,var_2526,var_2527,const_2528,])
func_2532 = relay.Function([var_2509,var_2526,var_2527,], output)
mod['func_2532'] = func_2532
mod = relay.transform.InferType()(mod)
mutated_mod['func_2532'] = func_2532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2532_call = mutated_mod.get_global_var('func_2532')
var_2534 = relay.var("var_2534", dtype = "float32", shape = (5, 4, 13))#candidate|2534|(5, 4, 13)|var|float32
var_2535 = relay.var("var_2535", dtype = "int8", shape = (70, 1))#candidate|2535|(70, 1)|var|int8
var_2536 = relay.var("var_2536", dtype = "int8", shape = (840,))#candidate|2536|(840,)|var|int8
call_2533 = func_2532_call(var_2534,var_2535,var_2536,)
output = call_2533
func_2537 = relay.Function([var_2534,var_2535,var_2536,], output)
mutated_mod['func_2537'] = func_2537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2564 = relay.var("var_2564", dtype = "int8", shape = (10, 1, 8))#candidate|2564|(10, 1, 8)|var|int8
var_2565 = relay.var("var_2565", dtype = "int8", shape = (10, 15, 8))#candidate|2565|(10, 15, 8)|var|int8
bop_2566 = relay.bitwise_and(var_2564.astype('int8'), var_2565.astype('int8')) # shape=(10, 15, 8)
uop_2570 = relay.exp(var_2564.astype('float64')) # shape=(10, 1, 8)
output = relay.Tuple([bop_2566,uop_2570,])
output2 = relay.Tuple([bop_2566,uop_2570,])
func_2576 = relay.Function([var_2564,var_2565,], output)
mod['func_2576'] = func_2576
mod = relay.transform.InferType()(mod)
var_2577 = relay.var("var_2577", dtype = "int8", shape = (10, 1, 8))#candidate|2577|(10, 1, 8)|var|int8
var_2578 = relay.var("var_2578", dtype = "int8", shape = (10, 15, 8))#candidate|2578|(10, 15, 8)|var|int8
output = func_2576(var_2577,var_2578,)
func_2579 = relay.Function([var_2577,var_2578,], output)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2731 = relay.var("var_2731", dtype = "float64", shape = (9, 14, 10))#candidate|2731|(9, 14, 10)|var|float64
uop_2732 = relay.sigmoid(var_2731.astype('float64')) # shape=(9, 14, 10)
func_2172_call = mod.get_global_var('func_2172')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_2740 = relay.const([-6.024425,-8.286917,6.843902,-6.055641,-7.276770,0.558840,6.732957,-5.977364,4.545501,-1.322539,0.106385,6.489824,-3.201918,-3.374923,-6.816701,-8.660538,4.863947,8.928804,-1.704838,-0.403491,-4.375510,4.438294,4.351890,-3.544738,-5.005130,8.920175,4.767102,-1.630453,3.806434,-6.774051,-4.753921,-3.073718,5.078057,-1.486780,4.592880,-6.526265,-1.742475,5.408612,-5.247589,8.654256,-6.587620,-2.006072,2.040781,8.340266,1.294016,-3.933857,-7.888455,2.799037,0.492673,3.625852,-3.216275,-3.089244,2.105968,-3.843190,6.312808,8.680001,-7.230333,-0.233136,-2.361032,-0.827753,8.584287,7.061987,1.973465,1.774180,4.401007,2.838788,-8.444492,-9.527195,8.593092,0.071561,-2.296121,-8.696130,-3.149360,8.806236,-7.805853,-9.760948,-0.677281,4.722123,-5.844972,-2.471545,-5.563580,1.218820,9.384373,-4.298937,-3.776724,-0.415486,-0.758745,-2.510711,6.526268,8.972225,2.067203,4.304029,-5.487963,-1.545461,7.714194,-6.306014,-6.293176,-8.819908,9.833182,6.025631,9.518907,9.252057,-1.017853,-7.594675,4.890923,-1.620146,-9.946976,-8.729580,-1.161712,8.416789,-3.035850,3.308222,-7.220954,-6.986182,0.688621,3.376575,7.750890,-5.935263,-5.431803,1.082926,9.409419,9.476499,3.369462,-9.687365,-7.122927,2.693026,4.875284,9.636286,0.638579,1.302870,0.144318,5.630011,5.624543,1.068449,-7.052775,0.152690,-8.945949,1.980213,5.282040,5.165898,-0.250323,-6.143679,-8.037471,9.190323,3.295628,-2.270872,5.661893,-4.687539,2.475179,6.603976,-4.257138,9.379326,1.468296,7.254850,-6.903490,-7.519882,5.259903,-6.851364,-5.629809,5.077738,4.967945,6.111938,7.575573,1.908882,7.271462,4.716471,-4.083962,-2.650082,8.364178,-9.955437,-8.104305,-6.653600,5.408374,3.709398,-6.321642,2.206179,-1.381243,5.612856,-2.596196,2.629889,7.293225,-2.250918,4.227169,0.007488,-6.436676,1.844714,-4.635389,-1.491650,-0.488373,7.492236,3.281176,-6.971992,4.077662,2.816652,0.937402,8.277760,0.225149,-7.175743,-2.873856,-6.677021,6.165350,-2.884792,4.416063,5.477818,-7.136500,4.646585,5.783670,-1.289597,1.092118,6.970637,-4.905993,7.463045,-7.054295,-9.426688,1.828453,5.335753,-1.512057,-3.859939,-1.731494,-9.679046,-2.430298,-4.493512,6.064469,9.713675,0.509370,0.921240,2.346141,6.505787,-2.719859,4.192613,-5.124134,-7.800018,-2.228624,6.559799,-4.628502,8.909672,3.315959,8.060582,-5.900590,8.473880,5.772166,7.892696,2.414902,-4.169961,6.910894,9.769800,-0.946614,-8.534083,-3.155374,4.263028,9.665043,3.066206,3.264560,-7.712748,7.460720,3.799880,-4.336712,-1.267366,4.571802,-5.883776,-6.139072,5.000458,2.649530,0.430655,1.541138,0.404934,4.053514,5.191240,8.592636,2.361357,0.982776,1.893356,4.446473,8.363142,-1.133477,3.897484,2.319401,5.400421,4.507441,-2.830137,9.478544,2.041642,-2.547152,9.345839,-0.129713,0.796884,6.534387,-3.047232,-1.805990,-2.658632,4.646924,1.087243,-9.882210,3.923894,5.651025,-4.622254,6.760051,0.493005,-0.677320,8.047372,7.918327,-2.621291,2.914081,-6.182067,-8.429018,-2.879746,-2.775201,-7.968814,-1.558592,-8.515225,0.640087,0.754359,0.812476,-7.596176,9.703542,-2.169442,-8.867846,-3.759555,1.511326,2.131196,5.768558,3.491565,0.501157,-4.931423,-2.901418,3.681698,3.491788,-6.861746,-9.090240,-4.661780,9.142674,-5.746954,7.170006,4.475025,2.306274,-5.405176,6.850678,5.761730,3.058956,-4.621195,-6.098841,1.066649,-4.787517,-7.373207,-8.451025,7.321250,-8.598526,-1.194295,-3.674575,-5.960142,-8.832596,-5.633938,9.678999,0.685546,8.174163,-3.923249,7.398148,9.630195,1.998637,-7.842054,-0.227372,6.786570,-6.532557,-6.904499,-5.075642,-8.122955,5.205261,-1.263537,-4.849215,2.786778,4.939173,-1.078025,5.018073,3.682196,0.645855,-9.697206,5.074811,-6.163078,4.146637,-5.559446,-7.974307,9.384652,6.922055,-8.546710,7.324494,8.903461,0.708530,2.723149,7.237855,8.656031,2.242509,-4.245114,-8.595927,-7.686186,2.104964,6.112462,5.030591,9.430379,-1.093059,7.375744,4.723018,-4.686436,-1.489233,4.174655,-1.348214,-0.670955,-7.287108,-8.548620,-4.023805,8.255153,1.318124,3.022393,7.830526,9.000939,-2.252508,2.566372,2.899926,-0.473182,1.203905,5.947902,-9.152055,1.723227,-8.561257,8.023995,-8.394435,-4.882588,5.854102,3.690422,-6.759064,-9.230588,6.965436,-9.489639,-2.914716,-7.880024,-6.896211,8.987500,0.200108,-7.426371,7.531500,-0.445843,-4.175131,1.881784,-1.813083,-9.185262,-5.000945,7.008282,-1.802331,-4.440236,-0.381290,-5.388437,1.297813,-8.459212,2.159501,-5.675497,-3.513973,-8.775321,-7.623789,0.149292,-0.444480,5.227778,-3.566909,-6.677027,2.074379,2.381502,5.650858,-9.112114,-9.384765,-7.620491,9.774694,-2.843968,8.045805,-6.053258,-5.914913,6.017378,4.856122,9.164665,6.478436,-7.009247,4.284067,6.554713,-7.037693,2.376449,-2.232285,-4.535107,-2.309897,5.965302,7.953610,9.401628,6.634209,1.602614,-3.252023,9.114766,-4.040124,-2.605014,1.190389,9.075535,1.672014,-8.923166,-4.494221,-3.570221,3.645938,-8.066380,6.126237,3.704748,-5.916842,-8.948104,7.873245,0.840964,1.768120,1.180170,7.372861,-5.075762,6.934753,-0.212411,9.389818,3.302947,-6.925313,-3.724766,0.144862,9.799389,-8.366052,-9.065639,9.425036,3.308977,3.214568,1.297387,4.359815,-5.027415,7.329164,-2.222538,2.333364,6.186904,-3.764693,0.969667,7.635118,9.746689,-3.271865,-8.672802,2.851845,7.323970,-2.282516,7.083270,-6.360935,6.313667,-4.197743,9.549981,9.145104,-0.752365,-5.470551,4.945349,-8.948113,3.146425,9.407296,-1.272736,5.899354,9.481766,-2.549810,-3.738772,-2.553501,-7.175200,4.988148,-5.957836,4.700142,-8.605227,5.509279,4.847932,4.793492,-2.084908,-9.493807,3.083535,-9.924671,-8.871653,-3.943894,-6.146986,-5.016394,3.167368,-1.235890,-8.956969,-0.223655,5.379856,-9.700750,4.519958,0.140464,-5.377766,-6.133082,2.134774,3.002143,-5.259752,-1.754186,-4.452666,1.290227,6.953896,-2.970746,6.776623,-0.724371,-0.358143,-4.201126,-9.850674,2.222523,8.783127,5.006162,7.821654,-2.856619,-0.456111,-1.808466,7.178933,-8.255996,4.337556,-1.531565,-1.860367,5.752334,-0.597450,-0.530270,7.702270,8.115713,-8.020683,6.481881,8.728751,3.797644,8.695108,2.382379,8.322835,8.456392,-9.181999,-4.254983,-0.215176,8.398992,5.131497,-2.609260,7.213737,1.243446,-2.083606,7.972879,8.554120,1.684238,-6.028576,0.318213,-5.309552,-4.631705,8.880590,3.605697,-2.018665,-3.083839,9.767597,-6.637422,-1.433959,-5.946591,4.041271,2.668316,-4.108044,3.607979,6.927695,-5.616117,4.703473,-6.862176,1.640645,-8.425892,-3.294397,4.708573,4.969204,-1.955179,-0.879997,-4.364327,8.965238,-6.197389,-5.587865,-2.848114,-1.284185,-8.851335,-1.320218,-5.452412,-9.132800,9.106441,2.385683,-1.084764,9.214982,7.161088,7.893730,1.507139,7.526662,-3.894883,6.960626,1.626734,-6.486346,2.236072,-6.895910,-1.601368,-5.010751,2.254967,3.317329,6.517132,-9.155823,-3.907868,-1.347495,-7.362682,8.883513,-7.708647,-1.292143,-2.518705,6.510387,7.395515,-0.407737,-9.094746,1.987433,-5.098210,-6.581850,3.959435,-0.880240,-7.796890,2.785496,-8.641451,-6.264365,9.035701,-8.418299,2.054034,5.170752,2.385439,-9.605547,1.974921,7.857521,-7.141580,5.211805,1.477096,9.461193,-8.356834,-9.651681,2.036106,8.414888,1.646638,6.159424,7.809839,7.901242,-4.504999,7.422186,-4.199023,7.024411,-7.265598,-4.926987,9.165227,1.802084,4.677522,-8.528276,-4.224356,3.520092,-3.665839,-0.797846,-8.017776,-2.018481,-6.064439,-0.445593,0.726081,5.381214,-5.325971,3.031782,-9.323280,0.102053,-5.960017,-8.002734,-1.496447,9.486804,-1.068219,-5.725168,7.418720,6.916333,-9.869177,-3.043008,-2.426810,1.351007,-1.938734,-7.440386,-5.295739,-8.300476,6.643226,3.188697,-9.228190,-2.189744,7.968086,3.732522,-6.756427,-6.075854,-6.449783,-2.382788,-8.077321,6.206265,-3.965547,3.517850,-4.772757,1.345651,3.546972,8.441765,7.903478,-3.626012], dtype = "float64")#candidate|2740|(792,)|const|float64
call_2739 = relay.TupleGetItem(func_2172_call(relay.reshape(const_2740.astype('float64'), [11, 9, 8])), 0)
call_2741 = relay.TupleGetItem(func_2174_call(relay.reshape(const_2740.astype('float64'), [11, 9, 8])), 0)
output = relay.Tuple([uop_2732,call_2739,const_2740,])
output2 = relay.Tuple([uop_2732,call_2741,const_2740,])
func_2742 = relay.Function([var_2731,], output)
mod['func_2742'] = func_2742
mod = relay.transform.InferType()(mod)
var_2743 = relay.var("var_2743", dtype = "float64", shape = (9, 14, 10))#candidate|2743|(9, 14, 10)|var|float64
output = func_2742(var_2743)
func_2744 = relay.Function([var_2743], output)
mutated_mod['func_2744'] = func_2744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3452 = relay.var("var_3452", dtype = "float64", shape = (2, 8, 2))#candidate|3452|(2, 8, 2)|var|float64
uop_3453 = relay.erf(var_3452.astype('float64')) # shape=(2, 8, 2)
bop_3456 = relay.maximum(uop_3453.astype('int8'), relay.reshape(var_3452.astype('int8'), relay.shape_of(uop_3453))) # shape=(2, 8, 2)
func_1926_call = mod.get_global_var('func_1926')
func_1930_call = mutated_mod.get_global_var('func_1930')
var_3469 = relay.var("var_3469", dtype = "int32", shape = (24,))#candidate|3469|(24,)|var|int32
var_3470 = relay.var("var_3470", dtype = "int32", shape = (384,))#candidate|3470|(384,)|var|int32
call_3468 = func_1926_call(relay.reshape(var_3469.astype('int32'), [4, 6, 1]), relay.reshape(var_3470.astype('int32'), [4, 6, 16]), )
call_3471 = func_1926_call(relay.reshape(var_3469.astype('int32'), [4, 6, 1]), relay.reshape(var_3470.astype('int32'), [4, 6, 16]), )
const_3472 = relay.const([[[-1.436873,9.854403],[-4.704311,3.441382],[8.194771,-6.047978],[-3.085578,7.523217],[6.407039,5.694326],[4.794034,-2.541840],[-5.297554,-8.892630],[-7.795350,-1.770559]],[[-9.576879,-7.332607],[-7.466646,-8.204051],[-3.483282,4.007059],[1.561482,5.975873],[8.432137,6.232303],[2.664278,-2.873333],[5.285779,7.471209],[-4.334966,0.600967]]], dtype = "float64")#candidate|3472|(2, 8, 2)|const|float64
bop_3473 = relay.less_equal(uop_3453.astype('bool'), relay.reshape(const_3472.astype('bool'), relay.shape_of(uop_3453))) # shape=(2, 8, 2)
output = relay.Tuple([bop_3456,call_3468,var_3469,var_3470,bop_3473,])
output2 = relay.Tuple([bop_3456,call_3471,var_3469,var_3470,bop_3473,])
func_3491 = relay.Function([var_3452,var_3469,var_3470,], output)
mod['func_3491'] = func_3491
mod = relay.transform.InferType()(mod)
mutated_mod['func_3491'] = func_3491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3491_call = mutated_mod.get_global_var('func_3491')
var_3493 = relay.var("var_3493", dtype = "float64", shape = (2, 8, 2))#candidate|3493|(2, 8, 2)|var|float64
var_3494 = relay.var("var_3494", dtype = "int32", shape = (24,))#candidate|3494|(24,)|var|int32
var_3495 = relay.var("var_3495", dtype = "int32", shape = (384,))#candidate|3495|(384,)|var|int32
call_3492 = func_3491_call(var_3493,var_3494,var_3495,)
output = call_3492
func_3496 = relay.Function([var_3493,var_3494,var_3495,], output)
mutated_mod['func_3496'] = func_3496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3503 = relay.var("var_3503", dtype = "int16", shape = (6, 7, 2))#candidate|3503|(6, 7, 2)|var|int16
var_3504 = relay.var("var_3504", dtype = "int16", shape = (6, 7, 2))#candidate|3504|(6, 7, 2)|var|int16
bop_3505 = relay.maximum(var_3503.astype('int16'), relay.reshape(var_3504.astype('int16'), relay.shape_of(var_3503))) # shape=(6, 7, 2)
func_1632_call = mod.get_global_var('func_1632')
func_1637_call = mutated_mod.get_global_var('func_1637')
const_3510 = relay.const([2,2,6,3,-10,-2,-10,7,-7,1,10,6,-3,-6,3,1,-3,-1,1,-8,8,9,-6,5,-7,7,-6,-7,-4,-5,2,-4,-7,1,-8,2,1,-6,-10,-10,-5,-8,-2,10,-10,6,-9,7,5,7,-9,1,-10,6,-8,-1,-5,-4,6,4,-6,-7,1,2,-6,-9,-8,4,9,-2], dtype = "int8")#candidate|3510|(70,)|const|int8
var_3511 = relay.var("var_3511", dtype = "int8", shape = (840,))#candidate|3511|(840,)|var|int8
var_3512 = relay.var("var_3512", dtype = "int64", shape = (960,))#candidate|3512|(960,)|var|int64
call_3509 = relay.TupleGetItem(func_1632_call(relay.reshape(const_3510.astype('int8'), [10, 7, 1]), relay.reshape(var_3511.astype('int8'), [10, 7, 12]), relay.reshape(var_3512.astype('int64'), [960,]), ), 1)
call_3513 = relay.TupleGetItem(func_1637_call(relay.reshape(const_3510.astype('int8'), [10, 7, 1]), relay.reshape(var_3511.astype('int8'), [10, 7, 12]), relay.reshape(var_3512.astype('int64'), [960,]), ), 1)
func_710_call = mod.get_global_var('func_710')
func_713_call = mutated_mod.get_global_var('func_713')
const_3517 = relay.const(8, dtype = "int64")#candidate|3517|()|const|int64
call_3516 = relay.TupleGetItem(func_710_call(relay.reshape(const_3517.astype('int64'), []), relay.reshape(var_3512.astype('int64'), [16, 15, 4]), ), 0)
call_3518 = relay.TupleGetItem(func_713_call(relay.reshape(const_3517.astype('int64'), []), relay.reshape(var_3512.astype('int64'), [16, 15, 4]), ), 0)
output = relay.Tuple([bop_3505,call_3509,const_3510,var_3511,var_3512,call_3516,const_3517,])
output2 = relay.Tuple([bop_3505,call_3513,const_3510,var_3511,var_3512,call_3518,const_3517,])
func_3520 = relay.Function([var_3503,var_3504,var_3511,var_3512,], output)
mod['func_3520'] = func_3520
mod = relay.transform.InferType()(mod)
var_3521 = relay.var("var_3521", dtype = "int16", shape = (6, 7, 2))#candidate|3521|(6, 7, 2)|var|int16
var_3522 = relay.var("var_3522", dtype = "int16", shape = (6, 7, 2))#candidate|3522|(6, 7, 2)|var|int16
var_3523 = relay.var("var_3523", dtype = "int8", shape = (840,))#candidate|3523|(840,)|var|int8
var_3524 = relay.var("var_3524", dtype = "int64", shape = (960,))#candidate|3524|(960,)|var|int64
output = func_3520(var_3521,var_3522,var_3523,var_3524,)
func_3525 = relay.Function([var_3521,var_3522,var_3523,var_3524,], output)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3715 = relay.var("var_3715", dtype = "int64", shape = ())#candidate|3715|()|var|int64
var_3716 = relay.var("var_3716", dtype = "int64", shape = (2, 15, 8))#candidate|3716|(2, 15, 8)|var|int64
bop_3717 = relay.bitwise_xor(var_3715.astype('int64'), var_3716.astype('int64')) # shape=(2, 15, 8)
output = bop_3717
output2 = bop_3717
func_3728 = relay.Function([var_3715,var_3716,], output)
mod['func_3728'] = func_3728
mod = relay.transform.InferType()(mod)
var_3729 = relay.var("var_3729", dtype = "int64", shape = ())#candidate|3729|()|var|int64
var_3730 = relay.var("var_3730", dtype = "int64", shape = (2, 15, 8))#candidate|3730|(2, 15, 8)|var|int64
output = func_3728(var_3729,var_3730,)
func_3731 = relay.Function([var_3729,var_3730,], output)
mutated_mod['func_3731'] = func_3731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4065 = relay.var("var_4065", dtype = "uint32", shape = (4, 5, 1))#candidate|4065|(4, 5, 1)|var|uint32
var_4066 = relay.var("var_4066", dtype = "uint32", shape = (4, 5, 13))#candidate|4066|(4, 5, 13)|var|uint32
bop_4067 = relay.less(var_4065.astype('bool'), var_4066.astype('bool')) # shape=(4, 5, 13)
output = relay.Tuple([bop_4067,])
output2 = relay.Tuple([bop_4067,])
func_4079 = relay.Function([var_4065,var_4066,], output)
mod['func_4079'] = func_4079
mod = relay.transform.InferType()(mod)
mutated_mod['func_4079'] = func_4079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4079_call = mutated_mod.get_global_var('func_4079')
var_4081 = relay.var("var_4081", dtype = "uint32", shape = (4, 5, 1))#candidate|4081|(4, 5, 1)|var|uint32
var_4082 = relay.var("var_4082", dtype = "uint32", shape = (4, 5, 13))#candidate|4082|(4, 5, 13)|var|uint32
call_4080 = func_4079_call(var_4081,var_4082,)
output = call_4080
func_4083 = relay.Function([var_4081,var_4082,], output)
mutated_mod['func_4083'] = func_4083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4305 = relay.var("var_4305", dtype = "float32", shape = (11, 1, 16))#candidate|4305|(11, 1, 16)|var|float32
uop_4306 = relay.asin(var_4305.astype('float32')) # shape=(11, 1, 16)
uop_4309 = relay.sin(var_4305.astype('float64')) # shape=(11, 1, 16)
func_3520_call = mod.get_global_var('func_3520')
func_3525_call = mutated_mod.get_global_var('func_3525')
const_4312 = relay.const([-9,-10,5,-4,-10,6,-1,-8,1,-5,4,7,1,5,6,-6,2,-7,7,-10,10,-10,8,-8,-9,-1,8,-4,-7,-9,-4,8,-4,3,-6,-8,-10,9,-6,6,-9,8,-5,4,-3,7,-1,5,9,7,-10,4,-5,7,-2,-7,-2,-6,-1,-10,-5,-2,-3,-2,-7,-2,5,-9,10,10,-1,-3,-5,-1,-1,-1,-10,-5,-1,7,-7,5,6,-10], dtype = "int16")#candidate|4312|(84,)|const|int16
const_4313 = relay.const([[-10,2,-2,-2,-4,9,5,8,10,-2,-4,-9,-2,-9],[-9,-1,-2,4,6,4,6,-5,-7,5,-8,-4,-7,-5],[2,-7,2,1,1,-5,9,6,-5,6,-3,9,1,4],[-8,6,2,2,3,8,-9,10,2,-3,8,9,2,3],[-3,1,5,-3,3,10,1,10,1,-7,-8,2,-2,9],[8,9,-8,-5,10,-1,3,6,9,1,-6,5,-9,-3],[-7,-6,6,-6,-8,9,-9,10,4,-6,-4,5,7,7],[6,-10,-2,-9,2,5,8,-7,-4,9,-4,1,5,-7],[5,-2,-4,3,9,-6,-9,10,-3,-4,-7,-5,9,-9],[1,1,-2,6,-7,1,2,6,8,-9,-6,-10,-6,-4],[-2,-1,8,10,7,5,-6,10,8,1,4,7,-3,-3],[-3,-3,-7,-9,-8,-7,4,1,-2,1,-6,6,-4,-10],[-9,5,-9,8,-5,-2,-3,-10,-5,-10,-1,-7,-3,5],[-5,4,9,5,-8,-3,-9,5,-6,-2,5,7,10,1],[8,-3,-4,-6,-8,10,-5,8,7,-7,-8,5,-8,-9],[10,-6,-9,-9,7,5,-8,1,7,-7,-3,-1,-1,4],[1,-10,5,-9,-4,-9,-6,8,9,-5,-9,3,5,2],[-2,-7,-2,-4,-2,3,-3,-9,-9,3,8,-6,-10,-10],[-5,-3,1,-10,7,-1,-10,7,9,2,-2,-5,3,-9],[2,-8,-2,-4,2,-5,9,-10,-10,-2,-2,6,1,6],[3,-5,-3,-2,7,-7,1,10,7,10,-8,8,-1,5],[6,-4,-7,3,-5,6,-2,-10,6,-6,-3,-2,-1,4],[5,-1,-3,9,7,9,-9,-3,7,-6,7,-5,10,-3],[8,-2,7,5,2,9,7,1,-2,-9,-10,-3,8,-7],[-5,-9,8,-7,7,-6,-7,-6,2,10,-2,6,-3,8],[6,10,-6,4,10,-10,5,-6,10,5,-9,-7,-4,-4],[-1,-10,8,8,-1,-9,-6,-8,2,3,5,-3,5,-7],[6,-7,4,3,9,5,6,1,-2,2,2,-5,5,3],[-1,-8,4,3,5,9,9,-4,-9,-4,-5,-4,-4,-5],[-10,-9,-9,-7,4,-10,-7,-3,-4,-1,1,3,-6,2],[-7,-8,-5,9,4,8,7,7,8,2,6,-6,-1,-4],[7,6,2,2,-1,-3,6,-2,-9,9,-8,1,6,-4],[8,3,-3,1,3,5,6,-8,9,-7,1,-8,-7,-7],[-6,-10,-9,2,-4,-9,8,-10,4,-9,1,3,-10,-3],[10,9,-10,-10,2,1,5,-2,6,9,3,4,2,6],[-10,10,-10,6,8,1,10,-5,-3,-9,-10,-2,-6,6],[4,1,-2,4,8,4,-7,-5,10,-3,-6,4,3,-8],[2,7,6,2,7,-2,7,10,-2,1,4,4,8,-5],[-6,8,-8,6,2,-4,5,3,-1,-5,7,-2,2,10],[-6,1,-1,9,-5,-3,-4,-4,-10,-2,10,-3,-7,-10],[3,-1,7,10,-10,-5,-6,1,-5,3,-4,8,2,2],[6,-8,-2,-7,-10,4,6,6,10,-3,4,4,-9,-1],[2,2,-7,-7,1,7,9,-3,5,-8,-9,-1,5,1],[8,8,-7,-9,3,3,-10,-7,-4,-5,-4,-3,1,5],[9,-1,10,-8,10,-1,-3,-8,5,-3,8,5,10,4],[-1,-9,-7,-7,2,3,-3,8,9,9,3,-10,-2,4],[4,-5,-1,5,-9,-6,-8,-4,3,8,-9,-5,-1,-5],[3,-6,9,10,-8,-7,-9,-9,-2,-9,6,-9,6,-9],[-3,1,4,-1,-1,-5,7,-7,5,-3,-10,3,10,10],[6,-5,4,4,-5,2,-5,-4,-9,9,6,10,-6,1],[3,-4,-3,-9,-6,6,8,-7,7,7,2,-9,-10,4],[1,2,7,6,-4,6,8,1,-1,2,10,3,7,-10],[-2,3,-10,-7,10,6,8,5,-5,3,7,-4,-5,8],[-1,-1,3,-6,8,9,-7,-3,10,-3,6,-10,3,9],[5,4,-8,-8,-6,3,8,-3,10,1,5,4,2,-6],[2,-7,-5,-2,5,-3,4,6,-1,-8,6,-2,3,-4],[-1,-4,-8,-9,-1,5,3,-6,5,1,-10,8,6,6],[-3,6,3,-7,10,-3,9,6,7,10,-3,-7,-10,10],[-2,-9,9,10,-5,4,-5,6,-4,-7,-4,2,-10,2],[-3,-9,-1,1,-4,-5,-10,-2,-3,-10,-1,-9,-5,-10]], dtype = "int8")#candidate|4313|(60, 14)|const|int8
const_4314 = relay.const([6,7,6,-4,9,7,-6,-2,-1,-9,3,9,-2,-4,-1,9,4,7,-3,6,-10,7,-10,-6,-3,4,-4,-1,-1,-1,7,-4,-5,2,1,-3,10,4,-8,-3,-7,8,-3,-8,-3,9,-8,-10,1,2,-9,-10,2,1,8,2,4,-5,-10,-3,1,-2,4,-1,-5,6,5,-2,-4,8,10,5,1,-1,2,-5,-8,1,10,-7,-6,-8,3,-9,-5,-8,10,-9,7,3,5,-4,4,5,9,8,8,-8,6,-9,8,-7,3,9,-7,-1,2,-5,1,10,-1,5,6,2,3,-4,9,9,-9,-3,-3,-9,8,-1,4,-8,4,6,-1,2,8,-4,1,-10,-4,-7,7,-1,-9,-3,6,8,9,9,-10,3,-9,6,10,10,-9,10,10,3,6,2,9,3,4,9,3,4,9,-1,8,-3,-8,-4,-4,8,5,3,10,4,-8,-7,-5,2,-3,-4,-6,-1,-10,3,-4,-6,-2,2,5,-7,-3,3,-7,3,-9,2,-2,10,-8,7,-5,-10,2,-1,2,-7,2,2,-4,-9,9,-10,4,6,4,-5,-6,8,-7,-4,-8,-1,-10,10,-7,9,-2,-9,-1,-10,8,-4,10,-2,-2,5,7,10,8,-3,1,-3,1,1,8,-4,9,-1,-1,-6,-1,-5,-9,-8,-9,4,-3,4,10,5,-9,4,-9,8,10,-7,7,1,-10,-4,2,-8,-4,8,-8,-2,3,6,1,-6,-10,-1,-6,4,5,-5,-6,1,-5,-6,3,-9,-3,10,9,-4,10,7,-2,-2,-8,4,-1,-6,6,-9,-9,7,3,8,3,2,-1,-9,-9,10,9,-1,-10,7,6,-5,4,1,-9,-3,4,6,-4,10,8,-1,5,9,9,-1,2,2,-8,-7,-3,-9,-6,2,-10,5,2,6,10,-3,1,-3,-10,1,9,4,6,9,-8,4,-3,7,7,-5,9,7,3,-3,7,2,-1,8,-10,1,-5,-6,-6,-4,-8,-1,8,-7,9,4,5,2,2,5,-4,-10,1,-7,-10,-9,3,-7,7,-2,7,2,3,10,-1,-7,-9,-4,-4,-7,-6,-5,6,8,10,-2,7,9,-8,-5,-1,-6,1,3,4,2,-6,-7,-10,8,8,-7,5,-4,4,-6,4,-5,1,-10,8,5,10,-8,10,2,-7,-10,4,7,-3,-1,4,-2,6,2,-6,9,8,8,-3,-5,-9,5,10,9,5,-2,8,4,10,1,2,3,7,-9,4,-3,10,4,9,5,5,-5,-3,-10,-6,10,1,7,7,-10,-9,-3,2,8,3,7,3,3,-10,1,-2,-3,6,-10,-5,3,-5,4,-6,-1,10,-6,-10,10,-10,6,-4,6,9,5,8,10,6,3,10,8,-3,-2,-1,-3,-3,-6,7,9,8,2,1,1,9,7,9,-9,10,-5,4,-4,8,6,-2,3,-6,-7,-10,2,6,9,5,-8,-9,-7,-1,-2,3,-4,10,6,-4,-2,-3,4,-4,-3,-10,5,5,4,3,7,-1,-10,10,-6,-8,9,-3,-9,7,-7,4,-8,-5,9,10,3,-8,-4,-8,-5,9,8,-8,-10,-8,1,2,-4,-6,5,8,-9,3,-7,6,-7,-9,-8,1,-1,8,2,-5,-6,-7,7,9,4,-9,-2,6,-9,-6,9,8,4,-5,-5,1,1,2,-7,-6,-2,-5,-2,-6,3,10,9,3,-4,-10,-1,10,-2,4,3,2,6,2,6,9,-1,-1,-8,4,5,9,-6,9,-1,-7,2,-10,7,-4,-3,2,3,4,10,-1,3,-4,-1,7,6,6,3,8,-1,3,-7,-8,10,2,-10,-6,5,2,-3,-9,2,8,-5,-9,9,8,9,-6,8,1,-3,2,7,5,2,-2,1,-4,-6,-3,-5,3,-7,-4,-9,6,2,-9,2,2,9,-2,3,9,1,6,-2,-1,-2,-5,-10,2,-9,-4,6,-6,-9,7,4,-3,5,10,-2,8,8,2,4,-1,-4,3,10,-5,8,2,8,-9,-7,-2,-2,1,-6,9,7,-5,4,1,9,-4,9,-1,1,2,10,5,6,3,8,-4,-1,-6,-6,10,6,-2,-10,-2,6,-9,9,10,9,-9,-7,-2,9,5,6,1,-9,-4,10,2,-1,-2,-4,-8,-10,-9,-8,-7,-6,4,-10,-3,10,10,5,-5,2,1,-2,8,-3,-10,6,10,2,6,-1,-2,8,2,-5,-4,-6,4,3,9,9,-9,-7,-8,6,-2,5,-9,-6,-8,10,10,6,-4,-4,-5,2,-7,-4,9,-9,7,5,-8,-7,-1,-8,-10,5,-3,9,-3,1,-2,-4,-5,4,-8,-7,9,3,-10,-3,5,-4,-8,-6,4,10,4,-10,9,-2,2,-5,3,3,9,4,5,-4,-1,-5,-2,4,8,-7,-8,6,-8,3,1,5,-5,5,8,-6,-2,7,-5,-9,5,-2,5,-6,-10,-4,-6,-10,9,4,7,-8,8,-2,-6,-6,9,5,7,-6,-10,-10,1,-1,7,10,3,2,3,4], dtype = "int64")#candidate|4314|(960,)|const|int64
call_4311 = relay.TupleGetItem(func_3520_call(relay.reshape(const_4312.astype('int16'), [6, 7, 2]), relay.reshape(const_4312.astype('int16'), [6, 7, 2]), relay.reshape(const_4313.astype('int8'), [840,]), relay.reshape(const_4314.astype('int64'), [960,]), ), 5)
call_4315 = relay.TupleGetItem(func_3525_call(relay.reshape(const_4312.astype('int16'), [6, 7, 2]), relay.reshape(const_4312.astype('int16'), [6, 7, 2]), relay.reshape(const_4313.astype('int8'), [840,]), relay.reshape(const_4314.astype('int64'), [960,]), ), 5)
output = relay.Tuple([uop_4306,uop_4309,call_4311,const_4312,const_4313,const_4314,])
output2 = relay.Tuple([uop_4306,uop_4309,call_4315,const_4312,const_4313,const_4314,])
func_4343 = relay.Function([var_4305,], output)
mod['func_4343'] = func_4343
mod = relay.transform.InferType()(mod)
var_4344 = relay.var("var_4344", dtype = "float32", shape = (11, 1, 16))#candidate|4344|(11, 1, 16)|var|float32
output = func_4343(var_4344)
func_4345 = relay.Function([var_4344], output)
mutated_mod['func_4345'] = func_4345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4349 = relay.var("var_4349", dtype = "float64", shape = (9, 10, 16))#candidate|4349|(9, 10, 16)|var|float64
uop_4350 = relay.atan(var_4349.astype('float64')) # shape=(9, 10, 16)
uop_4352 = relay.exp(var_4349.astype('float64')) # shape=(9, 10, 16)
output = relay.Tuple([uop_4350,uop_4352,])
output2 = relay.Tuple([uop_4350,uop_4352,])
func_4364 = relay.Function([var_4349,], output)
mod['func_4364'] = func_4364
mod = relay.transform.InferType()(mod)
mutated_mod['func_4364'] = func_4364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4365 = relay.var("var_4365", dtype = "float64", shape = (9, 10, 16))#candidate|4365|(9, 10, 16)|var|float64
func_4364_call = mutated_mod.get_global_var('func_4364')
call_4366 = func_4364_call(var_4365)
output = call_4366
func_4367 = relay.Function([var_4365], output)
mutated_mod['func_4367'] = func_4367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5105 = relay.var("var_5105", dtype = "float32", shape = (13, 5, 5))#candidate|5105|(13, 5, 5)|var|float32
uop_5106 = relay.cos(var_5105.astype('float32')) # shape=(13, 5, 5)
func_4079_call = mod.get_global_var('func_4079')
func_4083_call = mutated_mod.get_global_var('func_4083')
const_5114 = relay.const([9,-9,-2,-6,10,-7,-2,-3,10,5,6,3,5,5,7,-4,1,-7,-10,-2], dtype = "uint32")#candidate|5114|(20,)|const|uint32
const_5115 = relay.const([-1,2,3,7,7,1,1,-9,-2,10,7,7,4,9,8,-7,-8,-6,-10,-8,-8,8,-7,-6,5,2,7,8,-9,-9,10,9,-6,10,9,2,6,-5,-7,9,8,6,3,9,10,10,-4,9,-3,6,6,9,8,-3,6,-8,5,2,-9,-1,-6,10,-1,2,7,-8,-3,-3,1,-7,9,-3,-9,-6,5,7,10,5,-6,9,-2,4,-2,-8,4,9,-3,10,9,-10,5,8,-7,-9,10,6,-5,-1,1,7,7,1,-10,1,8,4,3,9,4,4,-7,8,-5,8,-8,-1,3,-4,2,-10,9,2,-5,1,-10,-5,-7,9,-2,6,-2,-7,-7,-7,6,-7,-1,-6,-9,-6,-2,-8,-4,9,-3,-5,1,1,-3,-9,4,-4,5,9,-7,-7,-6,9,1,5,4,1,4,-5,10,5,-10,-9,1,10,-5,-8,-1,10,-5,-10,-6,6,4,-4,7,-8,-10,-1,7,8,10,2,3,7,-8,8,-7,2,8,-4,9,2,-9,2,-6,-7,-8,-10,-2,2,-4,-3,-5,-10,5,7,-8,-5,2,10,-8,6,5,-9,-5,-8,-1,9,8,-10,5,-6,8,9,-9,-10,5,4,-4,-8,4,-9,7,-1,-7,-7,-10,-5,-6,-10,3,-1,6,10,-8,2,-2,-7,6,3,10,-8,-7,-1], dtype = "uint32")#candidate|5115|(260,)|const|uint32
call_5113 = relay.TupleGetItem(func_4079_call(relay.reshape(const_5114.astype('uint32'), [4, 5, 1]), relay.reshape(const_5115.astype('uint32'), [4, 5, 13]), ), 0)
call_5116 = relay.TupleGetItem(func_4083_call(relay.reshape(const_5114.astype('uint32'), [4, 5, 1]), relay.reshape(const_5115.astype('uint32'), [4, 5, 13]), ), 0)
func_4364_call = mod.get_global_var('func_4364')
func_4367_call = mutated_mod.get_global_var('func_4367')
var_5129 = relay.var("var_5129", dtype = "float64", shape = (1440,))#candidate|5129|(1440,)|var|float64
call_5128 = relay.TupleGetItem(func_4364_call(relay.reshape(var_5129.astype('float64'), [9, 10, 16])), 1)
call_5130 = relay.TupleGetItem(func_4367_call(relay.reshape(var_5129.astype('float64'), [9, 10, 16])), 1)
func_2128_call = mod.get_global_var('func_2128')
func_2134_call = mutated_mod.get_global_var('func_2134')
const_5143 = relay.const([-10,6,9,-7,-10,4,8,-4,10,8,-10,4,-3,-3,5,5,1,1,3,-2,7,-4,4,3,-5,3,-10,-3,4,-9,5,4,7,7,-5,4,7,-8,5,-6,-4,8,-5,-8,-6,-10,1,9,1,-10,7,10,-10,-4,2,7,-10,-2,7,-2,7,4,-5,-9,-10,-5,-1,-2,5,-7,-7,-7,-1,-10,10,-1,-5,8,9,10,-4,-8,-2,-7,-6,8,-1,10,5,-2,3,4,8,10,9,9,-5,-10,7,3,-2,-7,-5,6,-9,5,-2,10,2,9,9,7,-5,10,2,5,6,8,-1,1,3,-1,-8,-6,10,4,-1,5,5,8,-3,-3,7,10,10,-7,1,9,-9,-10,8,2,4,-9,-5,8,2,-6,-5,-8,-8,-9,4,-8,10,-6,5,-2,-5,8,8,7,7,10,10,6,-6,8,-2,-5,-8,5,-6,2,7,-3,-6,-6,6,5,-5,-5,-8,1,3,4,-6,5,-5,-7,-7,-7,3,-5,1,-6,-3,-7,7,-2,-5,-2,-5,-5,5,3,2,-4,5,-5,-1,3,3,-4,-8,-9,-3,4,-9,8,-10,-6,3,9,-1,-6,-7,-6,-9,-1,9,1,-2,-7,5,4,8,-10,-2,-3,-5,-7,10,-3,6,-7,5,-4,-5,9,-8,-7], dtype = "uint8")#candidate|5143|(252,)|const|uint8
var_5144 = relay.var("var_5144", dtype = "float32", shape = (360,))#candidate|5144|(360,)|var|float32
var_5145 = relay.var("var_5145", dtype = "float64", shape = (448,))#candidate|5145|(448,)|var|float64
const_5146 = relay.const([2,6,-10,9,5,-5,9,-3,-9,-8,-2,4,-6,9,-1,-9,-2,9,5,3,4,-6,-1,-2,4,9,-4,5,7,1,-4,3,7,-1,1,-10,-1,-10,7,-5,3,6,-8,7,-7,-5,1,9,9,-10,-4,-7,-1,9,8,9,-9,9,10,-5,4,-7,8,-3,-8,9,-3,8,3,2,-1,-3,7,-8,-7,3,-2,4,-8,7,10,-7,2,7,-3,7,1,4,3,7,4,-1,10,-8,-4,4,3,-9,7,2,-6,-5,10,-6,-1,5,3,-4,5,9,7,3,7,4,-9,-5,7,1,9,-4,-10,-6,7,4,-1,1,-10,-7,8,10,-10,-10,7,6,-9,-6,9,10,3,-6,-10,-2,1,5,1,-5,-4,-7,6,-9,-6,-4,9,1,-9,-6,-3,-7,-6,-4,-2,7,7,9,1,-8,2,-2,-7,3,-1,5,5,-10,8,9,6,6,-2,-7,-2,10,9,5,8,-2,-4,2,-8,-4,8,-6,9,-6,-8,6,7,4,-1,-2,4,5,-10,1,1,4,-9,2,4,-3,-8,-2,6,-1,-2,3,6,8,-8,3,4,-7,-10,3,4,6,-4,8,-4,-6,-1,-6,8,10,3,-3,1,-2,-8,4,-2,5,1,-5,-2,3,9,-10,-3,4,6,-5,-9,9,-1,-1,-5,8,-10,3,3,9,5,-10,2,4,-3,-6,-5,10,-7,-10,7,-10,-10,-3,9,8,1,-2,-2,-2,5,-7,-2,6,-8,-4,4,-4,-9,9,8,1,5,-4,-10,-4,-2,-3,10,4,6,2,3,4,4,-9,-1,2,4,5,-2,-8,9,-1,-1,-6,-4,-6,-6,-9,4,-3,-8,10,-10,-5,3,-9,5,1,4,4,8,4,-10,4,-3,-6,-3,3,3,-8,-1,1,4,5,-1,-5,-1,-3,-6,-3,-6,-9,7,-4,2,-7,8,3,1,-1,7,1,9,-8,-3,-3,10,-7,8,7,5,4,-3,-7,-5,7,8,-1,-2,-1,10,5,10,8,5,-9,-1,-6,-2,-9,3,10,-3,-8,1,-3,5,-2,-10,-2,-6,-7,-4,1,4,-2,5,-8,-6,-7,-6,-8,8,6,10,3,3,-1,3,-2,2,-3,9,-9,-8,1,-9,-4,1,-5,2,-5,9,1,-9,-8,8,-2,-5,-1,9,4,1,7,10,10,-1,4,-4,4,7,-4,5,1,9,2,3,6,-4,5,4,-3,-2,-8,1,10,4,-2,-2,-9,-6,-8,7,-5,8,4,-5,8,-5,4,6,5,-9,-1,1,-1,10,-7,3,9,-2,-5,3,6,10,5,5,-8,-6,-5,-10,5,-6,-9,6,2,3,9,-1,-4,-7,6,9,-8,4,2,-2,4,-3,8,-4,-9,8,-3,-3,7,-7,3,7,-1,-5,-5,-1,-4,5,-4,-2,6,-1,6,-7,3,8,-10,-7,7,3,8,2,-10,6,6,9,8,2,-5,9,-2,5,-3,2,-4,-2,3,-8,3,-9,2,10,9,7,10,3,4,-6,8,-5,-7,7,-2,-2,-9,-3,-10,-2,-6,2,-5,-10,3,-4,-5,5,7,-1,7,4,-6,-6,10,7,6,-2,6,-2,9,10,-6,-10,-7,1,-6,-9,-2,1,6,7,-9,5,-2,-4,2,9,-1,2,-7,1,8,10,-8,1,10,5,7,-5,-6,2,-5,7,-7,3,2,9,-5,-1,1,4,-9,1,1,-7,-6,-7,7,6,-3,-9,-2,-8,-9,-9,-10,-2,-4,-7,10,1,2,-9,-2,-2,-4,3,-1,-1,9,-3,-5,-9,9,-3,9,-8,-2,9,-10,2,-4,-9,7,7,2,-6,-4,-5,1,5,3,-1,8,10,3,-3,-8,-1,-2,2,8,-2,-3,9,-4,5,8,2,-8,-8,-6,-7,3,1,8,-3,1,3,10,-9,-8,4,2,4,10,-2,-2,3,9,-3,7,-7,1,10,4,8,6,10,7,10,5,-4,-3,4,-10,2,5,6,1,-7,-7,-9,-6,9,-2,-3,-2,-5,5,-8,-8,-4,10,-1,6,-6,-3,-6,-5,-6,-5,-5,5,2,1,9,-10,4,-3,-1,-3,3,-3,6,-3,2,-9,-5,-6,8,-6,-9,-10,-6,-8,-3,3,6,5,1,-4,8,-1,2,1,-7,7,-5,8,9,8,6,9,9,-6,4,5,-5,-6,-6,-7,5,-10,8,-4,6,8,-5,-6,3,-7,1,-10,8,3,4,-10,1,-1,-10,7,-9,9,-4,-10,-6,3,-7,-6,-10,3,-7,2,5,-9,8,-4,-3,-1,-10,3,6,-5,-10,1,8,-5,-7,6,-2,-10,3,7,4,2,-1,-10,-2,1,6,3,4,-2,6,-6,3,1,7,-1,-8,-7,-7,-5,3,-2,-7,-6,4,3,-6,-10,-4,-6,-9,-2,-9,5,7,6,5,9,-2,3,3,-5,7,-9,-6,-2,9,3,2,-5,-7,8,-6,4,-4,-3,4,-7,5,2,8,-6,7,-6,-7,-9,-3,-4,6,8,-4,-8,-10,9,-10,7], dtype = "int64")#candidate|5146|(960,)|const|int64
call_5142 = relay.TupleGetItem(func_2128_call(relay.reshape(const_5143.astype('uint8'), [6, 7, 6]), relay.reshape(const_5143.astype('uint8'), [6, 7, 6]), relay.reshape(var_5144.astype('float32'), [36, 10]), relay.reshape(var_5145.astype('float64'), [4, 112]), relay.reshape(const_5146.astype('int64'), [960,]), ), 1)
call_5147 = relay.TupleGetItem(func_2134_call(relay.reshape(const_5143.astype('uint8'), [6, 7, 6]), relay.reshape(const_5143.astype('uint8'), [6, 7, 6]), relay.reshape(var_5144.astype('float32'), [36, 10]), relay.reshape(var_5145.astype('float64'), [4, 112]), relay.reshape(const_5146.astype('int64'), [960,]), ), 1)
func_1632_call = mod.get_global_var('func_1632')
func_1637_call = mutated_mod.get_global_var('func_1637')
var_5154 = relay.var("var_5154", dtype = "int8", shape = (70,))#candidate|5154|(70,)|var|int8
const_5155 = relay.const([4,-5,-6,4,10,2,-8,-1,-6,-3,8,5,-1,-4,3,-7,1,7,4,3,-7,9,1,-4,9,-1,-7,-2,-5,7,-6,-4,8,-6,-3,8,7,-7,9,3,-3,6,-1,10,5,-6,6,9,1,10,-6,6,-8,-10,-8,-5,-9,3,-9,8,4,6,5,-4,1,-10,2,8,3,-7,5,4,-4,6,3,9,9,7,-1,10,-5,-10,-10,-9,8,-6,1,-7,-10,-10,10,-10,5,4,-8,-1,-7,-4,-9,2,10,-2,-9,-5,3,-9,5,1,7,-9,10,-10,10,5,-4,7,-4,-4,-8,-9,-4,-6,-10,-2,-2,1,-10,-10,4,10,-2,-3,-7,-9,-6,8,9,-3,-2,-7,6,8,-1,-8,6,5,6,4,5,-8,2,-10,-1,3,8,8,9,9,6,7,5,2,9,5,-9,-4,-1,3,7,-5,-5,-8,1,-6,-7,1,-6,5,8,9,3,8,8,-5,-5,-2,3,5,-1,3,6,4,-6,7,-1,9,2,9,9,6,6,6,-2,-5,4,3,-9,-1,-5,9,7,-9,7,8,4,2,4,9,-3,-8,-2,8,-7,-6,-9,10,5,4,9,-10,8,3,3,7,-8,-2,8,-10,9,9,5,6,1,3,-2,3,6,1,7,5,2,6,7,5,3,6,5,7,-1,-4,-3,2,-2,-1,10,-6,5,-2,-7,-2,5,8,1,-4,6,-7,4,2,-2,-6,-1,5,-4,2,-8,-4,6,10,9,-10,-1,-6,8,-2,-3,1,3,-3,4,10,2,4,-8,-5,-8,2,4,4,-9,10,-7,7,-8,-8,-6,6,-4,5,-5,-9,-5,-2,-2,-9,-5,3,4,1,-8,6,-7,3,-5,3,7,2,-2,1,3,5,2,1,5,8,10,9,-8,-1,9,2,-8,9,9,6,-1,3,8,-7,-5,-8,9,-6,-10,-10,5,-8,-6,-2,7,10,-8,9,-6,-9,-1,10,4,9,-7,6,10,-2,9,3,4,1,-6,-10,-7,5,-5,8,-3,5,5,-9,-5,3,-8,1,-10,6,3,8,6,-7,-8,-2,1,8,-1,3,9,2,-10,1,-5,6,6,7,-5,1,-9,-4,-2,-8,-1,-9,-7,-10,-1,-7,-2,4,6,8,-6,-7,-3,9,5,-8,-8,-1,-5,-10,-3,-3,-1,-3,-8,10,-1,3,10,-9,7,5,4,8,6,8,-8,-4,-7,8,9,3,9,-4,-6,-5,-2,-10,-6,-8,10,-2,8,-9,-3,2,9,2,1,-6,-2,-2,3,5,-10,-2,10,1,9,2,-7,6,10,-3,-7,-10,1,-5,3,6,2,6,-1,9,6,-2,6,8,-5,8,9,-10,9,-9,-7,8,2,-3,-2,10,2,9,-9,5,-10,-7,1,3,5,4,6,1,-9,-10,-5,-7,6,6,-4,1,-3,5,6,-6,10,2,6,-6,10,-4,-10,-3,-6,2,-7,8,-9,-6,2,5,3,-10,3,-2,3,9,6,10,10,-5,-4,6,5,8,3,-1,-3,5,-10,10,-4,9,-10,5,-10,6,3,-7,6,-8,-1,5,-4,3,-9,7,1,-5,-4,8,1,8,-7,-2,2,-2,-3,-8,-9,-8,3,2,-1,2,5,1,-5,-10,8,5,-4,-3,-4,-3,-2,-9,-8,7,-8,-7,1,1,-1,-8,4,6,-10,6,-2,5,10,8,-9,-7,8,-1,4,-6,-6,-3,-10,10,-10,4,-3,-5,-4,-1,10,1,-2,6,8,-10,-8,3,-1,-8,9,-4,-10,7,4,9,6,3,-2,-5,-10,-3,7,6,10,1,-3,-4,-4,9,9,-1,5,4,-2,8,-3,4,-10,9,4,1,-3,-2,-8,-4,-6,1,-10,1,-3,5,3,-7,10,4,4,-3,2,5,-8,-4,-5,-10,-3,6,-1,3,10,6,4,4,-5,6,-6,-7,9,1,-8,8,1,9,-2,-7,-2,2,2,5,-5,-7,3,7,5,7,-10,-7,8,-4,-8,-5,-3,6,3,5,4,2,5,-3,-9,6,-7,2,-8,-8,-9,-5,-9,10,-2,-1,8,-8,-5,3,-1,-5,9,4,8,-4,-4,-1,-9,5,7,-10,1,8,-8,2,-10,-10,6,6,5,-1,8,3,5,1,-6,-7,-8,5,-5,-7,-5,4,10,-3,2,5,-6,-7,6,2,-8,1,3,-6,-4,-5,-8,10,9,-5], dtype = "int8")#candidate|5155|(840,)|const|int8
call_5153 = relay.TupleGetItem(func_1632_call(relay.reshape(var_5154.astype('int8'), [10, 7, 1]), relay.reshape(const_5155.astype('int8'), [10, 7, 12]), relay.reshape(const_5146.astype('int64'), [960,]), ), 4)
call_5156 = relay.TupleGetItem(func_1637_call(relay.reshape(var_5154.astype('int8'), [10, 7, 1]), relay.reshape(const_5155.astype('int8'), [10, 7, 12]), relay.reshape(const_5146.astype('int64'), [960,]), ), 4)
output = relay.Tuple([uop_5106,call_5113,const_5114,const_5115,call_5128,var_5129,call_5142,const_5143,var_5144,var_5145,const_5146,call_5153,var_5154,const_5155,])
output2 = relay.Tuple([uop_5106,call_5116,const_5114,const_5115,call_5130,var_5129,call_5147,const_5143,var_5144,var_5145,const_5146,call_5156,var_5154,const_5155,])
func_5158 = relay.Function([var_5105,var_5129,var_5144,var_5145,var_5154,], output)
mod['func_5158'] = func_5158
mod = relay.transform.InferType()(mod)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5158_call = mutated_mod.get_global_var('func_5158')
var_5160 = relay.var("var_5160", dtype = "float32", shape = (13, 5, 5))#candidate|5160|(13, 5, 5)|var|float32
var_5161 = relay.var("var_5161", dtype = "float64", shape = (1440,))#candidate|5161|(1440,)|var|float64
var_5162 = relay.var("var_5162", dtype = "float32", shape = (360,))#candidate|5162|(360,)|var|float32
var_5163 = relay.var("var_5163", dtype = "float64", shape = (448,))#candidate|5163|(448,)|var|float64
var_5164 = relay.var("var_5164", dtype = "int8", shape = (70,))#candidate|5164|(70,)|var|int8
call_5159 = func_5158_call(var_5160,var_5161,var_5162,var_5163,var_5164,)
output = call_5159
func_5165 = relay.Function([var_5160,var_5161,var_5162,var_5163,var_5164,], output)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5402 = relay.var("var_5402", dtype = "int64", shape = (2, 8, 8))#candidate|5402|(2, 8, 8)|var|int64
var_5403 = relay.var("var_5403", dtype = "int64", shape = (2, 8, 8))#candidate|5403|(2, 8, 8)|var|int64
bop_5404 = relay.greater(var_5402.astype('bool'), relay.reshape(var_5403.astype('bool'), relay.shape_of(var_5402))) # shape=(2, 8, 8)
uop_5407 = relay.sigmoid(bop_5404.astype('float32')) # shape=(2, 8, 8)
func_1847_call = mod.get_global_var('func_1847')
func_1851_call = mutated_mod.get_global_var('func_1851')
const_5410 = relay.const([8.331080,4.870316,-2.565596,1.833885,5.950917,-2.097577,-2.814017,-1.546151,5.650736,-6.412102,-9.592994,-4.160024,8.010658,-2.491292,2.067207,-9.350684,8.201957,-8.409608,3.569095,-4.808656,-8.047730,-7.569333,-3.834062,-7.428270,-4.172212,-4.693775,0.938912,2.853256,3.199579,4.853001,-8.217328,9.423706,-4.383181,2.218912,0.857100,-0.970127,-0.817672,7.298075,8.201063,1.534500,-3.827275,-1.072196,-9.640857,-3.183772,5.941542,-2.330037,8.653516,-6.593360,-2.594116,0.304009,2.317010,9.504830,-4.009755,-5.334146,0.359915,3.243920,8.928848,3.956002,-8.154750,9.005933,7.500130,5.076601,-5.876852,-7.868259,0.917470,-0.082998,7.183957,-8.291420,-0.329353,5.076937,-2.270131,9.271505,-0.395149,2.472909,-5.635998,4.337407,0.620472,-6.030391,-9.142001,-9.134788,-5.047416,-7.842823,-7.308470,3.254818,-1.956336,-8.797382,-2.153125,-8.260978,-9.423350,8.995147,8.710411,3.580523,8.740615,-6.044002,-8.680384,1.556910,7.953010,8.565476,-7.057271,4.291214,1.474303,-5.231891,3.670718,5.966656,-8.845696,4.657138,7.663537,-0.250695,-2.299707,-6.830239,5.132933,-8.215132,6.201331,7.268569,-0.585292,-1.540398,-8.514457,8.940376,-8.328772,-8.021348,9.234878,-2.446499,-3.187292,0.511486,7.642906,0.123351,7.527799,0.418987,0.674399,0.986537,1.968351,-1.363900,-3.806087,-0.796687,-9.881196,1.635515,-5.169958,-6.531770,4.623652,3.929815,3.318099,2.962592,-1.665536,0.810789,7.582602,-1.255821,3.315257,1.264548,-2.978047,-0.064295,-5.859639,1.992415,3.727815,7.762910,3.267588,6.853264,6.987692,-6.827801,4.011194,-6.590282,-9.575166,-1.209341,3.701718,0.237501,3.818531,-4.180190,3.031180,-7.972249,9.580407,0.663303,-9.341290,4.167176,-3.306750,-3.355461,5.841484,-7.917613,5.989776,1.278233,-2.184494,-6.504410,-6.074078,6.550059,-7.092376,-7.104253,0.908455,3.039350,-2.677738,-2.310237,-1.233310,5.602208,7.373662,0.091444,-4.532540,8.072426,5.327648,-7.497230,-3.679184,9.814977,9.531964,-7.535278,-2.335623,-5.323529,-3.683244,4.848369,4.177861,-2.007486,-1.366856,9.999613,7.572420,-5.204275,7.048918,-3.934633,-1.622665,-4.215234,-8.248268,7.595966,-1.543969,7.960093,-9.168111,4.799971,3.052956,-5.667962,0.194851,-1.111673,-9.852713,9.073699,2.826242,0.557787,-5.407138,2.892786,-6.881813,5.000437,5.123895,8.365717,4.196872,9.729074,-1.897971,-0.276432,-6.322279,-3.260294,9.775916,-7.435982,-5.761516,7.868275,3.973522,3.177221,1.567371,7.477381,2.946161,-5.350751,0.111547,-5.563577,4.052224,-1.395924,1.622725,-1.423539,-4.394468,-0.750911,-0.501186,7.221644,-8.112015,6.691110,6.480191,-2.752318,3.746418,9.757574,9.724349,-5.249857,9.962333,-3.944601,-9.073782,5.723424,8.281065,4.507146,0.429361,2.522027,9.277713,6.701082,6.315350,6.743827,-0.510459,-9.970664,-2.878125,-0.648270,0.750730,2.426042,9.924872,-4.591809,-5.541372,-7.711991,9.899784,9.986074,-4.933615,1.485472,7.840065,-4.755313,-9.496053,6.678525,-0.616416,-8.678533,-2.111900,6.088349,-5.798669,-7.129558,0.958849,2.534663,-0.394364,9.079800,3.818839,3.296154,9.156847,1.560242,-7.362870,8.096574,-3.380897,-6.533809,7.613271,2.740313,2.019511,-0.352555,-1.781436,3.502966,-5.721002,-4.897721,-6.216717,-1.177487,0.809474,0.839888,-8.627872,-3.177953,-4.416008,8.172434,-7.252939,3.804135,-4.848621,-5.600311,5.766167,-6.734028,-8.695194,-9.946519,-8.709663,0.617056,-3.200930,3.899877,4.841569,7.730610,-6.461617,8.222603,3.930273,-4.465841,-1.675486,4.472657,2.125252,8.060496,-1.076730,-7.990196,4.980568,-7.072770,-1.802773,-7.734282,-4.243285,0.070793,9.249140,9.021304,0.608841,-7.874972,7.687726,-5.300303,9.632188,-9.931856,3.771880,-8.749754,-7.659442,-8.937532,-4.011130,-5.245800,-7.400632,9.693760,-1.172656,9.588113,2.258941,3.806706,2.638275,4.716850,-5.253503,-7.686458,-3.759015,-7.901292,9.963954,1.888512,7.004396,-5.725228,7.007506,4.461514,9.785845,7.513799,2.512678,2.728998,-5.659843,8.291679,-9.462175,-1.546348,4.735010,-1.456031,1.227217,-2.359615,3.607381,6.355423,1.958385,5.409968,0.301406,4.714962,5.762473,7.776393,7.652791,-1.436187,-3.212011,-5.294277,2.674150,-5.388978,-5.781199,-2.579865,-1.336138,-8.403198,-4.199306,-7.684756,-4.794406,-5.463868,-9.355211,-6.581798,0.375041,1.031063,7.414384,6.785755,-4.939183,-4.708564,-8.369622,2.934166,-3.454258,-9.589463,9.563774,-9.076071,-3.314692,8.310284,-2.936164,-3.815555,5.537725,4.977804], dtype = "float64")#candidate|5410|(448,)|const|float64
const_5411 = relay.const([-9.891620,-0.172319,-4.101479,8.934261,4.662882,-8.333627,-3.303105,1.400634,1.283552,1.120701,-1.639996,5.365908,-6.037754,-8.472203,1.901300,1.155124,2.022927,2.107056,5.540331,-8.696514,-2.062663,5.821446,9.099228,-2.041875,-3.737738,-6.021822,1.018997,-5.597676,-4.190618,-9.534937,-6.097777,-7.822304,1.416921,-1.946757,-4.446584,-2.419915,7.535578,-4.562421,-8.764407,3.291171], dtype = "float64")#candidate|5411|(40,)|const|float64
var_5412 = relay.var("var_5412", dtype = "int64", shape = (960,))#candidate|5412|(960,)|var|int64
call_5409 = relay.TupleGetItem(func_1847_call(relay.reshape(const_5410.astype('float64'), [4, 14, 8]), relay.reshape(const_5411.astype('float64'), [10, 4]), relay.reshape(var_5412.astype('int64'), [960,]), ), 3)
call_5413 = relay.TupleGetItem(func_1851_call(relay.reshape(const_5410.astype('float64'), [4, 14, 8]), relay.reshape(const_5411.astype('float64'), [10, 4]), relay.reshape(var_5412.astype('int64'), [960,]), ), 3)
uop_5428 = relay.asin(bop_5404.astype('float64')) # shape=(2, 8, 8)
func_3520_call = mod.get_global_var('func_3520')
func_3525_call = mutated_mod.get_global_var('func_3525')
const_5433 = relay.const([[9,-8,4,6,-10,-3,-4,-6,-4,-7,9,8,-10,4,2,-6,4,10,6,7,4,-1,-10,9,4,-3,-3,-2,7,2,-6,2,4,7,-10,8,-6,-4,-3,-2,-9,9,10,-5,-9,-6,-7,6,10,1,-10,8,5,-4,-7,7,-3,-7,10,-10,3,4,4,-9,-3,-8,9,-9,-10,-5,9,-4,-8,7,-5,7,-5,-7,-10,5,9,8,-1,-2]], dtype = "int16")#candidate|5433|(1, 84)|const|int16
var_5434 = relay.var("var_5434", dtype = "int8", shape = (840,))#candidate|5434|(840,)|var|int8
call_5432 = relay.TupleGetItem(func_3520_call(relay.reshape(const_5433.astype('int16'), [6, 7, 2]), relay.reshape(const_5433.astype('int16'), [6, 7, 2]), relay.reshape(var_5434.astype('int8'), [840,]), relay.reshape(call_5409.astype('int64'), [960,]), ), 3)
call_5435 = relay.TupleGetItem(func_3525_call(relay.reshape(const_5433.astype('int16'), [6, 7, 2]), relay.reshape(const_5433.astype('int16'), [6, 7, 2]), relay.reshape(var_5434.astype('int8'), [840,]), relay.reshape(call_5409.astype('int64'), [960,]), ), 3)
func_2128_call = mod.get_global_var('func_2128')
func_2134_call = mutated_mod.get_global_var('func_2134')
const_5453 = relay.const([2,8,-6,-9,-1,-8,10,8,9,-5,-9,8,-4,-10,-8,3,-7,-8,-5,-5,4,5,-9,-9,1,9,-6,-3,3,3,6,-3,-9,8,-8,10,4,3,8,-2,-6,7,9,6,7,3,-5,8,7,-10,7,-4,-5,4,9,-2,-8,-8,-1,1,4,-3,2,5,-5,4,-6,3,-5,5,-5,-10,-6,-4,-3,-6,10,-7,1,2,8,-2,-4,6,-1,5,7,-1,-4,-1,9,-3,9,1,-2,7,-1,-4,3,-6,10,2,-7,-8,7,7,9,5,9,-7,1,1,-5,8,-3,-4,-8,-10,-1,-5,10,-4,-1,6,-7,9,8,-9,-4,-3,-3,-2,7,-3,10,9,-9,8,4,-10,-6,-6,-2,7,3,-3,-9,5,-4,-4,-8,4,-6,1,-6,-10,3,-7,10,-9,4,-9,-8,8,-5,-8,-3,-4,7,-8,6,5,3,-4,-8,8,-6,4,3,6,4,3,-6,-8,-2,-8,-4,10,7,-2,9,-6,7,7,-3,8,-6,-7,-7,9,-1,10,10,-5,-3,3,-9,5,8,-5,-6,10,-3,-8,4,-2,4,4,-9,2,-8,-4,-3,-2,-4,4,2,-5,3,-7,-1,-3,10,-9,-6,3,-6,-8,9,-2,9,-4,-1,5,-2,-10,3,10,-1,-2,-1,-1], dtype = "uint8")#candidate|5453|(252,)|const|uint8
var_5454 = relay.var("var_5454", dtype = "float32", shape = (360,))#candidate|5454|(360,)|var|float32
call_5452 = relay.TupleGetItem(func_2128_call(relay.reshape(const_5453.astype('uint8'), [6, 7, 6]), relay.reshape(const_5453.astype('uint8'), [6, 7, 6]), relay.reshape(var_5454.astype('float32'), [36, 10]), relay.reshape(const_5410.astype('float64'), [4, 112]), relay.reshape(var_5412.astype('int64'), [960,]), ), 0)
call_5455 = relay.TupleGetItem(func_2134_call(relay.reshape(const_5453.astype('uint8'), [6, 7, 6]), relay.reshape(const_5453.astype('uint8'), [6, 7, 6]), relay.reshape(var_5454.astype('float32'), [36, 10]), relay.reshape(const_5410.astype('float64'), [4, 112]), relay.reshape(var_5412.astype('int64'), [960,]), ), 0)
func_1847_call = mod.get_global_var('func_1847')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_5458 = relay.TupleGetItem(func_1847_call(relay.reshape(const_5410.astype('float64'), [4, 14, 8]), relay.reshape(const_5411.astype('float64'), [10, 4]), relay.reshape(var_5412.astype('int64'), [960,]), ), 3)
call_5459 = relay.TupleGetItem(func_1851_call(relay.reshape(const_5410.astype('float64'), [4, 14, 8]), relay.reshape(const_5411.astype('float64'), [10, 4]), relay.reshape(var_5412.astype('int64'), [960,]), ), 3)
output = relay.Tuple([uop_5407,call_5409,const_5410,const_5411,var_5412,uop_5428,call_5432,const_5433,var_5434,call_5452,const_5453,var_5454,call_5458,])
output2 = relay.Tuple([uop_5407,call_5413,const_5410,const_5411,var_5412,uop_5428,call_5435,const_5433,var_5434,call_5455,const_5453,var_5454,call_5459,])
func_5475 = relay.Function([var_5402,var_5403,var_5412,var_5434,var_5454,], output)
mod['func_5475'] = func_5475
mod = relay.transform.InferType()(mod)
mutated_mod['func_5475'] = func_5475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5475_call = mutated_mod.get_global_var('func_5475')
var_5477 = relay.var("var_5477", dtype = "int64", shape = (2, 8, 8))#candidate|5477|(2, 8, 8)|var|int64
var_5478 = relay.var("var_5478", dtype = "int64", shape = (2, 8, 8))#candidate|5478|(2, 8, 8)|var|int64
var_5479 = relay.var("var_5479", dtype = "int64", shape = (960,))#candidate|5479|(960,)|var|int64
var_5480 = relay.var("var_5480", dtype = "int8", shape = (840,))#candidate|5480|(840,)|var|int8
var_5481 = relay.var("var_5481", dtype = "float32", shape = (360,))#candidate|5481|(360,)|var|float32
call_5476 = func_5475_call(var_5477,var_5478,var_5479,var_5480,var_5481,)
output = call_5476
func_5482 = relay.Function([var_5477,var_5478,var_5479,var_5480,var_5481,], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5830 = relay.constdtype = "float32")#candidate|5830|(16, 16, 14)|const|float32
uop_5831 = relay.exp(const_5830.astype('float32')) # shape=(16, 16, 14)
bop_5833 = relay.left_shift(const_5830.astype('uint16'), relay.reshape(uop_5831.astype('uint16'), relay.shape_of(const_5830))) # shape=(16, 16, 14)
uop_5860 = relay.cos(uop_5831.astype('float64')) # shape=(16, 16, 14)
output = relay.Tuple([bop_5833,uop_5860,])
output2 = relay.Tuple([bop_5833,uop_5860,])
func_5863 = relay.Function([], output)
mod['func_5863'] = func_5863
mod = relay.transform.InferType()(mod)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mutated_mod.get_global_var('func_5863')
call_5864 = func_5863_call()
output = call_5864
func_5865 = relay.Function([], output)
mutated_mod['func_5865'] = func_5865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_5917 = relay.TupleGetItem(func_5863_call(), 1)
call_5918 = relay.TupleGetItem(func_5865_call(), 1)
func_3491_call = mod.get_global_var('func_3491')
func_3496_call = mutated_mod.get_global_var('func_3496')
var_5920 = relay.var("var_5920", dtype = "float64", shape = (32,))#candidate|5920|(32,)|var|float64
var_5921 = relay.var("var_5921", dtype = "int32", shape = (24,))#candidate|5921|(24,)|var|int32
const_5922 = relay.const([-3,5,-3,3,6,-8,10,10,1,1,7,-1,-4,6,-6,-8,-5,-4,5,-8,1,-10,3,2,10,-5,7,-3,4,1,-4,3,-10,-8,4,-8,2,-7,9,-1,5,7,-4,4,-2,2,-2,7,-1,8,1,-2,3,-9,1,1,-6,7,-1,-1,-4,8,7,-9,-10,-6,5,3,-9,10,2,5,2,-9,-3,-5,-3,-6,-8,-1,-1,7,-4,4,3,-1,-9,-5,10,-5,6,3,-3,-2,-3,-9,-7,-10,9,6,2,-8,-6,4,-9,-9,1,6,9,4,8,-6,-2,-8,4,2,1,-9,-5,3,3,10,-3,7,4,-4,5,-9,-10,-7,-3,10,-10,-3,3,-8,-7,2,7,-2,1,3,-7,4,-1,10,1,-10,-3,6,6,-4,-4,-2,6,-2,-9,-4,9,-2,10,-6,5,1,-6,4,1,-6,-6,8,2,10,8,8,5,-10,3,3,-10,4,1,8,7,9,-4,-7,10,10,5,-5,-1,3,-9,-1,-1,2,4,6,-8,7,3,-10,5,-10,1,9,8,-3,-10,-5,1,5,-9,-1,7,1,-3,-2,3,9,7,4,-3,2,3,-6,-5,4,-3,3,2,-9,-4,-7,5,1,-5,-7,3,-10,7,3,-9,7,1,-4,-5,9,-6,-6,-2,10,1,-4,7,1,3,5,10,-6,2,-3,2,6,-10,-8,-1,-10,8,-9,1,8,-5,-6,4,7,3,-5,-3,3,-7,-8,1,-1,1,3,-1,5,-3,2,-4,-7,10,-2,-5,8,7,-10,-3,7,-2,-5,-1,-10,3,6,-2,4,7,7,-2,5,3,10,-6,-10,-7,-5,7,-5,-9,8,3,7,10,1,-1,3,-2,7,-10,-8,4,-9,9,1,-4,1,-3,-9,-2,-4,7,-6,10,8,-2,9,2,-7,2,10,7,7,-10,10,7,7,-1,6,8,-1,10,6,-10,4,-1,9,-8,7,-3,1,10,7,-1,-5,4,-1,8,8,-10,-9,9,-6], dtype = "int32")#candidate|5922|(384,)|const|int32
call_5919 = relay.TupleGetItem(func_3491_call(relay.reshape(var_5920.astype('float64'), [2, 8, 2]), relay.reshape(var_5921.astype('int32'), [24,]), relay.reshape(const_5922.astype('int32'), [384,]), ), 1)
call_5923 = relay.TupleGetItem(func_3496_call(relay.reshape(var_5920.astype('float64'), [2, 8, 2]), relay.reshape(var_5921.astype('int32'), [24,]), relay.reshape(const_5922.astype('int32'), [384,]), ), 1)
output = relay.Tuple([call_5917,call_5919,var_5920,var_5921,const_5922,])
output2 = relay.Tuple([call_5918,call_5923,var_5920,var_5921,const_5922,])
func_5941 = relay.Function([var_5920,var_5921,], output)
mod['func_5941'] = func_5941
mod = relay.transform.InferType()(mod)
mutated_mod['func_5941'] = func_5941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5941_call = mutated_mod.get_global_var('func_5941')
var_5943 = relay.var("var_5943", dtype = "float64", shape = (32,))#candidate|5943|(32,)|var|float64
var_5944 = relay.var("var_5944", dtype = "int32", shape = (24,))#candidate|5944|(24,)|var|int32
call_5942 = func_5941_call(var_5943,var_5944,)
output = call_5942
func_5945 = relay.Function([var_5943,var_5944,], output)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_5947 = relay.TupleGetItem(func_5863_call(), 1)
call_5948 = relay.TupleGetItem(func_5865_call(), 1)
func_2480_call = mod.get_global_var('func_2480')
func_2483_call = mutated_mod.get_global_var('func_2483')
const_5950 = relay.const([-8.241293,7.158104,-4.615961,-7.284190,-4.945741,5.142900,-2.822153,-6.985063,5.862126,-1.934138], dtype = "float64")#candidate|5950|(10,)|const|float64
call_5949 = relay.TupleGetItem(func_2480_call(relay.reshape(const_5950.astype('float64'), [5, 2, 1])), 1)
call_5951 = relay.TupleGetItem(func_2483_call(relay.reshape(const_5950.astype('float64'), [5, 2, 1])), 1)
output = relay.Tuple([call_5947,call_5949,const_5950,])
output2 = relay.Tuple([call_5948,call_5951,const_5950,])
func_5960 = relay.Function([], output)
mod['func_5960'] = func_5960
mod = relay.transform.InferType()(mod)
mutated_mod['func_5960'] = func_5960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mutated_mod.get_global_var('func_5960')
call_5961 = func_5960_call()
output = call_5961
func_5962 = relay.Function([], output)
mutated_mod['func_5962'] = func_5962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_5968 = relay.TupleGetItem(func_5960_call(), 0)
call_5969 = relay.TupleGetItem(func_5962_call(), 0)
func_2240_call = mod.get_global_var('func_2240')
func_2245_call = mutated_mod.get_global_var('func_2245')
var_5983 = relay.var("var_5983", dtype = "uint16", shape = (288,))#candidate|5983|(288,)|var|uint16
const_5984 = relay.const([[-3,-1,-6,-10,-2,2,9,9,5,-5,9,10,-3,2,2,-1,7,-1,-8,-7,8,-8,-1,-8,3,9,3,6,2,7,6,-10,7,3,4,6,9,-10,-10,-9,2,-9,-9,-10,-4,6,-2,-10,-10,4,5,6,3,4,-4,10,-1,10,3,3,-8,7,7,-1,-10,-1,-5,9,-4,-3]], dtype = "int8")#candidate|5984|(1, 70)|const|int8
var_5985 = relay.var("var_5985", dtype = "float64", shape = (105,))#candidate|5985|(105,)|var|float64
call_5982 = relay.TupleGetItem(func_2240_call(relay.reshape(var_5983.astype('uint16'), [16, 6, 3]), relay.reshape(const_5984.astype('int8'), [70,]), relay.reshape(var_5985.astype('float64'), [1, 105]), ), 6)
call_5986 = relay.TupleGetItem(func_2245_call(relay.reshape(var_5983.astype('uint16'), [16, 6, 3]), relay.reshape(const_5984.astype('int8'), [70,]), relay.reshape(var_5985.astype('float64'), [1, 105]), ), 6)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_5988 = relay.TupleGetItem(func_5863_call(), 1)
call_5989 = relay.TupleGetItem(func_5865_call(), 1)
output = relay.Tuple([call_5968,call_5982,var_5983,const_5984,var_5985,call_5988,])
output2 = relay.Tuple([call_5969,call_5986,var_5983,const_5984,var_5985,call_5989,])
func_5995 = relay.Function([var_5983,var_5985,], output)
mod['func_5995'] = func_5995
mod = relay.transform.InferType()(mod)
mutated_mod['func_5995'] = func_5995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5995_call = mutated_mod.get_global_var('func_5995')
var_5997 = relay.var("var_5997", dtype = "uint16", shape = (288,))#candidate|5997|(288,)|var|uint16
var_5998 = relay.var("var_5998", dtype = "float64", shape = (105,))#candidate|5998|(105,)|var|float64
call_5996 = func_5995_call(var_5997,var_5998,)
output = call_5996
func_5999 = relay.Function([var_5997,var_5998,], output)
mutated_mod['func_5999'] = func_5999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_6006 = relay.TupleGetItem(func_5960_call(), 1)
call_6007 = relay.TupleGetItem(func_5962_call(), 1)
output = call_6006
output2 = call_6007
func_6009 = relay.Function([], output)
mod['func_6009'] = func_6009
mod = relay.transform.InferType()(mod)
output = func_6009()
func_6010 = relay.Function([], output)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_6066 = relay.TupleGetItem(func_5960_call(), 2)
call_6067 = relay.TupleGetItem(func_5962_call(), 2)
output = relay.Tuple([call_6066,])
output2 = relay.Tuple([call_6067,])
func_6077 = relay.Function([], output)
mod['func_6077'] = func_6077
mod = relay.transform.InferType()(mod)
mutated_mod['func_6077'] = func_6077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mutated_mod.get_global_var('func_6077')
call_6078 = func_6077_call()
output = call_6078
func_6079 = relay.Function([], output)
mutated_mod['func_6079'] = func_6079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6086 = func_6009_call()
call_6087 = func_6009_call()
output = call_6086
output2 = call_6087
func_6092 = relay.Function([], output)
mod['func_6092'] = func_6092
mod = relay.transform.InferType()(mod)
mutated_mod['func_6092'] = func_6092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mutated_mod.get_global_var('func_6092')
call_6093 = func_6092_call()
output = call_6093
func_6094 = relay.Function([], output)
mutated_mod['func_6094'] = func_6094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_6118 = relay.TupleGetItem(func_5960_call(), 0)
call_6119 = relay.TupleGetItem(func_5962_call(), 0)
output = call_6118
output2 = call_6119
func_6133 = relay.Function([], output)
mod['func_6133'] = func_6133
mod = relay.transform.InferType()(mod)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6133_call = mutated_mod.get_global_var('func_6133')
call_6134 = func_6133_call()
output = call_6134
func_6135 = relay.Function([], output)
mutated_mod['func_6135'] = func_6135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6140 = func_6009_call()
call_6141 = func_6009_call()
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_6150 = relay.TupleGetItem(func_5960_call(), 2)
call_6151 = relay.TupleGetItem(func_5962_call(), 2)
output = relay.Tuple([call_6140,call_6150,])
output2 = relay.Tuple([call_6141,call_6151,])
func_6152 = relay.Function([], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
output = func_6152()
func_6153 = relay.Function([], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6234 = func_6009_call()
call_6235 = func_6009_call()
output = relay.Tuple([call_6234,])
output2 = relay.Tuple([call_6235,])
func_6261 = relay.Function([], output)
mod['func_6261'] = func_6261
mod = relay.transform.InferType()(mod)
output = func_6261()
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6286 = func_6009_call()
call_6287 = func_6009_call()
output = relay.Tuple([call_6286,])
output2 = relay.Tuple([call_6287,])
func_6288 = relay.Function([], output)
mod['func_6288'] = func_6288
mod = relay.transform.InferType()(mod)
output = func_6288()
func_6289 = relay.Function([], output)
mutated_mod['func_6289'] = func_6289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_6305 = func_6092_call()
call_6306 = func_6092_call()
output = call_6305
output2 = call_6306
func_6307 = relay.Function([], output)
mod['func_6307'] = func_6307
mod = relay.transform.InferType()(mod)
mutated_mod['func_6307'] = func_6307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6307_call = mutated_mod.get_global_var('func_6307')
call_6308 = func_6307_call()
output = call_6308
func_6309 = relay.Function([], output)
mutated_mod['func_6309'] = func_6309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6315 = func_6009_call()
call_6316 = func_6009_call()
output = call_6315
output2 = call_6316
func_6317 = relay.Function([], output)
mod['func_6317'] = func_6317
mod = relay.transform.InferType()(mod)
mutated_mod['func_6317'] = func_6317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6317_call = mutated_mod.get_global_var('func_6317')
call_6318 = func_6317_call()
output = call_6318
func_6319 = relay.Function([], output)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6133_call = mod.get_global_var('func_6133')
func_6135_call = mutated_mod.get_global_var('func_6135')
call_6328 = func_6133_call()
call_6329 = func_6133_call()
output = relay.Tuple([call_6328,])
output2 = relay.Tuple([call_6329,])
func_6335 = relay.Function([], output)
mod['func_6335'] = func_6335
mod = relay.transform.InferType()(mod)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6335_call = mutated_mod.get_global_var('func_6335')
call_6336 = func_6335_call()
output = call_6336
func_6337 = relay.Function([], output)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6079_call = mutated_mod.get_global_var('func_6079')
call_6400 = relay.TupleGetItem(func_6077_call(), 0)
call_6401 = relay.TupleGetItem(func_6079_call(), 0)
func_1981_call = mod.get_global_var('func_1981')
func_1984_call = mutated_mod.get_global_var('func_1984')
var_6457 = relay.var("var_6457", dtype = "float32", shape = (375,))#candidate|6457|(375,)|var|float32
call_6456 = func_1981_call(relay.reshape(var_6457.astype('float32'), [5, 15, 5]))
call_6458 = func_1981_call(relay.reshape(var_6457.astype('float32'), [5, 15, 5]))
bop_6460 = relay.floor_mod(call_6456.astype('float64'), relay.reshape(var_6457.astype('float64'), relay.shape_of(call_6456))) # shape=(5, 15, 5)
bop_6463 = relay.floor_mod(call_6458.astype('float64'), relay.reshape(var_6457.astype('float64'), relay.shape_of(call_6458))) # shape=(5, 15, 5)
output = relay.Tuple([call_6400,bop_6460,])
output2 = relay.Tuple([call_6401,bop_6463,])
func_6464 = relay.Function([var_6457,], output)
mod['func_6464'] = func_6464
mod = relay.transform.InferType()(mod)
var_6465 = relay.var("var_6465", dtype = "float32", shape = (375,))#candidate|6465|(375,)|var|float32
output = func_6464(var_6465)
func_6466 = relay.Function([var_6465], output)
mutated_mod['func_6466'] = func_6466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6009_call = mod.get_global_var('func_6009')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6511 = func_6009_call()
call_6512 = func_6009_call()
func_2240_call = mod.get_global_var('func_2240')
func_2245_call = mutated_mod.get_global_var('func_2245')
var_6519 = relay.var("var_6519", dtype = "uint16", shape = (288,))#candidate|6519|(288,)|var|uint16
var_6520 = relay.var("var_6520", dtype = "int8", shape = (70,))#candidate|6520|(70,)|var|int8
const_6521 = relay.const([2.992164,-8.329146,-2.777921,-9.730713,-1.032401,-3.458561,-1.970577,6.583108,7.303315,4.992241,-5.427599,-9.476385,4.910604,-2.714300,-3.419388,9.747166,-4.522115,4.642026,6.361561,-7.858095,-2.508182,-5.023175,6.559611,-2.079391,-4.266094,-5.285812,-5.943669,2.433858,-7.637448,-8.998663,8.363958,-3.375688,8.762989,-0.525333,4.506168,4.357466,-5.683903,7.850800,9.517039,-6.145090,3.515597,6.389178,2.357812,1.096213,-0.433929,-9.170545,3.258101,6.460072,6.056202,-2.925438,-3.281295,-2.408272,6.052368,7.480935,6.482828,-1.079431,-3.347186,-3.031514,-9.448095,-7.707280,2.175202,-9.444230,0.596074,9.223173,-2.051758,-9.519283,1.388473,9.973867,-4.020769,-4.931822,-0.848802,-4.511432,-5.970197,-6.415058,9.688377,5.756547,1.934618,9.509012,6.286669,5.134793,-1.639707,9.739838,-4.409918,5.814353,2.622763,-3.857579,-3.671346,-7.626113,8.547761,-9.097067,2.664965,6.555928,7.292540,-7.522023,-1.903921,-3.811490,3.057309,-5.553518,-4.815135,-0.975277,7.556725,2.211247,4.532867,-3.134976,-6.503632], dtype = "float64")#candidate|6521|(105,)|const|float64
call_6518 = relay.TupleGetItem(func_2240_call(relay.reshape(var_6519.astype('uint16'), [16, 6, 3]), relay.reshape(var_6520.astype('int8'), [70,]), relay.reshape(const_6521.astype('float64'), [1, 105]), ), 2)
call_6522 = relay.TupleGetItem(func_2245_call(relay.reshape(var_6519.astype('uint16'), [16, 6, 3]), relay.reshape(var_6520.astype('int8'), [70,]), relay.reshape(const_6521.astype('float64'), [1, 105]), ), 2)
func_6307_call = mod.get_global_var('func_6307')
func_6309_call = mutated_mod.get_global_var('func_6309')
call_6524 = func_6307_call()
call_6525 = func_6307_call()
func_6077_call = mod.get_global_var('func_6077')
func_6079_call = mutated_mod.get_global_var('func_6079')
call_6531 = relay.TupleGetItem(func_6077_call(), 0)
call_6532 = relay.TupleGetItem(func_6079_call(), 0)
output = relay.Tuple([call_6511,call_6518,var_6519,var_6520,const_6521,call_6524,call_6531,])
output2 = relay.Tuple([call_6512,call_6522,var_6519,var_6520,const_6521,call_6525,call_6532,])
func_6542 = relay.Function([var_6519,var_6520,], output)
mod['func_6542'] = func_6542
mod = relay.transform.InferType()(mod)
var_6543 = relay.var("var_6543", dtype = "uint16", shape = (288,))#candidate|6543|(288,)|var|uint16
var_6544 = relay.var("var_6544", dtype = "int8", shape = (70,))#candidate|6544|(70,)|var|int8
output = func_6542(var_6543,var_6544,)
func_6545 = relay.Function([var_6543,var_6544,], output)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6307_call = mod.get_global_var('func_6307')
func_6309_call = mutated_mod.get_global_var('func_6309')
call_6562 = func_6307_call()
call_6563 = func_6307_call()
output = call_6562
output2 = call_6563
func_6573 = relay.Function([], output)
mod['func_6573'] = func_6573
mod = relay.transform.InferType()(mod)
output = func_6573()
func_6574 = relay.Function([], output)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6606 = relay.TupleGetItem(func_6152_call(), 1)
call_6607 = relay.TupleGetItem(func_6153_call(), 1)
func_2172_call = mod.get_global_var('func_2172')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_6611 = relay.const([-5.677771,-4.693290,0.301366,-9.488835,3.971212,-1.948490,2.377282,7.379946,1.162182,0.961548,0.910871,-1.279420,7.403838,1.653052,5.762743,-5.180030,-5.557708,-8.507705,-4.338754,5.537221,5.718985,-8.522269,-7.889959,-2.255608,-4.470220,-6.306657,9.002015,0.381340,9.761103,4.517998,-6.923051,-4.202057,-6.013448,-7.704702,7.505989,8.164274,7.929790,5.132617,8.529362,2.942027,-9.188799,-7.361125,-7.203364,-6.539353,-3.793873,9.871658,3.433117,0.699504,-3.603992,-1.016711,5.000989,-9.758822,9.169526,2.816311,1.896025,-5.162142,-7.893646,-8.992823,6.494535,-7.423373,-7.311249,-2.489472,9.025748,-9.543969,-5.629165,-4.700482,-0.264900,-3.154937,-7.696436,-5.684795,3.383473,3.238587,1.403406,-7.331300,-4.286837,-6.439411,-7.425166,3.247265,8.185391,0.239312,-3.164258,7.690134,-7.934994,6.031698,6.958977,8.165984,-6.942121,7.613769,-2.174260,-1.573921,-1.064532,5.013290,-0.961773,1.488148,-6.544571,5.442829,-8.421521,6.321039,-6.699123,4.305174,3.873783,-6.209905,-3.459104,4.663771,-9.990667,2.014542,4.054012,6.390582,8.303687,7.016765,-3.162792,9.903946,3.022501,4.351082,2.138127,-6.263366,2.706809,-5.907050,-2.009518,-6.845596,-1.633622,1.768493,7.047735,5.177862,3.545816,-0.784044,0.351988,-6.210860,0.535894,-9.874093,2.818442,0.075057,-0.227245,-7.375102,6.056370,0.735459,-0.767569,1.877291,1.512331,5.640413,6.766128,-1.582380,1.604101,-0.104588,3.141505,6.508304,1.675439,7.405972,-9.685277,-3.314476,8.036612,1.996279,-0.088383,2.422448,2.478528,9.802818,-4.952919,8.619694,-8.568160,-8.726847,7.219295,-4.638367,-4.814963,-0.924253,2.602522,9.839700,-7.683682,2.184572,9.795286,-8.993963,0.658840,-9.127047,-9.677627,3.447558,1.006882,-8.352769,2.724437,7.668453,-2.886794,-1.390385,-6.690258,-5.841435,8.595822,3.912411,-1.777295,0.144080,2.154127,-3.878420,-2.523736,1.122360,1.681661,-4.737472,-3.110492,4.109300,1.131487,1.961824,3.565309,-6.858630,7.276688,7.424515,9.780861,6.727506,-8.667467,-7.489059,9.627481,-8.047937,1.731255,1.566417,-9.749846,6.213390,-1.372711,6.786525,-5.209558,-8.070566,-9.206949,-4.290073,9.239087,-9.608785,3.254076,-5.035066,-4.331058,4.936445,8.884032,-8.317550,9.306066,1.604508,-7.014918,3.483570,-2.574313,-2.710358,-1.284452,-7.391921,-2.161779,0.827571,-6.800378,-0.058359,3.235321,-0.705898,-8.509555,-4.282849,-4.554958,4.006520,9.275299,-1.977859,7.640682,-9.981597,1.302745,2.357689,5.280279,7.910517,-3.562422,9.848379,8.586671,-4.885518,-4.862050,-6.670564,-7.523872,4.104293,-7.196526,7.080576,-0.330283,4.163248,-6.241652,0.786517,-0.263333,6.965296,-3.684857,-0.533394,8.477255,5.227057,2.519217,-7.638829,1.186988,2.948159,9.586858,6.013584,-1.894155,6.520226,7.472692,4.577900,9.256268,-6.910488,9.610856,-8.997619,9.605227,-2.055547,0.646734,-2.115832,-4.604050,-9.803942,-3.092007,8.699440,1.535560,-8.587919,7.884243,-4.479927,-8.971701,-3.557819,2.927100,-3.218592,-5.947791,7.439101,-0.105612,-1.168021,-3.707121,-2.708998,2.524794,0.327625,6.192725,6.356405,0.415536,3.762188,4.659420,0.287306,-1.436059,8.260641,-7.793675,-2.900580,2.013997,6.968814,-7.252576,-2.438295,8.864473,-9.297613,3.018939,8.015385,5.195209,9.694745,-7.719802,8.518331,-9.860058,0.246985,3.282884,6.293916,3.181383,-7.485894,5.863921,1.843958,3.253272,7.045320,3.951814,0.415588,5.142803,2.328863,-4.098159,4.980215,-5.974480,1.872339,-6.286311,-9.456158,-5.153009,0.531538,1.154251,-7.114914,-3.582378,-7.827039,2.927234,-4.106635,-4.179705,-1.506829,-6.246054,0.391088,9.451113,5.260538,-1.272869,5.159509,-4.472253,-6.044901,0.978045,-7.567693,-2.560183,3.249280,6.149800,-7.601177,-7.794861,-4.208298,-5.338385,2.615834,-4.861164,-5.156625,-5.430428,4.513966,-0.131566,-3.618616,6.184163,-8.118056,6.839528,7.114572,2.309100,-9.581420,-8.340277,5.495164,7.513079,-2.663986,7.003498,-7.449965,-1.028600,-5.725145,6.737129,-4.299346,-4.152657,-0.163745,1.164617,-8.287692,2.435668,-4.130297,8.796899,4.064565,-6.548489,-4.589233,-0.643232,0.228350,5.622618,2.578138,-4.190589,2.388307,-6.624675,3.160744,8.642807,8.547815,-1.859193,-9.449401,3.094171,-7.918363,-6.044616,0.040329,2.326871,8.260583,-1.821889,6.378932,2.545709,1.795096,-5.500829,4.240517,-1.463943,5.446585,-7.603887,-1.741502,2.312651,3.488005,-5.784614,-5.582235,5.281382,-0.264936,-1.259700,-2.197452,-0.668931,-1.460239,-9.202162,-2.841087,-8.079523,-2.774950,9.882613,-5.280390,7.893569,-4.268321,-1.179086,-8.675565,9.402756,3.572124,-3.366294,7.108698,-7.534647,-7.173808,9.545801,7.301051,-5.519424,-1.781340,9.947301,-0.780110,-2.227985,-1.969868,5.895697,-6.518146,5.296966,-9.723502,1.893935,-4.486568,3.863197,9.311027,3.621675,-4.979716,-4.535484,7.652940,5.070694,-8.882833,2.343111,-4.522960,0.411314,9.153270,5.024709,2.664368,9.835226,-3.083259,-1.713624,6.199441,-2.770354,9.018721,-9.903601,-8.907911,-8.165232,2.427860,8.229738,-3.244035,-6.189147,5.041098,4.893419,-9.614119,-3.909594,-9.084058,-7.858978,-5.344837,1.874369,3.779787,9.800750,-4.803894,0.330957,4.879717,0.375913,1.703859,8.021888,5.184245,3.235160,6.047966,-1.462266,-9.363530,7.971236,-7.772734,-6.726191,-2.058804,4.010827,1.523432,-2.423131,-3.690950,-2.729402,0.779846,-5.562735,6.936741,-1.310758,-1.179854,-9.941437,-2.279123,9.253931,-6.303795,-6.919982,8.824856,0.447409,-3.654316,6.027148,-5.659293,4.516094,4.411223,-2.772836,0.960673,5.648617,-8.805310,6.030685,0.845137,6.081579,-8.380782,-8.586595,8.868665,0.223976,9.288337,-2.514708,-3.966741,6.432309,-8.139462,-8.921290,6.149304,4.950023,9.713525,-8.625235,4.804195,8.648702,8.178720,-5.575618,4.674241,1.208649,-1.330460,-9.126729,2.414300,4.607484,-7.299695,5.965898,7.905622,1.369275,8.586413,-2.181267,4.692480,7.898803,4.005614,2.640495,6.488706,-6.583901,9.061601,-3.446879,-7.308518,-9.807771,-2.159423,-7.355122,-7.160712,-0.035484,2.096098,-1.675827,-4.895298,-8.231230,6.140975,2.719781,-9.172472,0.264244,-5.822441,-3.499516,4.883152,3.381718,-7.012294,9.432156,3.961268,5.657879,-8.298032,7.123204,4.565799,2.492174,-5.202868,7.279611,-4.141507,-8.528999,-7.166179,6.508258,7.958396,6.852729,8.769847,-2.072469,6.881024,0.670512,8.398069,-8.065988,-7.281134,-1.769173,-7.005144,9.342803,-3.238154,-4.568421,-2.069444,-9.762728,-1.477466,-7.779505,-1.720022,0.219747,-7.952433,-6.693684,8.624169,-2.656498,-0.789899,-2.528630,-1.416553,3.448400,7.362635,6.570103,3.854972,3.275593,-0.581455,9.828405,-4.917079,-2.871073,-2.925044,5.059438,4.974651,6.226258,-7.028610,3.475725,-1.338727,3.569220,-0.032732,2.937146,-1.854618,3.315432,-9.794119,7.328609,6.710473,8.325957,-4.060858,-1.012594,-2.331526,9.446474,5.010152,4.842419,0.342022,-9.497057,-4.912923,-5.893950,-6.490226,6.049338,-3.637261,-5.872152,-1.440340,7.154667,-0.031553,-5.426927,-4.018510,0.582807,-0.992381,7.354905,4.208179,5.475028,4.645366,-3.932398,-9.373635,2.657828,-4.437532,-3.321872,0.829405,-6.897426,3.321731,6.810661,-6.468265,-6.350548,0.398740,4.443312,7.111760,-0.446572,-4.684963,-1.845367,-0.887031,3.149418,7.841078,6.619755,-0.487111,-3.680286,6.403007,2.421564,-4.187094,-3.750038,6.909984,-8.653719,9.279734,1.024051,2.067036,-6.232945,0.914611,1.384597,8.149938,-4.067286,-6.302663,-9.244421,-6.066259,5.374537,7.293706,-1.906577,4.237415,7.230161,-0.334802,-9.144219,-5.755846,5.495667,4.924138,1.154911,-0.919190,-8.176120,-1.901429,-2.923158,-6.738690,-0.261326,5.358618,-2.043429,6.346798,7.334742,-9.603998,-8.514784,-8.227518,0.231822,-8.655089,3.519429,-9.762439,3.822835,-0.426550,7.502359,1.481766,-6.451301,-6.117665,-3.808333,-4.366166,6.558015,8.109630,9.507206,-0.881594,1.866909,6.642637,8.685809,-0.463133,7.327338,-8.960143], dtype = "float64")#candidate|6611|(792,)|const|float64
call_6610 = relay.TupleGetItem(func_2172_call(relay.reshape(const_6611.astype('float64'), [11, 9, 8])), 0)
call_6612 = relay.TupleGetItem(func_2174_call(relay.reshape(const_6611.astype('float64'), [11, 9, 8])), 0)
output = relay.Tuple([call_6606,call_6610,const_6611,])
output2 = relay.Tuple([call_6607,call_6612,const_6611,])
func_6615 = relay.Function([], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
mutated_mod['func_6615'] = func_6615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6615_call = mutated_mod.get_global_var('func_6615')
call_6616 = func_6615_call()
output = call_6616
func_6617 = relay.Function([], output)
mutated_mod['func_6617'] = func_6617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6634 = relay.TupleGetItem(func_6152_call(), 0)
call_6635 = relay.TupleGetItem(func_6153_call(), 0)
func_6573_call = mod.get_global_var('func_6573')
func_6574_call = mutated_mod.get_global_var('func_6574')
call_6653 = func_6573_call()
call_6654 = func_6573_call()
func_4364_call = mod.get_global_var('func_4364')
func_4367_call = mutated_mod.get_global_var('func_4367')
var_6658 = relay.var("var_6658", dtype = "float64", shape = (1440,))#candidate|6658|(1440,)|var|float64
call_6657 = relay.TupleGetItem(func_4364_call(relay.reshape(var_6658.astype('float64'), [9, 10, 16])), 1)
call_6659 = relay.TupleGetItem(func_4367_call(relay.reshape(var_6658.astype('float64'), [9, 10, 16])), 1)
func_710_call = mod.get_global_var('func_710')
func_713_call = mutated_mod.get_global_var('func_713')
const_6686 = relay.const(9, dtype = "int64")#candidate|6686|()|const|int64
var_6687 = relay.var("var_6687", dtype = "int64", shape = (960,))#candidate|6687|(960,)|var|int64
call_6685 = relay.TupleGetItem(func_710_call(relay.reshape(const_6686.astype('int64'), []), relay.reshape(var_6687.astype('int64'), [16, 15, 4]), ), 0)
call_6688 = relay.TupleGetItem(func_713_call(relay.reshape(const_6686.astype('int64'), []), relay.reshape(var_6687.astype('int64'), [16, 15, 4]), ), 0)
func_4364_call = mod.get_global_var('func_4364')
func_4367_call = mutated_mod.get_global_var('func_4367')
call_6706 = relay.TupleGetItem(func_4364_call(relay.reshape(call_6657.astype('float64'), [9, 10, 16])), 0)
call_6707 = relay.TupleGetItem(func_4367_call(relay.reshape(call_6657.astype('float64'), [9, 10, 16])), 0)
output = relay.Tuple([call_6634,call_6653,call_6657,var_6658,call_6685,const_6686,var_6687,call_6706,])
output2 = relay.Tuple([call_6635,call_6654,call_6659,var_6658,call_6688,const_6686,var_6687,call_6707,])
func_6717 = relay.Function([var_6658,var_6687,], output)
mod['func_6717'] = func_6717
mod = relay.transform.InferType()(mod)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6717_call = mutated_mod.get_global_var('func_6717')
var_6719 = relay.var("var_6719", dtype = "float64", shape = (1440,))#candidate|6719|(1440,)|var|float64
var_6720 = relay.var("var_6720", dtype = "int64", shape = (960,))#candidate|6720|(960,)|var|int64
call_6718 = func_6717_call(var_6719,var_6720,)
output = call_6718
func_6721 = relay.Function([var_6719,var_6720,], output)
mutated_mod['func_6721'] = func_6721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6133_call = mod.get_global_var('func_6133')
func_6135_call = mutated_mod.get_global_var('func_6135')
call_6742 = func_6133_call()
call_6743 = func_6133_call()
output = relay.Tuple([call_6742,])
output2 = relay.Tuple([call_6743,])
func_6759 = relay.Function([], output)
mod['func_6759'] = func_6759
mod = relay.transform.InferType()(mod)
mutated_mod['func_6759'] = func_6759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mutated_mod.get_global_var('func_6759')
call_6760 = func_6759_call()
output = call_6760
func_6761 = relay.Function([], output)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6261_call = mod.get_global_var('func_6261')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_6805 = relay.TupleGetItem(func_6261_call(), 0)
call_6806 = relay.TupleGetItem(func_6262_call(), 0)
func_710_call = mod.get_global_var('func_710')
func_713_call = mutated_mod.get_global_var('func_713')
const_6808 = relay.const(-7, dtype = "int64")#candidate|6808|()|const|int64
var_6809 = relay.var("var_6809", dtype = "int64", shape = (960,))#candidate|6809|(960,)|var|int64
call_6807 = relay.TupleGetItem(func_710_call(relay.reshape(const_6808.astype('int64'), []), relay.reshape(var_6809.astype('int64'), [16, 15, 4]), ), 0)
call_6810 = relay.TupleGetItem(func_713_call(relay.reshape(const_6808.astype('int64'), []), relay.reshape(var_6809.astype('int64'), [16, 15, 4]), ), 0)
output = relay.Tuple([call_6805,call_6807,const_6808,var_6809,])
output2 = relay.Tuple([call_6806,call_6810,const_6808,var_6809,])
func_6811 = relay.Function([var_6809,], output)
mod['func_6811'] = func_6811
mod = relay.transform.InferType()(mod)
var_6812 = relay.var("var_6812", dtype = "int64", shape = (960,))#candidate|6812|(960,)|var|int64
output = func_6811(var_6812)
func_6813 = relay.Function([var_6812], output)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6335_call = mod.get_global_var('func_6335')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6823 = relay.TupleGetItem(func_6335_call(), 0)
call_6824 = relay.TupleGetItem(func_6337_call(), 0)
var_6831 = relay.var("var_6831", dtype = "float64", shape = (16, 16, 14))#candidate|6831|(16, 16, 14)|var|float64
bop_6832 = relay.not_equal(call_6823.astype('bool'), relay.reshape(var_6831.astype('bool'), relay.shape_of(call_6823))) # shape=(16, 16, 14)
bop_6835 = relay.not_equal(call_6824.astype('bool'), relay.reshape(var_6831.astype('bool'), relay.shape_of(call_6824))) # shape=(16, 16, 14)
func_6335_call = mod.get_global_var('func_6335')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6838 = relay.TupleGetItem(func_6335_call(), 0)
call_6839 = relay.TupleGetItem(func_6337_call(), 0)
output = relay.Tuple([bop_6832,call_6838,])
output2 = relay.Tuple([bop_6835,call_6839,])
func_6840 = relay.Function([var_6831,], output)
mod['func_6840'] = func_6840
mod = relay.transform.InferType()(mod)
mutated_mod['func_6840'] = func_6840
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6841 = relay.var("var_6841", dtype = "float64", shape = (16, 16, 14))#candidate|6841|(16, 16, 14)|var|float64
func_6840_call = mutated_mod.get_global_var('func_6840')
call_6842 = func_6840_call(var_6841)
output = call_6842
func_6843 = relay.Function([var_6841], output)
mutated_mod['func_6843'] = func_6843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6872 = relay.var("var_6872", dtype = "uint64", shape = (5, 10, 1))#candidate|6872|(5, 10, 1)|var|uint64
const_6873 = relay.const([[[8,7,-7,-1,10,-3,-9,-2],[10,6,9,-3,6,-5,4,4],[9,1,6,4,-5,9,-4,2],[6,-1,-7,-7,10,4,5,5],[1,-9,-5,-3,4,6,-4,9],[-8,6,-5,-6,6,7,10,-5],[-8,-10,-9,-5,6,8,10,1],[-8,-3,1,-5,1,-10,4,4],[10,-4,8,10,9,-3,5,-6],[4,-3,-9,3,10,3,-1,-5]],[[10,1,-9,1,1,6,9,-9],[3,7,2,-4,-7,8,3,-10],[3,10,-2,-9,-6,-1,8,7],[5,5,-7,-2,5,10,-5,8],[2,1,8,9,6,-8,-9,8],[-2,3,-2,-2,7,5,-4,2],[-3,-2,-3,-5,-10,-5,-2,4],[8,1,-2,-8,-7,-3,-4,-9],[-7,7,1,-9,9,-1,-7,-4],[4,-4,10,-7,3,-8,-2,5]],[[7,9,8,-8,-2,-9,-7,5],[-10,-8,-10,-7,-3,-3,1,4],[4,5,-3,-10,-5,-5,3,4],[8,-6,-4,-3,-8,-4,4,9],[5,-9,-9,3,-9,-6,6,-8],[1,3,6,4,2,-7,10,-4],[9,1,-4,4,3,-8,10,-5],[3,-8,-6,5,2,4,-5,7],[4,4,4,-3,-9,-8,-8,-10],[5,-10,-10,-8,-6,-4,-1,-8]],[[9,-2,9,-10,6,-7,-4,-7],[-7,-9,3,-9,10,-1,2,-5],[-3,-4,4,-1,3,-9,7,6],[-3,2,2,5,5,-2,-7,-10],[8,3,7,6,-3,8,9,5],[1,-5,9,7,-8,-10,10,7],[3,1,5,-1,10,-10,5,10],[5,1,9,-5,-8,4,-7,5],[-1,2,-4,6,-4,5,-4,-7],[2,10,-7,8,3,3,-5,10]],[[9,-3,4,-8,-6,8,-8,6],[5,3,2,-7,-5,5,-3,5],[-6,4,6,6,3,-1,-1,4],[4,5,-9,10,-5,4,-9,-7],[-7,-3,-2,-6,-7,7,3,-3],[7,2,-2,-1,-9,-4,-6,-3],[3,10,9,10,3,5,9,5],[-5,3,1,-6,-3,-9,3,-3],[-2,-10,1,8,-7,1,8,-3],[3,2,-2,-4,-9,3,9,-8]]], dtype = "uint64")#candidate|6873|(5, 10, 8)|const|uint64
bop_6874 = relay.not_equal(var_6872.astype('bool'), const_6873.astype('bool')) # shape=(5, 10, 8)
func_1926_call = mod.get_global_var('func_1926')
func_1930_call = mutated_mod.get_global_var('func_1930')
var_6883 = relay.var("var_6883", dtype = "int32", shape = (24,))#candidate|6883|(24,)|var|int32
var_6884 = relay.var("var_6884", dtype = "int32", shape = (384,))#candidate|6884|(384,)|var|int32
call_6882 = func_1926_call(relay.reshape(var_6883.astype('int32'), [4, 6, 1]), relay.reshape(var_6884.astype('int32'), [4, 6, 16]), )
call_6885 = func_1926_call(relay.reshape(var_6883.astype('int32'), [4, 6, 1]), relay.reshape(var_6884.astype('int32'), [4, 6, 16]), )
func_6573_call = mod.get_global_var('func_6573')
func_6574_call = mutated_mod.get_global_var('func_6574')
call_6886 = func_6573_call()
call_6887 = func_6573_call()
output = relay.Tuple([bop_6874,call_6882,var_6883,var_6884,call_6886,])
output2 = relay.Tuple([bop_6874,call_6885,var_6883,var_6884,call_6887,])
func_6888 = relay.Function([var_6872,var_6883,var_6884,], output)
mod['func_6888'] = func_6888
mod = relay.transform.InferType()(mod)
mutated_mod['func_6888'] = func_6888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6888_call = mutated_mod.get_global_var('func_6888')
var_6890 = relay.var("var_6890", dtype = "uint64", shape = (5, 10, 1))#candidate|6890|(5, 10, 1)|var|uint64
var_6891 = relay.var("var_6891", dtype = "int32", shape = (24,))#candidate|6891|(24,)|var|int32
var_6892 = relay.var("var_6892", dtype = "int32", shape = (384,))#candidate|6892|(384,)|var|int32
call_6889 = func_6888_call(var_6890,var_6891,var_6892,)
output = call_6889
func_6893 = relay.Function([var_6890,var_6891,var_6892,], output)
mutated_mod['func_6893'] = func_6893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_6895 = relay.TupleGetItem(func_5960_call(), 1)
call_6896 = relay.TupleGetItem(func_5962_call(), 1)
output = relay.Tuple([call_6895,])
output2 = relay.Tuple([call_6896,])
func_6901 = relay.Function([], output)
mod['func_6901'] = func_6901
mod = relay.transform.InferType()(mod)
output = func_6901()
func_6902 = relay.Function([], output)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6573_call = mod.get_global_var('func_6573')
func_6574_call = mutated_mod.get_global_var('func_6574')
call_6951 = func_6573_call()
call_6952 = func_6573_call()
output = call_6951
output2 = call_6952
func_6960 = relay.Function([], output)
mod['func_6960'] = func_6960
mod = relay.transform.InferType()(mod)
output = func_6960()
func_6961 = relay.Function([], output)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7039 = relay.var("var_7039", dtype = "float32", shape = (10, 1, 5))#candidate|7039|(10, 1, 5)|var|float32
uop_7040 = relay.erf(var_7039.astype('float32')) # shape=(10, 1, 5)
output = relay.Tuple([uop_7040,])
output2 = relay.Tuple([uop_7040,])
func_7042 = relay.Function([var_7039,], output)
mod['func_7042'] = func_7042
mod = relay.transform.InferType()(mod)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7043 = relay.var("var_7043", dtype = "float32", shape = (10, 1, 5))#candidate|7043|(10, 1, 5)|var|float32
func_7042_call = mutated_mod.get_global_var('func_7042')
call_7044 = func_7042_call(var_7043)
output = call_7044
func_7045 = relay.Function([var_7043], output)
mutated_mod['func_7045'] = func_7045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_7057 = relay.TupleGetItem(func_5863_call(), 1)
call_7058 = relay.TupleGetItem(func_5865_call(), 1)
var_7079 = relay.var("var_7079", dtype = "float64", shape = (16, 16, 14))#candidate|7079|(16, 16, 14)|var|float64
bop_7080 = relay.power(call_7057.astype('float64'), relay.reshape(var_7079.astype('float64'), relay.shape_of(call_7057))) # shape=(16, 16, 14)
bop_7083 = relay.power(call_7058.astype('float64'), relay.reshape(var_7079.astype('float64'), relay.shape_of(call_7058))) # shape=(16, 16, 14)
bop_7084 = relay.less_equal(var_7079.astype('bool'), relay.reshape(call_7057.astype('bool'), relay.shape_of(var_7079))) # shape=(16, 16, 14)
bop_7087 = relay.less_equal(var_7079.astype('bool'), relay.reshape(call_7058.astype('bool'), relay.shape_of(var_7079))) # shape=(16, 16, 14)
output = relay.Tuple([bop_7080,bop_7084,])
output2 = relay.Tuple([bop_7083,bop_7087,])
func_7088 = relay.Function([var_7079,], output)
mod['func_7088'] = func_7088
mod = relay.transform.InferType()(mod)
mutated_mod['func_7088'] = func_7088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7089 = relay.var("var_7089", dtype = "float64", shape = (16, 16, 14))#candidate|7089|(16, 16, 14)|var|float64
func_7088_call = mutated_mod.get_global_var('func_7088')
call_7090 = func_7088_call(var_7089)
output = call_7090
func_7091 = relay.Function([var_7089], output)
mutated_mod['func_7091'] = func_7091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_7108 = func_6092_call()
call_7109 = func_6092_call()
func_2742_call = mod.get_global_var('func_2742')
func_2744_call = mutated_mod.get_global_var('func_2744')
const_7121 = relay.const([-6.801577,-9.534557,6.088625,2.948523,-7.154791,2.289410,9.964210,7.599201,-4.376685,-9.274186,1.948732,8.533122,8.016513,-5.372336,-9.346047,9.405041,1.157593,-7.640342,7.544888,-4.178885,9.404502,7.636575,-3.213215,-8.636711,0.792730,1.386353,3.406269,9.716407,0.797589,8.477059,1.249366,-1.598278,5.683932,5.337614,-8.622095,-9.557607,-2.431115,-7.526776,5.800456,2.119422,8.038066,0.745408,0.475730,6.595796,-4.158123,4.063593,-0.614077,-6.340781,-7.986846,-6.783974,-8.576984,-2.070484,6.565928,6.963974,-2.252860,8.344671,6.489541,-9.457207,9.029018,5.562232,-1.347189,-8.691795,-6.431815,-3.740389,-5.892510,3.593977,-2.759466,1.915208,-8.877163,-3.955418,-7.137272,-2.953372,-7.484287,-4.148401,2.268682,-7.068291,-9.753904,-5.400678,8.183123,9.773263,3.661251,-2.956895,5.196431,0.527616,-6.121826,-3.771555,5.160703,-1.065398,5.969609,-7.482404,-0.484744,-1.270568,6.252502,6.979758,-1.298480,-0.540319,8.761746,4.605461,9.465491,-2.833162,-2.074318,-2.909142,-8.326348,7.271775,4.278155,-4.720252,-5.056830,1.621104,8.880219,5.146318,1.027528,1.956737,-3.977352,4.806217,-0.445597,-9.087966,-5.551570,-6.327516,3.405433,-1.811817,6.748533,9.063033,-1.488239,5.977276,6.098149,9.255043,5.681221,-6.790264,7.802992,9.228280,5.321534,-9.576230,-5.672887,-1.571272,-2.412037,-9.942532,0.665014,-8.599097,-9.272264,0.007244,-0.857752,3.305064,-9.744663,1.431886,1.098704,3.906160,-4.642744,4.464896,-7.859551,0.672256,-6.507422,7.095055,8.474354,5.728927,5.339098,9.939644,9.444296,1.879005,-9.499768,3.596319,5.764534,6.892081,-4.141026,-0.009151,-1.308900,-7.713914,-6.963625,3.289071,7.331429,6.131296,3.471164,-0.665582,8.594918,-0.074192,-6.212051,-9.083084,-7.920328,-5.644429,-8.521787,-8.383222,-8.903012,0.415075,-0.223867,-9.065779,-4.501004,-2.461698,-9.047909,-3.623322,6.412285,-5.880467,5.337317,4.053496,-3.114451,-8.331018,8.743759,0.019428,9.541660,-0.534171,1.382382,1.606347,-6.254436,-5.396521,-1.845928,8.744021,2.190732,-6.542744,-7.326212,9.372274,4.263219,2.596211,-2.269953,-1.555758,1.419697,7.295190,7.518767,-4.962219,-2.708918,-4.549495,-2.641465,-3.227954,4.429036,-7.040463,1.194949,-2.272918,4.306841,0.198255,2.592197,-8.176708,-1.755797,6.377719,-5.013115,3.339486,-2.198176,-4.447830,9.137907,3.295314,8.055062,-9.981235,8.729631,1.421527,-2.503823,-7.404952,-3.073783,3.810358,-9.912971,-6.043969,-6.212008,8.531094,6.305052,3.531259,9.026059,-1.651732,-2.972502,4.892365,7.177524,6.830964,3.588474,7.942047,-0.108447,-5.051999,-4.585095,9.244941,-6.669575,6.162118,-4.870636,8.628100,4.717334,-0.078633,-1.846722,8.640117,-6.301247,-3.956528,-7.594007,0.200413,-1.217068,2.382431,-0.159540,0.534546,-2.195462,8.038720,-6.488783,-8.262806,-9.456863,7.574168,-3.439399,-4.403518,2.843947,-7.021451,5.035558,-0.810348,1.877466,-3.563224,6.926513,-9.645148,-7.687827,-3.417409,-9.020638,2.519286,-8.787639,-6.414907,1.336196,9.811041,5.142556,5.707511,-4.325969,-2.377592,7.412721,2.615472,-9.882615,-6.126437,7.935303,1.055581,1.945657,-0.684846,-1.866107,-5.775526,-5.564448,-9.388099,4.115006,-2.114553,-2.635119,8.285080,6.468554,-8.525395,3.683147,-5.210843,9.021347,-0.561007,-4.160105,-5.453967,3.860012,4.091468,1.402197,5.179914,2.524358,-3.870250,-3.632925,5.063118,-1.373237,-8.077911,5.073881,6.521547,-3.923000,7.144668,-7.430821,5.984122,4.179363,3.930159,8.190961,7.790775,-3.505718,-3.180805,-3.982545,-2.366256,3.143235,-3.585048,-2.622247,8.555210,4.606328,6.059791,5.787102,-0.810013,5.252928,0.993938,-9.499519,4.579882,-1.810077,-6.808026,-8.033233,2.320266,5.694066,-9.493191,3.906658,-3.371126,-8.261838,8.352800,2.264259,-9.306042,6.511078,0.581218,8.960466,8.583244,-8.692503,-4.390128,-2.439345,-1.822950,5.385309,7.643483,-2.769247,4.229136,-7.583351,-0.005165,-8.925609,-9.239871,-0.025177,-0.781720,4.776561,0.071216,1.397955,-0.951900,-9.732440,4.239150,1.431417,-5.234602,-6.434011,-5.673327,-0.376827,-7.953917,-9.264377,6.217622,-3.103879,-7.642614,3.871854,5.967985,5.769412,-3.492126,-9.586421,8.884563,5.060654,-6.219467,8.995503,-5.570918,9.206804,0.840592,6.532253,9.520468,-4.854141,3.968556,8.004892,-7.056310,-6.708246,-7.710888,-7.439354,-3.750858,-2.132773,5.459097,-3.077511,9.361355,1.253530,6.109567,5.560611,-2.180995,-6.543423,3.025975,1.716537,-5.967966,1.723889,-2.280717,-8.913130,6.380512,4.169220,-1.892584,-1.318343,-9.049522,-5.821988,-4.174090,-2.888196,8.214240,5.306378,-2.842136,-6.008328,-3.367259,-4.359702,0.729848,-2.740045,1.320437,-5.510638,0.746761,7.910517,-9.400222,9.868136,-1.959629,0.716681,-3.451780,-7.743393,3.543821,8.587637,-4.198059,6.026257,-7.302954,-5.813104,7.392439,3.865253,5.467958,-8.115454,6.231861,7.440521,7.033126,8.583122,1.381811,3.320947,8.594059,-0.302399,-3.548553,1.274548,8.049704,-3.509705,-3.823790,6.594257,-9.926162,5.294357,0.825468,3.185955,-4.889752,-2.887196,4.045691,-3.664693,-2.501961,-2.989419,-6.374445,0.407117,-2.416093,8.757870,-2.957902,-6.370028,-6.914731,-8.268222,-4.840169,4.221487,-0.073288,-6.058844,5.141994,-3.672371,-6.233469,-0.933221,8.646830,-2.068981,6.782468,-7.453373,3.839191,-6.788271,9.018977,0.248625,3.761158,-5.694003,8.937415,6.617742,0.477633,-4.546302,-5.872633,0.441481,6.993456,3.436060,4.255200,-0.652339,2.433221,-4.167850,4.942143,-6.456253,-3.966352,-5.756052,-6.233234,-3.094463,-1.316209,7.504016,2.336874,-5.817608,-8.526299,4.593895,6.218489,-4.457288,0.962498,6.646001,8.985750,0.038094,-1.929493,4.009908,9.473483,3.520698,-2.526541,-5.386945,2.527700,-8.971568,8.745953,2.346055,2.952338,7.512039,-3.919010,1.711872,-1.469955,-7.780573,8.788586,9.383543,8.559208,-3.071695,9.835245,-6.666969,2.591879,1.317715,-1.373506,9.603202,-3.073955,-2.444955,-1.583778,-4.599884,-7.252281,0.614205,-9.941957,-7.211843,3.310395,-6.626648,-3.495109,7.375140,3.285956,-6.220187,0.148758,-0.079248,-0.919977,5.583360,-6.497714,5.536954,-0.244192,-8.866094,-6.913514,-3.274747,5.119451,-6.240176,7.385918,0.637667,-3.608328,2.981433,-2.177493,-5.233163,-4.388641,0.402042,0.994374,-3.126065,7.008980,7.118085,3.406903,-6.679718,-9.042266,-8.028044,-0.031159,-2.563871,7.667213,3.326051,9.433167,-8.686322,7.139969,5.648532,6.665938,-8.928764,-6.106970,-1.548746,4.856450,7.237628,3.779363,-0.080603,5.720129,5.249303,-4.077396,-7.303111,-1.998160,1.325221,-7.601117,-6.150680,-0.081446,3.270779,-0.065416,4.151041,-8.553016,1.807610,-2.374786,7.616729,7.472042,5.969142,5.483800,2.993587,-6.148203,3.426828,4.943183,-4.284622,-0.950897,2.470657,2.440518,2.965845,2.161782,-7.092450,-8.843365,2.312492,-6.485171,5.459731,2.681771,2.453162,1.472181,-8.177662,-2.201170,3.305685,-2.144040,-1.751179,1.486890,8.029298,-2.020533,-4.035115,-5.873516,-5.702442,-4.840072,-0.234434,7.310771,-1.713728,8.335172,2.321052,2.040739,-6.097607,2.671905,-7.334009,-7.045158,9.752359,4.134315,4.265457,-6.759402,-1.519958,5.220887,-4.825516,-5.547755,-2.611895,8.988877,1.436567,-1.563107,6.287820,-4.674482,-3.700366,1.026544,-1.881596,8.229455,-1.721231,9.098016,6.847656,-8.377054,0.669470,-1.255417,-0.366245,-7.054463,-0.251092,4.035382,-6.775469,2.694062,1.917860,1.100638,4.814848,7.021370,-7.792439,-9.206863,-4.706049,1.050620,9.683703,7.977232,4.936177,-1.497200,-3.383258,5.244375,7.804893,9.388727,-3.130979,-4.225089,2.078039,2.204487,8.540477,2.282091,-9.449596,6.991635,-6.240969,1.692365,-5.236720,-4.093476,-1.685803,-3.732900,-4.390202,-0.919152,-0.127729,9.501074,-5.355927,5.243918,-6.719256,0.430091,1.906166,7.496382,0.211326,2.510005,-5.311529,-7.907274,-6.493167,-1.879443,-0.187503,0.990926,-7.865619,7.692033,0.972830,-8.315842,3.753490,3.897855,-7.623415,3.074879,5.645512,-4.119796,-0.986078,-6.049684,3.314295,0.300034,6.794490,-5.660542,4.666729,0.661891,-8.419194,5.526712,4.877067,-8.961938,6.402139,-9.003925,-4.961474,-1.604259,6.392653,4.399618,4.800699,8.678154,5.596983,-7.171786,3.724614,-4.751805,5.511941,3.052259,-6.584190,9.167702,4.253015,-2.418844,-1.223616,-9.871976,-7.056603,-3.069239,0.786301,-0.175398,3.461639,5.941597,-8.296790,-0.984521,4.127082,4.677444,8.881827,0.925315,-1.967584,-9.020703,-6.316008,-1.042166,8.003322,3.648503,-4.453689,8.785968,-8.826856,-7.205074,-0.589161,1.105171,8.284031,0.974628,5.091070,3.450655,0.579415,-4.406567,9.713649,-6.360235,3.646930,0.316199,9.015523,1.811548,1.165820,6.384307,-5.522926,-0.395494,7.665410,-2.399164,-6.510832,-2.908420,8.549875,-1.686572,4.856570,9.381731,-6.813079,9.822466,-3.535407,9.602522,-5.038700,8.178090,9.850432,-2.528272,-6.094933,2.722515,7.539771,-8.316945,-6.803852,2.704186,9.695714,-0.986506,6.559214,2.115366,-9.247232,2.712807,1.048754,3.566517,-8.727272,1.704646,-9.920070,-6.536203,-9.682913,5.272715,2.609087,3.316941,1.328175,-1.948832,6.580822,-8.397474,-4.976728,-9.992757,7.263663,4.507502,-5.470547,-1.639027,4.074086,-0.020490,4.526338,7.606221,-5.472069,6.349948,-8.559907,-7.445528,1.188611,-1.868345,-1.567818,-4.108667,-8.863892,-8.834809,-8.189869,-0.809208,4.348756,-9.511534,-7.086061,8.732603,-5.869607,-3.500572,-1.588595,-1.229329,-5.923135,1.306710,5.252177,-9.638201,2.940896,-8.885267,7.261523,-4.007800,4.462166,0.229804,-9.100484,-0.326244,2.113814,4.522244,8.849215,0.929950,-5.437162,6.688698,-6.771773,-1.663439,-1.038940,-3.276228,5.783125,-8.958074,1.930547,-8.016325,-3.579158,-4.479789,1.897223,6.669564,3.184496,-4.352177,6.227413,0.198262,7.735032,-0.070313,5.952273,6.244766,8.814247,4.481944,5.583706,-0.582287,4.715354,8.738122,-6.693902,4.509651,-6.361282,-1.966994,5.981746,0.476568,8.514330,-2.472860,-5.889846,2.577597,1.138533,-2.088823,-8.706086,-6.000577,4.984407,-1.602508,-9.102749,9.519663,-5.815401,1.109568,-6.182305,-2.713731,-1.593652,-1.117148,4.960848,-7.074255,-2.332590,1.656081,2.990651,-5.497676,-4.384364,-7.033525,1.521397,6.714551,0.160966,0.874953,6.455564,0.953351,4.747397,4.748482,5.262663,5.548689,-0.439966,-9.664175,2.000348,6.670226,-0.616441,-7.842552,0.450029,2.031513,-5.321823,-4.598663,-2.919044,2.005028,6.583666,-1.929297,-3.511369,4.531634,2.993746,-2.024453,-9.183189,-7.774156,-4.643541,-4.746845,-4.693225,-0.001886,1.795668,-3.532383,5.596796,4.407223,-4.023743,6.493242,5.379232,-0.796447,9.645408,2.805918,-7.079193,-4.309575,2.854371,-6.150231,-0.903695,-4.573848,-6.784074,7.516028,4.044049,-0.377836,2.709363,-3.003330,-5.645712,7.769987,-7.929266,-1.630757,-3.039476,1.099727,6.163914,6.788046,-3.174271,4.541384,-0.912411,-6.499884,9.956836,-9.066359,0.577627,-1.544393,6.421166,3.045545,-4.097199,-1.635328,-6.753573,-7.520619,9.698710,1.002290,-2.539479,-7.963979,0.166343,-0.957489,-9.555685,5.047466,4.915450,3.303322,7.436613,-6.318981,-9.627838,-8.781334,-8.328168,6.981411,-4.377772,-0.222543,9.515512,-8.074740,1.947354,-7.281762,6.096596,3.790955,1.684512,4.237956,1.734324,-6.484518,-4.268577,-7.233140,-9.825707,-7.275978,-7.348407,8.577776,-8.266630,6.681126,-0.242823,2.750039,7.762727,-6.086268,4.546522,-8.431019,-5.996944,1.488794,1.613882,4.284611,8.757610,4.668536,-8.202070,2.081245,-7.330486,9.748530,-4.669942,-7.109664,0.678420,-7.745050,-5.297523,-8.429478,-4.436684,0.266645,1.694237,4.046841,-3.505658,8.190573,0.939326,8.694800,4.627783,-5.202605,2.073986,7.785503,0.186489,-5.088926,-8.899711,-8.498004,-8.440258,4.274288,8.060585,-4.980064,4.495220,-1.703678,-7.131054,-8.719490,-4.948384,-6.821580,6.190133,2.751621,8.959485,-3.664631,-0.526126,-2.609985,-1.523331,-9.390362,-7.852495,9.798941,-1.584181,-5.439971,-8.598817,-2.213810,3.097769,-6.359641,1.834855,-2.310604,6.446211,-5.113854,2.839020,-6.428652,-2.976706,2.113985,4.839378,-2.591116,2.028256,5.829331,9.615256,-8.161211,-0.397888,7.759468,-5.497768,-7.143099,-0.815171,2.713876,-1.800236,5.109905,2.974444,1.961993,-3.297411,-4.015389,2.395752,0.938677,-3.015898,8.684676,-0.185371,-1.505873,-5.696220,0.734517,2.517083,9.618538,-8.193905,3.736418,3.320955,0.599815,-7.579377,2.143024,4.097080,8.537183,7.186915,-8.473114,9.114386,-1.074886,1.871236,5.060041,5.689821,-8.882235,8.650251,0.264219,3.399811,-4.163817,-9.703792,7.824885,-6.181997,6.496786,1.564844,-6.374543,-4.937750,7.524258,-9.970888,9.736994], dtype = "float64")#candidate|7121|(1260,)|const|float64
call_7120 = relay.TupleGetItem(func_2742_call(relay.reshape(const_7121.astype('float64'), [9, 14, 10])), 1)
call_7122 = relay.TupleGetItem(func_2744_call(relay.reshape(const_7121.astype('float64'), [9, 14, 10])), 1)
func_2172_call = mod.get_global_var('func_2172')
func_2174_call = mutated_mod.get_global_var('func_2174')
call_7141 = relay.TupleGetItem(func_2172_call(relay.reshape(call_7120.astype('float64'), [11, 9, 8])), 0)
call_7142 = relay.TupleGetItem(func_2174_call(relay.reshape(call_7120.astype('float64'), [11, 9, 8])), 0)
output = relay.Tuple([call_7108,call_7120,const_7121,call_7141,])
output2 = relay.Tuple([call_7109,call_7122,const_7121,call_7142,])
func_7149 = relay.Function([], output)
mod['func_7149'] = func_7149
mod = relay.transform.InferType()(mod)
output = func_7149()
func_7150 = relay.Function([], output)
mutated_mod['func_7150'] = func_7150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6261_call = mod.get_global_var('func_6261')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_7159 = relay.TupleGetItem(func_6261_call(), 0)
call_7160 = relay.TupleGetItem(func_6262_call(), 0)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
const_7167 = relay.const([-5.043814,4.528991,9.833698,9.835477,8.799633,5.462311,-6.812023,0.916451,-8.068495,-4.097403,4.585584,1.094002,0.206173,0.320728,7.543734,-5.367778,-4.245154,-4.013400,-2.076947,8.427284,6.193980,8.623258,9.378236,8.049856,-5.294921,8.134405,8.123522,6.174863,-0.857170,-6.926021,-2.697051,-0.501613,-6.879653,9.516758,-7.611651,3.456792,5.655214,7.986267,6.210532,-0.082213,-5.673483,0.515619,-2.601548,9.738130,3.328091,-4.076610,-2.015917,9.127379,8.172616,7.197039,8.511194,-3.632804,-1.467733,4.361081,-6.333765,4.301921,6.169482,-4.488607,2.466899,8.788704,3.986617,5.296204,-9.714426,7.400155,9.011986,1.841729,3.391030,4.460212,3.163658,0.325643,-8.762372,0.117771,6.826162,-3.764621,0.920034,-7.076328,0.908678,-3.956697,-7.303797,-1.978953,-4.945447,-8.322150,2.585447,3.562774,-9.660729,-0.256283,-3.145354,0.908607,7.826217,-1.905811,8.175752,-9.990298,-0.008408,-3.435170,-1.223287,-4.808848,-1.998134,-0.966013,-4.243040,-6.067762,-6.396315,-8.278634,-0.875657,-3.097199,7.671566], dtype = "float64")#candidate|7167|(105,)|const|float64
call_7166 = relay.TupleGetItem(func_871_call(relay.reshape(const_7167.astype('float64'), [1, 15, 7])), 3)
call_7168 = relay.TupleGetItem(func_874_call(relay.reshape(const_7167.astype('float64'), [1, 15, 7])), 3)
output = relay.Tuple([call_7159,call_7166,const_7167,])
output2 = relay.Tuple([call_7160,call_7168,const_7167,])
func_7192 = relay.Function([], output)
mod['func_7192'] = func_7192
mod = relay.transform.InferType()(mod)
mutated_mod['func_7192'] = func_7192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7192_call = mutated_mod.get_global_var('func_7192')
call_7193 = func_7192_call()
output = call_7193
func_7194 = relay.Function([], output)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7232 = relay.var("var_7232", dtype = "float64", shape = (16, 3, 12))#candidate|7232|(16, 3, 12)|var|float64
const_7233 = relay.const([[[-0.481512,9.353320,-1.005004,3.068462,-4.271635,-6.701422,-0.398731,-5.609923,8.495695,8.425137,-3.359858,1.705198],[2.052223,6.963971,0.374542,9.405525,-4.409828,-5.733126,-5.564717,7.528550,-9.546931,2.134201,-1.406815,4.328835],[0.557397,1.279834,1.316452,-7.808541,-6.494482,9.295141,-7.198045,2.614449,5.260911,-8.018889,-5.856119,-8.909620]],[[0.716103,1.102477,-4.853979,7.841608,8.095252,7.218960,2.700078,4.647381,1.838251,-9.633472,-3.608668,9.378583],[0.135845,1.635197,8.393838,-6.264035,8.957280,-2.940102,5.441639,-9.156884,-0.063336,1.878563,1.708670,-5.418927],[1.851922,-4.118256,-1.426170,8.665183,6.234292,3.918239,-6.757487,9.228802,-3.223521,8.932373,-5.016237,-0.306787]],[[-9.006171,-7.163391,7.773870,-2.791164,5.483735,-0.926861,-9.475248,6.150965,-1.041525,-5.810912,3.525314,4.644004],[8.361122,1.906718,-5.229100,5.058084,9.524968,-9.598872,-5.895876,9.011309,8.062772,8.689704,2.044803,-0.193581],[-7.811494,-5.483051,-2.362099,2.669381,2.829989,5.706870,-0.057799,-9.190069,5.670171,-9.538510,9.372741,1.856312]],[[4.302656,0.752618,-9.981179,1.992305,-4.604423,-3.941725,0.601228,7.176535,-7.088460,-0.637461,8.384640,-0.912802],[0.884225,-3.498721,-8.724974,5.985128,-4.296213,-3.651812,-7.868518,5.219132,6.710388,-0.921653,4.418442,4.494985],[-5.370452,9.827021,-3.989577,-5.219099,-7.927647,2.853301,3.247253,3.359608,1.803815,-9.917599,1.925695,-9.869452]],[[2.567939,1.382400,-3.247731,-5.955305,-6.036743,-6.662706,6.489030,-6.086657,4.254634,-8.654800,-4.279905,9.656589],[4.036842,-8.880422,1.148139,5.149269,4.031689,-0.391200,-3.825124,-4.440077,-3.250432,1.290199,-8.525196,5.254465],[5.143629,-9.691007,7.476993,7.629912,4.480172,5.461208,4.389256,9.077268,8.470297,-7.942103,-1.664632,-5.474936]],[[-3.529799,-9.010849,6.529748,-8.908351,7.231811,9.251093,-1.402193,4.344551,-0.209015,1.193113,3.696312,-1.098704],[-3.504290,-1.151739,2.412092,8.859499,6.120471,-2.737915,3.168633,3.054903,2.262030,-7.740051,-9.435658,8.668341],[-2.541147,-6.329418,3.467009,3.868667,7.467052,-5.038348,-6.323410,-4.944369,7.511660,4.491044,-9.672126,8.472783]],[[6.848325,5.094548,7.690246,-9.257260,6.109621,-4.640938,6.732034,-3.023101,9.627080,3.195378,-1.202868,9.434367],[5.690646,8.464942,-0.609876,5.232031,-2.952705,2.964977,-7.741480,1.072733,-0.143564,-8.832839,8.896397,-4.914182],[-0.436893,5.942935,-8.608621,-0.664012,9.156002,0.004549,0.943909,0.170065,8.281971,0.245341,-0.205974,-4.166057]],[[-3.033064,-5.658187,2.560488,2.697717,-5.559882,4.592314,2.142653,-4.377696,0.788311,-7.720971,7.537122,-1.742446],[-4.008529,-4.589358,-7.620458,0.957035,6.299680,0.276422,2.970746,-2.253640,1.728864,-0.674730,-7.861982,8.505053],[-6.986623,-5.464291,9.524634,-8.776197,-9.845746,-0.185265,2.671964,-8.877659,9.503380,-5.021911,-9.473860,-7.986037]],[[-1.718703,-1.928853,-1.030262,-3.475267,-9.786628,-3.928785,1.990715,3.213801,8.789435,-6.259983,-9.633796,2.426570],[-6.427204,-2.534597,1.968510,-6.247738,0.773406,-2.715754,-0.297464,-8.969610,4.520760,-3.556011,4.930185,-9.209119],[5.912262,-6.632671,5.251962,4.792415,5.056619,-0.799396,1.303078,-6.289358,-7.171483,-5.513253,3.342344,4.917322]],[[0.738976,8.967627,1.188451,9.210924,-5.824734,-8.573616,5.532920,-9.977704,2.111356,9.531810,2.482420,7.556933],[-8.169761,0.860671,-6.184909,-7.341421,-9.191414,4.285642,-3.022335,4.394145,-4.009848,-2.918954,3.583930,-3.543151],[-7.567358,8.667780,4.903439,3.013358,-1.961509,1.797945,2.631987,-8.121942,1.017680,9.709064,-6.178543,-4.980672]],[[2.581862,3.622614,5.527722,7.799021,7.962914,-4.707302,-1.179489,8.108507,-3.226538,9.342180,-7.410310,3.676890],[1.641674,2.558335,6.402225,-7.106113,7.990899,-1.540167,1.313523,-9.591918,-0.041958,4.431929,-8.399641,-6.383313],[2.408026,-1.423511,1.791042,9.478367,-3.143936,7.214576,7.259147,-3.501358,5.614659,1.678689,0.536203,0.995669]],[[-7.921194,-1.181260,3.786519,3.923101,-4.550377,9.578936,-3.183208,5.851786,8.277183,-9.230596,-3.952608,6.057877],[9.025029,9.117691,-0.225215,8.893198,2.172131,2.409352,-1.802879,-2.712933,-9.180931,-6.225107,-6.767790,-5.379457],[-2.909374,-7.179005,8.346681,-5.336467,6.536003,9.581181,3.880156,-0.415672,-2.919407,7.206085,2.096248,-0.536360]],[[0.840629,-0.713868,-1.199215,-9.598676,3.643575,3.884950,-0.342210,-8.343905,7.814242,-9.642761,-3.118621,-7.208979],[-4.707291,6.252615,9.562669,-5.582589,-2.746125,-6.241067,2.788037,-4.750662,-0.049937,7.456003,9.391514,-9.271486],[-6.613351,0.047273,3.988651,5.439346,-5.945189,3.040095,-3.226708,-2.516284,-1.127620,5.422557,5.611186,4.572840]],[[-9.279249,8.426858,-2.370349,-6.155239,-0.204321,4.829622,2.781313,2.438579,2.746419,9.991075,-8.790686,-9.742792],[2.880904,-5.687733,1.638737,-5.901483,7.300118,-8.157465,9.628586,-9.670489,-6.071836,3.796800,-4.876166,6.401075],[-4.858034,-4.978940,5.907735,6.470036,-9.052286,2.666611,9.193545,2.165143,9.529943,-3.180674,0.203322,-2.488664]],[[-4.228554,6.016808,3.795606,-1.115586,-6.536885,-7.601562,-6.647427,-5.053016,-3.263814,-4.033525,5.150305,-3.959578],[4.347161,3.362067,9.470679,0.914102,6.844168,-7.024761,6.000138,-8.540127,0.582621,3.632588,0.570086,1.983587],[-9.999935,2.611256,0.004267,-0.364099,6.108868,5.217724,-0.584585,-1.011312,-1.981787,-8.063714,-2.669548,0.293457]],[[2.593671,7.791159,-5.302759,-9.818445,-0.530738,-9.778320,6.310648,7.541330,-4.828920,1.701952,9.807950,-7.237186],[9.790525,1.401235,-3.942106,3.593466,-1.278138,-3.281753,8.120874,8.427816,-7.567781,-7.586001,-7.058395,-1.067528],[-1.134045,2.621409,-9.644755,8.852279,-3.830555,2.946933,8.346248,8.857859,6.693918,-6.581227,-2.667670,-4.763104]]], dtype = "float64")#candidate|7233|(16, 3, 12)|const|float64
bop_7234 = relay.floor_mod(var_7232.astype('float64'), relay.reshape(const_7233.astype('float64'), relay.shape_of(var_7232))) # shape=(16, 3, 12)
bop_7245 = relay.subtract(var_7232.astype('int16'), relay.reshape(bop_7234.astype('int16'), relay.shape_of(var_7232))) # shape=(16, 3, 12)
uop_7258 = relay.log(var_7232.astype('float64')) # shape=(16, 3, 12)
output = relay.Tuple([bop_7245,uop_7258,])
output2 = relay.Tuple([bop_7245,uop_7258,])
func_7269 = relay.Function([var_7232,], output)
mod['func_7269'] = func_7269
mod = relay.transform.InferType()(mod)
mutated_mod['func_7269'] = func_7269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7270 = relay.var("var_7270", dtype = "float64", shape = (16, 3, 12))#candidate|7270|(16, 3, 12)|var|float64
func_7269_call = mutated_mod.get_global_var('func_7269')
call_7271 = func_7269_call(var_7270)
output = call_7271
func_7272 = relay.Function([var_7270], output)
mutated_mod['func_7272'] = func_7272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_7323 = relay.TupleGetItem(func_5863_call(), 1)
call_7324 = relay.TupleGetItem(func_5865_call(), 1)
func_5158_call = mod.get_global_var('func_5158')
func_5165_call = mutated_mod.get_global_var('func_5165')
var_7331 = relay.var("var_7331", dtype = "float32", shape = (1, 325))#candidate|7331|(1, 325)|var|float32
var_7332 = relay.var("var_7332", dtype = "float64", shape = (1440,))#candidate|7332|(1440,)|var|float64
var_7333 = relay.var("var_7333", dtype = "float32", shape = (360,))#candidate|7333|(360,)|var|float32
const_7334 = relay.const([8.706989,-6.045151,-0.086352,-8.869625,6.476931,-2.016969,-8.367953,-6.540725,-0.001020,-3.097357,6.727028,3.540887,5.544558,7.827691,3.345082,5.064044,0.802262,3.970751,7.447651,-9.091179,-0.312810,0.926968,8.316396,8.590163,7.345092,-8.224084,7.399717,-5.655485,8.561119,-3.859779,9.227505,4.636592,8.380547,-1.402161,4.416311,-0.665223,-1.197859,-3.839912,4.280149,4.539295,0.869993,5.418894,-3.084779,7.368101,4.884922,-0.415276,6.128498,-5.970352,-6.628152,4.053636,3.690474,-8.381629,2.525997,5.947703,-5.138317,1.213116,-3.893148,4.379068,9.279918,-1.209887,-6.129597,8.982363,0.684973,-7.606200,-8.478426,5.135105,8.761445,1.014675,-5.651419,-9.115751,-5.585623,-2.659994,-9.065163,0.242171,-8.289279,6.872505,-6.774857,-2.551305,-9.711523,9.687203,-5.170286,-4.062522,-6.338172,0.180606,-2.803134,-1.587471,4.636006,9.078210,-7.834441,2.379942,3.030773,5.270453,8.451402,3.669098,-4.929659,7.049536,2.664364,7.969474,1.194337,-3.933287,-6.881677,-1.486987,5.910687,4.071518,-3.942824,-0.607182,2.889929,1.723417,8.808469,-7.553466,-0.629034,-8.700377,9.771308,8.857174,-5.775790,-8.592608,-7.720312,3.893078,8.745835,7.419900,4.728400,2.364289,4.881008,-3.717656,6.078746,5.758838,-8.418045,6.880173,7.614532,-2.430980,-7.217248,-6.222095,-0.973897,-4.499813,-8.537454,2.505007,3.625493,1.799312,-0.135825,6.956255,-7.534733,1.289043,-9.679749,6.897488,8.598398,-6.391492,-8.920458,5.669327,-5.927954,-8.576713,1.739753,-8.247605,-9.921085,-3.498130,9.510742,-0.865751,-3.631720,-5.645999,-8.104441,-5.236423,-7.717792,2.947265,7.606968,5.450268,-6.935145,-3.945468,6.550077,-4.600107,-8.948689,-0.401643,-1.843906,-5.988918,-0.888015,-7.409926,-0.257060,5.908399,1.935820,9.023147,5.541426,-3.941805,4.530950,6.844016,4.554821,-4.883695,-9.733096,-9.324781,-1.228935,5.534640,4.530743,0.166422,-1.312078,-2.207824,-5.603307,-4.100724,-2.924783,8.870877,-4.615041,3.554231,2.828331,2.227726,-5.792287,-3.592142,-9.740905,-1.847004,7.136786,4.140114,-8.645924,7.707084,-6.835184,-2.160689,-5.233215,-0.494659,-4.335054,1.437129,3.960431,-8.151423,-3.356327,-6.334338,-8.476812,-0.254884,5.427964,-9.746760,-2.681688,-9.629309,8.999821,1.151672,-6.495498,-9.794824,3.738705,-8.026466,7.221005,5.905916,-0.859641,-4.699321,-8.384830,-4.362651,7.237331,0.767561,6.462412,-5.671486,-5.357890,-6.406115,7.905795,3.164225,-0.010137,0.883047,-2.107644,8.594195,7.484715,-9.922292,3.804340,4.154891,7.253760,-5.710551,-2.933657,5.907642,-3.692494,0.171694,9.220881,9.631730,9.289930,1.697419,6.192223,-7.412896,-1.888765,-9.462545,3.585695,-1.235831,-2.883788,7.944175,7.112815,3.545856,5.882220,6.696011,5.510422,-5.451745,-0.858596,5.181053,1.101450,-5.780846,-1.914205,5.278791,-7.479045,-1.329941,-5.571197,0.838624,-5.412549,9.917422,0.154505,-8.498987,7.981110,7.988710,-8.197686,4.537812,-0.267416,-1.066743,-3.673299,9.076085,8.408205,6.913387,0.227659,-2.903347,4.411721,4.869185,-9.573535,-1.253436,0.996743,0.824221,-3.414274,6.849106,-1.687956,5.190520,3.300281,3.890768,-7.415546,-7.087069,0.266146,2.457597,-4.436516,-4.437628,8.230691,3.003515,-9.920602,-1.991572,1.801500,-1.798969,9.444473,8.202099,-4.841267,-2.633050,3.410695,-7.701827,2.940192,-1.764770,1.495048,-5.954722,7.072058,9.574967,8.656344,-4.524439,7.443581,-3.836833,-6.755727,7.832293,8.765561,6.433053,-7.349749,5.585338,9.041945,0.301063,-4.700772,2.480223,0.737878,-3.342064,5.689764,-2.695102,7.876598,4.527942,-2.292464,-9.036105,-2.718014,-5.752834,2.141217,-4.827418,5.610629,6.379684,-7.489063,8.185262,5.217436,-9.147279,-2.673735,9.454131,6.865443,5.668934,6.653528,8.379655,3.058602,-5.619418,-3.866622,-6.900338,8.926021,9.845164,-2.170734,7.656433,-8.673936,-9.427923,-5.006097,-2.200271,2.209998,9.236610,5.721747,-9.365469,1.578447,-2.260095,-8.374519,2.408645,-8.550032,4.244223,-0.731046,2.726117,-4.693526,0.587294,7.565198,-3.271414,-5.891486,-3.086241,5.955079,-7.122155,4.201641,-6.955925,2.210465,6.117667,-2.057463,5.546014,-3.680102,-7.852488,-4.529886,2.504352,0.313291,-9.497688,-3.885110,-1.578872,-8.102277,-5.640463,6.767061,4.084205,-2.499240,-2.170927,7.585271,7.617316,-9.187910,-9.231147,-2.632195,5.528785,7.965767,1.335475,-4.231637,7.495187,-1.110679,-2.249658,-7.468827,3.119727,4.463912,-4.102711,4.350592,-2.400422,6.256027,-9.499942], dtype = "float64")#candidate|7334|(448,)|const|float64
var_7335 = relay.var("var_7335", dtype = "int8", shape = (70,))#candidate|7335|(70,)|var|int8
call_7330 = relay.TupleGetItem(func_5158_call(relay.reshape(var_7331.astype('float32'), [13, 5, 5]), relay.reshape(var_7332.astype('float64'), [1440,]), relay.reshape(var_7333.astype('float32'), [360,]), relay.reshape(const_7334.astype('float64'), [448,]), relay.reshape(var_7335.astype('int8'), [70,]), ), 11)
call_7336 = relay.TupleGetItem(func_5165_call(relay.reshape(var_7331.astype('float32'), [13, 5, 5]), relay.reshape(var_7332.astype('float64'), [1440,]), relay.reshape(var_7333.astype('float32'), [360,]), relay.reshape(const_7334.astype('float64'), [448,]), relay.reshape(var_7335.astype('int8'), [70,]), ), 11)
func_6317_call = mod.get_global_var('func_6317')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_7341 = func_6317_call()
call_7342 = func_6317_call()
func_2532_call = mod.get_global_var('func_2532')
func_2537_call = mutated_mod.get_global_var('func_2537')
var_7348 = relay.var("var_7348", dtype = "float32", shape = (260,))#candidate|7348|(260,)|var|float32
call_7347 = relay.TupleGetItem(func_2532_call(relay.reshape(var_7348.astype('float32'), [5, 4, 13]), relay.reshape(var_7335.astype('int8'), [70, 1]), relay.reshape(call_7330.astype('int8'), [840,]), ), 0)
call_7349 = relay.TupleGetItem(func_2537_call(relay.reshape(var_7348.astype('float32'), [5, 4, 13]), relay.reshape(var_7335.astype('int8'), [70, 1]), relay.reshape(call_7330.astype('int8'), [840,]), ), 0)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_7391 = func_6092_call()
call_7392 = func_6092_call()
func_2172_call = mod.get_global_var('func_2172')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_7422 = relay.const([-7.663584,4.254479,-6.857197,3.859612,0.434311,-7.553431,5.333388,7.300226,5.364639,3.367164,-0.011488,-9.691437,6.681186,-3.573862,-7.942811,0.959118,8.757918,1.222334,-2.145741,-7.483543,-3.262270,2.700337,-8.695201,-4.299172,-1.421000,5.372778,5.008822,5.205011,-7.231606,-4.825100,6.828432,8.705325,-5.414148,-9.955867,-3.295114,-7.040649,-7.533070,-8.544989,-7.014290,-6.726811,-3.263263,-2.123319,0.830189,4.283002,2.826947,7.506939,7.037274,1.800042,1.667911,-0.758431,-3.662906,9.142248,9.702145,7.643030,-4.922286,-5.532361,-3.443437,-1.907609,-2.026741,1.841209,6.311541,-3.114786,2.645392,-9.827428,-3.906712,-4.389336,-0.750796,3.547016,-0.194290,4.094491,-6.130718,9.117001,-4.598910,3.068801,7.636766,-1.960583,4.374756,9.527840,7.746968,6.668089,4.810165,-2.741081,4.042107,6.985822,9.966032,-9.333006,-7.076551,-5.208808,-7.645876,8.204684,-3.627333,-7.520691,-3.618184,-5.015150,-0.953618,3.392297,-3.374046,0.164859,9.714955,4.878578,3.651634,7.679758,4.030725,8.073120,4.886201,-1.305743,-4.383939,8.030972,-1.414172,-7.803323,4.518757,-4.514585,-3.316174,-6.622489,-1.059773,-4.295781,0.495851,9.650748,2.052228,-3.824001,6.476145,-4.522482,-5.453919,9.673081,6.194723,6.217046,8.451729,-0.292327,7.143631,-0.199880,-3.687624,4.510904,-4.328816,9.015234,7.646251,-1.823265,-0.665753,2.800051,-1.619883,7.171309,-2.100602,-4.149686,4.863435,8.818406,3.682970,-3.060316,-9.547957,-1.345579,6.777846,-3.666915,9.981337,1.171117,7.872765,-5.567335,5.850573,-4.024825,-9.092051,-5.772891,4.021924,-5.057683,3.368124,3.954329,9.225403,-3.885694,1.108760,4.179825,5.231619,-7.407088,6.524637,-3.549501,-1.484335,4.211914,6.172585,-7.991316,4.806350,-7.385101,-8.767501,0.706994,4.131570,-5.776675,-0.165449,7.474600,-2.483122,5.934815,8.315910,7.187767,-4.495043,-5.179351,-5.371170,-8.382134,-7.967701,-3.089024,-4.390483,-4.426090,8.729634,-5.437256,-8.492771,0.835947,9.091722,0.424190,-2.172751,9.792051,7.558208,-1.976903,-1.320473,6.848981,2.047412,5.689582,2.575987,5.950465,-9.826580,3.998506,-2.574966,-3.207721,7.825416,-5.253087,-5.817656,-4.891571,9.702539,5.554575,3.756490,-2.808721,-5.812282,6.374784,9.124806,-7.220585,-0.455559,0.695213,-1.196813,0.940388,2.542205,7.094964,4.064424,7.690488,-9.476163,-4.398597,5.170347,7.901109,0.184614,-2.188332,6.868440,-7.471772,-4.198628,-0.782016,7.767812,-4.728964,6.785562,-0.005051,5.106629,-8.837800,-2.157682,5.933924,3.036005,9.333978,9.210993,-1.330431,-1.636528,6.970266,-0.086115,4.350661,7.466842,-6.666996,4.775520,0.287965,-9.730945,6.301010,-2.285017,-4.030325,0.958103,-5.898230,8.871834,0.326176,-3.259809,-1.007216,9.885482,-5.947040,8.678705,3.420275,-6.480211,5.656108,-9.004463,0.944249,-3.928447,3.603258,-4.207732,-7.008153,-1.075138,0.353648,-9.658784,1.897895,-7.575130,-0.660258,-9.623556,-8.958879,-3.701172,8.973982,-9.279080,-8.855059,-5.010536,-1.156219,7.585579,1.001369,0.328189,-3.435866,-0.896651,6.674265,-7.322416,5.211796,2.447039,7.933286,5.561227,5.031069,2.827821,-5.950151,6.924358,-0.291154,-1.769697,-3.738288,2.125333,3.326918,-6.753259,-1.765405,8.342988,5.760069,7.142617,-3.419256,5.374543,0.530337,7.933489,-8.357063,-1.375225,-0.028424,-1.497871,-3.015998,9.623333,-2.746545,-4.457494,-9.941983,-0.416398,9.579720,-9.763098,-4.897327,0.512056,2.681986,-7.374204,3.168967,-8.150951,7.201057,-1.188486,-3.161328,6.403695,0.463574,4.815516,7.243078,1.044399,-1.728316,1.706823,8.336660,-6.108925,6.656666,-5.056962,3.792749,-1.093461,-7.014726,7.331685,7.233457,3.939156,-5.651952,-6.989467,-0.995129,-3.461298,-2.846110,9.585794,-6.168229,-6.944268,-5.098156,-4.107106,9.925968,-4.299333,2.872458,2.585925,7.437787,0.739450,5.437707,3.139765,3.287938,-9.550600,7.166567,3.733597,5.869637,-1.028304,1.663768,-2.018853,8.805198,-3.037529,-3.489011,3.174854,-1.282889,3.882355,5.738922,5.715739,4.206832,-0.350780,2.690004,-0.511912,2.404483,9.162784,-5.824363,3.021857,-9.932969,-2.563560,5.001000,-6.988884,1.231291,-6.379971,6.511874,0.443619,1.379447,8.672123,-2.745189,-4.154031,-5.742050,-4.176750,2.342745,8.713514,2.407624,-1.093676,4.426917,-7.055258,-6.483087,0.175362,-0.997197,-1.566230,-0.178061,-6.913458,-7.914485,-1.786620,-1.992498,2.993188,2.229729,-4.562090,-6.875990,7.135707,5.145731,-5.790023,-0.979188,2.070503,4.777110,0.879501,-6.579445,-1.703156,-7.639472,2.506823,8.703935,-4.859214,2.628171,2.643610,9.825153,-9.299765,-4.923534,-6.992308,-8.491408,9.956277,-2.697781,-5.911209,-0.474622,8.070086,2.740061,-2.150506,2.284452,8.447590,3.613870,-9.636384,-8.705242,1.302426,-6.740218,4.476767,-3.421991,-0.862296,9.853639,4.599604,5.285064,-3.016372,4.885023,5.627319,4.626478,-9.307789,9.557355,7.230008,5.126740,-8.781572,9.526518,-4.586954,-6.274469,-1.060649,6.843067,5.054662,-8.390051,-3.985093,-5.291365,-2.911501,-3.585267,-2.190179,5.452301,9.681865,4.940781,-8.079098,-4.950071,-4.517099,4.899870,-3.066553,-0.493806,1.685813,-8.403850,-7.649149,1.856151,-2.322469,7.763856,9.610492,5.999936,0.128787,-9.710038,9.876321,5.306815,6.909405,-4.213622,0.489503,-3.567525,2.056810,-5.230896,8.676636,-4.119937,-1.544834,9.446326,-1.213602,-3.222188,8.728327,-4.256026,5.091911,-4.107831,-5.989751,4.694869,6.965240,7.797938,-6.770863,-2.790178,5.764153,1.409237,2.885655,-6.842036,0.554583,8.251645,8.763328,3.861105,9.536606,-0.403642,-3.136613,-1.347089,7.843967,-8.292605,7.680264,0.644435,4.630546,-3.334863,3.709669,2.102983,-3.277847,8.857737,-1.527998,-7.137066,-7.811726,3.873896,-8.150597,-9.796822,4.454272,2.119595,-6.734501,-4.306457,-5.309152,-9.899784,3.344844,-8.548032,-3.004187,4.294629,7.965303,0.597632,-0.462362,-4.283963,-4.102870,-7.116517,-6.000204,-7.386189,7.736745,-8.220305,-7.355898,7.893585,-2.943725,6.826936,-5.056178,6.667267,-5.599793,6.769065,-3.569012,-9.541740,4.980208,-4.053947,-4.405725,-1.858386,8.376756,6.358470,7.896119,7.323365,2.987265,-1.191270,-2.811387,0.351542,-0.768371,0.445227,-1.935073,7.807595,6.124478,2.274304,9.400122,4.524247,3.864978,-6.243440,5.937790,-2.514787,-6.502418,-7.332729,4.725438,1.826561,1.128611,-0.718430,-3.142745,3.611400,3.512898,-3.278803,-2.928389,-4.811474,-9.053474,-0.954161,-4.814962,-1.722565,9.250651,8.733420,-2.277343,7.371828,-9.610340,-5.023595,9.213798,-4.681598,-5.658869,0.820040,-5.327169,-7.906667,-6.726676,-2.498935,-5.759003,5.549301,-2.009403,-0.350897,-6.276626,-2.237260,8.595111,9.236074,-2.327395,6.637217,-6.022256,9.815539,-3.873075,-0.851834,-5.797126,-7.324963,9.629359,-2.628701,-8.816771,6.196182,-1.960805,7.404630,-4.012765,4.640684,-3.403604,2.668490,7.904052,6.698127,5.274722,9.547903,8.031908,-4.722585,9.640828,-4.656697,5.549614,-6.010404,7.085211,9.066970,9.440681,-3.085278,4.497744,-6.454815,-8.733934,0.461629,0.286522,8.976927,-5.424429,-5.889286,-8.743874,5.142321,-5.958699,-6.789091,-3.737374,7.533906,-7.333258,3.812126,7.693411,-4.665157,-1.977418,2.347879,-7.953882,-3.775841,-8.419724,3.990641,5.604495,-3.892434,-3.983315,9.609635,-2.294383,-4.752516,-8.261081,4.838474,-4.004666,5.109522,9.896625,-1.958362,1.236872,-2.733354,3.960365,-5.015107,-8.465076,-6.627855,6.261401,4.165806,-2.087225,-9.592038,-7.669969,4.974696,-3.742619,3.181690,3.192978,6.016387,-5.568133,8.420587,1.057219,-2.912405,-0.678028,7.089151,-8.506697,-9.619220,-6.738894,7.211604,-7.940888,8.703941,3.644164,-0.195441,4.263357,7.443822,2.037435,7.155818,-6.859952,-1.671820,4.235974,2.881212,6.833652,-7.343798,-0.890096,-5.728447,-1.366565,4.784076,-9.406429,1.061451,-3.287506,1.703666,1.038039,-8.715248,-1.137481,-0.942522,-2.974098,4.768278,9.668759,-5.421480,9.572769,-6.453565], dtype = "float64")#candidate|7422|(792,)|const|float64
call_7421 = relay.TupleGetItem(func_2172_call(relay.reshape(const_7422.astype('float64'), [11, 9, 8])), 0)
call_7423 = relay.TupleGetItem(func_2174_call(relay.reshape(const_7422.astype('float64'), [11, 9, 8])), 0)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_7448 = relay.TupleGetItem(func_6615_call(), 1)
call_7449 = relay.TupleGetItem(func_6617_call(), 1)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_7452 = relay.TupleGetItem(func_5960_call(), 1)
call_7453 = relay.TupleGetItem(func_5962_call(), 1)
output = relay.Tuple([call_7323,call_7330,var_7331,var_7332,var_7333,const_7334,var_7335,call_7341,call_7347,var_7348,call_7391,call_7421,const_7422,call_7448,call_7452,])
output2 = relay.Tuple([call_7324,call_7336,var_7331,var_7332,var_7333,const_7334,var_7335,call_7342,call_7349,var_7348,call_7392,call_7423,const_7422,call_7449,call_7453,])
func_7465 = relay.Function([var_7331,var_7332,var_7333,var_7335,var_7348,], output)
mod['func_7465'] = func_7465
mod = relay.transform.InferType()(mod)
var_7466 = relay.var("var_7466", dtype = "float32", shape = (1, 325))#candidate|7466|(1, 325)|var|float32
var_7467 = relay.var("var_7467", dtype = "float64", shape = (1440,))#candidate|7467|(1440,)|var|float64
var_7468 = relay.var("var_7468", dtype = "float32", shape = (360,))#candidate|7468|(360,)|var|float32
var_7469 = relay.var("var_7469", dtype = "int8", shape = (70,))#candidate|7469|(70,)|var|int8
var_7470 = relay.var("var_7470", dtype = "float32", shape = (260,))#candidate|7470|(260,)|var|float32
output = func_7465(var_7466,var_7467,var_7468,var_7469,var_7470,)
func_7471 = relay.Function([var_7466,var_7467,var_7468,var_7469,var_7470,], output)
mutated_mod['func_7471'] = func_7471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_7473 = relay.TupleGetItem(func_6152_call(), 0)
call_7474 = relay.TupleGetItem(func_6153_call(), 0)
output = relay.Tuple([call_7473,])
output2 = relay.Tuple([call_7474,])
func_7486 = relay.Function([], output)
mod['func_7486'] = func_7486
mod = relay.transform.InferType()(mod)
output = func_7486()
func_7487 = relay.Function([], output)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7149_call = mod.get_global_var('func_7149')
func_7150_call = mutated_mod.get_global_var('func_7150')
call_7507 = relay.TupleGetItem(func_7149_call(), 3)
call_7508 = relay.TupleGetItem(func_7150_call(), 3)
func_2576_call = mod.get_global_var('func_2576')
func_2579_call = mutated_mod.get_global_var('func_2579')
const_7529 = relay.const([[3,5,5,1,-10,9,-2,-3,-6,10,-2,-4,1,1,-9,10,7,6,-3,-2,-3,6,7,-8,-8,8,-9,4,-2,-2,5,7,-5,-4,1,-3,6,8,9,-8],[-8,8,7,-7,-10,-3,1,9,-2,8,6,6,1,7,1,8,2,-9,1,-9,7,5,2,5,4,7,-3,4,-8,3,-6,1,8,-6,-5,9,5,-9,-8,10]], dtype = "int8")#candidate|7529|(2, 40)|const|int8
var_7530 = relay.var("var_7530", dtype = "int8", shape = (1200,))#candidate|7530|(1200,)|var|int8
call_7528 = relay.TupleGetItem(func_2576_call(relay.reshape(const_7529.astype('int8'), [10, 1, 8]), relay.reshape(var_7530.astype('int8'), [10, 15, 8]), ), 0)
call_7531 = relay.TupleGetItem(func_2579_call(relay.reshape(const_7529.astype('int8'), [10, 1, 8]), relay.reshape(var_7530.astype('int8'), [10, 15, 8]), ), 0)
output = relay.Tuple([call_7507,call_7528,const_7529,var_7530,])
output2 = relay.Tuple([call_7508,call_7531,const_7529,var_7530,])
func_7532 = relay.Function([var_7530,], output)
mod['func_7532'] = func_7532
mod = relay.transform.InferType()(mod)
var_7533 = relay.var("var_7533", dtype = "int8", shape = (1200,))#candidate|7533|(1200,)|var|int8
output = func_7532(var_7533)
func_7534 = relay.Function([var_7533], output)
mutated_mod['func_7534'] = func_7534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_7536 = relay.TupleGetItem(func_5863_call(), 1)
call_7537 = relay.TupleGetItem(func_5865_call(), 1)
const_7543 = relay.constdtype = "float64")#candidate|7543|(16, 16, 14)|const|float64
bop_7544 = relay.right_shift(call_7536.astype('int32'), relay.reshape(const_7543.astype('int32'), relay.shape_of(call_7536))) # shape=(16, 16, 14)
bop_7547 = relay.right_shift(call_7537.astype('int32'), relay.reshape(const_7543.astype('int32'), relay.shape_of(call_7537))) # shape=(16, 16, 14)
output = bop_7544
output2 = bop_7547
func_7548 = relay.Function([], output)
mod['func_7548'] = func_7548
mod = relay.transform.InferType()(mod)
mutated_mod['func_7548'] = func_7548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7548_call = mutated_mod.get_global_var('func_7548')
call_7549 = func_7548_call()
output = call_7549
func_7550 = relay.Function([], output)
mutated_mod['func_7550'] = func_7550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7580 = relay.var("var_7580", dtype = "float64", shape = (9, 10, 8))#candidate|7580|(9, 10, 8)|var|float64
var_7581 = relay.var("var_7581", dtype = "float64", shape = (9, 10, 8))#candidate|7581|(9, 10, 8)|var|float64
bop_7582 = relay.floor_divide(var_7580.astype('float64'), relay.reshape(var_7581.astype('float64'), relay.shape_of(var_7580))) # shape=(9, 10, 8)
uop_7587 = relay.sinh(var_7580.astype('float64')) # shape=(9, 10, 8)
bop_7598 = relay.less_equal(var_7581.astype('bool'), relay.reshape(uop_7587.astype('bool'), relay.shape_of(var_7581))) # shape=(9, 10, 8)
func_7465_call = mod.get_global_var('func_7465')
func_7471_call = mutated_mod.get_global_var('func_7471')
var_7606 = relay.var("var_7606", dtype = "float32", shape = (65, 5))#candidate|7606|(65, 5)|var|float32
var_7607 = relay.var("var_7607", dtype = "float64", shape = (1440,))#candidate|7607|(1440,)|var|float64
var_7608 = relay.var("var_7608", dtype = "float32", shape = (360,))#candidate|7608|(360,)|var|float32
const_7609 = relay.const([[7,-3,-10,-2,3,-7,7,4,-3,-8],[-9,3,-5,-7,-4,9,6,2,2,-4],[2,-10,3,4,-10,4,-3,3,1,-2],[-4,-6,1,-8,-2,10,4,-2,-5,2],[9,5,2,-1,8,7,4,-4,-3,-10],[5,-8,-1,7,-9,1,6,1,4,10],[-7,3,4,6,2,-4,-9,7,5,8]], dtype = "int8")#candidate|7609|(7, 10)|const|int8
var_7610 = relay.var("var_7610", dtype = "float32", shape = (1, 260))#candidate|7610|(1, 260)|var|float32
call_7605 = relay.TupleGetItem(func_7465_call(relay.reshape(var_7606.astype('float32'), [1, 325]), relay.reshape(var_7607.astype('float64'), [1440,]), relay.reshape(var_7608.astype('float32'), [360,]), relay.reshape(const_7609.astype('int8'), [70,]), relay.reshape(var_7610.astype('float32'), [260,]), ), 6)
call_7611 = relay.TupleGetItem(func_7471_call(relay.reshape(var_7606.astype('float32'), [1, 325]), relay.reshape(var_7607.astype('float64'), [1440,]), relay.reshape(var_7608.astype('float32'), [360,]), relay.reshape(const_7609.astype('int8'), [70,]), relay.reshape(var_7610.astype('float32'), [260,]), ), 6)
func_2128_call = mod.get_global_var('func_2128')
func_2134_call = mutated_mod.get_global_var('func_2134')
var_7625 = relay.var("var_7625", dtype = "uint8", shape = (252,))#candidate|7625|(252,)|var|uint8
var_7626 = relay.var("var_7626", dtype = "float64", shape = (448,))#candidate|7626|(448,)|var|float64
const_7627 = relay.const([[-2,-2,-7,-5,10,7,-2,-9,-9,2,-7,8,-2,4,8,3,-10,5,1,-6,-10,4,-1,8,2,-7,5,-6,-4,-9,8,-10,-1,6,7,-5,-4,-6,-4,6,6,-4,1,-8,-10,-7,10,-9,-4,-5,8,7,8,6,10,9,-7,7,-1,-3,3,-9,9,4,-4,6,10,3,-7,-2,-3,4,-4,-8,-7,7,-10,3,-6,-5,-7,-10,6,-4,4,-1,9,-7,-8,9,3,-3,2,-4,-4,-9,-10,7,4,-9,9,5,7,10,-4,-9,5,-2,10,7,3,-7,9,-10,-7,-3,-1,6,-10,-1,5,3,-6,9,9,1,6,-6,4,-9,-7,9,3,-5,-2,-1,-8,9,9,9,-5,-1,-8,7,-5,5,3,9,9,-10,10,-10,-6,-2,6,-3,2,4,-3,2,-1,9,2,9,1,4,1,-10,2,1,3,-1,-10,-5,-7,-2,-5,-10,10,-10,-9,2,10,-6,-6,-10,-1,-2,-7,-5,-5,3,-1,-8,-4,-3,5,-2,9,-5,5,4,6,6,-4,-8,-1,8,5,2,-6,-4,-2,4,-4,-6,6,-4,7,-8,4,-9,-8,-4,5,-2,-1,-2,3,-4,-6,-8,2,7,-4,2,10,1,-10,-8,-3,8,9,6,-5,-2,5,-3,10,8,-4,1,10,9,7,7,-2,-3,-4,-4,1,1,-4,3,-6,-9,9,-2,2,-1,1,-8,-2,3,-1,-6,-4,10,-1,5,6,-6,4,8,-1,6,8,4,-8,-7,-5,3,7,-9,-8,4,8,1,-9,-1,-7,-2,-2,4,-5,-1,1,4,-9,6,7,3,1,-9,-2,-3,-7,3,-3,-1,9,3,-8,-10,7,-4,8,-10,-9,1,9,-10,9,8,-2,2,-3,-1,-9,-7,9,-3,-7,7,-5,-9,2,-3,-5,-5,-1,10,4,-4,4,-1,3,9,-10,7,-5,-10,-10,-2,-3,3,5,-8,5,-2,-3,2,-9,-5,-7,4,1,-1,-4,-5,9,1,-1,3,-10,5,-7,1,-9,-5,-1,10,-1,-4,-5,4,-8,8,-3,-5,5,10,8,8,-10,-4,1,4,7,9,-6,4,9,3,-6,-6,-2,-4,10,10,6,10,9,9,1,-6,10,-4,5,-10,-8,3,-5,-2,1,-4,7,-2,9,2,9,10,1,8,-1,-6,-5,1,-6,-6,9,3,7,4,-7,7,-6,5,10,3,2,-2,-10,10,8,-4,7,2,-3,9,5,-5,-2,8,6,5,5,-8,2,3,-5,6,-4,-5,7,6,1,-2,-4,8,6,-1,-1,-7,6,-3,-7,-2,-1,8,4,-9,3,-9,-4,10,-10,-10,-9,-4,-7,7,-9,-4,9,-8,4,-7,9,-8,5,-2,9,6,10,-5,8,-2,-3,7,8,5,1,3,-10,-4,8,-9,-1,-7,4,8,3,1,6,-10,-3,10,-8,5,-5,4,6,-2,-8,-8,10,6,-5,3,-7,10,7,6,-7,5,2,7,3,-5,-8,-3,10,-4,-8,-10,8,-7,-2,-2,5,-10,5,5,7,-8,4,3,-3,-8,-4,8,-10,6,-7,2,-6,-9,2,-10,5,-3,-9,2,5,-5,-10,-10,-7,2,-7,-7,9,-5,-1,9,10,4,2,1,10,6,-8,-10,-5,2,9,4,-7,-10,-3,-6,-2,-2,8,2,9,8,4,-6,-2,-2,10,-10,4,-7,8,-10,4,5,-7,-2,6,-6,9,1,10,4,-1,7,4,-4,7,-5,8,-5,-10,1,-8,-8,1,-8,-3,1,7,-1,1,-7,9,-9,3,-10,-10,7,-10,-5,-6,-1,5,5,9,-5,9,-9,6,-5,-2,2,-6,2,-5,8,-7,-10,-1,6,-9,10,-5,-6,5,-9,-6,10,9,-1,-6,6,8,-8,9,6,-5,5,5,2,-5,-8,-2,-7,8,-5,-5,-10,7,1,-1,3,3,-9,-3,10,-2,1,5,-4,3,9,-2,-2,-8,4,-8,-7,-5,3,7,-6,-2,-2,-4,-1,-8,7,-3,9,-10,1,10,-2,6,4,7,-2,-6,5,3,-9,10,2,-2,3,4,1,5,8,7,5,-2,4,-3,10,-6,-8,-2,8,-9,-8,-6,-6,2,-2,-6,6,6,-5,-8,-9,-3,-1,-5,-1,-9,-9,9,7,9,-2,-6,2,6,-5,4,9,8,4,-8,-10,-5,-3,4,8,9,8,-8,-9,2,1,7,5,9,-1,-6,5,9,8,9,-7,-5,4,-9,-6,-9,7,6,-5,5,5,8,5,-9,1,8,-6,6,4,5,6,-8,1,-7,10,-2,-3,4,-8,-10,3,-10,1,-9,9,7,-7,10,-9,-4,-9,6,7,-2,5,5,-2,-4,-10,7,8,-7,-9,5,-4,-10,3,6,6,-6,-2,6,7,4,-5,-9,7,10,-4,7,-1,-2,-1,-6,-8,5,-3,-3,-2,-8,-10,-2,4,4,-6,-6,5,3,10,-2,-2,-10,7,5,-10,8,1,-8,1,-1,-2,6,-6,-5,10,5,-6,9,8,-5,-7,8,-1]], dtype = "int64")#candidate|7627|(1, 960)|const|int64
call_7624 = relay.TupleGetItem(func_2128_call(relay.reshape(var_7625.astype('uint8'), [6, 7, 6]), relay.reshape(var_7625.astype('uint8'), [6, 7, 6]), relay.reshape(var_7608.astype('float32'), [36, 10]), relay.reshape(var_7626.astype('float64'), [4, 112]), relay.reshape(const_7627.astype('int64'), [960,]), ), 12)
call_7628 = relay.TupleGetItem(func_2134_call(relay.reshape(var_7625.astype('uint8'), [6, 7, 6]), relay.reshape(var_7625.astype('uint8'), [6, 7, 6]), relay.reshape(var_7608.astype('float32'), [36, 10]), relay.reshape(var_7626.astype('float64'), [4, 112]), relay.reshape(const_7627.astype('int64'), [960,]), ), 12)
bop_7629 = relay.logical_xor(uop_7587.astype('int8'), relay.reshape(var_7581.astype('int8'), relay.shape_of(uop_7587))) # shape=(9, 10, 8)
bop_7642 = relay.bitwise_or(uop_7587.astype('uint8'), relay.reshape(bop_7598.astype('uint8'), relay.shape_of(uop_7587))) # shape=(9, 10, 8)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
var_7660 = relay.var("var_7660", dtype = "float64", shape = (21, 5))#candidate|7660|(21, 5)|var|float64
call_7659 = relay.TupleGetItem(func_871_call(relay.reshape(var_7660.astype('float64'), [1, 15, 7])), 1)
call_7661 = relay.TupleGetItem(func_874_call(relay.reshape(var_7660.astype('float64'), [1, 15, 7])), 1)
output = relay.Tuple([bop_7582,call_7605,var_7606,var_7607,var_7608,const_7609,var_7610,call_7624,var_7625,var_7626,const_7627,bop_7629,bop_7642,call_7659,var_7660,])
output2 = relay.Tuple([bop_7582,call_7611,var_7606,var_7607,var_7608,const_7609,var_7610,call_7628,var_7625,var_7626,const_7627,bop_7629,bop_7642,call_7661,var_7660,])
func_7675 = relay.Function([var_7580,var_7581,var_7606,var_7607,var_7608,var_7610,var_7625,var_7626,var_7660,], output)
mod['func_7675'] = func_7675
mod = relay.transform.InferType()(mod)
mutated_mod['func_7675'] = func_7675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7675_call = mutated_mod.get_global_var('func_7675')
var_7677 = relay.var("var_7677", dtype = "float64", shape = (9, 10, 8))#candidate|7677|(9, 10, 8)|var|float64
var_7678 = relay.var("var_7678", dtype = "float64", shape = (9, 10, 8))#candidate|7678|(9, 10, 8)|var|float64
var_7679 = relay.var("var_7679", dtype = "float32", shape = (65, 5))#candidate|7679|(65, 5)|var|float32
var_7680 = relay.var("var_7680", dtype = "float64", shape = (1440,))#candidate|7680|(1440,)|var|float64
var_7681 = relay.var("var_7681", dtype = "float32", shape = (360,))#candidate|7681|(360,)|var|float32
var_7682 = relay.var("var_7682", dtype = "float32", shape = (1, 260))#candidate|7682|(1, 260)|var|float32
var_7683 = relay.var("var_7683", dtype = "uint8", shape = (252,))#candidate|7683|(252,)|var|uint8
var_7684 = relay.var("var_7684", dtype = "float64", shape = (448,))#candidate|7684|(448,)|var|float64
var_7685 = relay.var("var_7685", dtype = "float64", shape = (21, 5))#candidate|7685|(21, 5)|var|float64
call_7676 = func_7675_call(var_7677,var_7678,var_7679,var_7680,var_7681,var_7682,var_7683,var_7684,var_7685,)
output = call_7676
func_7686 = relay.Function([var_7677,var_7678,var_7679,var_7680,var_7681,var_7682,var_7683,var_7684,var_7685,], output)
mutated_mod['func_7686'] = func_7686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7717 = relay.var("var_7717", dtype = "int32", shape = ())#candidate|7717|()|var|int32
var_7718 = relay.var("var_7718", dtype = "int32", shape = (1, 8, 11))#candidate|7718|(1, 8, 11)|var|int32
bop_7719 = relay.greater_equal(var_7717.astype('bool'), var_7718.astype('bool')) # shape=(1, 8, 11)
func_6901_call = mod.get_global_var('func_6901')
func_6902_call = mutated_mod.get_global_var('func_6902')
call_7726 = relay.TupleGetItem(func_6901_call(), 0)
call_7727 = relay.TupleGetItem(func_6902_call(), 0)
func_6840_call = mod.get_global_var('func_6840')
func_6843_call = mutated_mod.get_global_var('func_6843')
var_7739 = relay.var("var_7739", dtype = "float64", shape = (3584,))#candidate|7739|(3584,)|var|float64
call_7738 = relay.TupleGetItem(func_6840_call(relay.reshape(var_7739.astype('float64'), [16, 16, 14])), 0)
call_7740 = relay.TupleGetItem(func_6843_call(relay.reshape(var_7739.astype('float64'), [16, 16, 14])), 0)
const_7756 = relay.const([[[True,False,False,True,False,False,False,True,True,True,False,True,True,True],[False,False,True,False,False,True,False,False,False,True,True,True,True,True],[True,False,True,False,False,True,True,False,False,True,True,True,False,False],[False,True,True,False,True,False,False,False,True,False,False,False,False,True],[True,True,False,False,True,True,False,True,True,True,True,True,False,True],[False,True,True,False,False,False,False,False,False,False,False,True,False,False],[True,False,True,True,False,True,True,True,False,False,True,True,True,False],[False,False,True,False,True,False,False,True,False,False,True,False,False,True],[False,True,True,True,True,False,False,True,True,False,True,False,False,False],[True,True,False,False,True,False,False,False,False,True,False,True,True,True],[True,False,True,True,True,False,True,False,True,True,False,False,True,True],[False,True,True,False,True,True,False,False,True,False,True,False,True,True],[True,True,False,False,True,True,False,False,False,True,False,True,False,False],[True,False,True,False,True,False,False,False,False,False,True,True,False,False],[True,False,True,False,True,True,True,False,True,True,False,True,False,False],[False,False,True,True,False,False,True,False,True,True,False,True,True,True]],[[False,False,True,False,False,False,False,True,False,True,True,True,False,True],[False,False,True,False,True,False,True,True,True,True,True,False,False,False],[True,False,True,True,False,True,True,False,True,False,True,True,True,False],[False,False,True,False,False,False,False,True,True,False,True,False,True,False],[False,True,False,True,True,False,False,True,True,False,True,False,False,False],[False,True,False,False,True,True,True,False,False,True,True,True,True,False],[True,False,True,True,False,True,False,True,True,False,True,False,False,False],[True,False,True,True,False,True,True,True,True,False,True,True,False,True],[False,True,True,True,False,False,False,False,False,False,True,True,False,False],[False,True,True,True,True,False,False,True,True,True,True,False,False,False],[True,False,True,True,True,True,False,True,True,False,True,True,False,True],[True,True,True,True,False,False,False,True,False,False,True,False,True,False],[False,True,False,False,True,False,True,True,True,False,False,False,False,False],[False,True,True,True,False,False,False,False,True,False,True,True,False,False],[True,True,False,False,True,True,False,False,True,True,True,False,True,False],[False,False,False,False,True,True,True,True,True,True,True,False,True,False]],[[False,True,True,True,True,True,True,False,False,True,False,True,True,False],[True,False,False,False,False,False,False,True,True,False,False,False,True,True],[True,True,False,True,False,True,False,True,False,False,True,True,True,False],[False,False,False,False,True,False,False,True,False,False,True,True,False,True],[True,False,True,False,True,True,True,True,False,False,True,False,False,False],[True,True,False,False,False,False,False,True,False,False,False,False,False,True],[True,True,True,True,True,False,True,False,True,True,True,True,True,False],[True,True,True,True,False,True,True,False,False,True,True,False,True,False],[True,True,True,False,False,False,True,True,False,True,True,True,False,True],[False,True,True,False,False,False,True,False,False,False,True,False,True,False],[False,False,False,True,True,False,False,False,False,True,True,True,False,True],[False,False,False,True,True,True,True,True,False,False,False,False,False,True],[False,True,True,False,True,False,False,False,False,False,False,False,True,False],[True,False,True,False,False,True,True,False,False,False,True,False,False,True],[False,False,False,False,True,False,True,False,False,True,False,False,True,True],[False,False,True,False,False,False,False,True,True,True,True,True,True,False]],[[False,True,False,False,True,False,True,False,False,False,False,False,True,False],[False,False,True,True,False,False,True,True,False,True,False,True,False,True],[True,True,True,True,False,True,True,True,False,False,True,False,False,True],[True,True,True,True,True,True,False,False,True,True,True,False,False,True],[True,False,False,False,True,True,True,True,True,True,False,True,True,True],[True,False,False,False,True,False,False,True,True,False,True,False,False,False],[False,False,True,False,True,True,False,False,False,False,False,True,True,False],[False,False,False,False,False,False,False,False,False,False,True,True,True,False],[False,True,False,False,True,True,False,False,False,True,True,False,True,True],[False,False,True,False,False,True,False,True,False,True,True,False,True,False],[False,False,False,False,True,False,False,True,True,True,True,True,False,False],[True,True,True,True,True,True,False,True,False,False,False,False,True,True],[True,True,True,True,True,True,True,True,True,True,False,False,False,True],[True,False,False,True,True,True,False,False,False,False,False,True,True,False],[True,False,False,False,True,True,True,True,True,False,False,False,False,False],[True,False,True,False,True,True,True,False,True,False,True,True,False,True]],[[False,True,True,False,False,True,False,True,True,False,False,False,False,False],[False,False,False,True,True,False,False,False,True,True,False,False,True,True],[False,False,False,False,True,False,False,True,True,True,True,False,True,True],[False,True,False,True,False,False,False,True,False,False,True,False,False,True],[False,True,True,False,True,True,True,True,True,True,False,True,False,True],[True,True,True,False,True,True,True,True,True,True,False,False,False,True],[False,False,False,False,True,True,True,True,True,False,False,False,True,False],[True,False,False,True,True,True,True,False,False,False,True,True,True,True],[True,True,False,True,True,True,False,True,False,True,False,True,True,False],[False,False,False,True,False,False,False,False,True,True,False,True,True,False],[True,True,True,False,False,False,False,False,True,False,True,True,True,True],[True,False,True,True,False,True,False,True,False,True,True,True,False,True],[True,False,True,False,True,True,False,True,True,False,True,False,False,False],[True,True,True,False,True,False,True,False,False,False,True,False,True,False],[True,True,True,False,True,True,False,False,False,True,False,True,True,True],[True,False,False,False,True,True,True,True,False,False,True,False,False,False]],[[False,True,False,True,True,True,False,False,False,False,True,False,True,True],[True,True,False,False,True,False,True,False,False,False,True,False,False,False],[False,True,False,False,False,False,True,True,False,True,False,False,False,True],[True,True,False,False,False,False,True,True,True,False,False,True,False,True],[True,False,False,True,True,False,True,False,True,False,True,True,False,True],[True,False,False,False,True,False,True,False,True,False,True,False,False,True],[True,False,True,False,False,True,True,False,True,False,False,False,False,True],[True,False,True,True,False,True,True,False,False,False,False,True,False,True],[True,False,True,False,False,False,False,True,True,True,True,False,True,True],[True,True,False,False,False,True,True,False,True,True,False,True,True,False],[False,False,False,True,False,True,True,True,True,True,False,False,False,True],[False,True,False,True,False,False,False,False,False,True,True,True,False,True],[False,False,False,False,False,False,True,False,True,False,True,False,True,True],[False,True,False,False,False,False,False,False,True,False,True,True,True,False],[False,False,True,False,False,True,False,False,True,True,False,False,True,False],[False,False,True,False,True,False,True,True,False,True,True,True,True,False]],[[False,False,False,False,False,False,False,False,True,False,False,True,True,True],[True,False,True,False,False,False,False,True,False,True,False,True,False,False],[False,True,False,True,False,True,True,False,True,False,True,False,False,True],[True,False,False,True,False,True,True,True,False,True,False,False,True,True],[True,True,True,False,True,True,True,True,False,False,True,True,False,False],[False,True,False,True,True,False,False,True,False,True,False,False,True,True],[False,False,False,False,True,True,False,False,False,True,True,True,True,True],[False,False,True,False,True,True,False,False,False,False,True,False,False,False],[False,True,True,False,True,True,False,False,False,False,True,False,True,False],[True,True,True,False,True,True,False,False,False,False,False,False,True,True],[False,True,True,False,False,False,True,True,True,True,True,True,False,False],[False,True,True,True,False,False,True,True,True,False,True,False,False,True],[False,True,True,True,False,False,True,False,True,False,True,False,False,True],[False,False,True,False,True,False,True,False,True,True,True,False,True,True],[False,True,False,True,True,True,False,True,False,True,False,True,False,True],[True,False,False,True,False,False,True,True,False,True,True,True,False,True]],[[False,True,False,False,False,False,True,True,False,True,True,False,True,True],[True,True,False,False,True,True,False,True,True,True,False,True,False,False],[True,False,True,True,True,True,True,False,True,True,True,True,False,False],[True,True,True,False,False,False,True,True,True,True,False,False,False,True],[True,True,True,False,True,False,True,True,True,True,True,False,False,False],[False,False,True,True,False,False,False,False,False,True,False,True,False,False],[True,False,True,True,True,False,True,True,False,True,False,True,False,True],[False,False,True,False,False,False,True,False,True,True,True,True,False,True],[True,False,True,False,True,True,True,False,True,True,True,False,False,True],[True,False,False,True,False,False,True,False,False,True,True,True,False,False],[True,True,True,False,True,False,False,False,True,False,True,True,True,False],[True,True,False,False,True,False,False,True,False,True,True,True,False,False],[False,True,False,True,False,True,True,True,False,False,False,True,False,True],[False,True,True,True,False,True,False,True,False,False,False,False,True,True],[True,False,False,False,True,False,True,True,False,True,False,False,True,False],[True,True,True,False,False,True,True,False,False,True,True,False,True,True]],[[True,True,False,False,True,False,False,False,True,False,True,True,True,True],[True,False,False,False,True,True,False,True,False,False,True,True,True,False],[True,True,True,False,False,True,True,True,False,True,True,True,True,False],[False,False,True,True,False,True,True,True,True,False,False,True,False,True],[False,True,True,False,False,False,False,False,False,True,True,False,True,False],[True,False,False,True,True,False,False,True,True,True,True,False,True,True],[False,True,True,False,True,False,False,True,True,True,False,True,False,True],[True,True,False,False,False,False,True,True,False,True,False,False,False,True],[False,False,True,False,True,False,True,False,False,True,False,True,False,False],[False,True,True,True,False,True,True,False,False,False,True,False,True,False],[False,False,True,True,False,False,True,True,False,False,False,True,False,False],[False,False,False,True,True,True,False,False,True,False,False,True,False,False],[True,False,False,False,False,True,True,False,False,False,True,False,True,True],[True,True,True,False,True,True,True,True,True,True,True,False,True,True],[True,False,True,False,False,True,False,False,True,True,False,True,False,True],[True,True,True,True,False,False,True,True,False,False,False,True,True,True]],[[True,True,True,False,True,False,False,True,False,True,True,True,False,True],[False,False,False,True,True,True,False,True,False,True,True,False,True,True],[True,True,True,False,False,False,False,True,False,False,False,False,True,True],[True,False,False,True,False,False,True,False,False,True,True,False,True,False],[False,False,False,True,True,True,True,True,True,True,False,True,True,False],[False,True,True,True,True,True,True,True,False,False,True,False,True,True],[False,False,True,False,True,True,True,False,False,False,False,True,True,False],[True,False,True,True,True,False,False,False,False,True,False,False,True,True],[False,True,False,False,True,False,False,False,True,True,True,False,True,True],[True,False,True,False,False,False,True,False,True,False,False,True,True,False],[True,True,False,True,False,False,True,True,False,True,False,False,False,True],[False,True,False,True,True,True,False,True,False,True,True,True,True,False],[False,True,False,True,False,False,False,False,True,True,True,True,False,True],[True,False,False,True,True,False,True,False,False,True,True,False,False,True],[True,False,True,True,True,True,False,True,False,False,True,True,True,False],[False,True,False,False,True,False,True,False,True,False,False,True,True,True]],[[True,False,False,False,False,True,True,True,True,True,False,True,True,True],[False,False,True,False,True,True,False,False,False,False,False,True,False,False],[False,False,True,True,False,False,True,False,True,False,True,False,True,True],[True,False,False,True,False,True,False,True,True,False,True,True,False,True],[False,True,True,False,True,False,True,True,False,False,True,False,False,False],[False,True,True,False,True,True,True,True,False,True,False,True,False,True],[False,False,False,False,True,True,False,False,True,True,True,False,True,False],[False,True,False,False,False,True,False,True,False,False,False,True,True,False],[False,True,True,True,False,True,True,True,False,False,False,False,True,True],[False,True,False,False,False,False,False,True,False,True,False,False,True,True],[True,False,True,False,False,True,True,False,False,False,True,True,False,True],[True,False,True,True,True,True,True,True,True,True,False,True,False,True],[False,True,False,True,False,True,True,False,False,False,False,True,True,True],[False,True,True,True,True,False,False,False,True,True,False,False,False,False],[False,True,True,False,False,True,True,False,True,True,False,True,True,False],[False,False,False,False,False,True,True,True,True,True,False,False,False,False]],[[False,True,False,False,False,False,False,False,True,False,True,False,True,True],[False,False,False,False,True,False,True,True,True,False,False,False,False,False],[False,False,False,False,True,True,True,True,True,True,False,False,True,True],[True,False,False,True,True,False,True,False,False,False,True,True,True,True],[True,True,False,True,True,False,False,True,True,True,False,False,False,False],[True,False,True,False,False,False,True,True,False,False,True,True,True,False],[False,False,False,False,True,False,True,False,False,True,True,False,False,False],[False,True,False,True,True,False,True,True,False,False,True,False,True,False],[True,False,True,False,False,True,False,True,True,True,True,True,True,True],[True,True,True,False,False,True,True,True,True,True,True,True,True,False],[False,False,False,True,False,True,True,False,False,True,True,True,True,True],[True,False,False,False,True,True,False,False,False,False,True,False,True,False],[True,False,False,True,True,True,True,True,False,False,False,True,False,True],[False,True,False,True,True,False,False,False,True,False,False,False,False,False],[False,True,False,True,False,True,True,True,False,False,False,False,False,False],[True,False,False,False,True,False,True,False,True,True,True,False,False,True]],[[False,False,True,False,False,False,False,False,True,True,True,True,True,True],[True,True,False,True,False,False,True,True,False,False,False,True,False,True],[False,False,False,False,False,False,True,False,False,True,False,True,False,True],[False,True,True,True,False,True,False,False,True,True,False,True,False,False],[True,False,True,True,False,True,True,False,True,False,True,True,True,True],[False,True,True,False,False,False,False,True,True,False,True,False,False,True],[True,False,True,False,False,False,True,False,False,True,False,True,True,True],[True,True,True,True,False,False,False,True,False,False,False,True,False,True],[True,False,True,False,False,False,True,False,True,False,False,True,True,True],[False,True,False,True,False,True,True,False,True,True,True,True,True,True],[False,True,True,True,False,False,False,False,False,True,True,True,True,True],[False,True,False,True,False,True,False,False,False,True,False,False,False,False],[True,True,True,False,True,False,True,True,False,True,True,True,False,False],[False,False,False,True,True,False,False,True,True,False,True,False,False,True],[False,False,True,True,False,True,True,True,True,True,False,False,False,True],[True,True,False,True,True,False,False,False,False,False,True,False,True,False]],[[False,True,True,False,True,True,True,True,False,True,False,True,False,False],[True,False,False,False,True,False,False,False,False,False,False,False,True,True],[False,False,True,False,True,True,False,False,False,False,False,False,True,False],[True,True,True,True,True,True,True,True,True,True,True,True,False,False],[True,True,True,False,True,True,False,False,False,True,False,False,True,False],[False,False,True,True,True,False,False,False,True,False,True,False,True,True],[True,True,True,False,False,False,False,True,True,True,True,True,False,False],[True,True,False,True,True,True,True,False,True,True,False,False,True,False],[False,True,True,True,False,False,False,True,False,False,False,False,True,False],[True,True,False,True,False,False,False,True,False,True,True,True,True,False],[False,False,False,False,True,True,False,False,True,False,True,True,False,True],[True,False,True,True,True,True,False,False,False,False,True,False,False,True],[True,True,True,True,True,True,False,True,False,False,True,True,False,False],[False,False,True,False,False,True,True,False,False,True,False,False,True,True],[False,True,False,False,False,True,True,False,False,True,True,False,True,False],[True,True,False,False,False,True,False,False,False,True,False,True,False,False]],[[True,True,False,False,True,False,False,True,False,True,True,False,True,False],[True,False,False,False,False,False,False,False,False,False,False,False,True,True],[True,True,True,True,True,True,True,False,False,True,True,False,False,True],[False,True,True,True,False,False,False,False,False,False,False,False,True,False],[True,False,True,False,False,True,True,True,False,False,True,False,True,False],[False,False,True,True,True,True,False,True,True,False,True,True,True,True],[False,False,False,True,False,True,True,False,False,True,True,True,True,False],[True,True,True,False,True,False,True,False,True,True,False,False,False,True],[False,True,True,False,True,True,True,True,False,False,False,True,True,True],[False,True,False,True,False,True,True,True,True,False,True,True,False,True],[True,False,True,True,True,False,True,False,True,False,True,True,True,True],[False,False,True,False,True,True,False,True,False,True,False,True,False,False],[False,False,True,False,False,False,True,True,False,True,True,True,True,False],[True,False,False,True,True,True,False,False,False,False,False,False,True,False],[True,True,False,False,True,False,False,True,False,True,False,True,False,True],[False,False,False,True,False,False,True,True,True,True,False,True,True,False]],[[True,False,False,False,False,True,False,True,True,False,True,True,False,True],[False,False,True,True,False,True,False,True,True,True,False,False,False,False],[True,True,False,False,False,True,False,False,False,True,True,True,True,False],[False,True,False,True,False,True,False,False,False,False,True,True,False,False],[True,False,False,False,False,True,False,False,False,False,False,False,True,True],[True,True,False,True,False,False,False,False,True,False,True,True,True,False],[False,True,False,True,True,True,True,True,False,True,True,False,True,True],[False,True,True,True,False,True,False,False,True,True,True,False,True,False],[True,False,False,True,True,True,False,True,False,True,False,False,False,False],[False,True,True,False,False,False,True,False,True,True,True,False,False,False],[False,False,False,True,False,False,False,False,True,False,True,True,True,True],[True,True,True,True,True,True,True,True,True,False,False,True,False,True],[True,False,True,False,False,True,True,True,True,False,True,True,False,False],[False,False,True,False,True,True,True,False,False,True,False,True,True,False],[False,True,True,False,False,False,False,False,True,True,True,False,True,False],[True,False,False,False,False,False,False,True,True,True,False,True,False,False]]], dtype = "bool")#candidate|7756|(16, 16, 14)|const|bool
bop_7757 = relay.less(call_7738.astype('bool'), relay.reshape(const_7756.astype('bool'), relay.shape_of(call_7738))) # shape=(16, 16, 14)
bop_7760 = relay.less(call_7740.astype('bool'), relay.reshape(const_7756.astype('bool'), relay.shape_of(call_7740))) # shape=(16, 16, 14)
output = relay.Tuple([bop_7719,call_7726,var_7739,bop_7757,])
output2 = relay.Tuple([bop_7719,call_7727,var_7739,bop_7760,])
func_7763 = relay.Function([var_7717,var_7718,var_7739,], output)
mod['func_7763'] = func_7763
mod = relay.transform.InferType()(mod)
mutated_mod['func_7763'] = func_7763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7763_call = mutated_mod.get_global_var('func_7763')
var_7765 = relay.var("var_7765", dtype = "int32", shape = ())#candidate|7765|()|var|int32
var_7766 = relay.var("var_7766", dtype = "int32", shape = (1, 8, 11))#candidate|7766|(1, 8, 11)|var|int32
var_7767 = relay.var("var_7767", dtype = "float64", shape = (3584,))#candidate|7767|(3584,)|var|float64
call_7764 = func_7763_call(var_7765,var_7766,var_7767,)
output = call_7764
func_7768 = relay.Function([var_7765,var_7766,var_7767,], output)
mutated_mod['func_7768'] = func_7768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mod.get_global_var('func_6960')
func_6961_call = mutated_mod.get_global_var('func_6961')
call_7835 = func_6960_call()
call_7836 = func_6960_call()
func_1267_call = mod.get_global_var('func_1267')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_7840 = relay.var("var_7840", dtype = "float64", shape = (1440,))#candidate|7840|(1440,)|var|float64
call_7839 = relay.TupleGetItem(func_1267_call(relay.reshape(var_7840.astype('float64'), [15, 6, 16])), 0)
call_7841 = relay.TupleGetItem(func_1270_call(relay.reshape(var_7840.astype('float64'), [15, 6, 16])), 0)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_7842 = func_6092_call()
call_7843 = func_6092_call()
func_2172_call = mod.get_global_var('func_2172')
func_2174_call = mutated_mod.get_global_var('func_2174')
const_7847 = relay.const([[-4.623052,3.545288,2.153669,-2.092257,-5.633473,7.515644,5.453279,-6.721382,-6.176361,4.253494,-6.107912,-8.207370,-0.794988,8.339930,2.423670,7.766984,-4.691711,-9.675829,6.512066,1.333014,-4.093784,-1.707785],[6.945411,-5.485669,-7.179869,3.474408,5.607543,0.114740,7.018355,8.507472,7.825377,-0.837026,9.978515,-8.696355,9.496521,-5.179818,-7.367160,0.463541,2.566324,-1.961319,4.758569,-6.389277,6.572154,-2.632970],[0.982577,1.870401,0.744217,-6.505676,-1.786319,2.354595,-1.189705,1.129498,-7.716162,8.780598,-0.785450,-8.133612,9.306501,-4.683262,-5.050574,4.385094,-6.255518,-4.156933,-1.130793,-1.980632,8.292886,-6.382859],[-5.944481,5.191193,1.798239,-4.114685,-7.201607,9.830121,-6.304799,-2.532125,2.793852,-3.838689,-9.159430,4.510232,6.041602,0.403492,4.935028,-7.572869,1.783765,4.796083,-9.200350,-4.962483,-1.757439,-3.624327],[2.093016,7.395561,-3.749297,2.473779,-7.185745,3.497862,-1.424859,1.880110,3.859051,3.023856,7.984386,4.641868,1.181749,-4.750475,1.938058,-8.346885,0.403360,1.516571,3.468727,-8.293297,4.183816,4.770343],[-9.655322,-1.603685,-2.580845,-2.091528,-6.838376,-4.184023,7.614259,3.828944,7.946499,2.831998,8.922163,1.705826,8.337253,-3.718809,0.331118,8.857719,-1.992000,0.771067,7.973796,-7.119048,2.258308,4.736918],[6.607589,-6.150503,-7.110215,7.099812,-3.431050,-3.978920,-3.101923,5.122086,-8.683993,5.282374,-3.380568,-7.304710,-6.123156,9.923837,7.672603,-3.382547,4.415291,3.367617,4.751027,4.844593,7.265343,8.633189],[-3.298759,-3.388355,7.407082,-0.108100,-0.398434,-6.656859,7.288502,8.619600,-1.043033,-4.819581,-0.355615,-7.946474,-8.619536,0.529593,6.589189,-5.235844,3.716492,5.155679,-7.427509,-7.914256,-2.812282,-7.226289],[-1.008077,-3.642280,0.624097,-8.121893,-9.489664,6.576652,-4.945223,8.565456,-4.919548,-5.052229,-2.069949,-5.608399,8.785259,5.338055,4.347005,4.892971,3.341289,6.498189,-6.444805,-5.111796,-6.631719,-5.008581],[9.481029,-2.781382,1.020299,0.025114,-1.050437,-9.020302,7.572390,5.235847,7.785045,-8.925558,-5.726913,-5.709029,-0.896253,-4.993082,-5.598886,8.676352,-9.006143,3.397980,-4.515476,3.739504,2.811673,-9.297656],[9.772900,8.512125,5.483344,-2.550372,1.917250,-9.510844,7.545484,-4.556525,3.413571,4.404550,-8.665189,3.261106,-6.254990,6.073749,8.319223,-0.672485,-0.667984,2.353680,2.076204,9.393975,-0.259591,-7.800940],[-4.716914,-8.533608,2.478026,7.860000,-8.373732,-2.285318,4.492872,-1.670090,-3.420559,-0.664906,1.920096,-6.460882,3.891517,9.352738,1.357567,3.071395,2.365064,-2.156315,-4.429325,-4.615646,-8.394491,7.011340],[-8.886913,-9.344877,-2.558146,6.818225,2.263095,-7.909621,-3.270343,-0.366000,-3.094473,5.992571,0.173405,-2.450040,-7.390773,6.937589,4.189042,-9.298095,-8.961848,-7.577362,6.739584,-8.152285,8.642674,2.224938],[3.021126,-9.071860,-0.189932,3.588487,8.163774,5.831105,-7.537176,-8.248790,4.210488,8.880804,-7.908428,-0.982357,-0.786129,-9.991239,7.106045,6.514761,2.133022,-2.090496,8.167368,-6.112596,9.860889,-5.913169],[-7.293968,-6.101951,-3.241336,5.870334,6.833934,-1.535132,7.325029,-3.606461,0.941972,8.751100,1.983979,-3.932441,8.495769,9.894629,-0.781893,-9.356951,-2.866381,-4.818720,-8.537216,5.381278,6.992192,1.559630],[-1.837778,9.711074,1.440405,0.854403,1.114422,-6.304067,-1.528428,0.898577,1.940016,3.824930,-1.996770,-7.650877,5.542213,3.311453,-9.432180,2.786188,-9.603042,-4.451702,1.743534,-7.627823,7.005057,4.894751],[-4.472245,-9.295499,-6.300839,7.310864,1.098734,-7.845262,-1.701049,0.493488,-3.982801,7.721940,2.432743,0.066246,5.572748,5.147781,-7.194449,-2.068422,-3.751446,-2.089561,-6.613725,7.680121,-6.793196,5.656945],[3.368123,8.977043,4.935737,-8.493217,-9.396543,-4.385482,9.425705,-9.276980,-9.709946,-8.165117,3.059900,-6.950873,8.442941,9.291609,8.585261,-5.826174,6.441431,-1.363725,-9.435544,9.002424,-7.676285,6.413309],[-2.002458,2.312019,-9.643548,0.820032,7.664025,-7.989696,3.137541,-2.485177,-5.547251,-8.111624,-9.659757,-6.589275,1.282097,0.488836,0.425444,-4.544052,-7.375062,2.857863,1.017089,-1.765370,-6.868925,3.674730],[-5.756466,-2.519242,-8.211511,-4.581282,9.532014,-0.284224,-5.881282,8.211402,-6.094546,8.117776,1.572833,2.233687,0.009048,6.902619,-2.645090,-8.809886,-5.141954,2.531443,7.206504,4.967349,1.208470,7.300432],[0.699683,1.969053,-6.790133,-8.761067,3.374629,3.603421,9.551310,-8.810122,6.514862,-0.216743,0.384902,2.406524,4.991469,-9.768161,-2.331308,1.429106,-7.543501,8.948550,6.425056,-7.902063,6.647626,-3.069972],[7.734665,5.626534,0.687945,-2.115691,2.430350,2.663119,6.973141,0.062632,1.717753,2.736189,-5.795341,7.488175,8.705853,-4.804267,1.550954,5.675833,-6.187877,2.860387,2.542903,-0.189719,2.772795,3.981282],[5.544268,-6.599692,0.471536,-1.086458,-1.883164,-7.540667,-4.666051,2.381794,8.569920,-8.265337,7.315703,1.341888,0.696064,6.707728,6.080032,7.864634,-3.946305,4.285080,-1.917283,5.144481,5.236052,-1.188399],[-7.470165,2.385556,-6.357928,2.743641,-0.675704,-7.419873,8.030377,-4.811399,2.289403,3.048269,-8.206817,9.199917,4.040612,5.700706,-7.827589,-1.019127,9.270064,-8.141539,1.886939,7.312833,-4.216431,5.081132],[-8.364056,-1.365885,-7.594611,2.814938,9.718511,3.818323,5.966419,5.994151,-5.698779,-9.570834,-9.343236,4.880884,2.613359,2.316176,9.282543,2.062703,-7.688142,5.536646,2.428794,9.094268,9.394296,6.561451],[-2.166763,1.719710,-9.356080,-8.418806,-7.781296,-8.193625,7.009904,-0.837084,9.688073,-0.111947,2.606075,-4.591550,-3.855593,5.595574,-6.300831,-6.909901,-4.493943,1.598803,1.317444,5.793565,2.497571,2.806339],[8.276504,4.200790,1.429816,-4.475407,8.666919,-6.385094,1.539075,-1.793846,-2.817927,-6.661190,-7.274691,-9.447802,3.320580,6.845125,9.718812,1.941202,-5.164572,4.026824,-2.468353,1.766462,-9.939332,6.619736],[6.685247,7.007986,-1.931279,-6.245134,8.549524,4.809504,-6.131825,-6.352555,5.232260,-5.731830,-6.262643,-9.211395,-0.594582,1.623449,0.108573,-7.314236,-6.793459,-1.080051,1.013105,4.966400,4.055189,6.488294],[5.862689,-4.189381,-4.888057,1.768688,-3.844733,1.563227,7.653816,-1.712824,-3.752957,8.885741,-2.317275,6.393102,5.149970,3.200340,5.559393,-0.728279,-1.026031,-8.574453,-7.774723,9.842640,6.859457,0.021275],[1.421768,8.755216,-4.908342,-1.357333,-9.110177,-0.240762,-1.416252,2.679439,-2.256776,7.567421,-3.242438,3.537047,9.867052,5.828521,-5.136975,0.959481,-2.158217,9.688740,1.602436,-9.175706,5.432219,7.080562],[-7.403359,-6.599748,1.801092,5.918670,2.105705,-5.573499,2.014507,9.715407,-2.887112,-3.770362,7.349261,3.302368,5.735656,-9.746394,-0.475762,3.888301,-1.105452,1.275955,9.879004,5.129645,-6.847978,8.966907],[-9.197971,4.599291,6.110024,8.040670,9.499661,9.644365,-9.929410,3.212712,-5.613254,9.337959,-7.864467,-1.957116,2.006582,-9.166006,6.644587,-5.831362,-7.481112,-3.328838,2.876660,-5.878866,-4.733818,5.476456],[-4.317927,4.517723,9.232082,5.918385,5.704665,6.997870,-4.529813,-4.038969,0.331628,0.546175,-5.329174,3.452515,7.260789,-9.758856,-3.671140,8.433886,9.860798,5.186611,5.397916,-2.123625,-5.679072,-5.623757],[-7.655478,-5.788831,7.642108,8.407398,7.402626,6.387979,2.610981,-1.339863,8.930704,-6.626817,-2.494771,-4.590893,-8.328786,-9.262714,-1.407191,2.492117,-5.469801,6.611320,5.710162,5.432822,0.407049,-9.021941],[9.375173,-3.698218,-1.979549,2.999787,-0.736576,-0.413341,-8.460571,0.830289,7.941488,7.241338,-4.329446,8.145391,-9.255435,-0.974737,0.141508,-0.610215,8.165594,-1.653229,3.674526,-4.922925,4.547941,-3.853334],[-2.416084,-9.012141,2.909517,9.201960,-3.826833,3.617066,1.408911,8.122847,-0.049412,1.464539,-5.550267,0.957703,1.285182,-4.287334,1.558463,5.571379,-1.245329,6.530102,9.679311,-6.419618,-7.809110,-2.354729]], dtype = "float64")#candidate|7847|(36, 22)|const|float64
call_7846 = relay.TupleGetItem(func_2172_call(relay.reshape(const_7847.astype('float64'), [11, 9, 8])), 0)
call_7848 = relay.TupleGetItem(func_2174_call(relay.reshape(const_7847.astype('float64'), [11, 9, 8])), 0)
output = relay.Tuple([call_7835,call_7839,var_7840,call_7842,call_7846,const_7847,])
output2 = relay.Tuple([call_7836,call_7841,var_7840,call_7843,call_7848,const_7847,])
func_7855 = relay.Function([var_7840,], output)
mod['func_7855'] = func_7855
mod = relay.transform.InferType()(mod)
mutated_mod['func_7855'] = func_7855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7856 = relay.var("var_7856", dtype = "float64", shape = (1440,))#candidate|7856|(1440,)|var|float64
func_7855_call = mutated_mod.get_global_var('func_7855')
call_7857 = func_7855_call(var_7856)
output = call_7857
func_7858 = relay.Function([var_7856], output)
mutated_mod['func_7858'] = func_7858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6307_call = mod.get_global_var('func_6307')
func_6309_call = mutated_mod.get_global_var('func_6309')
call_7860 = func_6307_call()
call_7861 = func_6307_call()
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_7913 = relay.TupleGetItem(func_5863_call(), 1)
call_7914 = relay.TupleGetItem(func_5865_call(), 1)
output = relay.Tuple([call_7860,call_7913,])
output2 = relay.Tuple([call_7861,call_7914,])
func_7919 = relay.Function([], output)
mod['func_7919'] = func_7919
mod = relay.transform.InferType()(mod)
output = func_7919()
func_7920 = relay.Function([], output)
mutated_mod['func_7920'] = func_7920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7192_call = mod.get_global_var('func_7192')
func_7194_call = mutated_mod.get_global_var('func_7194')
call_7995 = relay.TupleGetItem(func_7192_call(), 0)
call_7996 = relay.TupleGetItem(func_7194_call(), 0)
output = call_7995
output2 = call_7996
func_8023 = relay.Function([], output)
mod['func_8023'] = func_8023
mod = relay.transform.InferType()(mod)
output = func_8023()
func_8024 = relay.Function([], output)
mutated_mod['func_8024'] = func_8024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8055 = relay.var("var_8055", dtype = "float32", shape = (12, 5, 1))#candidate|8055|(12, 5, 1)|var|float32
uop_8056 = relay.log2(var_8055.astype('float32')) # shape=(12, 5, 1)
output = uop_8056
output2 = uop_8056
func_8064 = relay.Function([var_8055,], output)
mod['func_8064'] = func_8064
mod = relay.transform.InferType()(mod)
var_8065 = relay.var("var_8065", dtype = "float32", shape = (12, 5, 1))#candidate|8065|(12, 5, 1)|var|float32
output = func_8064(var_8065)
func_8066 = relay.Function([var_8065], output)
mutated_mod['func_8066'] = func_8066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8023_call = mod.get_global_var('func_8023')
func_8024_call = mutated_mod.get_global_var('func_8024')
call_8128 = func_8023_call()
call_8129 = func_8023_call()
output = relay.Tuple([call_8128,])
output2 = relay.Tuple([call_8129,])
func_8143 = relay.Function([], output)
mod['func_8143'] = func_8143
mod = relay.transform.InferType()(mod)
mutated_mod['func_8143'] = func_8143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8143_call = mutated_mod.get_global_var('func_8143')
call_8144 = func_8143_call()
output = call_8144
func_8145 = relay.Function([], output)
mutated_mod['func_8145'] = func_8145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mod.get_global_var('func_6960')
func_6961_call = mutated_mod.get_global_var('func_6961')
call_8184 = func_6960_call()
call_8185 = func_6960_call()
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_8187 = relay.TupleGetItem(func_6152_call(), 0)
call_8188 = relay.TupleGetItem(func_6153_call(), 0)
output = relay.Tuple([call_8184,call_8187,])
output2 = relay.Tuple([call_8185,call_8188,])
func_8194 = relay.Function([], output)
mod['func_8194'] = func_8194
mod = relay.transform.InferType()(mod)
output = func_8194()
func_8195 = relay.Function([], output)
mutated_mod['func_8195'] = func_8195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8215 = relay.var("var_8215", dtype = "uint64", shape = (5, 6, 3))#candidate|8215|(5, 6, 3)|var|uint64
var_8216 = relay.var("var_8216", dtype = "uint64", shape = (5, 6, 3))#candidate|8216|(5, 6, 3)|var|uint64
bop_8217 = relay.bitwise_or(var_8215.astype('uint64'), relay.reshape(var_8216.astype('uint64'), relay.shape_of(var_8215))) # shape=(5, 6, 3)
uop_8228 = relay.log(var_8215.astype('float64')) # shape=(5, 6, 3)
output = relay.Tuple([bop_8217,uop_8228,])
output2 = relay.Tuple([bop_8217,uop_8228,])
func_8256 = relay.Function([var_8215,var_8216,], output)
mod['func_8256'] = func_8256
mod = relay.transform.InferType()(mod)
mutated_mod['func_8256'] = func_8256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8256_call = mutated_mod.get_global_var('func_8256')
var_8258 = relay.var("var_8258", dtype = "uint64", shape = (5, 6, 3))#candidate|8258|(5, 6, 3)|var|uint64
var_8259 = relay.var("var_8259", dtype = "uint64", shape = (5, 6, 3))#candidate|8259|(5, 6, 3)|var|uint64
call_8257 = func_8256_call(var_8258,var_8259,)
output = call_8257
func_8260 = relay.Function([var_8258,var_8259,], output)
mutated_mod['func_8260'] = func_8260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8296 = relay.var("var_8296", dtype = "float32", shape = (14, 11, 5))#candidate|8296|(14, 11, 5)|var|float32
uop_8297 = relay.atanh(var_8296.astype('float32')) # shape=(14, 11, 5)
output = relay.Tuple([uop_8297,])
output2 = relay.Tuple([uop_8297,])
func_8302 = relay.Function([var_8296,], output)
mod['func_8302'] = func_8302
mod = relay.transform.InferType()(mod)
var_8303 = relay.var("var_8303", dtype = "float32", shape = (14, 11, 5))#candidate|8303|(14, 11, 5)|var|float32
output = func_8302(var_8303)
func_8304 = relay.Function([var_8303], output)
mutated_mod['func_8304'] = func_8304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_8354 = func_6092_call()
call_8355 = func_6092_call()
output = relay.Tuple([call_8354,])
output2 = relay.Tuple([call_8355,])
func_8362 = relay.Function([], output)
mod['func_8362'] = func_8362
mod = relay.transform.InferType()(mod)
output = func_8362()
func_8363 = relay.Function([], output)
mutated_mod['func_8363'] = func_8363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6335_call = mod.get_global_var('func_6335')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_8377 = relay.TupleGetItem(func_6335_call(), 0)
call_8378 = relay.TupleGetItem(func_6337_call(), 0)
output = relay.Tuple([call_8377,])
output2 = relay.Tuple([call_8378,])
func_8384 = relay.Function([], output)
mod['func_8384'] = func_8384
mod = relay.transform.InferType()(mod)
output = func_8384()
func_8385 = relay.Function([], output)
mutated_mod['func_8385'] = func_8385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7149_call = mod.get_global_var('func_7149')
func_7150_call = mutated_mod.get_global_var('func_7150')
call_8392 = relay.TupleGetItem(func_7149_call(), 3)
call_8393 = relay.TupleGetItem(func_7150_call(), 3)
output = relay.Tuple([call_8392,])
output2 = relay.Tuple([call_8393,])
func_8398 = relay.Function([], output)
mod['func_8398'] = func_8398
mod = relay.transform.InferType()(mod)
mutated_mod['func_8398'] = func_8398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8398_call = mutated_mod.get_global_var('func_8398')
call_8399 = func_8398_call()
output = call_8399
func_8400 = relay.Function([], output)
mutated_mod['func_8400'] = func_8400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6288_call = mod.get_global_var('func_6288')
func_6289_call = mutated_mod.get_global_var('func_6289')
call_8401 = relay.TupleGetItem(func_6288_call(), 0)
call_8402 = relay.TupleGetItem(func_6289_call(), 0)
func_5941_call = mod.get_global_var('func_5941')
func_5945_call = mutated_mod.get_global_var('func_5945')
const_8416 = relay.const([-3.780549,8.581077,0.078656,-5.045556,2.845165,-4.719912,9.834128,-9.106345,4.235070,2.341353,9.179036,-5.629846,9.186827,-7.719664,-7.595016,-2.037639,-8.736012,5.176627,-1.965141,4.929874,-3.858433,-2.191489,6.229316,-4.448128,-3.096967,1.836284,8.408980,6.803069,7.164308,0.944345,-5.146894,-5.221343], dtype = "float64")#candidate|8416|(32,)|const|float64
const_8417 = relay.const([[8,4,8,5],[-9,2,-8,-6],[3,-2,-1,7],[3,-10,-6,9],[8,5,7,7],[-9,-5,8,-3]], dtype = "int32")#candidate|8417|(6, 4)|const|int32
call_8415 = relay.TupleGetItem(func_5941_call(relay.reshape(const_8416.astype('float64'), [32,]), relay.reshape(const_8417.astype('int32'), [24,]), ), 1)
call_8418 = relay.TupleGetItem(func_5945_call(relay.reshape(const_8416.astype('float64'), [32,]), relay.reshape(const_8417.astype('int32'), [24,]), ), 1)
output = relay.Tuple([call_8401,call_8415,const_8416,const_8417,])
output2 = relay.Tuple([call_8402,call_8418,const_8416,const_8417,])
func_8423 = relay.Function([], output)
mod['func_8423'] = func_8423
mod = relay.transform.InferType()(mod)
mutated_mod['func_8423'] = func_8423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8423_call = mutated_mod.get_global_var('func_8423')
call_8424 = func_8423_call()
output = call_8424
func_8425 = relay.Function([], output)
mutated_mod['func_8425'] = func_8425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8384_call = mod.get_global_var('func_8384')
func_8385_call = mutated_mod.get_global_var('func_8385')
call_8454 = relay.TupleGetItem(func_8384_call(), 0)
call_8455 = relay.TupleGetItem(func_8385_call(), 0)
output = call_8454
output2 = call_8455
func_8484 = relay.Function([], output)
mod['func_8484'] = func_8484
mod = relay.transform.InferType()(mod)
output = func_8484()
func_8485 = relay.Function([], output)
mutated_mod['func_8485'] = func_8485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8484_call = mod.get_global_var('func_8484')
func_8485_call = mutated_mod.get_global_var('func_8485')
call_8486 = func_8484_call()
call_8487 = func_8484_call()
output = relay.Tuple([call_8486,])
output2 = relay.Tuple([call_8487,])
func_8503 = relay.Function([], output)
mod['func_8503'] = func_8503
mod = relay.transform.InferType()(mod)
mutated_mod['func_8503'] = func_8503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8503_call = mutated_mod.get_global_var('func_8503')
call_8504 = func_8503_call()
output = call_8504
func_8505 = relay.Function([], output)
mutated_mod['func_8505'] = func_8505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6152_call = mod.get_global_var('func_6152')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_8562 = relay.TupleGetItem(func_6152_call(), 0)
call_8563 = relay.TupleGetItem(func_6153_call(), 0)
output = call_8562
output2 = call_8563
func_8571 = relay.Function([], output)
mod['func_8571'] = func_8571
mod = relay.transform.InferType()(mod)
output = func_8571()
func_8572 = relay.Function([], output)
mutated_mod['func_8572'] = func_8572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8362_call = mod.get_global_var('func_8362')
func_8363_call = mutated_mod.get_global_var('func_8363')
call_8657 = relay.TupleGetItem(func_8362_call(), 0)
call_8658 = relay.TupleGetItem(func_8363_call(), 0)
func_4364_call = mod.get_global_var('func_4364')
func_4367_call = mutated_mod.get_global_var('func_4367')
const_8665 = relay.const([-2.195085,1.407420,-2.353131,-9.836040,-6.043701,-9.035688,5.816189,1.651322,-5.289576,-0.320752,-9.554006,-8.417499,3.226355,6.989807,5.941650,-6.052606,-7.461383,-9.591167,-4.382414,9.702077,5.790296,9.731720,-3.898380,5.890129,6.801008,-2.277823,-2.793288,-4.713056,-3.123805,-7.193303,-2.365683,5.802564,3.043244,-4.987089,-8.001565,-3.630004,8.026312,-4.076388,-0.809421,-4.054214,-0.476268,4.664740,0.264325,-8.537018,0.432511,5.615247,-8.171429,5.986976,-9.713298,9.279800,1.254333,1.976931,-8.092222,-8.000457,8.967210,-6.270424,1.057559,2.542749,5.153525,-8.657978,-0.344692,5.882064,-7.831191,-6.707019,-1.514328,4.420353,9.733893,-9.238600,5.757183,-9.191401,-8.565739,-0.686587,1.807653,-7.705220,3.587279,8.352917,3.840036,-1.645385,8.704066,-6.376409,5.156698,6.064732,-4.568673,-8.960837,-6.557113,6.102347,5.599230,5.288764,1.057954,-1.535787,-8.249364,-8.019881,-2.674136,-7.404398,-6.171327,1.862973,-9.210265,-2.104719,-7.369108,-2.255064,-6.479059,1.532775,6.889059,-3.736217,9.250115,-5.892581,-1.936812,1.609822,9.830545,8.251301,-4.420743,1.102687,7.811549,-4.563513,-8.490008,1.150214,-9.832011,7.324750,2.152114,-9.265230,-8.017760,-0.264620,8.539197,6.070609,8.547012,-8.412041,6.127710,7.488072,-9.555654,-7.749413,-8.381394,5.605102,6.181633,8.169669,-7.379541,3.779726,-3.863797,0.992562,4.620380,-5.242254,9.196383,-4.337840,5.755980,-1.001105,1.336384,-9.040470,-8.014202,-9.475862,-2.910501,-3.145162,1.750136,8.784501,6.022774,-5.461931,7.746879,-2.224873,8.197816,5.918621,-3.247995,-8.577848,4.401268,5.812108,-3.393620,9.298588,6.873799,1.696244,4.220716,-1.584545,-7.119016,7.070297,-9.905095,-0.113742,-5.317690,-9.135364,9.111729,4.686671,1.869582,-1.092868,-8.785463,2.276518,0.366194,6.280434,5.156867,-4.596258,-6.816884,-8.694508,3.497094,-3.000309,-7.062463,-8.084634,-3.100037,-0.095696,-1.934803,5.106103,-8.434528,3.079706,-2.482569,-8.808083,-1.180282,1.302882,-7.909027,9.809898,-3.303507,-1.888024,-0.932167,3.615907,-8.240787,1.088210,-3.089898,8.232675,9.429288,1.890303,8.896266,8.850292,-1.153823,-1.197931,-7.720860,-5.997295,-4.932316,-4.251167,9.480969,3.383004,1.681835,-7.755352,1.257894,9.108038,-0.701420,-9.760441,-2.421684,-5.360012,-1.332189,-1.489589,-8.759343,-0.109331,5.493870,-0.020050,-5.749728,-4.333858,-8.608946,7.446309,-9.354992,-9.303805,3.372981,6.759980,-3.742625,-0.001583,-7.640409,-6.176705,2.622360,7.955492,4.267640,5.155798,4.356937,7.081504,4.654682,-0.016219,8.908334,-4.156153,1.173582,1.128299,5.226952,8.297547,-2.677719,1.616614,-1.602104,-1.329513,-0.428997,1.205994,1.047096,4.116057,0.182126,-1.840494,-9.538601,-5.153087,-2.481660,9.275297,5.850195,-9.855239,-9.235728,-3.722443,-5.671558,-8.689072,-2.113459,9.456277,1.491025,-6.641770,-6.581741,7.653070,-2.604626,-1.150084,3.375036,-7.815853,-9.921386,-3.843162,-7.985312,5.189060,4.745236,5.459807,6.210808,7.794082,8.008216,-5.306639,8.273421,-1.280570,1.579511,-3.370786,6.948302,0.594661,9.929680,-0.890488,-6.839354,7.853151,-7.411883,-7.680096,5.935287,-1.523202,4.327305,-7.075914,-2.449702,-8.752765,4.141360,5.892503,-9.304515,3.101589,-0.649491,9.370609,9.749259,1.052925,-3.135383,-4.910907,8.626788,-9.069536,5.045068,3.357881,-1.764349,4.376979,3.147020,-9.121405,9.422679,3.410968,4.934046,9.514757,2.217004,-3.549657,-1.350999,6.416141,0.451469,-7.371139,-2.189943,1.941132,-2.131819,6.421054,8.792700,5.114429,9.842921,-7.202976,8.992328,0.052916,-3.507206,-4.658442,-5.760668,8.900611,-6.478031,-5.604289,0.150922,8.383702,-4.497699,3.230071,-4.507485,3.832579,-7.507123,-5.658289,3.595979,-0.272983,-6.404309,-4.531822,2.231914,-2.111527,2.856659,-6.319809,-8.258939,-8.816287,-2.503624,-0.347126,-0.523669,-1.534007,-1.771679,4.978870,1.370953,9.412540,-0.085871,-0.959437,1.527229,7.126956,-2.631787,-2.506790,6.737633,1.612994,-2.487215,-6.303685,8.462296,2.065259,-6.619290,4.344033,3.265883,4.127924,-6.143061,9.532358,-6.841198,7.285751,-7.566522,-6.805399,-1.124305,-1.877707,9.983504,-2.479548,0.209766,-8.544028,-0.784456,5.027426,5.008747,1.102838,7.349203,5.251861,-9.728808,-2.596805,-7.857781,-6.241804,-7.149422,-2.199671,-2.831433,6.843990,-4.545887,4.111502,3.008277,-0.807920,6.787592,7.308766,-5.609951,-8.008764,6.879494,-6.468238,3.243668,-1.938080,4.884221,-8.367776,4.456686,6.090547,2.843383,-8.842651,-1.103569,1.240183,7.296725,-1.975669,-0.407357,-4.958606,4.711192,0.114022,9.369847,-1.739182,-0.985016,-5.347782,-7.262495,-1.393621,-8.846387,7.908366,3.556663,-2.919437,9.400363,9.360381,-8.013036,5.125370,-6.526736,-7.335693,-2.537746,-2.020603,2.551995,9.946114,-6.224856,-7.494477,-8.528310,1.617277,-8.689179,-3.505772,-7.904850,0.347428,4.046073,-8.516890,-4.922945,-0.128684,-6.178205,5.445898,0.531238,5.696119,-8.898978,7.082067,2.863191,1.499603,-8.121187,7.972635,3.131340,6.261377,2.945493,-7.980941,7.232674,1.784361,2.353508,9.269214,1.871845,-6.487899,-5.861425,-2.774777,0.733779,-5.822540,-4.803723,-0.356366,-9.889801,-2.231316,-1.692856,1.289839,8.101488,7.804758,-6.420495,-7.352659,5.903966,3.533110,-0.316215,-5.530359,9.103818,0.008277,-6.140687,9.250998,-2.895216,4.728711,-7.607135,-2.640174,8.796915,-7.095867,-7.825184,4.432780,-7.303896,-0.162586,-2.334722,-1.914382,6.048582,1.426925,6.638634,-3.168565,1.143850,-4.298677,1.350998,3.973440,-6.383286,-2.071376,-4.146376,7.982268,-9.168615,4.653373,-4.206936,4.571773,-7.405415,3.902653,8.842455,0.828508,9.341433,7.481913,-6.231767,4.683686,-8.803387,8.649042,3.132773,8.115182,-4.278209,4.509834,-1.803493,-2.183472,5.300949,5.403526,-6.778241,0.722224,-2.512224,-1.886597,-1.613373,-5.004368,2.527197,7.443873,-8.761220,-4.704968,-3.044984,5.810833,-4.727684,9.258944,5.313257,7.271585,1.805500,-4.868126,7.651517,-3.114173,-2.355433,-3.268865,-1.300577,5.919525,9.225539,-6.296345,0.702594,-7.344769,4.776012,5.543714,-5.856348,-8.485574,-3.089902,-6.761265,7.124169,3.072345,1.924319,0.336721,5.127993,-5.726179,9.140260,-3.287422,-5.584709,-4.516245,-1.840158,-9.852270,-2.248709,-0.601733,6.505073,-0.510279,8.677939,9.957943,-8.283646,1.812889,9.931695,-2.249986,-9.520592,1.170241,5.427099,-0.922233,8.266704,5.728735,-1.139468,-5.640486,-7.942630,-7.093210,-8.763373,-6.738940,4.325746,5.359702,1.628468,1.247328,-5.165641,-8.641489,-2.554380,-5.684272,8.846029,-5.482256,2.882025,-4.322974,5.380086,-4.568224,-3.294401,-8.779643,-3.200850,-7.933905,2.153641,5.600017,-4.044972,-3.374698,-8.735615,-1.664295,-2.811072,5.978145,-9.875847,0.541753,6.472662,6.181461,-8.392308,9.217336,0.896837,-0.979192,1.689692,8.273997,1.444662,-2.330422,-4.580034,8.116469,6.817726,-6.797789,-5.748984,-6.201351,8.437060,8.883856,0.900994,-7.954048,-5.795413,-0.294018,-7.209561,9.730058,1.430063,-1.977041,2.993013,-3.107934,-6.655838,-1.121290,-0.996541,-6.609786,-9.550825,1.780070,-9.511154,4.147195,-7.581140,-8.606899,1.763036,-8.745476,-6.959768,-0.192647,-1.886617,-6.007043,8.738877,-5.388223,8.932220,-1.960723,-8.782548,-1.288677,2.171753,-6.286294,9.788067,2.442787,-7.085971,5.685788,-2.787570,-8.754621,-5.649559,3.354850,7.594100,3.795708,5.880148,7.946701,5.285877,-5.970252,9.077797,-8.848967,-3.724885,7.059733,8.031904,6.091722,-5.731688,-8.511234,-1.218612,-6.526249,1.776493,0.606893,3.623116,5.805772,-5.412544,-7.225981,-5.246653,-8.697977,-8.582423,6.643173,-6.506046,7.212473,1.915772,6.847191,6.705718,2.534563,7.333114,4.500319,5.668370,8.581502,0.200833,0.537740,-7.305739,-3.343959,7.766444,-6.126928,-7.197033,-6.008857,0.870939,4.680480,-3.671654,-0.407283,1.887678,-3.852685,-2.405785,-7.281826,2.048424,0.874605,0.078670,-8.873299,1.498726,-3.661670,-7.699550,7.955392,-8.854400,8.159370,-9.068596,-6.445366,1.890326,-5.964678,-9.402845,0.671403,4.158380,0.315918,-9.304704,4.472341,-7.192668,7.520095,2.440828,1.302032,-5.606941,-2.329580,-7.316071,-8.132656,0.224991,5.890151,-8.946667,-1.808744,3.737599,-9.589926,6.272720,1.900765,-5.925785,4.278120,-7.317357,4.964209,3.472909,0.915080,4.431935,7.893478,-4.843266,-2.345499,-6.642726,-1.223428,5.232890,5.453028,0.091773,-0.045995,-4.715461,0.567473,-7.918489,7.032999,-0.859724,1.425974,-5.398059,-4.893476,8.892693,2.699614,0.184508,4.914041,0.164340,-5.369694,-2.853698,-1.256965,-4.174090,6.058280,-0.461575,-6.576760,7.856067,-0.886504,-6.971723,-9.420795,-2.742221,8.834050,-8.662874,-9.956482,-8.121266,-6.326210,0.497692,7.710725,-2.856074,7.946071,4.874921,1.731593,8.021237,-0.060952,-4.189518,-8.196571,0.122936,6.191730,-4.221454,1.664928,-5.531485,0.013884,-3.194625,7.233727,3.196513,8.953727,-2.049219,3.819859,8.282128,4.074202,5.621579,-1.837487,-5.775696,-1.988652,1.468118,2.992335,1.460749,3.041544,2.612358,-8.073002,6.683032,4.791970,-7.077576,-5.234207,-1.574406,6.024525,2.251306,-3.452569,9.473323,-5.858685,-8.041109,-2.481995,4.851904,0.078627,-6.065145,5.844728,-5.461239,4.175228,-5.053546,-1.817617,-4.616266,-5.684712,2.745961,1.838372,6.335263,9.485922,3.990683,9.523952,2.445937,8.796048,-4.184553,-2.637566,1.612133,4.665684,8.534584,-0.063973,9.856256,8.923274,-0.443990,-3.469356,-4.546703,6.224849,6.433314,-1.664751,-3.972086,6.722098,1.774472,4.448317,3.816187,-8.170128,-5.399962,-9.624309,1.487939,-8.587602,-4.792070,6.711886,-5.546318,-0.877409,1.444560,-4.885796,-6.100142,-5.396205,2.140917,-0.238190,-1.200707,1.930239,-1.303381,-1.242166,0.514581,6.859043,0.335877,9.895940,7.406059,-1.031526,-5.691402,-5.360754,-6.644360,-8.608392,-8.609708,-0.370044,8.573184,9.726027,-6.415226,8.957717,-1.025611,5.969619,9.871252,5.015324,1.609135,8.980308,3.403128,-7.980750,-3.425544,1.978763,-5.295481,3.388768,-5.766781,4.841249,6.081393,-6.216496,7.977897,8.735385,-0.354327,3.155299,-0.865695,-1.730181,1.404276,0.737436,9.689368,-4.701300,6.286058,-4.849723,7.551171,-0.556784,-2.589308,-3.970673,-1.090572,7.659274,5.164463,-1.469540,4.722441,2.802647,-4.718499,8.006918,6.285397,2.924984,4.113536,-6.109019,8.588422,5.978602,-6.569990,9.177186,-8.971474,8.791394,0.139179,4.525528,-0.049230,9.790004,-5.300458,2.570662,1.046457,-7.907863,-9.322250,5.684477,2.373557,2.357802,-0.927700,-6.759738,3.589528,-4.697274,-8.229223,-0.692901,-2.719470,8.753258,-1.764214,4.263215,7.579127,-1.056127,-2.404535,2.333238,7.556273,2.049897,0.007830,-2.044785,-8.591685,1.030429,-5.784540,8.167755,-6.401989,4.352724,5.747414,-3.538558,-0.558287,-4.072498,-1.206219,-1.286704,4.453821,6.691516,-4.709894,4.285936,9.986502,1.017784,-1.966678,-2.902592,8.655277,0.369119,-6.147675,9.604312,6.090080,-7.731480,3.821767,1.442411,-5.296354,6.177647,-2.441286,3.980818,3.521853,7.534923,-1.881268,-4.314076,-0.580370,-7.866980,3.333656,7.915691,-4.379571,-0.186587,9.702548,-8.963329,7.019868,-8.272833,-3.844636,0.566928,-8.810704,-9.982901,-5.853530,-7.218511,-1.179943,-7.057421,-1.365718,-1.169358,3.611568,-8.101319,-5.198631,-9.061733,-8.463371,2.619975,4.579615,-4.962434,-3.453700,-5.307543,-3.330520,7.743806,5.010724,-4.704984,1.252619,-1.635957,-7.814209,4.181058,7.143489,-2.619736,-7.282425,5.977886,-9.774029,3.321560,-8.002716,3.359683,-9.358998,5.241239,-5.623214,7.585724,3.315769,-8.519229,-6.203544,-8.435937,-7.562197,4.123321,8.403565,-7.587859,9.317689,-9.885569,5.419225,-3.552205,-3.216775,9.239738,6.648370,-4.683071,3.468236,-2.133854,6.064679,4.989912,3.206169,-6.943580,0.552474,-3.511394,8.841021,-8.470339,5.890006,-4.165688,2.345789,-9.851787,4.965666,8.245289,-7.212070,-0.409963,-0.112932,8.929430,7.446437,-8.413887,-0.912168,5.630380,0.757568,-3.760001,-0.025568,-2.644163,-7.783942,-3.392799,-1.970600,-9.888527,-1.137725,-6.011723,4.351462,-6.879821,7.825568,6.742423,-4.871682,4.822392,3.370948,-5.805217,6.731790,0.182310,0.749220,9.504807,4.721652,-7.828730,-6.067249,-2.874935,-8.738753,-1.380422,-6.316987,7.279356,-9.182994,-8.789436,-3.879587,1.893777,-3.549607,-7.676151,5.093104,2.471368,7.226885,-1.664870,-4.096878,7.431747,3.956445,-3.644331,-0.410795,-1.618225,5.980022,-9.719468,2.528016,8.989247,-9.231685,-0.624724,6.331506,-0.884287,2.680141,-4.433742,9.241806,1.434551,-3.941247,-0.496399,0.210838,2.810681,-1.208288,4.351782,-4.195787,5.350407,-0.494666,-5.084990,7.867684,-3.287612,0.708199,-8.537941,3.358956,7.928852,3.319801,-4.152026,4.792801,6.764057,4.524366,9.905138,7.341058,-2.858963,-2.045342,2.909084,9.049469,6.451851,0.120681,0.990163,3.917535,-6.864973,5.329617,7.480233,-4.342371,-1.774239,8.637400,7.314941,-3.395163,-2.742456,-0.078475,-7.867569,-9.218416,-5.532215,8.154367,-4.584355,2.628678,3.003431,9.825999,8.950363,-1.511532,3.278747,5.133369,-4.292690,-0.282815,8.189483,7.215406,-3.743793,6.135277,8.323908,-1.725576,6.224291,-6.745168,-1.348699,6.665043,2.220463,2.104410,-6.762306,-8.691647,-1.680927,2.485429,2.532712,0.406037,-1.860371,8.560178,2.642552,5.818096,6.600319,-0.267734,7.440061,8.817849,0.069940,1.782766,8.758982,-8.773296,-8.953944,7.342411,-5.801448,2.966657,0.555095,-3.749164,5.791758,1.174934,9.384991,-7.667070,-2.971409,-8.981533,0.030538,6.238004,7.562935,-2.713461,5.839155,6.651059,4.437525,9.724365,7.138266,2.709729,9.857574,1.242609,-7.669208,-4.318496,7.622053,-0.498817,-2.313256,-3.719589,-7.743439,-6.306504,-6.619260,7.063311,-8.248171,4.553227,1.566504,-3.970553,4.381426,4.299527,-3.163547,-6.046886,-4.115390,-9.657116,-2.195682,-2.346825,1.761502,6.094983,9.088056,8.770407,4.560284,6.020138,-7.465828,5.315652,-5.508138,4.502541,-9.234198,-8.365037,2.569191,-4.401731,8.537173,-9.571222,4.432451,5.936939,-1.297156,-3.292387,7.429661,-3.623826,-9.483325,0.783761,7.214060,0.938471,3.851835,-0.854567,-9.323144,-0.802855,-0.116872,-7.602079,-6.051362,-6.628988,2.741714,-9.951993,-7.263564,-3.477402,6.269067,4.152660,-9.255149,-2.967328,1.523224,-1.247590,2.835000,9.614067,6.081205,4.076410,1.192417,8.252744,6.238002,6.726939,-0.369336,-5.716460,-2.003750,-1.723446,-5.638422,-3.820325,-2.063557], dtype = "float64")#candidate|8665|(1440,)|const|float64
call_8664 = relay.TupleGetItem(func_4364_call(relay.reshape(const_8665.astype('float64'), [9, 10, 16])), 1)
call_8666 = relay.TupleGetItem(func_4367_call(relay.reshape(const_8665.astype('float64'), [9, 10, 16])), 1)
output = relay.Tuple([call_8657,call_8664,const_8665,])
output2 = relay.Tuple([call_8658,call_8666,const_8665,])
func_8708 = relay.Function([], output)
mod['func_8708'] = func_8708
mod = relay.transform.InferType()(mod)
output = func_8708()
func_8709 = relay.Function([], output)
mutated_mod['func_8709'] = func_8709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6573_call = mod.get_global_var('func_6573')
func_6574_call = mutated_mod.get_global_var('func_6574')
call_8738 = func_6573_call()
call_8739 = func_6573_call()
output = call_8738
output2 = call_8739
func_8749 = relay.Function([], output)
mod['func_8749'] = func_8749
mod = relay.transform.InferType()(mod)
mutated_mod['func_8749'] = func_8749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8749_call = mutated_mod.get_global_var('func_8749')
call_8750 = func_8749_call()
output = call_8750
func_8751 = relay.Function([], output)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mod.get_global_var('func_6960')
func_6961_call = mutated_mod.get_global_var('func_6961')
call_8777 = func_6960_call()
call_8778 = func_6960_call()
output = call_8777
output2 = call_8778
func_8810 = relay.Function([], output)
mod['func_8810'] = func_8810
mod = relay.transform.InferType()(mod)
output = func_8810()
func_8811 = relay.Function([], output)
mutated_mod['func_8811'] = func_8811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_8816 = relay.TupleGetItem(func_5960_call(), 2)
call_8817 = relay.TupleGetItem(func_5962_call(), 2)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_8820 = func_8571_call()
call_8821 = func_8571_call()
output = relay.Tuple([call_8816,call_8820,])
output2 = relay.Tuple([call_8817,call_8821,])
func_8846 = relay.Function([], output)
mod['func_8846'] = func_8846
mod = relay.transform.InferType()(mod)
mutated_mod['func_8846'] = func_8846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8846_call = mutated_mod.get_global_var('func_8846')
call_8847 = func_8846_call()
output = call_8847
func_8848 = relay.Function([], output)
mutated_mod['func_8848'] = func_8848
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8861 = relay.const([[[4,-5,-9,1,9,8,2,-10,3,-7,6,-1],[1,5,-5,-1,4,-10,-4,9,-6,9,-6,-4],[-2,-7,-8,9,6,-1,-6,10,8,-5,10,8],[-8,5,-8,7,9,-8,-4,-4,2,1,-8,10],[-8,8,6,5,5,-1,6,-4,-4,2,1,8],[3,-3,-10,-9,-5,-10,5,6,5,4,5,-8],[2,7,-8,-9,6,-4,-3,7,-9,1,-2,5],[-4,9,-7,-10,-9,-2,-4,7,-3,8,-3,-3],[2,6,1,-9,2,-6,-9,10,3,-4,-5,9],[-2,-3,10,7,10,-5,-9,-7,4,-10,10,-10],[3,10,-7,-3,5,-3,-4,8,8,-6,-8,5],[-6,7,-6,1,-3,5,-9,8,-8,1,-3,-5]],[[-10,7,-4,4,-9,8,-7,5,9,9,-2,-1],[8,-2,9,-4,-10,1,-5,-4,5,2,-8,-4],[-10,-4,-10,5,-9,10,4,-8,-5,8,3,6],[3,-10,6,-9,-6,1,2,-3,2,-6,7,3],[-5,2,3,6,6,1,9,-8,-7,-3,4,-7],[-9,-5,8,-8,8,-3,-6,1,4,-3,3,1],[2,-6,-10,-5,7,5,9,-10,-3,-8,-1,-10],[10,-9,-7,-3,-4,7,2,-3,5,4,-1,-1],[-9,-3,7,-5,-9,1,5,-6,1,-3,7,-3],[5,-6,-4,-3,5,1,-1,10,3,5,3,8],[-5,10,8,6,-1,-4,-9,-7,-4,6,-9,7],[-8,-9,-4,-9,-8,4,-2,-1,-3,9,-3,6]],[[-9,7,9,-7,8,1,2,2,-1,-6,-7,8],[-4,-1,7,8,-10,-3,9,-7,7,9,-10,-7],[-9,3,-10,7,-10,-2,-8,3,3,8,-8,-9],[6,2,10,6,2,5,-10,5,5,-7,8,-2],[5,-3,6,6,9,-8,7,8,1,3,-8,-1],[8,5,-7,-6,-6,5,-10,-5,-9,10,5,9],[-1,-9,-1,-3,8,4,6,8,-1,-7,-4,-2],[3,10,9,-6,-2,-3,-5,3,-8,-9,-8,-8],[9,-10,8,-7,3,1,-9,-6,1,-3,6,10],[-4,10,-5,9,-6,9,10,-6,-3,8,-5,-2],[-4,3,-10,3,3,6,-2,3,3,-1,-8,-9],[-6,-3,-1,-7,8,4,4,-4,1,-4,4,-2]],[[-1,-3,1,-8,-8,8,-3,-2,-5,-3,-4,-6],[6,1,-9,-8,-7,7,-2,5,-7,-9,7,5],[8,3,-4,8,-8,1,-1,8,-1,-5,2,-3],[4,9,-1,-5,2,-10,6,-8,6,-2,8,4],[4,2,-3,5,7,9,10,-7,-2,9,-7,-2],[6,-10,3,6,7,-5,3,8,-6,7,10,8],[-3,8,4,2,4,-4,8,-8,8,-5,-5,-10],[-9,9,-1,1,-4,5,-1,-7,9,-5,1,-3],[-9,9,-1,-9,6,-2,-4,4,-2,-7,-3,9],[6,-10,7,6,-4,-2,-4,7,-8,10,2,2],[-10,-8,-3,-7,-10,6,4,5,-4,5,9,-9],[-3,-1,-2,10,3,-7,4,5,-4,-1,-10,-6]],[[-5,-4,3,1,4,-10,6,10,-7,-6,-4,-4],[10,7,-4,-6,-2,-3,-6,2,8,-8,-1,4],[9,8,10,2,-9,-10,9,-4,-6,9,-3,4],[2,-8,2,2,3,-5,-4,-1,-5,6,8,-7],[6,6,7,-3,-2,4,4,-5,10,7,6,-6],[10,-7,1,3,-1,9,7,-7,-4,2,10,2],[-7,1,9,-6,-9,-7,8,2,-7,7,4,4],[8,-5,-1,-8,7,2,9,5,3,-2,2,-2],[4,4,5,7,3,-4,10,3,-3,3,6,-2],[10,10,8,2,1,-4,-3,4,3,-10,-1,-2],[1,8,5,-6,6,8,8,-7,-3,7,-2,-2],[8,9,7,6,7,5,4,7,-7,-5,5,4]],[[-1,-6,2,9,1,9,-9,8,-9,-10,-6,4],[-3,6,8,-6,3,-3,1,4,10,-2,10,-7],[-4,-1,-3,2,3,4,10,-4,1,7,-9,-5],[-6,-10,-8,-5,-3,3,-3,-1,-4,10,2,-8],[-3,-8,8,3,-2,-10,9,3,2,-5,-2,3],[-1,2,9,10,-9,-4,2,10,-10,2,-8,9],[-2,6,3,10,2,-9,5,3,-6,10,-4,-1],[3,-4,-10,-10,1,6,5,8,-7,-10,-6,6],[-2,1,-7,2,8,10,3,10,-5,-10,2,2],[6,-4,7,-4,8,-6,-8,6,8,-5,5,-5],[-2,3,-4,5,-8,-2,-1,-3,4,4,10,9],[6,-9,7,-1,8,7,2,-1,3,3,-10,4]],[[8,5,8,3,5,-4,7,-5,3,6,4,-4],[-1,-2,5,-2,-4,10,10,-5,-5,-9,-6,7],[4,3,-5,8,3,-6,8,1,6,5,5,10],[10,-4,2,4,-9,6,1,9,-4,4,2,5],[9,1,-9,-5,10,3,-5,10,3,9,1,-10],[10,8,-9,9,10,-1,-2,-8,-10,-6,8,-10],[-3,-5,-6,1,8,7,4,-7,-7,-5,-9,-1],[6,5,-3,-6,-3,-5,7,4,-7,5,8,-6],[-2,-3,-6,9,4,-7,-8,-5,4,-9,-6,-8],[-5,-6,5,-9,-5,-10,-9,-4,-3,-9,-3,-4],[-6,10,8,-9,-9,10,-9,4,1,6,3,2],[10,-8,8,10,5,-10,-5,9,-3,9,8,-3]],[[-7,1,-8,3,4,9,-3,10,8,-4,8,-7],[4,1,1,-3,5,-6,6,-1,3,6,10,6],[5,-8,-5,4,-5,1,8,-4,-9,6,-2,-8],[8,2,10,-3,-10,-10,10,-4,6,8,-3,-7],[-3,-8,9,-1,-9,-4,-3,-6,1,-7,7,-5],[9,6,-8,-2,5,7,5,-2,10,-5,-4,5],[-4,-6,4,-3,5,-4,-4,3,8,5,7,-8],[-5,2,-4,3,-1,-1,8,-9,5,5,2,1],[9,3,-5,-5,-6,10,-5,-9,1,3,-6,-4],[8,2,-1,-1,-1,6,-9,-8,9,-6,10,3],[5,-3,-10,2,8,1,-7,8,1,3,5,5],[-9,10,-8,1,1,-4,10,-1,2,-8,6,-4]],[[-9,7,10,10,4,-7,3,8,9,-4,-2,7],[-1,-10,10,6,-2,-7,-6,2,-9,4,8,-5],[-6,7,-8,-1,-9,5,-4,9,3,-2,3,1],[-4,5,9,-10,10,4,-2,-6,3,-8,-4,6],[-5,8,-2,-1,4,-10,-7,-7,-6,5,-3,8],[-6,-6,5,10,10,-9,5,-1,-7,1,1,-1],[8,-6,-8,-10,3,7,-7,10,-2,-2,-1,9],[5,-2,-7,-5,10,7,-6,-4,-2,6,7,9],[-7,8,7,7,-7,-8,3,-1,-5,-3,-5,7],[-8,-9,9,4,-2,-3,2,-2,-9,5,-6,-5],[5,9,4,9,8,-7,-9,-2,-7,-1,7,8],[-4,7,9,10,-1,4,-4,7,1,1,-7,1]],[[10,-3,-5,-2,-5,-10,3,8,8,9,-5,6],[-2,-5,9,-3,2,-7,-6,-8,8,-5,10,4],[5,10,10,5,-2,-1,10,2,-9,-9,-8,7],[-6,8,8,-4,7,-5,9,-1,2,-3,-5,4],[-6,10,-1,1,-9,-5,-10,2,-4,-6,-6,-5],[-8,-1,-5,-8,10,-6,-3,10,5,9,-6,-5],[-7,-5,-8,1,9,1,-9,-7,-5,1,2,-1],[9,-6,-10,-7,-4,10,-3,9,3,7,9,10],[-9,-1,2,-9,4,8,-6,3,-7,3,-3,3],[-2,-9,-4,-6,-10,3,-1,-5,-6,8,-9,-4],[-3,-8,1,4,2,6,-4,1,9,8,-6,4],[-7,6,1,-6,-8,3,-8,3,-2,-7,1,-2]],[[2,10,-2,-2,7,7,-7,-4,-7,-4,-6,6],[8,-6,-3,-9,8,-3,-6,-1,2,-2,-3,5],[3,-7,-8,9,-6,3,5,4,-5,-6,-3,-5],[7,5,-2,-1,2,6,-1,-4,-1,-6,-10,2],[1,-8,6,-3,-9,-4,1,-5,-3,10,5,-1],[-10,-5,-1,-8,8,1,7,9,-2,-6,10,3],[4,9,7,8,-1,10,1,-6,-1,-2,-9,-6],[-6,4,-6,1,-2,9,-10,-7,-1,3,-2,-10],[-8,-5,5,-9,-4,9,2,9,-8,-1,5,-1],[4,8,-7,-3,3,1,7,-1,3,-10,9,6],[8,-10,-7,9,7,1,8,-8,-2,-10,-8,-2],[2,3,3,-9,-9,6,-9,9,-4,3,-4,2]],[[-9,5,-5,8,10,9,5,6,6,-9,-9,-5],[9,-5,-9,9,1,-5,10,4,-9,5,10,7],[5,2,-4,-9,5,8,-10,9,-10,8,2,-1],[-4,2,-10,-7,-4,-1,6,-5,-3,-4,-7,-4],[9,-6,5,-1,-6,10,-3,4,-8,8,-4,-6],[6,-2,2,2,10,-4,7,-2,10,10,-1,-1],[-1,4,3,-4,9,-4,2,6,-5,-6,8,5],[2,-1,2,-3,-2,8,-8,-6,8,1,7,-1],[8,5,7,-1,-7,-5,4,-2,6,2,4,-4],[10,-2,1,-9,3,2,-4,-3,7,10,8,8],[3,10,1,-10,7,8,-7,6,3,-4,-5,7],[-6,3,-2,8,4,5,-3,-6,8,10,-3,9]],[[-6,-2,-1,3,8,1,-1,-7,8,10,-6,-2],[2,-2,-8,-2,4,-5,3,-2,6,-2,2,-3],[3,2,2,6,5,3,-8,10,-9,7,-5,-4],[10,-9,7,-3,-7,-2,10,-5,5,-10,2,-7],[7,2,2,-4,-4,-5,4,3,-6,10,-2,-2],[-4,-2,-2,-7,2,10,7,-4,-6,-6,-10,4],[4,9,1,-5,-4,3,-5,-7,-4,-8,-3,-4],[5,1,-8,9,-9,10,-2,8,1,5,6,2],[3,10,4,6,3,5,2,-7,-4,4,-3,3],[-6,1,-2,-9,-5,-10,-5,8,-4,1,-7,-9],[-5,-9,3,-2,10,-10,-8,-9,10,-2,6,2],[3,7,2,-2,-7,5,3,-1,-3,-7,-10,2]]], dtype = "int64")#candidate|8861|(13, 12, 12)|const|int64
var_8862 = relay.var("var_8862", dtype = "int64", shape = (13, 12, 12))#candidate|8862|(13, 12, 12)|var|int64
bop_8863 = relay.bitwise_xor(const_8861.astype('int64'), relay.reshape(var_8862.astype('int64'), relay.shape_of(const_8861))) # shape=(13, 12, 12)
func_7088_call = mod.get_global_var('func_7088')
func_7091_call = mutated_mod.get_global_var('func_7091')
var_8871 = relay.var("var_8871", dtype = "float64", shape = (3584,))#candidate|8871|(3584,)|var|float64
call_8870 = relay.TupleGetItem(func_7088_call(relay.reshape(var_8871.astype('float64'), [16, 16, 14])), 1)
call_8872 = relay.TupleGetItem(func_7091_call(relay.reshape(var_8871.astype('float64'), [16, 16, 14])), 1)
var_8887 = relay.var("var_8887", dtype = "int64", shape = (13, 12, 12))#candidate|8887|(13, 12, 12)|var|int64
bop_8888 = relay.equal(bop_8863.astype('bool'), relay.reshape(var_8887.astype('bool'), relay.shape_of(bop_8863))) # shape=(13, 12, 12)
func_6261_call = mod.get_global_var('func_6261')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_8892 = relay.TupleGetItem(func_6261_call(), 0)
call_8893 = relay.TupleGetItem(func_6262_call(), 0)
var_8898 = relay.var("var_8898", dtype = "int64", shape = (13, 12, 12))#candidate|8898|(13, 12, 12)|var|int64
bop_8899 = relay.subtract(var_8862.astype('uint8'), relay.reshape(var_8898.astype('uint8'), relay.shape_of(var_8862))) # shape=(13, 12, 12)
output = relay.Tuple([call_8870,var_8871,bop_8888,call_8892,bop_8899,])
output2 = relay.Tuple([call_8872,var_8871,bop_8888,call_8893,bop_8899,])
func_8914 = relay.Function([var_8862,var_8871,var_8887,var_8898,], output)
mod['func_8914'] = func_8914
mod = relay.transform.InferType()(mod)
mutated_mod['func_8914'] = func_8914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8914_call = mutated_mod.get_global_var('func_8914')
var_8916 = relay.var("var_8916", dtype = "int64", shape = (13, 12, 12))#candidate|8916|(13, 12, 12)|var|int64
var_8917 = relay.var("var_8917", dtype = "float64", shape = (3584,))#candidate|8917|(3584,)|var|float64
var_8918 = relay.var("var_8918", dtype = "int64", shape = (13, 12, 12))#candidate|8918|(13, 12, 12)|var|int64
var_8919 = relay.var("var_8919", dtype = "int64", shape = (13, 12, 12))#candidate|8919|(13, 12, 12)|var|int64
call_8915 = func_8914_call(var_8916,var_8917,var_8918,var_8919,)
output = call_8915
func_8920 = relay.Function([var_8916,var_8917,var_8918,var_8919,], output)
mutated_mod['func_8920'] = func_8920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_8933 = func_8571_call()
call_8934 = func_8571_call()
output = relay.Tuple([call_8933,])
output2 = relay.Tuple([call_8934,])
func_8939 = relay.Function([], output)
mod['func_8939'] = func_8939
mod = relay.transform.InferType()(mod)
mutated_mod['func_8939'] = func_8939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8939_call = mutated_mod.get_global_var('func_8939')
call_8940 = func_8939_call()
output = call_8940
func_8941 = relay.Function([], output)
mutated_mod['func_8941'] = func_8941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8362_call = mod.get_global_var('func_8362')
func_8363_call = mutated_mod.get_global_var('func_8363')
call_8966 = relay.TupleGetItem(func_8362_call(), 0)
call_8967 = relay.TupleGetItem(func_8363_call(), 0)
output = relay.Tuple([call_8966,])
output2 = relay.Tuple([call_8967,])
func_8981 = relay.Function([], output)
mod['func_8981'] = func_8981
mod = relay.transform.InferType()(mod)
mutated_mod['func_8981'] = func_8981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8981_call = mutated_mod.get_global_var('func_8981')
call_8982 = func_8981_call()
output = call_8982
func_8983 = relay.Function([], output)
mutated_mod['func_8983'] = func_8983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_8987 = func_8571_call()
call_8988 = func_8571_call()
output = call_8987
output2 = call_8988
func_8989 = relay.Function([], output)
mod['func_8989'] = func_8989
mod = relay.transform.InferType()(mod)
output = func_8989()
func_8990 = relay.Function([], output)
mutated_mod['func_8990'] = func_8990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_8993 = func_6092_call()
call_8994 = func_6092_call()
func_8846_call = mod.get_global_var('func_8846')
func_8848_call = mutated_mod.get_global_var('func_8848')
call_8999 = relay.TupleGetItem(func_8846_call(), 1)
call_9000 = relay.TupleGetItem(func_8848_call(), 1)
output = relay.Tuple([call_8993,call_8999,])
output2 = relay.Tuple([call_8994,call_9000,])
func_9017 = relay.Function([], output)
mod['func_9017'] = func_9017
mod = relay.transform.InferType()(mod)
output = func_9017()
func_9018 = relay.Function([], output)
mutated_mod['func_9018'] = func_9018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_9093 = relay.TupleGetItem(func_6615_call(), 0)
call_9094 = relay.TupleGetItem(func_6617_call(), 0)
output = call_9093
output2 = call_9094
func_9102 = relay.Function([], output)
mod['func_9102'] = func_9102
mod = relay.transform.InferType()(mod)
output = func_9102()
func_9103 = relay.Function([], output)
mutated_mod['func_9103'] = func_9103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8749_call = mod.get_global_var('func_8749')
func_8751_call = mutated_mod.get_global_var('func_8751')
call_9111 = func_8749_call()
call_9112 = func_8749_call()
output = relay.Tuple([call_9111,])
output2 = relay.Tuple([call_9112,])
func_9119 = relay.Function([], output)
mod['func_9119'] = func_9119
mod = relay.transform.InferType()(mod)
output = func_9119()
func_9120 = relay.Function([], output)
mutated_mod['func_9120'] = func_9120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9119_call = mod.get_global_var('func_9119')
func_9120_call = mutated_mod.get_global_var('func_9120')
call_9168 = relay.TupleGetItem(func_9119_call(), 0)
call_9169 = relay.TupleGetItem(func_9120_call(), 0)
func_7532_call = mod.get_global_var('func_7532')
func_7534_call = mutated_mod.get_global_var('func_7534')
var_9180 = relay.var("var_9180", dtype = "int8", shape = (1200,))#candidate|9180|(1200,)|var|int8
call_9179 = relay.TupleGetItem(func_7532_call(relay.reshape(var_9180.astype('int8'), [1200,])), 0)
call_9181 = relay.TupleGetItem(func_7534_call(relay.reshape(var_9180.astype('int8'), [1200,])), 0)
output = relay.Tuple([call_9168,call_9179,var_9180,])
output2 = relay.Tuple([call_9169,call_9181,var_9180,])
func_9191 = relay.Function([var_9180,], output)
mod['func_9191'] = func_9191
mod = relay.transform.InferType()(mod)
var_9192 = relay.var("var_9192", dtype = "int8", shape = (1200,))#candidate|9192|(1200,)|var|int8
output = func_9191(var_9192)
func_9193 = relay.Function([var_9192], output)
mutated_mod['func_9193'] = func_9193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6079_call = mutated_mod.get_global_var('func_6079')
call_9229 = relay.TupleGetItem(func_6077_call(), 0)
call_9230 = relay.TupleGetItem(func_6079_call(), 0)
output = call_9229
output2 = call_9230
func_9264 = relay.Function([], output)
mod['func_9264'] = func_9264
mod = relay.transform.InferType()(mod)
output = func_9264()
func_9265 = relay.Function([], output)
mutated_mod['func_9265'] = func_9265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8362_call = mod.get_global_var('func_8362')
func_8363_call = mutated_mod.get_global_var('func_8363')
call_9300 = relay.TupleGetItem(func_8362_call(), 0)
call_9301 = relay.TupleGetItem(func_8363_call(), 0)
func_7192_call = mod.get_global_var('func_7192')
func_7194_call = mutated_mod.get_global_var('func_7194')
call_9308 = relay.TupleGetItem(func_7192_call(), 1)
call_9309 = relay.TupleGetItem(func_7194_call(), 1)
output = relay.Tuple([call_9300,call_9308,])
output2 = relay.Tuple([call_9301,call_9309,])
func_9329 = relay.Function([], output)
mod['func_9329'] = func_9329
mod = relay.transform.InferType()(mod)
output = func_9329()
func_9330 = relay.Function([], output)
mutated_mod['func_9330'] = func_9330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_9336 = relay.TupleGetItem(func_6759_call(), 0)
call_9337 = relay.TupleGetItem(func_6761_call(), 0)
func_5941_call = mod.get_global_var('func_5941')
func_5945_call = mutated_mod.get_global_var('func_5945')
const_9342 = relay.const([-7.993873,-6.536906,-9.288420,-2.224730,-6.096373,-7.266822,4.677891,-4.509640,7.704206,-2.072294,2.928866,-1.604772,-6.744848,1.177048,7.453524,1.962341,-5.390513,-9.498007,-1.062560,-0.746794,-0.436638,2.051221,6.476059,-1.046808,8.586793,-8.560058,-6.079523,4.239883,6.873989,-9.195951,3.024816,-8.208878], dtype = "float64")#candidate|9342|(32,)|const|float64
const_9343 = relay.const([-6,-4,-5,-7,-9,-8,6,1,-5,1,2,6,-6,-8,-8,10,2,-6,-7,7,-10,10,9,6], dtype = "int32")#candidate|9343|(24,)|const|int32
call_9341 = relay.TupleGetItem(func_5941_call(relay.reshape(const_9342.astype('float64'), [32,]), relay.reshape(const_9343.astype('int32'), [24,]), ), 4)
call_9344 = relay.TupleGetItem(func_5945_call(relay.reshape(const_9342.astype('float64'), [32,]), relay.reshape(const_9343.astype('int32'), [24,]), ), 4)
output = relay.Tuple([call_9336,call_9341,const_9342,const_9343,])
output2 = relay.Tuple([call_9337,call_9344,const_9342,const_9343,])
func_9351 = relay.Function([], output)
mod['func_9351'] = func_9351
mod = relay.transform.InferType()(mod)
mutated_mod['func_9351'] = func_9351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9351_call = mutated_mod.get_global_var('func_9351')
call_9352 = func_9351_call()
output = call_9352
func_9353 = relay.Function([], output)
mutated_mod['func_9353'] = func_9353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8709_call = mutated_mod.get_global_var('func_8709')
call_9354 = relay.TupleGetItem(func_8708_call(), 1)
call_9355 = relay.TupleGetItem(func_8709_call(), 1)
const_9356 = relay.const([[[3.673687,-2.601907,4.649841,3.899330,-4.113425,-8.825428,-1.504846,9.293156,-0.867903,-6.351481,4.815833,-3.003017,2.498495,1.603541,1.652417,-6.980127],[-7.838016,0.504912,-6.392389,-1.661439,-4.984640,1.469640,-8.463082,-0.064974,-3.672344,8.828245,-1.939211,9.989660,1.410199,-4.846622,-6.734317,5.311784],[8.880478,-9.376788,-2.448659,-9.461141,9.260960,3.722128,-3.175484,-0.439766,-3.032254,-7.076491,-5.295935,-5.373265,-4.401464,-7.716941,-2.640188,3.393210],[-7.501016,2.766495,-2.543868,3.709381,7.205642,-1.699327,-3.371896,-9.421436,-3.672533,-6.669550,0.419625,-3.198562,8.788246,-9.297965,-4.432400,2.665108],[2.569803,9.080876,-3.765440,0.141820,5.823205,6.191655,9.834440,8.511181,-7.831689,-8.771038,-1.370910,2.872571,8.808217,6.113643,6.382702,-1.815703],[-7.339841,1.322448,-2.097236,-9.957512,-1.756215,-1.729352,-3.944215,3.139867,4.460784,-3.596498,-1.403526,8.970661,3.830736,5.575523,9.706143,3.677739],[-0.904381,-4.147237,8.183729,-6.633249,-6.799368,9.299102,-3.325829,6.855216,-1.514657,-4.643469,4.909586,-3.345513,-7.584089,5.022560,5.653028,0.221725],[8.540664,3.020354,1.961542,-3.195741,-4.419716,-3.640488,-9.728435,-7.748141,5.214341,3.460674,-2.373232,9.031750,-0.074360,-2.499312,9.495594,2.379692],[8.370992,4.017352,-2.811051,-0.230174,-2.485502,-3.969867,-6.265649,4.717178,6.069535,-9.321156,0.743433,-8.841698,-7.539368,7.300205,8.938988,9.239054],[6.956469,5.369439,-4.722576,-1.448638,-7.756159,-6.422215,0.288900,-8.868717,-7.306347,-0.840134,-1.294157,3.961187,4.461129,-9.772837,8.532866,2.592021]],[[-0.633356,4.011825,-0.649404,9.883856,-6.484369,5.621152,-9.430519,-9.431553,-8.620532,-8.540603,1.747708,-3.643464,-5.693932,3.972025,-4.092594,0.665074],[6.545672,5.233988,-9.340761,-4.921960,-3.242162,6.554275,0.791840,-6.018713,-1.297713,-3.377714,-2.032764,6.045797,2.921990,6.333374,5.713049,9.453062],[8.669253,0.568369,0.216698,-8.600755,2.837446,-7.132360,1.005276,6.341679,9.736145,0.966363,-4.972345,7.184313,-2.542594,3.226414,0.265546,-5.136159],[6.604100,-8.448532,-7.083307,6.553101,-5.768928,-3.570171,-9.561664,-4.939122,-9.210435,4.992545,-4.152274,-2.202023,9.236099,-0.770738,-9.879963,7.882786],[-1.183483,5.607236,-8.624789,5.841810,-1.138446,-4.259356,8.439063,1.454786,4.973622,-0.524282,8.198375,-1.304482,-9.271954,1.236988,9.426261,-9.149204],[-5.898353,-3.134747,-0.758884,-1.598153,-9.088654,4.052939,4.909187,1.694378,-4.800743,-9.537670,-8.755730,-9.120179,8.377540,-4.412216,4.322997,0.640853],[-6.103726,-2.697601,3.973535,1.406839,-6.407938,3.765928,2.822098,-3.761117,-1.085589,9.942239,0.841272,4.521723,2.914247,4.131765,-0.402355,4.514262],[8.350491,-7.893469,-9.492604,-3.719549,-2.279530,-3.207661,-7.053026,4.122495,5.700508,3.948120,3.756945,9.003783,-6.146557,6.314994,1.413856,4.147203],[-6.373924,0.810870,-8.172194,2.603687,0.990056,-5.511617,-4.038908,-4.562006,1.412806,-7.787462,-2.264604,2.348339,4.689866,-8.666051,1.814229,4.618407],[9.810064,-1.282335,-1.394719,-7.938516,0.981795,5.709368,9.920755,5.762488,1.412015,6.388439,-4.844767,2.266148,5.708117,-0.097243,5.433284,-0.835490]],[[4.930659,-9.743815,8.750197,0.007837,-7.262601,-5.995305,5.409069,-9.220696,-0.201215,-8.119679,-9.740182,-8.547053,3.217334,6.447937,-6.242310,7.752463],[-9.711907,9.177286,4.244442,3.230230,0.739594,0.955154,4.976059,3.569154,1.025923,-1.499096,4.409072,8.352765,-0.650949,-1.093063,-3.988479,-4.751331],[9.634566,-9.201659,-2.436262,-3.645825,-5.332121,-4.512879,2.824915,4.530256,-2.808965,7.603610,-7.993960,-0.036584,4.331506,0.700560,4.930871,-0.586614],[6.143192,1.202246,-8.036830,4.115744,5.588667,9.822186,9.804230,6.639858,-9.334223,-5.477910,8.513248,9.583944,1.094935,-8.760950,-5.539430,4.443820],[-9.477936,-1.631018,1.004280,4.083676,6.328854,1.283700,7.681157,-7.115705,6.086853,-5.065680,-5.569539,5.080286,-3.515386,-4.460448,5.379766,-8.793359],[-5.583793,-0.173016,-8.024044,-0.430969,-9.460084,-2.147703,-2.618055,-3.080394,9.377952,-1.666253,-4.236558,2.068959,1.169149,-4.724506,-0.652862,-5.786272],[1.923329,-0.970205,-2.086721,2.796012,-4.759474,-1.785904,7.091516,5.466346,7.035563,-7.193216,1.310382,-7.713608,2.653116,3.762869,2.931290,-5.319649],[6.168864,-9.015914,9.877935,-7.898352,-1.904230,-2.484757,0.064454,-3.541209,8.769730,2.550822,2.084938,9.859175,-7.367460,-6.007993,4.762522,-8.779167],[7.603358,-0.629498,-0.952038,-9.592024,-9.954130,-9.389565,-2.862062,-6.987880,0.177615,5.748948,-1.529342,7.553001,8.192568,-9.169098,-9.585393,1.846340],[-1.065952,-6.173583,0.652032,4.224603,2.981126,2.708948,-5.133773,2.315218,8.067665,-2.472587,-6.245710,-3.047828,4.845254,-1.685015,1.226265,1.053215]],[[7.981682,5.627555,7.634542,-0.170958,-1.731267,-2.212582,-4.073952,4.581727,-5.105785,1.329289,0.139671,5.403568,-0.989245,9.149664,6.930094,7.161044],[-5.306641,0.277566,0.681409,8.466771,-8.494629,8.738082,1.908121,-3.206119,-2.528211,-4.103766,-8.584555,4.264248,0.464850,-4.777605,6.774711,-2.009514],[-6.748786,8.859529,4.288672,-2.374766,2.902945,-1.809049,-6.984757,-0.666397,-4.018349,-1.597470,-0.752864,-2.173461,-4.499277,4.545927,-4.856902,-9.171898],[1.335797,5.053202,-6.404614,-2.032027,8.119656,-5.412177,-5.460037,-8.146471,-9.431770,2.167530,-0.092482,-1.882407,-3.380106,5.467445,6.303276,-7.722403],[0.031850,-3.701360,6.778190,9.025173,5.714847,-1.253573,5.215375,7.551769,5.217781,-1.567142,-9.517735,3.900142,-6.998942,3.591337,-0.304493,3.799906],[9.060464,5.466906,-3.867007,2.931577,-9.911307,3.269377,0.472539,7.900099,9.546139,-5.286364,6.865392,9.614966,-2.283415,0.130269,-6.043361,0.897952],[-6.870991,-5.748587,7.610295,8.027588,0.075510,7.290544,4.406058,8.342380,1.639986,-5.104520,2.837904,-0.647741,-9.125009,-2.467567,-0.535782,4.938168],[-4.270040,-4.919119,6.093569,-0.139492,-2.937140,3.588364,-5.133795,5.224729,0.099472,-1.395146,8.978304,-8.877281,1.829042,-8.689085,-5.552432,-9.236473],[4.539247,3.341553,-6.029027,6.655254,5.328077,-3.619583,6.104292,9.177745,1.560753,-1.974662,0.009920,8.247554,3.974582,-2.188902,6.536620,7.242708],[3.087164,8.464623,-8.165916,8.109835,-5.665214,9.487536,3.759701,-0.351321,4.367396,5.934637,6.432064,7.091142,-6.412151,8.205163,-1.003796,-9.513638]],[[8.121794,-7.342722,-1.759810,5.482924,9.582960,-1.162191,-3.660917,-6.657002,1.629366,-5.843594,-8.151136,-6.772785,9.413423,-1.949670,-3.278128,-6.782654],[-4.425220,7.344284,-0.451436,4.904209,1.809450,-7.075451,-3.439970,9.144130,-0.162323,0.964646,7.331360,2.817802,1.582609,6.006286,-3.102653,7.870408],[-9.185656,5.662919,3.173048,-6.159976,-4.761133,-6.218203,0.401709,2.749694,3.089021,-6.178798,-8.360733,-1.898720,3.889882,2.714796,7.387129,6.733799],[6.118769,-7.527759,4.486081,2.092879,7.535482,2.508348,-4.630307,-1.807518,9.346284,-5.917563,-5.328361,6.896954,-2.787433,7.430402,9.973648,4.564121],[7.542428,2.846774,8.979253,-8.098654,3.873037,7.723983,-5.155264,6.904012,1.797725,8.885108,-6.503298,2.677319,8.139099,-8.154590,8.361061,8.327604],[7.983711,-7.674124,-5.711661,7.684427,-8.032602,5.017743,-1.117346,-3.871546,-6.861312,2.781225,-4.128739,-3.436242,2.135166,-5.885837,-0.424441,8.003245],[-0.938540,-1.544916,3.217958,-0.457406,4.054526,-1.650289,5.101611,9.218162,0.977029,-4.227508,4.716255,4.393195,-0.315331,-4.694913,-8.960778,-2.825055],[3.307497,3.606544,0.826837,-5.109771,8.201770,-0.046609,9.919509,-5.017752,4.075016,-7.643359,2.005425,3.294653,5.085363,0.053702,-1.971445,-5.972564],[-0.575620,-8.684852,-2.388182,-3.517201,6.474209,-2.760092,-0.300593,6.127588,9.521015,8.107663,-0.469428,-7.781114,-0.090935,6.736599,-5.393924,-0.971638],[8.783587,-3.800975,7.812540,4.558605,2.475740,7.259358,-1.272252,1.845014,-2.116145,4.110374,-6.039776,-1.504315,4.373315,2.322557,3.186494,-3.901036]],[[-5.064588,-0.736357,-9.573324,-7.995497,8.610162,0.546432,9.909348,-8.528648,2.286574,-2.973096,5.660504,-1.065267,-6.946145,-1.561431,3.061981,-9.555811],[5.197963,4.031826,-7.214951,-7.286998,0.699688,2.581834,-9.565249,-1.931694,0.849578,5.809100,7.730926,2.413144,3.215586,-8.563334,2.923992,-0.023235],[0.133164,-1.865744,-5.730985,-4.426976,-0.029173,-0.848925,3.668183,5.080631,6.845103,5.581915,-2.860952,-7.972815,3.055310,3.836851,4.930097,1.459311],[5.559063,-0.086585,-3.678448,-9.799250,-2.650473,-3.563768,7.627809,1.360968,-8.173634,-0.093215,2.126969,3.810509,8.013514,4.781676,-6.451169,2.397528],[-4.367369,3.418383,-5.110317,-4.676922,-4.720129,-4.308826,-6.548160,-5.047592,6.580130,3.938152,3.453850,2.326872,9.320741,5.422700,4.010620,-4.504778],[-3.402493,7.702210,8.018354,-1.880950,-8.702585,9.035043,-9.297273,4.348860,-4.409678,-5.243594,2.243732,-6.814681,2.382165,5.937386,9.692061,-5.305071],[1.005892,-3.643669,2.324665,2.923328,-8.361562,-6.875778,-1.120480,-6.363479,1.324886,9.981752,-7.367483,3.290145,2.400539,-8.163765,-2.155904,2.729934],[-0.116949,-4.472877,-8.296917,4.167223,4.571553,7.213078,-0.533015,-9.681869,-4.168453,-5.397524,-0.881383,-7.079513,-0.638870,-0.370874,-5.047624,4.079403],[1.381300,-1.137266,8.561813,-9.911942,-7.341244,-6.682445,5.718755,-8.775338,-2.462848,-3.380153,-9.660730,2.873849,-4.349608,-9.508456,8.894106,3.275250],[4.715017,-1.824240,-5.212449,3.625837,-8.309173,8.353362,3.432643,4.130639,-9.112588,-9.926152,4.433538,-0.071368,8.819598,-9.125917,-5.806204,5.079567]],[[5.313455,-1.592519,4.509035,-5.562748,9.686152,4.868330,3.469930,6.942137,1.089964,7.878917,1.715324,-9.537025,-6.776107,2.816549,-1.415231,-8.393643],[-9.589013,4.569860,0.481216,8.558966,9.077190,3.061500,2.641818,0.985341,-1.364214,1.637646,-8.480208,-4.602374,-4.114535,4.031207,-3.902674,4.285941],[-0.532563,-2.847716,-4.076152,-6.654299,2.731147,9.754946,-3.533194,2.731670,9.611668,-3.509315,-8.704397,-1.819997,-1.940814,8.357376,6.251178,4.792848],[-8.380367,5.691649,4.376117,-0.704007,5.404275,-1.200108,-6.964186,-6.025707,-4.583181,6.203597,7.059110,-2.289017,0.466124,9.848986,-1.243433,-8.136681],[-3.723530,3.373082,-6.616639,-4.651620,1.772212,2.540112,-1.392455,4.090009,4.691017,7.174380,-4.929677,-4.019916,-8.502618,4.014681,8.649268,9.669543],[6.739074,8.876039,-1.952341,-8.149191,-2.825465,-9.766481,3.278346,-2.408261,-8.166535,-4.971080,2.402761,1.845480,-5.716323,-4.213310,-1.435840,9.403135],[-2.248745,2.752444,2.749832,7.406987,-5.050801,-0.095814,3.146708,-9.396302,3.584544,4.231173,5.108867,-6.074264,7.893667,6.519392,-5.990239,9.246506],[-1.041083,9.024976,-0.792845,3.779560,-2.861687,2.948569,-1.339529,-9.194019,-2.449961,-9.985380,-4.507232,5.231682,9.910591,6.389520,6.208507,5.905262],[-5.879200,8.782918,8.508023,5.975513,9.769165,8.616453,-6.769164,9.132619,0.948033,-0.187134,-6.798475,8.492002,1.452876,7.379259,-8.538753,-0.801932],[5.351684,5.297048,-1.988112,3.317331,9.567928,-8.361801,-5.302676,-7.177606,3.909538,9.171365,-0.615492,-2.643846,7.320552,5.466132,-0.320307,-0.226020]],[[6.575319,-0.692125,-4.478464,8.619163,-6.497076,2.363515,2.793285,2.660431,7.120703,-7.019861,6.133471,2.652027,-0.697227,-0.886395,-0.247176,9.264160],[3.206018,3.688170,2.222250,1.583053,-2.864091,-1.638039,3.368103,4.710398,-0.886243,-9.816785,-4.470386,-0.823578,-4.825025,6.336527,-2.575937,6.574220],[-2.031166,9.708485,4.684879,3.966936,-4.553616,-2.176380,2.761219,-2.222068,4.784181,-9.452543,-1.963682,2.977069,3.914691,0.640762,9.415022,5.215331],[5.073167,7.511705,-8.217675,7.821112,-0.038192,-6.096964,6.911349,5.937889,7.353325,-8.617475,-3.608730,9.177272,-3.967050,6.930019,1.736184,4.890653],[-0.536833,4.711164,8.554902,7.794842,-5.985104,-5.851734,-9.649393,2.364573,9.959758,5.883958,4.641694,9.265227,3.140305,5.457309,-7.260068,5.279849],[0.177941,4.184320,8.598153,-7.035474,-4.819462,5.667796,-0.199110,-5.068273,-4.691008,5.341490,-3.951616,1.506221,-6.504167,-8.582173,9.983370,2.839941],[4.523972,-7.163626,1.122094,-9.999031,8.268269,-5.783002,-5.711681,7.586276,-9.105649,-9.152238,9.828375,-7.054057,-6.833939,-8.039836,-6.607948,-3.538955],[-9.103687,1.380653,3.049937,4.734903,5.225271,-8.078902,7.297292,3.380448,2.789659,-4.355032,2.008269,-4.928246,-0.306707,-1.294850,-6.181105,-5.542572],[3.577155,-6.714420,7.724651,2.865501,9.476327,0.993305,0.066774,-3.608626,-8.139824,0.985235,1.371680,-5.882889,4.008577,-6.516559,3.418551,-7.774922],[-9.499077,-3.597871,4.551358,6.009852,1.085813,5.144291,4.747264,2.631007,-1.223012,5.149650,-8.179253,3.620461,-6.248261,5.404389,-6.611916,-5.511568]],[[-8.696408,8.964848,-2.170765,-3.954418,5.538222,-8.947085,8.988683,-1.755642,6.002820,9.668654,7.477215,1.736146,4.023680,-8.229798,-4.655910,-2.777466],[5.284479,-4.578685,-3.271383,4.534008,-6.901539,-2.934040,-7.502399,-4.061188,9.603559,7.611587,-9.059152,-1.936374,-1.462111,-8.405204,-5.610432,0.692851],[-4.908654,2.593778,3.121604,-2.454637,3.010548,1.778733,0.677896,1.594998,-9.320246,-4.767081,6.963071,-3.915483,6.576294,-9.304843,6.926607,0.651913],[-2.873435,2.334682,2.493662,1.179041,-2.107345,-6.278858,-8.145869,-6.001748,0.337925,-7.143948,-0.638726,-4.487742,2.883531,0.915263,-3.951039,-7.964106],[7.880215,-2.860851,5.734926,9.471991,5.497339,9.489349,5.036760,-9.779089,-9.791762,6.240115,9.943456,-0.102763,1.218364,5.381678,-6.419317,-8.505448],[6.352306,1.650947,-8.195076,0.619906,-2.871655,-9.434894,-6.561867,-1.749743,5.070078,7.186122,5.433539,5.140017,3.189760,0.621032,-0.521713,-0.612596],[-3.114195,-9.264750,-1.645257,-4.591824,-5.060416,3.150483,0.607293,-5.160075,3.226123,1.336312,8.355768,9.055666,-9.863182,0.496981,-7.615299,-5.614888],[5.218541,-9.783392,-6.807309,-5.719832,2.572449,-7.433970,-4.981598,1.698216,-9.475025,-7.797805,9.867736,5.167913,-1.400703,-0.301191,-0.480255,-9.781226],[0.892312,0.108382,4.040649,-9.707255,9.048901,-0.477394,7.555063,-5.908801,-7.764596,-6.177048,-5.754631,2.570864,-7.711951,-0.684940,9.643555,-4.720569],[7.793865,-4.971836,0.958585,4.688261,1.319392,-2.692075,6.463551,0.132367,-1.213440,5.750217,7.817372,0.548596,-3.775963,-2.708631,-0.723058,-1.866635]]], dtype = "float64")#candidate|9356|(9, 10, 16)|const|float64
bop_9357 = relay.bitwise_and(call_9354.astype('int32'), relay.reshape(const_9356.astype('int32'), relay.shape_of(call_9354))) # shape=(9, 10, 16)
bop_9360 = relay.bitwise_and(call_9355.astype('int32'), relay.reshape(const_9356.astype('int32'), relay.shape_of(call_9355))) # shape=(9, 10, 16)
bop_9366 = relay.mod(bop_9357.astype('float32'), relay.reshape(call_9354.astype('float32'), relay.shape_of(bop_9357))) # shape=(9, 10, 16)
bop_9369 = relay.mod(bop_9360.astype('float32'), relay.reshape(call_9355.astype('float32'), relay.shape_of(bop_9360))) # shape=(9, 10, 16)
func_8064_call = mod.get_global_var('func_8064')
func_8066_call = mutated_mod.get_global_var('func_8066')
var_9381 = relay.var("var_9381", dtype = "float32", shape = (60,))#candidate|9381|(60,)|var|float32
call_9380 = func_8064_call(relay.reshape(var_9381.astype('float32'), [12, 5, 1]))
call_9382 = func_8064_call(relay.reshape(var_9381.astype('float32'), [12, 5, 1]))
func_390_call = mod.get_global_var('func_390')
func_393_call = mutated_mod.get_global_var('func_393')
var_9392 = relay.var("var_9392", dtype = "float32", shape = (2, 180))#candidate|9392|(2, 180)|var|float32
call_9391 = relay.TupleGetItem(func_390_call(relay.reshape(var_9392.astype('float32'), [4, 9, 10]), relay.reshape(var_9392.astype('float32'), [4, 9, 10]), ), 0)
call_9393 = relay.TupleGetItem(func_393_call(relay.reshape(var_9392.astype('float32'), [4, 9, 10]), relay.reshape(var_9392.astype('float32'), [4, 9, 10]), ), 0)
func_8423_call = mod.get_global_var('func_8423')
func_8425_call = mutated_mod.get_global_var('func_8425')
call_9396 = relay.TupleGetItem(func_8423_call(), 2)
call_9397 = relay.TupleGetItem(func_8425_call(), 2)
func_6077_call = mod.get_global_var('func_6077')
func_6079_call = mutated_mod.get_global_var('func_6079')
call_9408 = relay.TupleGetItem(func_6077_call(), 0)
call_9409 = relay.TupleGetItem(func_6079_call(), 0)
output = relay.Tuple([bop_9366,call_9380,var_9381,call_9391,var_9392,call_9396,call_9408,])
output2 = relay.Tuple([bop_9369,call_9382,var_9381,call_9393,var_9392,call_9397,call_9409,])
func_9411 = relay.Function([var_9381,var_9392,], output)
mod['func_9411'] = func_9411
mod = relay.transform.InferType()(mod)
mutated_mod['func_9411'] = func_9411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9411_call = mutated_mod.get_global_var('func_9411')
var_9413 = relay.var("var_9413", dtype = "float32", shape = (60,))#candidate|9413|(60,)|var|float32
var_9414 = relay.var("var_9414", dtype = "float32", shape = (2, 180))#candidate|9414|(2, 180)|var|float32
call_9412 = func_9411_call(var_9413,var_9414,)
output = call_9412
func_9415 = relay.Function([var_9413,var_9414,], output)
mutated_mod['func_9415'] = func_9415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8749_call = mod.get_global_var('func_8749')
func_8751_call = mutated_mod.get_global_var('func_8751')
call_9597 = func_8749_call()
call_9598 = func_8749_call()
func_4343_call = mod.get_global_var('func_4343')
func_4345_call = mutated_mod.get_global_var('func_4345')
const_9617 = relay.const([6.801195,-4.989581,-4.783838,-4.577468,-7.092044,7.727621,-8.872546,-0.235516,7.674715,-2.985290,-8.981378,-3.819328,4.465549,5.337119,-6.008267,0.102392,-4.577524,0.382079,9.204504,-7.427792,7.720405,-5.646213,1.158584,-2.389710,-1.761818,-9.277432,2.630753,0.490675,7.256911,6.194934,-6.811358,0.185623,-3.610453,6.385167,-7.177373,3.515550,9.214975,1.308169,6.271528,2.469333,-9.414813,-2.931872,-1.200209,-9.845282,4.654695,0.282984,-6.662328,-1.977107,-2.926321,2.793472,-4.375906,-7.574083,-8.069004,-8.076238,2.657079,0.199543,7.494894,1.678663,5.420932,1.096164,2.926569,-2.578519,-4.677163,3.090308,-4.490246,3.909979,7.091065,-3.868930,-2.532783,1.269169,-1.843841,2.652322,5.017312,9.266260,4.553971,2.660981,-9.637417,-8.868905,-6.649131,5.222402,-7.857341,0.692291,-7.409119,2.613278,9.981998,3.157236,3.540394,0.534137,1.400280,-6.539540,-0.846123,-5.207934,8.992309,7.036800,-8.233232,4.655383,1.981827,-9.810144,-6.410039,-6.462464,0.147196,-0.282222,9.564832,9.325145,-5.382251,9.281859,9.266556,9.795605,-0.803008,-3.919093,4.526291,-3.576205,6.058986,5.319706,-6.109339,3.167919,1.050913,3.756806,7.659683,9.674278,-5.720951,-8.574575,-5.083316,-8.844992,-3.330751,5.319198,-4.840557,3.112929,6.562934,-2.274526,-9.208860,3.340126,3.359894,-0.264187,2.764480,-4.502023,-1.979473,1.434544,8.050062,-6.083979,-3.373805,8.921605,6.654055,-9.939178,0.810655,-5.342414,-6.611304,9.755053,-2.126990,5.966965,-8.341994,8.902334,-2.560136,7.530379,6.018949,-4.171145,-6.956311,-1.678122,-2.349103,-3.447957,2.298346,0.735110,-3.419638,6.465068,5.871735,-7.291813,2.585407,-7.248270,-3.347149,5.102467,7.643010,1.357661,0.811030,5.932596,6.536877,-9.606194], dtype = "float32")#candidate|9617|(176,)|const|float32
call_9616 = relay.TupleGetItem(func_4343_call(relay.reshape(const_9617.astype('float32'), [11, 1, 16])), 5)
call_9618 = relay.TupleGetItem(func_4345_call(relay.reshape(const_9617.astype('float32'), [11, 1, 16])), 5)
output = relay.Tuple([call_9597,call_9616,const_9617,])
output2 = relay.Tuple([call_9598,call_9618,const_9617,])
func_9647 = relay.Function([], output)
mod['func_9647'] = func_9647
mod = relay.transform.InferType()(mod)
mutated_mod['func_9647'] = func_9647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9647_call = mutated_mod.get_global_var('func_9647')
call_9648 = func_9647_call()
output = call_9648
func_9649 = relay.Function([], output)
mutated_mod['func_9649'] = func_9649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_9658 = func_8571_call()
call_9659 = func_8571_call()
output = call_9658
output2 = call_9659
func_9690 = relay.Function([], output)
mod['func_9690'] = func_9690
mod = relay.transform.InferType()(mod)
mutated_mod['func_9690'] = func_9690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9690_call = mutated_mod.get_global_var('func_9690')
call_9691 = func_9690_call()
output = call_9691
func_9692 = relay.Function([], output)
mutated_mod['func_9692'] = func_9692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mod.get_global_var('func_6960')
func_6961_call = mutated_mod.get_global_var('func_6961')
call_9727 = func_6960_call()
call_9728 = func_6960_call()
output = call_9727
output2 = call_9728
func_9753 = relay.Function([], output)
mod['func_9753'] = func_9753
mod = relay.transform.InferType()(mod)
mutated_mod['func_9753'] = func_9753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9753_call = mutated_mod.get_global_var('func_9753')
call_9754 = func_9753_call()
output = call_9754
func_9755 = relay.Function([], output)
mutated_mod['func_9755'] = func_9755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8398_call = mod.get_global_var('func_8398')
func_8400_call = mutated_mod.get_global_var('func_8400')
call_9769 = relay.TupleGetItem(func_8398_call(), 0)
call_9770 = relay.TupleGetItem(func_8400_call(), 0)
output = relay.Tuple([call_9769,])
output2 = relay.Tuple([call_9770,])
func_9773 = relay.Function([], output)
mod['func_9773'] = func_9773
mod = relay.transform.InferType()(mod)
mutated_mod['func_9773'] = func_9773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9773_call = mutated_mod.get_global_var('func_9773')
call_9774 = func_9773_call()
output = call_9774
func_9775 = relay.Function([], output)
mutated_mod['func_9775'] = func_9775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7919_call = mod.get_global_var('func_7919')
func_7920_call = mutated_mod.get_global_var('func_7920')
call_9781 = relay.TupleGetItem(func_7919_call(), 0)
call_9782 = relay.TupleGetItem(func_7920_call(), 0)
func_6573_call = mod.get_global_var('func_6573')
func_6574_call = mutated_mod.get_global_var('func_6574')
call_9823 = func_6573_call()
call_9824 = func_6573_call()
func_7486_call = mod.get_global_var('func_7486')
func_7487_call = mutated_mod.get_global_var('func_7487')
call_9828 = relay.TupleGetItem(func_7486_call(), 0)
call_9829 = relay.TupleGetItem(func_7487_call(), 0)
output = relay.Tuple([call_9781,call_9823,call_9828,])
output2 = relay.Tuple([call_9782,call_9824,call_9829,])
func_9832 = relay.Function([], output)
mod['func_9832'] = func_9832
mod = relay.transform.InferType()(mod)
mutated_mod['func_9832'] = func_9832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9832_call = mutated_mod.get_global_var('func_9832')
call_9833 = func_9832_call()
output = call_9833
func_9834 = relay.Function([], output)
mutated_mod['func_9834'] = func_9834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9264_call = mod.get_global_var('func_9264')
func_9265_call = mutated_mod.get_global_var('func_9265')
call_9900 = func_9264_call()
call_9901 = func_9264_call()
output = call_9900
output2 = call_9901
func_9912 = relay.Function([], output)
mod['func_9912'] = func_9912
mod = relay.transform.InferType()(mod)
mutated_mod['func_9912'] = func_9912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9912_call = mutated_mod.get_global_var('func_9912')
call_9913 = func_9912_call()
output = call_9913
func_9914 = relay.Function([], output)
mutated_mod['func_9914'] = func_9914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9690_call = mod.get_global_var('func_9690')
func_9692_call = mutated_mod.get_global_var('func_9692')
call_9915 = func_9690_call()
call_9916 = func_9690_call()
output = call_9915
output2 = call_9916
func_9970 = relay.Function([], output)
mod['func_9970'] = func_9970
mod = relay.transform.InferType()(mod)
output = func_9970()
func_9971 = relay.Function([], output)
mutated_mod['func_9971'] = func_9971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9753_call = mod.get_global_var('func_9753')
func_9755_call = mutated_mod.get_global_var('func_9755')
call_9981 = func_9753_call()
call_9982 = func_9753_call()
output = call_9981
output2 = call_9982
func_10001 = relay.Function([], output)
mod['func_10001'] = func_10001
mod = relay.transform.InferType()(mod)
output = func_10001()
func_10002 = relay.Function([], output)
mutated_mod['func_10002'] = func_10002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10020 = relay.var("var_10020", dtype = "float64", shape = (5, 16, 10))#candidate|10020|(5, 16, 10)|var|float64
uop_10021 = relay.sin(var_10020.astype('float64')) # shape=(5, 16, 10)
func_7855_call = mod.get_global_var('func_7855')
func_7858_call = mutated_mod.get_global_var('func_7858')
var_10027 = relay.var("var_10027", dtype = "float64", shape = (10, 144))#candidate|10027|(10, 144)|var|float64
call_10026 = relay.TupleGetItem(func_7855_call(relay.reshape(var_10027.astype('float64'), [1440,])), 1)
call_10028 = relay.TupleGetItem(func_7858_call(relay.reshape(var_10027.astype('float64'), [1440,])), 1)
output = relay.Tuple([uop_10021,call_10026,var_10027,])
output2 = relay.Tuple([uop_10021,call_10028,var_10027,])
func_10052 = relay.Function([var_10020,var_10027,], output)
mod['func_10052'] = func_10052
mod = relay.transform.InferType()(mod)
var_10053 = relay.var("var_10053", dtype = "float64", shape = (5, 16, 10))#candidate|10053|(5, 16, 10)|var|float64
var_10054 = relay.var("var_10054", dtype = "float64", shape = (10, 144))#candidate|10054|(10, 144)|var|float64
output = func_10052(var_10053,var_10054,)
func_10055 = relay.Function([var_10053,var_10054,], output)
mutated_mod['func_10055'] = func_10055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7548_call = mod.get_global_var('func_7548')
func_7550_call = mutated_mod.get_global_var('func_7550')
call_10120 = func_7548_call()
call_10121 = func_7548_call()
output = relay.Tuple([call_10120,])
output2 = relay.Tuple([call_10121,])
func_10128 = relay.Function([], output)
mod['func_10128'] = func_10128
mod = relay.transform.InferType()(mod)
output = func_10128()
func_10129 = relay.Function([], output)
mutated_mod['func_10129'] = func_10129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6261_call = mod.get_global_var('func_6261')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_10144 = relay.TupleGetItem(func_6261_call(), 0)
call_10145 = relay.TupleGetItem(func_6262_call(), 0)
func_8423_call = mod.get_global_var('func_8423')
func_8425_call = mutated_mod.get_global_var('func_8425')
call_10158 = relay.TupleGetItem(func_8423_call(), 0)
call_10159 = relay.TupleGetItem(func_8425_call(), 0)
func_7042_call = mod.get_global_var('func_7042')
func_7045_call = mutated_mod.get_global_var('func_7045')
const_10161 = relay.const([5.568013,-3.051205,-3.340687,-1.193083,7.706659,0.212188,5.376231,-6.809656,-3.818805,4.874205,-6.038471,7.358835,8.738898,-0.183400,-9.400416,-4.401147,1.320449,7.481083,4.883861,-8.153106,-2.441255,7.614659,7.788401,-4.178328,6.867578,2.146346,-4.807219,7.741777,-7.599344,-7.291726,4.454554,9.753528,1.621700,-8.980361,-0.522773,-7.661368,-2.505168,-0.436472,8.059467,-2.206981,-2.120839,9.637648,-2.576632,-7.302300,-4.155772,-6.170462,2.299652,-0.328076,-6.408088,-7.883900], dtype = "float32")#candidate|10161|(50,)|const|float32
call_10160 = relay.TupleGetItem(func_7042_call(relay.reshape(const_10161.astype('float32'), [10, 1, 5])), 0)
call_10162 = relay.TupleGetItem(func_7045_call(relay.reshape(const_10161.astype('float32'), [10, 1, 5])), 0)
output = relay.Tuple([call_10144,call_10158,call_10160,const_10161,])
output2 = relay.Tuple([call_10145,call_10159,call_10162,const_10161,])
func_10167 = relay.Function([], output)
mod['func_10167'] = func_10167
mod = relay.transform.InferType()(mod)
output = func_10167()
func_10168 = relay.Function([], output)
mutated_mod['func_10168'] = func_10168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8846_call = mod.get_global_var('func_8846')
func_8848_call = mutated_mod.get_global_var('func_8848')
call_10179 = relay.TupleGetItem(func_8846_call(), 1)
call_10180 = relay.TupleGetItem(func_8848_call(), 1)
func_9411_call = mod.get_global_var('func_9411')
func_9415_call = mutated_mod.get_global_var('func_9415')
const_10194 = relay.const([-8.235254,5.782310,-6.407358,-5.217128,-3.684863,8.676981,5.482001,-9.382070,2.575251,-2.671193,-5.790363,-8.407128,8.048815,5.565418,4.241479,-6.147763,3.173121,1.746923,5.712989,2.755012,4.345799,-3.659553,-4.405790,2.109956,-2.488433,5.540971,9.790952,-6.776760,-2.544641,9.421877,1.678258,6.187130,7.369573,-8.406054,-4.493994,-0.076110,-1.872451,-1.839463,6.778550,8.014344,-7.214255,-1.114604,-1.042133,-8.412672,4.683996,-4.808417,-3.494076,1.301861,-2.455062,-8.958434,-7.991200,-5.513016,2.257132,2.496853,-5.609811,-2.443729,-6.690982,-0.612915,-7.225211,4.921577], dtype = "float32")#candidate|10194|(60,)|const|float32
call_10193 = relay.TupleGetItem(func_9411_call(relay.reshape(const_10194.astype('float32'), [60,]), relay.reshape(call_10179.astype('float32'), [2, 180]), ), 2)
call_10195 = relay.TupleGetItem(func_9415_call(relay.reshape(const_10194.astype('float32'), [60,]), relay.reshape(call_10179.astype('float32'), [2, 180]), ), 2)
func_710_call = mod.get_global_var('func_710')
func_713_call = mutated_mod.get_global_var('func_713')
var_10205 = relay.var("var_10205", dtype = "int64", shape = ())#candidate|10205|()|var|int64
const_10206 = relay.const([-7,-7,-2,1,4,5,-5,3,4,-6,-1,-10,3,3,-3,6,-3,-6,-9,-4,3,2,2,7,7,9,-10,7,5,3,-6,-7,-3,6,1,7,-9,2,-6,-7,4,-1,9,10,-7,9,4,-2,8,-1,8,-3,-8,-8,3,7,5,2,3,-5,4,4,9,-5,4,6,-3,-8,-3,5,-4,-3,-10,1,8,-6,10,-2,-7,-8,4,-2,-4,-10,-5,-2,9,7,4,-5,-6,7,-2,-6,8,10,9,-9,-10,-1,3,-5,-1,-2,-4,9,1,-7,5,-3,-9,-4,-5,-5,-3,-4,-10,-9,-3,7,-9,7,-2,-4,-10,-1,10,-1,-10,1,-1,-8,-6,-1,9,8,4,-9,-2,3,-7,-4,10,3,-10,-1,-1,-3,7,6,3,3,1,-2,-2,6,-9,-8,4,9,6,-8,-9,4,4,-10,-3,-4,5,-7,3,8,-2,1,8,3,-7,2,9,-4,5,-1,8,-3,1,10,3,-6,-6,2,-6,-9,5,1,-7,-10,8,1,7,9,-3,-4,8,-3,6,8,10,4,-9,1,7,-10,-1,1,6,7,-8,8,-10,10,-4,-5,8,-2,-2,4,-2,-4,-7,2,4,3,-10,-8,9,6,10,10,1,-4,-2,-4,-3,9,5,1,3,-1,-4,3,1,-9,-1,7,-10,4,-9,8,1,2,-1,5,-1,-6,9,10,-9,1,7,-1,-10,1,-5,3,-10,-2,-2,-6,-7,-7,4,-8,-8,2,-6,-4,-9,-6,-8,2,6,1,-3,8,-9,-8,-4,-7,-3,8,3,-8,9,-9,-4,4,-5,5,-10,-9,8,4,-4,-4,10,-10,2,-5,3,7,-5,5,-4,7,3,-6,5,-5,-1,-8,1,-5,-6,-5,4,-4,10,8,-2,-1,5,8,-9,9,-3,2,4,8,-8,7,-2,-3,-2,10,8,-9,-9,2,-1,8,7,10,7,-1,1,-1,3,-7,6,9,1,6,-6,-7,-9,-4,7,10,-2,-3,1,7,-7,-8,-4,-5,-4,4,-9,-10,-10,-7,-8,2,-7,4,8,-1,8,6,-6,-6,3,-2,-4,5,7,-2,-8,-7,-9,3,2,2,3,1,-2,10,10,-2,-6,-8,-6,10,-5,8,-5,3,5,5,-7,7,-5,5,-1,-10,3,-2,8,-4,6,-9,5,8,1,-7,-4,-8,-3,4,1,3,-2,2,8,5,9,6,-7,-1,-10,7,-5,2,-9,4,-2,3,-3,-4,-2,-4,4,-3,6,9,6,-1,2,-1,-2,2,-1,8,1,-6,2,4,-1,6,2,-5,-3,1,10,8,-6,-7,-7,-2,8,9,-9,-3,1,8,-5,2,-9,-5,5,-2,8,-8,4,-1,-10,-10,5,-1,-5,10,2,-9,-6,-10,2,2,1,4,1,-6,8,-2,-1,7,-2,7,-10,-6,5,-9,-10,-6,2,6,5,-6,2,-4,-3,-1,10,10,6,-8,4,7,-8,-6,-5,6,8,1,-4,-3,7,-9,-3,1,-4,2,6,-1,6,-7,-2,9,6,10,-6,-6,-6,-2,-3,10,-1,5,-4,2,-6,9,3,-7,-9,-1,-9,-7,-10,-6,1,-2,8,10,6,2,-2,-1,10,-3,7,3,9,-1,-1,3,2,-6,5,-6,9,-2,-10,5,-2,-10,-2,-3,5,1,-2,9,2,-8,-3,-7,-10,-3,-3,-2,-7,-4,-7,2,-4,1,-9,-1,8,-9,2,5,-6,-4,-9,8,3,6,10,6,-3,9,7,-5,9,-8,-2,3,-3,1,-7,7,10,2,3,5,2,10,-3,-6,10,3,7,4,-7,10,-3,-4,2,4,-3,-1,-2,-6,-5,9,-6,-9,-10,-3,-7,9,-1,4,10,-1,8,9,5,7,8,7,-10,-7,1,-7,2,-10,-10,8,-6,-2,3,6,-7,-7,-1,-8,-1,1,-4,10,-4,-1,-7,-6,-10,-7,2,-8,-6,-3,-9,10,-8,10,9,8,-10,-10,9,-10,-4,1,-10,-4,-6,-5,-10,5,-6,-9,-8,-10,7,-7,-6,7,-4,8,1,-2,1,-4,-2,6,-7,-5,-2,-3,-5,-7,-5,-2,5,5,-2,-3,-4,-3,-5,6,-5,-4,4,-8,-8,-1,-1,4,-3,-10,-5,7,9,8,10,-5,-3,-2,6,7,6,7,-8,-1,-1,5,5,7,-3,-5,7,8,9,-10,-3,-1,4,6,10,-3,10,6,2,-7,-6,-8,4,-6,9,10,-2,8,-8,8,-2,8,10,9,-5,9,-9,-8,-6,-6,10,-4,6,6,6,3,-6,-2,-4,10,-7,5,-9,-1,-7,7,-4,10,3,-7,2,7,-2,4,-1,-9,7,-6,-7,9,-5,-1,-7,2,-7,-7,10,6,-6,-10,-9,7,3,10,2,3,-8,-8,-3,5,9,8,-7,-1,-7,1,-2,-1,4,6,-3,-3,3,-5,2,-8,-1,8,3,4,4,7,6,2,9,5,-9,4,10,8,-9,-2,-7,10,-2,1,10,2,5,-7,4,-8,-10,4,-2,-3,1,1,8,7,6,5,-7,3], dtype = "int64")#candidate|10206|(960,)|const|int64
call_10204 = relay.TupleGetItem(func_710_call(relay.reshape(var_10205.astype('int64'), []), relay.reshape(const_10206.astype('int64'), [16, 15, 4]), ), 0)
call_10207 = relay.TupleGetItem(func_713_call(relay.reshape(var_10205.astype('int64'), []), relay.reshape(const_10206.astype('int64'), [16, 15, 4]), ), 0)
output = relay.Tuple([call_10179,call_10193,const_10194,call_10204,var_10205,const_10206,])
output2 = relay.Tuple([call_10180,call_10195,const_10194,call_10207,var_10205,const_10206,])
func_10213 = relay.Function([var_10205,], output)
mod['func_10213'] = func_10213
mod = relay.transform.InferType()(mod)
mutated_mod['func_10213'] = func_10213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10214 = relay.var("var_10214", dtype = "int64", shape = ())#candidate|10214|()|var|int64
func_10213_call = mutated_mod.get_global_var('func_10213')
call_10215 = func_10213_call(var_10214)
output = call_10215
func_10216 = relay.Function([var_10214], output)
mutated_mod['func_10216'] = func_10216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9773_call = mod.get_global_var('func_9773')
func_9775_call = mutated_mod.get_global_var('func_9775')
call_10220 = relay.TupleGetItem(func_9773_call(), 0)
call_10221 = relay.TupleGetItem(func_9775_call(), 0)
output = relay.Tuple([call_10220,])
output2 = relay.Tuple([call_10221,])
func_10239 = relay.Function([], output)
mod['func_10239'] = func_10239
mod = relay.transform.InferType()(mod)
mutated_mod['func_10239'] = func_10239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10239_call = mutated_mod.get_global_var('func_10239')
call_10240 = func_10239_call()
output = call_10240
func_10241 = relay.Function([], output)
mutated_mod['func_10241'] = func_10241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8846_call = mod.get_global_var('func_8846')
func_8848_call = mutated_mod.get_global_var('func_8848')
call_10280 = relay.TupleGetItem(func_8846_call(), 1)
call_10281 = relay.TupleGetItem(func_8848_call(), 1)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_10284 = relay.TupleGetItem(func_6759_call(), 0)
call_10285 = relay.TupleGetItem(func_6761_call(), 0)
uop_10294 = relay.tan(call_10284.astype('float64')) # shape=(16, 16, 14)
uop_10296 = relay.tan(call_10285.astype('float64')) # shape=(16, 16, 14)
output = relay.Tuple([call_10280,uop_10294,])
output2 = relay.Tuple([call_10281,uop_10296,])
func_10302 = relay.Function([], output)
mod['func_10302'] = func_10302
mod = relay.transform.InferType()(mod)
mutated_mod['func_10302'] = func_10302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10302_call = mutated_mod.get_global_var('func_10302')
call_10303 = func_10302_call()
output = call_10303
func_10304 = relay.Function([], output)
mutated_mod['func_10304'] = func_10304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6960_call = mod.get_global_var('func_6960')
func_6961_call = mutated_mod.get_global_var('func_6961')
call_10360 = func_6960_call()
call_10361 = func_6960_call()
func_9647_call = mod.get_global_var('func_9647')
func_9649_call = mutated_mod.get_global_var('func_9649')
call_10372 = relay.TupleGetItem(func_9647_call(), 0)
call_10373 = relay.TupleGetItem(func_9649_call(), 0)
output = relay.Tuple([call_10360,call_10372,])
output2 = relay.Tuple([call_10361,call_10373,])
func_10384 = relay.Function([], output)
mod['func_10384'] = func_10384
mod = relay.transform.InferType()(mod)
output = func_10384()
func_10385 = relay.Function([], output)
mutated_mod['func_10385'] = func_10385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5960_call = mod.get_global_var('func_5960')
func_5962_call = mutated_mod.get_global_var('func_5962')
call_10391 = relay.TupleGetItem(func_5960_call(), 2)
call_10392 = relay.TupleGetItem(func_5962_call(), 2)
func_7192_call = mod.get_global_var('func_7192')
func_7194_call = mutated_mod.get_global_var('func_7194')
call_10413 = relay.TupleGetItem(func_7192_call(), 1)
call_10414 = relay.TupleGetItem(func_7194_call(), 1)
var_10422 = relay.var("var_10422", dtype = "float32", shape = (11, 11, 3))#candidate|10422|(11, 11, 3)|var|float32
bop_10423 = relay.maximum(call_10413.astype('int16'), relay.reshape(var_10422.astype('int16'), relay.shape_of(call_10413))) # shape=(11, 11, 3)
bop_10426 = relay.maximum(call_10414.astype('int16'), relay.reshape(var_10422.astype('int16'), relay.shape_of(call_10414))) # shape=(11, 11, 3)
output = relay.Tuple([call_10391,bop_10423,])
output2 = relay.Tuple([call_10392,bop_10426,])
func_10434 = relay.Function([var_10422,], output)
mod['func_10434'] = func_10434
mod = relay.transform.InferType()(mod)
var_10435 = relay.var("var_10435", dtype = "float32", shape = (11, 11, 3))#candidate|10435|(11, 11, 3)|var|float32
output = func_10434(var_10435)
func_10436 = relay.Function([var_10435], output)
mutated_mod['func_10436'] = func_10436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7149_call = mod.get_global_var('func_7149')
func_7150_call = mutated_mod.get_global_var('func_7150')
call_10487 = relay.TupleGetItem(func_7149_call(), 3)
call_10488 = relay.TupleGetItem(func_7150_call(), 3)
output = call_10487
output2 = call_10488
func_10522 = relay.Function([], output)
mod['func_10522'] = func_10522
mod = relay.transform.InferType()(mod)
output = func_10522()
func_10523 = relay.Function([], output)
mutated_mod['func_10523'] = func_10523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6092_call = mod.get_global_var('func_6092')
func_6094_call = mutated_mod.get_global_var('func_6094')
call_10561 = func_6092_call()
call_10562 = func_6092_call()
func_1981_call = mod.get_global_var('func_1981')
func_1984_call = mutated_mod.get_global_var('func_1984')
var_10570 = relay.var("var_10570", dtype = "float32", shape = (375,))#candidate|10570|(375,)|var|float32
call_10569 = func_1981_call(relay.reshape(var_10570.astype('float32'), [5, 15, 5]))
call_10571 = func_1981_call(relay.reshape(var_10570.astype('float32'), [5, 15, 5]))
uop_10572 = relay.sin(call_10569.astype('float32')) # shape=(5, 15, 5)
uop_10574 = relay.sin(call_10571.astype('float32')) # shape=(5, 15, 5)
func_6542_call = mod.get_global_var('func_6542')
func_6545_call = mutated_mod.get_global_var('func_6545')
var_10581 = relay.var("var_10581", dtype = "uint16", shape = (288,))#candidate|10581|(288,)|var|uint16
var_10582 = relay.var("var_10582", dtype = "int8", shape = (70,))#candidate|10582|(70,)|var|int8
call_10580 = relay.TupleGetItem(func_6542_call(relay.reshape(var_10581.astype('uint16'), [288,]), relay.reshape(var_10582.astype('int8'), [70,]), ), 3)
call_10583 = relay.TupleGetItem(func_6545_call(relay.reshape(var_10581.astype('uint16'), [288,]), relay.reshape(var_10582.astype('int8'), [70,]), ), 3)
bop_10594 = relay.subtract(uop_10572.astype('uint16'), relay.reshape(call_10569.astype('uint16'), relay.shape_of(uop_10572))) # shape=(5, 15, 5)
bop_10597 = relay.subtract(uop_10574.astype('uint16'), relay.reshape(call_10571.astype('uint16'), relay.shape_of(uop_10574))) # shape=(5, 15, 5)
output = relay.Tuple([call_10561,var_10570,call_10580,var_10581,var_10582,bop_10594,])
output2 = relay.Tuple([call_10562,var_10570,call_10583,var_10581,var_10582,bop_10597,])
func_10614 = relay.Function([var_10570,var_10581,var_10582,], output)
mod['func_10614'] = func_10614
mod = relay.transform.InferType()(mod)
var_10615 = relay.var("var_10615", dtype = "float32", shape = (375,))#candidate|10615|(375,)|var|float32
var_10616 = relay.var("var_10616", dtype = "uint16", shape = (288,))#candidate|10616|(288,)|var|uint16
var_10617 = relay.var("var_10617", dtype = "int8", shape = (70,))#candidate|10617|(70,)|var|int8
output = func_10614(var_10615,var_10616,var_10617,)
func_10618 = relay.Function([var_10615,var_10616,var_10617,], output)
mutated_mod['func_10618'] = func_10618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_10620 = func_8571_call()
call_10621 = func_8571_call()
output = call_10620
output2 = call_10621
func_10623 = relay.Function([], output)
mod['func_10623'] = func_10623
mod = relay.transform.InferType()(mod)
mutated_mod['func_10623'] = func_10623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10623_call = mutated_mod.get_global_var('func_10623')
call_10624 = func_10623_call()
output = call_10624
func_10625 = relay.Function([], output)
mutated_mod['func_10625'] = func_10625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_10645 = relay.TupleGetItem(func_6615_call(), 2)
call_10646 = relay.TupleGetItem(func_6617_call(), 2)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
const_10661 = relay.const([-1.372001,2.082180,-6.373925,4.607224,-9.559372,-2.932583,1.396747,-0.486910,-4.225259,3.776997,-2.406698,-0.577074,-0.613754,-0.231235,-2.127973,4.652136,-3.104753,8.262488,-6.852747,-6.976465,6.489930,1.120851,-9.306637,-2.507562,6.274227,-5.679256,-9.228781,8.389402,3.578589,-9.136604,8.638513,-1.281042,-4.401081,-6.040978,-4.369757,-7.765095,5.409114,-6.484227,9.635191,2.084213,-0.867481,-2.522130,-8.971900,9.719812,-7.792062,1.586028,0.348318,0.411217,-8.607773,8.025678,5.417434,-7.889912,3.531153,-0.810050,0.037513,7.225920,4.960415,-4.000758,-6.546835,9.331442,9.213384,-3.697150,-7.299824,4.699816,2.481221,4.799524,-9.963700,6.621785,-4.243611,-9.764842,3.019966,5.634561,-3.294847,2.365036,9.836368,0.730399,3.461292,-0.578640,0.349546,-4.385952,-5.704492,7.638039,1.781808,-3.019323,-6.562118,-7.374062,-5.659671,5.032745,7.449441,5.170677,0.361847,-2.028999,-9.759843,7.560717,-3.031744,-4.399991,6.280635,2.115719,1.791668,2.094840,-4.168085,8.738765,4.131364,5.374742,0.737874], dtype = "float64")#candidate|10661|(105,)|const|float64
call_10660 = relay.TupleGetItem(func_871_call(relay.reshape(const_10661.astype('float64'), [1, 15, 7])), 4)
call_10662 = relay.TupleGetItem(func_874_call(relay.reshape(const_10661.astype('float64'), [1, 15, 7])), 4)
func_7465_call = mod.get_global_var('func_7465')
func_7471_call = mutated_mod.get_global_var('func_7471')
var_10666 = relay.var("var_10666", dtype = "float32", shape = (325,))#candidate|10666|(325,)|var|float32
var_10667 = relay.var("var_10667", dtype = "float64", shape = (1440,))#candidate|10667|(1440,)|var|float64
var_10668 = relay.var("var_10668", dtype = "float32", shape = (360,))#candidate|10668|(360,)|var|float32
var_10669 = relay.var("var_10669", dtype = "int8", shape = (70,))#candidate|10669|(70,)|var|int8
var_10670 = relay.var("var_10670", dtype = "float32", shape = (260,))#candidate|10670|(260,)|var|float32
call_10665 = relay.TupleGetItem(func_7465_call(relay.reshape(var_10666.astype('float32'), [1, 325]), relay.reshape(var_10667.astype('float64'), [1440,]), relay.reshape(var_10668.astype('float32'), [360,]), relay.reshape(var_10669.astype('int8'), [70,]), relay.reshape(var_10670.astype('float32'), [260,]), ), 12)
call_10671 = relay.TupleGetItem(func_7471_call(relay.reshape(var_10666.astype('float32'), [1, 325]), relay.reshape(var_10667.astype('float64'), [1440,]), relay.reshape(var_10668.astype('float32'), [360,]), relay.reshape(var_10669.astype('int8'), [70,]), relay.reshape(var_10670.astype('float32'), [260,]), ), 12)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_10682 = relay.TupleGetItem(func_5863_call(), 1)
call_10683 = relay.TupleGetItem(func_5865_call(), 1)
func_10384_call = mod.get_global_var('func_10384')
func_10385_call = mutated_mod.get_global_var('func_10385')
call_10692 = relay.TupleGetItem(func_10384_call(), 1)
call_10693 = relay.TupleGetItem(func_10385_call(), 1)
func_10239_call = mod.get_global_var('func_10239')
func_10241_call = mutated_mod.get_global_var('func_10241')
call_10709 = relay.TupleGetItem(func_10239_call(), 0)
call_10710 = relay.TupleGetItem(func_10241_call(), 0)
output = relay.Tuple([call_10645,call_10660,const_10661,call_10665,var_10666,var_10667,var_10668,var_10669,var_10670,call_10682,call_10692,call_10709,])
output2 = relay.Tuple([call_10646,call_10662,const_10661,call_10671,var_10666,var_10667,var_10668,var_10669,var_10670,call_10683,call_10693,call_10710,])
func_10728 = relay.Function([var_10666,var_10667,var_10668,var_10669,var_10670,], output)
mod['func_10728'] = func_10728
mod = relay.transform.InferType()(mod)
mutated_mod['func_10728'] = func_10728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10728_call = mutated_mod.get_global_var('func_10728')
var_10730 = relay.var("var_10730", dtype = "float32", shape = (325,))#candidate|10730|(325,)|var|float32
var_10731 = relay.var("var_10731", dtype = "float64", shape = (1440,))#candidate|10731|(1440,)|var|float64
var_10732 = relay.var("var_10732", dtype = "float32", shape = (360,))#candidate|10732|(360,)|var|float32
var_10733 = relay.var("var_10733", dtype = "int8", shape = (70,))#candidate|10733|(70,)|var|int8
var_10734 = relay.var("var_10734", dtype = "float32", shape = (260,))#candidate|10734|(260,)|var|float32
call_10729 = func_10728_call(var_10730,var_10731,var_10732,var_10733,var_10734,)
output = call_10729
func_10735 = relay.Function([var_10730,var_10731,var_10732,var_10733,var_10734,], output)
mutated_mod['func_10735'] = func_10735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6317_call = mod.get_global_var('func_6317')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_10778 = func_6317_call()
call_10779 = func_6317_call()
func_8398_call = mod.get_global_var('func_8398')
func_8400_call = mutated_mod.get_global_var('func_8400')
call_10780 = relay.TupleGetItem(func_8398_call(), 0)
call_10781 = relay.TupleGetItem(func_8400_call(), 0)
func_8256_call = mod.get_global_var('func_8256')
func_8260_call = mutated_mod.get_global_var('func_8260')
const_10790 = relay.const([-6,9,-4,7,6,-9,-8,3,2,9,6,-9,-8,9,6,8,-10,5,7,-6,-9,-7,3,-4,-6,9,7,-6,-5,-1,-5,-4,-5,9,-1,7,1,-9,-4,1,8,-3,-8,-1,5,3,-2,-5,5,9,8,-8,-9,-5,-3,-4,-6,9,-5,-6,-4,-2,-5,-1,2,8,7,-1,4,1,4,-2,2,4,-2,10,1,-10,1,-9,-3,-3,3,-9,1,8,-5,4,2,7], dtype = "uint64")#candidate|10790|(90,)|const|uint64
call_10789 = relay.TupleGetItem(func_8256_call(relay.reshape(const_10790.astype('uint64'), [5, 6, 3]), relay.reshape(const_10790.astype('uint64'), [5, 6, 3]), ), 1)
call_10791 = relay.TupleGetItem(func_8260_call(relay.reshape(const_10790.astype('uint64'), [5, 6, 3]), relay.reshape(const_10790.astype('uint64'), [5, 6, 3]), ), 1)
bop_10795 = relay.minimum(call_10789.astype('uint32'), relay.reshape(const_10790.astype('uint32'), relay.shape_of(call_10789))) # shape=(5, 6, 3)
bop_10798 = relay.minimum(call_10791.astype('uint32'), relay.reshape(const_10790.astype('uint32'), relay.shape_of(call_10791))) # shape=(5, 6, 3)
output = relay.Tuple([call_10778,call_10780,bop_10795,])
output2 = relay.Tuple([call_10779,call_10781,bop_10798,])
func_10804 = relay.Function([], output)
mod['func_10804'] = func_10804
mod = relay.transform.InferType()(mod)
mutated_mod['func_10804'] = func_10804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10804_call = mutated_mod.get_global_var('func_10804')
call_10805 = func_10804_call()
output = call_10805
func_10806 = relay.Function([], output)
mutated_mod['func_10806'] = func_10806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10886 = relay.var("var_10886", dtype = "float64", shape = (5, 2, 7))#candidate|10886|(5, 2, 7)|var|float64
uop_10887 = relay.cosh(var_10886.astype('float64')) # shape=(5, 2, 7)
uop_10900 = relay.asin(uop_10887.astype('float64')) # shape=(5, 2, 7)
bop_10903 = relay.logical_xor(uop_10900.astype('int32'), relay.reshape(uop_10887.astype('int32'), relay.shape_of(uop_10900))) # shape=(5, 2, 7)
func_10167_call = mod.get_global_var('func_10167')
func_10168_call = mutated_mod.get_global_var('func_10168')
call_10914 = relay.TupleGetItem(func_10167_call(), 0)
call_10915 = relay.TupleGetItem(func_10168_call(), 0)
output = relay.Tuple([bop_10903,call_10914,])
output2 = relay.Tuple([bop_10903,call_10915,])
func_10918 = relay.Function([var_10886,], output)
mod['func_10918'] = func_10918
mod = relay.transform.InferType()(mod)
var_10919 = relay.var("var_10919", dtype = "float64", shape = (5, 2, 7))#candidate|10919|(5, 2, 7)|var|float64
output = func_10918(var_10919)
func_10920 = relay.Function([var_10919], output)
mutated_mod['func_10920'] = func_10920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6133_call = mod.get_global_var('func_6133')
func_6135_call = mutated_mod.get_global_var('func_6135')
call_10929 = func_6133_call()
call_10930 = func_6133_call()
func_6717_call = mod.get_global_var('func_6717')
func_6721_call = mutated_mod.get_global_var('func_6721')
var_10938 = relay.var("var_10938", dtype = "float64", shape = (1440,))#candidate|10938|(1440,)|var|float64
var_10939 = relay.var("var_10939", dtype = "int64", shape = (960,))#candidate|10939|(960,)|var|int64
call_10937 = relay.TupleGetItem(func_6717_call(relay.reshape(var_10938.astype('float64'), [1440,]), relay.reshape(var_10939.astype('int64'), [960,]), ), 3)
call_10940 = relay.TupleGetItem(func_6721_call(relay.reshape(var_10938.astype('float64'), [1440,]), relay.reshape(var_10939.astype('int64'), [960,]), ), 3)
func_9970_call = mod.get_global_var('func_9970')
func_9971_call = mutated_mod.get_global_var('func_9971')
call_10959 = func_9970_call()
call_10960 = func_9970_call()
func_10434_call = mod.get_global_var('func_10434')
func_10436_call = mutated_mod.get_global_var('func_10436')
var_10965 = relay.var("var_10965", dtype = "float32", shape = (363,))#candidate|10965|(363,)|var|float32
call_10964 = relay.TupleGetItem(func_10434_call(relay.reshape(var_10965.astype('float32'), [11, 11, 3])), 1)
call_10966 = relay.TupleGetItem(func_10436_call(relay.reshape(var_10965.astype('float32'), [11, 11, 3])), 1)
func_9329_call = mod.get_global_var('func_9329')
func_9330_call = mutated_mod.get_global_var('func_9330')
call_10975 = relay.TupleGetItem(func_9329_call(), 1)
call_10976 = relay.TupleGetItem(func_9330_call(), 1)
output = relay.Tuple([call_10929,call_10937,var_10938,var_10939,call_10959,call_10964,var_10965,call_10975,])
output2 = relay.Tuple([call_10930,call_10940,var_10938,var_10939,call_10960,call_10966,var_10965,call_10976,])
func_10978 = relay.Function([var_10938,var_10939,var_10965,], output)
mod['func_10978'] = func_10978
mod = relay.transform.InferType()(mod)
var_10979 = relay.var("var_10979", dtype = "float64", shape = (1440,))#candidate|10979|(1440,)|var|float64
var_10980 = relay.var("var_10980", dtype = "int64", shape = (960,))#candidate|10980|(960,)|var|int64
var_10981 = relay.var("var_10981", dtype = "float32", shape = (363,))#candidate|10981|(363,)|var|float32
output = func_10978(var_10979,var_10980,var_10981,)
func_10982 = relay.Function([var_10979,var_10980,var_10981,], output)
mutated_mod['func_10982'] = func_10982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11011 = relay.var("var_11011", dtype = "uint16", shape = (6, 15, 10))#candidate|11011|(6, 15, 10)|var|uint16
var_11012 = relay.var("var_11012", dtype = "uint16", shape = (6, 15, 10))#candidate|11012|(6, 15, 10)|var|uint16
bop_11013 = relay.logical_xor(var_11011.astype('uint16'), relay.reshape(var_11012.astype('uint16'), relay.shape_of(var_11011))) # shape=(6, 15, 10)
uop_11016 = relay.tan(bop_11013.astype('float64')) # shape=(6, 15, 10)
func_8302_call = mod.get_global_var('func_8302')
func_8304_call = mutated_mod.get_global_var('func_8304')
const_11020 = relay.const([3.765239,1.760128,-0.152332,-8.578180,-4.266924,1.944075,0.008000,9.071661,-1.007376,4.711381,6.352451,-9.807126,-0.505918,-9.548979,0.127955,-6.250944,-1.177811,2.406380,-6.837612,-9.473252,-1.817286,-7.459036,-0.948665,-8.794942,0.453558,-1.445032,-5.288200,-7.999396,3.509316,-8.955491,0.926887,5.224444,-1.962688,-6.542434,-3.279758,7.987581,-1.310442,3.941550,-3.106815,0.734082,1.519519,-6.472729,0.927577,-3.880851,7.056478,6.548509,-9.412628,-7.983959,5.725113,2.522778,6.309973,9.917960,4.583519,-5.040152,-5.937345,2.350421,7.352344,-6.322696,0.880349,-3.465209,2.498368,0.318183,-5.389154,9.559953,-6.826006,-2.316688,3.257805,0.168037,-7.977424,-2.668851,8.428676,-4.825925,2.355878,8.158450,4.765168,5.892363,8.061900,-0.777674,-0.500276,-4.453707,5.214489,-3.790478,-2.167983,6.093872,-6.328500,3.773556,8.537024,-4.042062,-5.312964,1.758836,4.372054,0.030080,4.400272,5.676759,4.762183,-4.037808,-2.911819,9.875766,-3.497878,8.602955,2.231330,2.445871,-3.887042,1.499192,5.397471,-8.394776,-3.067450,-4.448023,-8.600413,6.722976,5.871545,-7.027966,3.482605,-5.568542,-6.902912,-9.547442,-8.125130,-3.333562,3.604433,-2.398777,8.057034,-8.282590,-1.944698,9.078785,-5.666016,-7.763629,9.373109,4.317642,-8.958277,-4.128560,2.060036,-1.910981,-5.433045,-6.776769,9.890523,2.709353,6.711751,-7.914129,-9.518355,-9.548444,-4.308258,-7.549391,0.118876,-5.721424,1.421306,-8.477284,2.676483,-1.920406,-3.828478,-7.099556,5.637652,-5.270702,2.569894,-0.167038,-1.012116,-4.033371,7.244249,-8.720927,-3.951585,9.142235,-5.683398,-6.938542,-0.913012,3.411708,0.497641,-2.375282,0.628709,7.150710,3.052678,-3.552326,8.295416,5.257493,8.786527,6.464426,-5.205486,5.045925,1.354267,5.159048,7.660071,-1.912467,-6.156012,4.828656,2.533026,-7.050789,4.191081,-9.650714,5.440412,1.794469,-2.551071,-4.252134,4.124926,2.585955,5.793635,1.006961,6.616824,0.770613,-2.349712,-2.787216,3.500205,0.290127,8.986205,4.242407,1.109776,-5.163428,-3.940746,-1.928987,-2.021913,-8.574635,-7.326715,-3.750724,6.221989,4.905057,0.516473,8.557347,-7.131042,6.458201,-0.489027,-6.782539,8.573194,1.885677,7.434678,-4.655115,4.054337,5.460290,-7.028888,-1.752744,3.632006,5.209509,3.891814,-5.777711,6.775517,8.633462,-7.907941,3.422022,-5.339331,0.565118,9.617188,-8.808922,-4.492461,-7.757659,3.483020,-1.421984,7.515584,2.981819,-5.946002,-4.343874,3.870217,-9.167605,-4.069306,-4.846346,-4.767229,-6.048295,0.503931,1.157065,7.171157,-9.379338,-4.457937,2.323532,-2.863044,-3.916117,-0.291483,5.925282,-7.582585,-8.830400,9.166375,-7.197846,-2.124330,1.086520,3.014233,-5.855246,3.306415,8.880801,2.001085,0.973479,-9.890662,5.778479,-9.615517,-3.032455,-3.591721,9.230721,7.498800,0.135500,6.833388,0.588546,8.137179,9.800782,-7.721472,-4.857110,9.188237,-3.372196,4.217028,2.247936,-3.067373,2.804844,-4.766774,-6.952747,-7.086582,6.953573,9.309596,-4.366108,-5.176861,4.261200,-2.482927,8.139425,3.672267,1.246189,6.827362,-2.110499,2.705183,-0.570708,5.901789,9.548609,-8.394711,2.114686,-2.578190,5.767840,4.252807,4.007772,-3.813942,8.675277,-2.323407,2.290993,2.029406,9.766096,8.414861,-7.575152,0.175019,-1.014800,7.786916,6.015940,5.776445,-2.212731,7.639023,-7.867191,-7.541526,2.740429,5.849572,-1.962013,-9.001876,6.237921,3.010918,-2.619657,0.240769,3.389724,-4.859723,-2.576735,9.261793,-7.290169,2.757866,-9.976988,5.938081,-6.063006,-7.380150,5.438542,9.348459,-2.049068,8.133811,7.876784,1.491797,9.799705,4.220565,3.250497,-5.786962,1.863483,2.026716,-9.092120,5.048773,5.550854,2.745625,-8.888488,4.768592,-4.568158,-6.911342,8.355170,-8.963927,3.490138,6.605327,-4.663171,0.249823,0.157176,9.994086,9.046538,-6.933894,4.193982,5.517766,-1.511225,-8.241235,1.293728,-4.885891,2.728455,0.510499,-3.705776,4.697503,2.078985,-5.728335,8.817241,-1.712115,-7.529207,9.668141,-0.372884,-5.812139,5.071306,7.955551,3.147366,-6.948190,-2.772505,7.288818,-2.310553,9.700836,1.123355,-9.238579,-2.043321,1.089393,5.605073,-2.458541,-4.770616,7.804452,8.977344,-4.327034,-6.319783,8.596665,3.159365,-1.440632,-1.062759,8.438718,9.529736,-3.358392,-7.199946,3.411049,5.597737,5.923086,-9.875833,1.329487,-9.700083,-3.696210,-5.927952,1.181115,-0.555699,2.516104,-0.663920,6.956332,-1.984024,2.823707,4.015944,8.651453,-9.664773,-8.532042,4.541464,-7.227015,-6.559031,-1.481670,9.363154,-1.990178,7.270750,-8.308392,-7.233360,-4.496343,1.045392,9.543907,-4.313395,9.270531,6.185690,6.405148,-6.231417,-8.904748,-9.693607,3.013485,1.056279,2.987681,-5.900938,-0.357123,9.988302,2.408912,-9.016760,-6.886234,9.134723,3.037090,7.125143,8.396286,-6.489399,-6.593387,4.742008,-4.396303,2.419928,1.491358,4.083588,-6.592393,-7.547319,-5.462986,-0.596468,2.186660,-3.715935,3.680500,0.316657,0.690323,-0.072427,-9.829096,-4.264236,-0.888036,3.733537,0.617393,5.594819,4.547667,1.002884,-5.841585,-6.271308,-4.146885,-0.363394,1.814545,-7.502991,-9.356988,-5.789048,-0.559524,4.851179,3.529700,9.330552,-8.368436,-1.451001,-4.022271,0.571189,-6.652554,7.957390,-7.550241,-7.590647,6.170740,9.250869,8.885933,9.238132,-5.479950,0.598293,1.986866,-9.091191,7.526363,9.558314,-9.259217,6.114824,2.830790,1.022187,-6.804756,6.096916,3.686883,4.671116,-0.756779,-2.429202,-4.960341,-1.120986,-1.737378,4.683545,-8.352494,-5.037036,4.703341,3.913358,-7.556350,-2.420137,-8.119693,-5.111976,-2.808725,-1.986301,-9.955537,2.048862,-4.905697,-4.437685,-5.331036,9.299213,2.757158,-1.835312,3.895680,3.132456,-3.413646,-4.045200,0.136200,-7.315911,3.750437,-0.815263,-4.800229,-1.708219,-2.526868,3.401562,-5.872673,0.438033,-9.508895,-2.131028,0.732327,8.495902,0.550180,-1.268166,5.942366,1.071258,5.633376,-2.363639,7.257916,1.177388,-8.153252,2.764032,8.936270,-0.549079,-8.527076,4.758678,-7.547170,7.347065,-8.567721,-3.659394,8.404131,-2.671133,3.798137,-8.938808,6.812909,-6.968288,-1.452667,-5.757051,-0.146877,-9.908794,6.655136,-5.915527,-0.465936,-8.408325,9.590191,-0.384889,-8.565197,-8.859256,-1.378583,-4.210062,-0.019184,9.986029,-5.657600,-4.466661,-4.728763,0.584297,-0.793061,9.851873,-1.984048,6.040603,-4.843256,-7.944464,4.373867,-6.022812,8.490195,8.721333,-7.924247,-0.578880,3.413526,8.376444,2.556981,5.450746,7.336081,9.349094,-9.829001,5.381844,-2.945186,7.046295,-9.769174,8.840546,1.924634,5.350845,6.025221,-9.794312,-2.142792,-2.068561,1.968558,8.082453,-6.407511,-6.354520,-5.937934,9.702715,7.957536,-3.414857,2.399059,0.324361,-3.322384,-2.159739,-9.848474,-0.915098,-6.359780,8.110421,4.127644,-7.251981,0.097508,-2.781615,1.428246,-5.714227,2.384965,-1.076455,3.836804,1.784353,7.561891,1.491396,-9.984798,-6.118231,5.216769,-2.838424,5.212270,-0.637434,7.518387,-9.487711,3.977280,4.582943,4.595033,7.536692,2.142998,-2.976287,-9.857211,7.735613,-2.842213,2.625026,1.542311,-2.370359,2.920681,9.958602,4.457587,4.712952,-9.528019,3.151595,-0.667709,-4.540197,4.876644,-4.136449,3.912446,2.649228,-7.973777,8.487611,-6.713765,-6.681438,-0.456264,8.199141,2.147096,-9.713379,1.518244,5.847677,-7.432521,-7.389154,-3.511717,3.816127,-3.367894,5.197722,-1.182972,-3.750684,-5.386906,-7.537659,-4.866212,1.963104,-5.164596,7.977601,4.669524,5.972291,1.941228,-8.407369,2.139545,7.862998,-7.709416,-1.095655,3.202454,4.664130,0.679792,-9.299174,1.645291,0.068508,-5.728934,-0.587989,5.006604,2.405459,2.254453,-6.816922,-7.747799,-9.100008,0.701037,5.053435,5.897643,-3.947035,-3.779627,-3.382913], dtype = "float32")#candidate|11020|(770,)|const|float32
call_11019 = relay.TupleGetItem(func_8302_call(relay.reshape(const_11020.astype('float32'), [14, 11, 5])), 0)
call_11021 = relay.TupleGetItem(func_8304_call(relay.reshape(const_11020.astype('float32'), [14, 11, 5])), 0)
bop_11026 = relay.equal(uop_11016.astype('bool'), relay.reshape(var_11011.astype('bool'), relay.shape_of(uop_11016))) # shape=(6, 15, 10)
func_9191_call = mod.get_global_var('func_9191')
func_9193_call = mutated_mod.get_global_var('func_9193')
const_11035 = relay.const([-5,-6,-3,7,-8,10,10,-9,-10,2,8,-3,-1,-9,-2,-5,-5,7,1,5,-8,-5,6,-7,-9,-4,-10,-6,-7,-1,5,7,6,-9,6,6,8,-6,-7,1,-3,-1,-1,3,1,-6,-1,-6,4,4,7,8,3,-10,-9,4,-3,3,1,-3,-2,-9,-1,-10,10,9,-5,-3,-2,-9,-1,1,8,-1,3,-1,2,-10,5,-1,5,2,-8,-10,-7,9,4,5,5,-2,7,-5,-5,5,-4,-7,-6,-3,-6,-5,4,5,6,-1,-4,-1,-8,4,-1,5,3,6,-1,-6,-4,1,6,7,6,7,2,-2,6,6,-5,3,-3,1,-10,2,-7,1,9,-9,7,-4,4,1,-4,-7,8,-8,1,-8,6,4,-2,-9,2,-5,-2,7,-7,-7,-5,-1,-4,-5,-8,-5,-2,-8,-5,-5,-4,5,-1,5,-3,10,-5,-1,10,4,-9,-2,10,-7,-8,-2,-5,10,1,8,6,-2,-9,-9,-10,-8,-4,4,-2,-8,3,3,-9,6,6,6,1,4,4,10,-10,7,-9,-9,9,-1,9,10,9,-10,9,-9,-7,-2,-6,-6,-1,10,3,-2,9,5,-9,6,1,3,5,2,-4,-4,7,9,-3,7,-10,-8,-2,7,-10,-9,2,-2,-3,8,9,8,-1,3,7,10,6,-6,-3,-10,-7,-5,-1,7,-3,9,-8,9,5,-3,-1,8,3,8,9,8,-6,-7,9,-1,1,-4,9,8,5,-4,6,-4,8,-4,9,-4,-4,2,-9,6,2,-10,-3,-5,-2,3,-3,-9,-8,-1,-5,-1,-8,-2,7,8,10,-2,-6,1,6,-8,-2,3,9,6,8,3,-4,4,7,-3,-10,7,-2,6,4,-10,-2,-6,-4,5,2,8,4,-5,6,7,-5,-5,-5,-6,6,5,6,7,4,1,-9,-9,-5,-6,-4,-8,-9,5,-4,5,4,8,-1,-1,-8,-10,3,1,-6,6,2,-1,7,-7,9,-10,3,-5,4,9,8,8,1,-7,8,8,-9,3,9,6,-3,10,-6,-10,1,-10,-9,8,10,6,3,8,-7,10,2,-1,-6,-10,-6,-1,-8,-3,1,-8,1,9,-9,7,-9,-1,7,-5,-3,-3,3,-5,9,9,-1,3,10,5,-10,-9,-3,1,2,-5,10,5,6,-6,8,-4,-2,-1,10,6,-2,2,-5,7,8,-6,2,2,3,-2,3,10,-3,-2,8,-7,-4,8,-10,7,-9,-6,6,10,6,-10,5,8,2,-5,1,3,-10,3,7,10,6,-8,4,10,7,-2,-10,4,-2,4,-10,-9,7,-2,3,-2,-6,1,-8,1,-1,-2,5,6,-5,-1,5,-7,1,9,-1,-4,1,8,-6,-7,-2,-1,4,-4,-6,-8,-4,-5,6,10,-7,4,-10,7,3,-3,4,-2,1,-1,-3,-10,-6,6,3,9,10,5,-8,-6,-10,-6,4,5,5,4,3,-7,-1,10,8,-1,7,-2,2,-7,-8,-7,2,2,5,7,2,-8,-8,-6,-10,-9,-6,-3,9,-9,3,-3,-7,4,1,-2,7,5,-8,4,-9,-6,-3,3,9,1,9,8,-1,8,4,-4,-9,6,1,5,4,6,10,-1,3,-2,-8,-8,3,-10,5,-7,4,-2,-5,6,10,-9,1,-1,4,5,-2,-2,1,1,7,-2,3,-5,-3,-10,-4,3,-10,8,-6,5,-9,4,-8,-6,4,5,2,-8,4,-7,-8,2,5,-10,-6,-2,4,3,-2,7,6,3,-6,6,8,6,6,-2,9,-3,-8,8,-2,4,-1,-9,-4,9,-5,8,8,9,-4,-4,-4,-8,3,-6,8,-10,2,-7,4,-8,9,-2,2,1,-4,-8,4,-3,-1,-4,1,-7,-5,-3,10,-8,7,-6,-3,6,-1,-6,-2,4,9,2,3,-5,6,7,-9,-5,-9,7,9,9,-10,7,-5,-5,10,-4,-1,-3,-7,2,-9,4,9,8,-7,-10,-4,-8,9,-1,5,5,-6,-2,9,9,-5,6,4,-4,2,9,10,-5,3,9,3,3,-2,-2,-10,-9,-6,9,-10,3,6,6,-1,6,-6,1,8,-9,-10,-1,6,5,6,3,8,6,10,-1,-4,5,9,1,2,8,-5,-4,9,-4,-5,9,-5,-9,-8,3,5,-3,-4,4,6,-9,8,-3,-5,2,-4,-5,-7,-3,3,8,-4,4,5,7,1,6,9,8,4,6,-2,-8,-5,3,-7,-8,2,-10,-2,-2,-2,2,-6,7,-2,-10,4,-1,-7,7,-5,-4,8,6,2,5,-4,5,-9,2,5,-4,-9,8,-1,-9,-1,-3,-10,9,7,-6,-2,1,-5,-1,-4,-9,-1,-9,1,9,3,-1,3,5,-5,-10,-1,-8,-3,-7,5,-10,-3,1,6,-6,-3,2,-8,-5,5,9,8,2,-8,8,5,2,-8,-1,-4,-3,-5,-5,9,7,-7,2,6,7,-3,7,-7,-7,3,-7,-7,6,-5,-7,4,10,4,7,8,-4,-2,-10,-2,-2,-4,-4,9,-5,2,9,-7,9,3,-1,-1,1,-8,2,7,-6,5,2,-1,-10,-10,-1,10,-10,6,-5,8,4,-8,-5,2,-5,-3,-1,-3,-9,2,2,10,6,-3,6,-8,7,-7,-10,-6,-4,-2,-5,-7,-10,4,2,5,-1,10,8,-8,-3,-7,-1,-8,4,-3,-6,3,1,9,-1,-3,3,-10,3,-7,-2,-9,-9,-2,-6,-2,-7,-10,2,2,-6,-6,10,1,5,-10,-2,3,-6,4,10,-4,-1,-5,-6,6,4,10,-9,9,-8,-2,8,2,10,5,2,-7,4,5,1,-1,-5,-10,3,-8,-8,9,-6,3,-7,-8,-8,3,8,-3,3,-3,8,-3,-3,-9,-3,-1,1,7,-2,10,-9,-3,3,6,-3,-4,-2,-1,-8,-8,-1,2,-2,-2,5,4,5,2,7,-5,9,-1,-6,6,3,7,-4,5,-9,2,-9,9,-6,-3,1,5,-7,10,9,9,3,-5,6,-5,-7,10,-5,-1,4,-6,-3,-4,7,6,-2,-7,1,-4,-2,-2,5,-6,-5,-1,-2,-3,-8,-5,-2,1,6,-1,-2,3,-1,6,9,6,10,2,-4,6,1,-9,4,9,9,-6,4,-6,4,-2,-3,-8,8,4,-4,-6,-6,10,-4], dtype = "int8")#candidate|11035|(1200,)|const|int8
call_11034 = relay.TupleGetItem(func_9191_call(relay.reshape(const_11035.astype('int8'), [1200,])), 0)
call_11036 = relay.TupleGetItem(func_9193_call(relay.reshape(const_11035.astype('int8'), [1200,])), 0)
uop_11043 = relay.sqrt(bop_11026.astype('float64')) # shape=(6, 15, 10)
func_6759_call = mod.get_global_var('func_6759')
func_6761_call = mutated_mod.get_global_var('func_6761')
call_11051 = relay.TupleGetItem(func_6759_call(), 0)
call_11052 = relay.TupleGetItem(func_6761_call(), 0)
output = relay.Tuple([call_11019,const_11020,call_11034,const_11035,uop_11043,call_11051,])
output2 = relay.Tuple([call_11021,const_11020,call_11036,const_11035,uop_11043,call_11052,])
func_11054 = relay.Function([var_11011,var_11012,], output)
mod['func_11054'] = func_11054
mod = relay.transform.InferType()(mod)
mutated_mod['func_11054'] = func_11054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11054_call = mutated_mod.get_global_var('func_11054')
var_11056 = relay.var("var_11056", dtype = "uint16", shape = (6, 15, 10))#candidate|11056|(6, 15, 10)|var|uint16
var_11057 = relay.var("var_11057", dtype = "uint16", shape = (6, 15, 10))#candidate|11057|(6, 15, 10)|var|uint16
call_11055 = func_11054_call(var_11056,var_11057,)
output = call_11055
func_11058 = relay.Function([var_11056,var_11057,], output)
mutated_mod['func_11058'] = func_11058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10522_call = mod.get_global_var('func_10522')
func_10523_call = mutated_mod.get_global_var('func_10523')
call_11066 = func_10522_call()
call_11067 = func_10522_call()
func_2240_call = mod.get_global_var('func_2240')
func_2245_call = mutated_mod.get_global_var('func_2245')
const_11088 = relay.const([3,7,-9,4,-7,-2,4,-9,-10,-9,-7,-5,-6,-9,-6,4,10,1,-6,3,-9,-4,-6,-7,8,-7,5,-3,4,-3,8,-10,-7,-8,-8,-10,-6,8,-9,-10,-5,1,10,-10,-8,5,-10,-4,7,-2,5,-2,6,4,-6,-2,1,2,7,-4,-7,-1,-3,4,7,5,-7,4,6,9,-10,7,-4,3,-1,8,-7,4,4,-1,1,-4,2,4,-3,4,-5,7,9,3,-10,-7,8,8,-9,-4,5,-1,-3,7,-9,1,1,3,9,-2,-5,-5,-2,6,2,-4,-7,5,1,7,-4,-1,-8,7,-8,-8,7,7,-6,1,-4,-4,9,10,3,7,8,2,-2,-3,5,-7,-5,-2,-9,1,-5,2,-6,3,10,5,-9,3,-6,-6,-10,-5,-7,-7,9,8,7,-9,4,2,-3,-3,-6,8,5,-4,4,1,6,8,8,-9,-9,9,10,7,-8,8,9,7,7,-10,-3,-6,10,6,1,-4,4,4,-5,-7,-3,9,10,-7,-9,10,7,3,-2,-7,4,3,-5,2,-10,-2,-6,5,7,5,-9,8,-2,5,-9,7,4,-1,-9,-6,4,1,9,7,10,-1,-8,-6,1,-2,-2,4,-1,4,10,8,-9,5,7,-3,-6,7,-5,-4,-2,9,-7,1,-9,-5,-6,2,-4,-3,-1,-7,1,10,-6,-4,-1,6,7,-4,-4,-5,6,8,-4,-10,-7,1,2,4,4,-10,-3,2,4,4,7,-10,7,-2], dtype = "uint16")#candidate|11088|(288,)|const|uint16
const_11089 = relay.const([8,-10,2,8,9,7,8,-6,8,6,-1,3,5,-9,1,-8,4,7,9,-5,9,10,10,8,7,1,-9,9,-4,-1,-8,5,-9,9,10,-8,4,8,1,3,2,-6,-8,-2,-5,9,-6,-5,-7,-2,-10,5,6,9,1,-9,-8,1,10,-8,10,10,2,-2,-2,3,5,-6,-3,-2], dtype = "int8")#candidate|11089|(70,)|const|int8
const_11090 = relay.const([5.797750,-5.075085,-1.628451,-7.540445,-7.013008,1.546244,-2.738109,-9.309073,5.900697,9.264716,-9.107886,-8.165188,-6.116663,1.919702,-8.679069,3.905122,-2.442540,0.850678,-4.493704,-2.842868,-6.325890,-6.714429,-1.703497,8.341638,-1.759387,6.624854,-7.333681,3.364918,-9.063815,-2.690257,9.789067,-9.556075,1.553855,9.303038,3.118738,3.662108,0.047614,-4.247627,-5.587512,2.284582,7.202569,4.289324,0.820209,-5.187322,1.142500,-7.539995,-4.387354,-6.201743,7.309936,-7.595170,2.334214,-9.204904,6.384695,-6.555046,-8.131021,-2.910550,-5.376513,1.396061,1.188207,2.412030,8.523013,9.187328,0.644678,0.994172,3.553151,6.604017,0.617337,-4.263034,2.167941,-7.921776,-3.211934,1.144241,-5.607876,-9.527012,-1.628945,-4.085708,-7.215437,7.296648,5.023203,-1.001687,-0.917378,2.279962,5.357067,6.867640,3.389988,-2.341425,-6.648732,-2.977138,-6.559232,-3.883413,9.987882,-7.808600,2.980332,5.233976,4.331289,4.759658,7.852755,3.312182,-6.696774,0.358687,4.090371,-0.865459,8.416003,-0.544193,8.297801], dtype = "float64")#candidate|11090|(105,)|const|float64
call_11087 = relay.TupleGetItem(func_2240_call(relay.reshape(const_11088.astype('uint16'), [16, 6, 3]), relay.reshape(const_11089.astype('int8'), [70,]), relay.reshape(const_11090.astype('float64'), [1, 105]), ), 5)
call_11091 = relay.TupleGetItem(func_2245_call(relay.reshape(const_11088.astype('uint16'), [16, 6, 3]), relay.reshape(const_11089.astype('int8'), [70,]), relay.reshape(const_11090.astype('float64'), [1, 105]), ), 5)
output = relay.Tuple([call_11066,call_11087,const_11088,const_11089,const_11090,])
output2 = relay.Tuple([call_11067,call_11091,const_11088,const_11089,const_11090,])
func_11102 = relay.Function([], output)
mod['func_11102'] = func_11102
mod = relay.transform.InferType()(mod)
output = func_11102()
func_11103 = relay.Function([], output)
mutated_mod['func_11103'] = func_11103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8846_call = mod.get_global_var('func_8846')
func_8848_call = mutated_mod.get_global_var('func_8848')
call_11128 = relay.TupleGetItem(func_8846_call(), 1)
call_11129 = relay.TupleGetItem(func_8848_call(), 1)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_11150 = func_8571_call()
call_11151 = func_8571_call()
func_7675_call = mod.get_global_var('func_7675')
func_7686_call = mutated_mod.get_global_var('func_7686')
const_11153 = relay.const([-5.139196,-6.660039,3.625007,2.053406,-8.824362,-4.170293,3.086309,-1.217595,-3.371143,-2.715480,-0.469865,-3.995166,-7.603494,-9.616839,0.525361,1.733971,-8.723418,4.601233,-5.212812,9.130730,-0.057210,3.728613,9.229859,4.957744,8.211770,5.302105,-3.024960,-9.360001,-5.368545,7.265402,8.937028,5.114591,-4.166586,2.179397,-1.463465,4.717867,8.161905,-6.117547,-5.206479,-7.946051,9.985002,7.768970,0.910662,1.277843,-0.870860,-5.566831,4.628392,0.470359,-4.821562,9.421165,1.976211,0.828857,7.448357,3.640062,-3.183535,9.949924,4.417343,0.736485,-3.254053,-0.536788,5.012964,0.385995,8.986048,-3.188485,5.394468,-3.696104,-3.702390,3.235989,7.619225,9.338586,4.709456,-6.342505,1.543333,1.947083,-8.172653,-1.808194,-7.816697,-0.414316,-8.823550,7.691315,-0.793582,-5.979511,-1.516134,-0.117468,7.642417,9.763880,5.328714,8.713061,2.792604,-3.425387,3.444267,-0.733915,-6.457157,8.370953,0.994408,5.450950,-2.222926,8.082460,6.387676,-8.652156,8.444592,6.179462,7.712044,-6.460975,-8.265573,-4.715517,7.851914,0.877147,-5.581857,6.979126,-1.069834,4.941728,-7.624683,3.492622,4.575300,-2.686840,9.297507,4.771187,7.114386,2.790999,-1.977784,6.537627,-5.529861,-2.950876,5.986428,4.346550,-4.868531,-1.321571,9.350321,-2.680429,2.153961,0.279295,0.045835,-8.105535,-8.063290,-1.492686,7.138050,4.246395,-5.001413,-6.362964,4.288510,9.798827,8.961040,-3.575712,2.895376,4.646587,-5.399893,3.092185,8.026591,-3.095574,-9.447617,-4.408601,-2.757413,2.999988,7.797631,-1.639929,6.560278,-1.625101,9.578752,3.422249,-0.447480,4.083934,-6.726173,-1.909472,-6.389811,2.440728,8.153612,0.419911,5.157225,-1.510516,-8.337124,3.729914,3.941152,-0.012613,8.216827,2.912973,-8.826181,-4.071501,-4.805481,-8.197896,6.494460,1.537813,-7.574316,-7.694057,9.681963,-0.290986,8.436772,-6.228661,-6.135395,8.487008,-7.184997,9.721355,0.702812,3.267585,-8.851338,5.595278,-4.662361,-5.930297,9.028431,-0.526120,5.878867,-4.366315,4.248266,8.147597,-3.620311,4.452170,-9.077245,3.337390,-2.492203,4.640419,8.534268,-3.246586,9.585998,-3.277123,8.049354,4.140421,9.359606,1.113964,-2.839691,-2.587381,9.786868,-7.989867,-2.539240,3.562706,-2.684267,7.938850,0.610574,2.062271,-8.887338,3.226835,7.763789,4.808541,5.202999,2.210316,4.598931,-6.908057,4.105260,-7.328881,-1.178309,-1.953194,-5.358142,-3.280885,7.539193,-9.775999,3.675209,5.079071,7.782009,-1.212804,2.663985,-6.356615,0.445944,8.181206,6.734014,3.047468,2.726336,3.334442,5.795077,-8.805208,6.618026,0.228585,-0.301712,4.942927,9.589304,-0.507277,4.416513,7.424814,2.171523,2.517692,0.608813,2.150486,-8.263325,-0.413340,-1.867422,-6.579736,-2.189879,2.495856,-8.441151,-6.647765,-2.579134,-8.821381,8.745126,-8.287442,-2.302417,-6.072563,-3.208533,6.901506,-6.300296,6.200620,-7.593699,-4.740270,6.786468,5.900878,6.363071,9.254916,2.466265,3.153200,4.212456,8.035404,-1.110540,4.117522,9.404438,5.782751,2.912118,6.833899,5.226252,-0.485733,3.829868,-6.804557,3.593236,-7.520766,-6.517732,4.356547,9.412962,3.832764,-2.823652,2.090563,1.332529,5.671617,2.287479,-0.081484,7.045459,8.400756,0.210782,6.585062,7.605785,5.029430,1.370558,2.727191,6.928524,-9.217389,-3.652516,-6.075803,4.373485,-9.354582,-7.139226,3.821064,9.795969,-0.744470,-1.364927,0.402118,7.437854,5.024933,2.723502,2.888715,-7.626026,8.705421,0.587092,-7.998953,5.177158,9.936752,-9.999480,4.944226,3.015272,-6.174088,3.100948,9.617307,-7.730128,-9.314635,-3.038648,-0.094966,8.971430,4.540492,6.540643,5.473413,-9.332814,-2.359663,3.310379,-2.497916,6.365417,8.268351,-0.366130,0.850691,0.376273,-5.042844,-5.783420,-0.722901,-3.907861,-3.064003,-0.851603,3.386986,7.285316,2.285956,2.967101,8.981361,-5.197078,-0.540973,-2.102927,8.816400,1.555432,0.465039,-0.052163,8.848324,8.519643,0.258193,-9.607005,-2.984677,-1.014386,-6.051099,0.693554,8.471992,-4.020866,-7.153495,5.661387,5.269933,3.419391,-0.545190,-6.682802,6.990114,-5.184354,1.385941,1.323390,-9.746998,1.830392,1.281786,-3.653421,-0.227580,-1.981371,4.008572,-7.235399,-1.451590,7.479866,-1.456075,2.239572,1.720375,-1.148203,-9.280919,-7.815480,3.920541,3.259994,-4.403054,8.318369,6.538121,4.159251,-6.661665,5.240726,-2.603861,0.604493,-9.450516,-6.607301,-3.389275,3.453914,-3.373438,7.650829,4.705867,-5.891095,7.237117,7.079712,-2.611675,2.152492,-2.632044,4.547002,-0.085155,3.375148,3.408533,-8.734043,-8.714334,-4.861508,-7.618188,3.049848,7.284933,5.295035,0.893118,6.253289,-3.637875,-6.223979,8.588248,0.790395,7.544641,-0.078271,-1.363527,-8.978150,-3.025037,4.005254,9.559656,1.343760,-0.478950,3.292368,8.075506,3.172981,1.249337,-7.525102,-4.835657,-8.120299,0.019377,-7.028634,-6.205257,-9.633283,-7.708965,7.376942,-6.844038,-3.297006,1.977930,9.277682,-3.792924,-4.692317,-4.132119,-7.567310,-4.995482,-6.532722,9.633291,5.116389,-6.003489,3.311461,4.585852,-5.554192,3.269079,9.361806,-9.706712,4.909225,8.396844,-9.599641,-5.917383,-3.274914,-9.647524,-8.071939,-7.834330,7.501412,-1.564379,4.802502,2.695008,0.799782,-8.529688,5.094510,9.904622,7.234393,3.914709,3.489855,-3.121214,-4.075781,-5.406923,-8.216598,4.223285,2.986006,-5.106894,2.425789,-0.569210,-9.821487,0.609453,0.011211,-0.079748,-1.501816,7.461164,-4.784132,3.271024,-1.903492,4.062369,-1.105928,-7.838891,-0.891766,-9.584770,-1.779822,9.156940,3.076187,-4.301704,6.881038,9.386161,-6.275644,3.703382,-7.834655,-8.409481,0.314338,-9.907491,-9.702619,4.573192,1.540916,-9.355514,6.425218,7.662047,7.033837,0.946936,-3.774400,-5.806547,2.626842,0.748624,-2.548754,-6.061552,-4.186014,-5.327784,8.710767,5.374418,8.843252,-8.595307,3.170113,-0.909008,-7.157395,-6.356168,-3.851016,3.726983,-3.934772,-8.026455,-1.931988,-8.043534,9.591507,6.604043,3.736404,2.460314,5.211682,4.465604,0.816235,1.018508,6.691719,4.394627,-8.586678,-5.560990,8.244516,5.469634,5.463727,-3.796113,-9.354322,-0.956376,3.975428,4.977105,1.371690,0.655764,-5.333204,-5.380832,-1.601375,4.738078,1.664765,-5.920177,-8.079265,-4.262913,9.946470,-8.614240,2.647423,0.861095,1.828395,7.412625,5.072133,1.038244,2.919507,-5.860702,9.959095,-0.149197,6.987107,-9.012161,-5.615446,1.284890,3.974862,-5.293921,-6.854193,9.461064,-7.513695,6.062208,-2.876581,5.739795,-5.333304,5.083085,4.332749,-6.438404,-9.923947,1.042639,-2.673869,8.347234,-0.583219,-5.484058,6.535128,-3.957455,-0.576726,-2.057759,0.812547,-8.703641,3.347479,0.043553,5.078572,0.263204,-0.157303,-2.860822,5.178498,3.466851,8.523100,3.934527,1.491514,-3.397673,8.485231,-7.986454,-6.126744,-6.312915,3.365834,8.120986,-7.243756,-9.739134,5.003026,5.130389,-6.612852,-7.367326,-1.079149,0.190165,-0.391710,2.592605,-2.901476,-3.331429,-2.102065,-3.016450,-0.987741,-5.751556,-0.707752,-1.283452,8.675854,-1.658564,-7.437298,-2.348522,-4.079223,-5.628771,4.710675,-5.806757,-9.518736,7.774577,-8.924799,-4.880363,6.730919,4.797192,6.426423,6.575684,0.701047,7.515118,-7.021936,-2.577259,3.500887,2.359811], dtype = "float64")#candidate|11153|(720,)|const|float64
var_11154 = relay.var("var_11154", dtype = "float32", shape = (325,))#candidate|11154|(325,)|var|float32
const_11155 = relay.const([-7.348734,-4.674788,-0.316477,3.550727,-5.559759,9.467743,-8.745227,6.711004,4.637303,0.502864,-4.840758,-6.259177,-8.416622,-9.503951,0.947496,2.652021,-4.587339,5.904450,-5.283943,-9.425651,2.253777,-2.245895,3.714095,-7.998923,-2.747343,-6.025778,0.061657,8.338043,5.594961,9.157938,9.622198,-2.302772,-8.404075,-7.940829,-9.084812,-1.045586,-7.223488,8.913230,-9.403560,-0.336590,-0.262291,6.480725,-0.935418,4.419186,-2.313438,-8.253451,-3.981980,0.837956,5.656404,6.086961,-1.388413,5.228067,-9.188487,5.376039,6.408296,9.208552,-2.779300,1.739824,3.274657,-4.624095,-6.026921,2.509137,-8.188555,8.716730,-7.970214,4.486607,-4.361353,2.305836,-7.045567,-4.589411,0.550697,9.504242,-9.304355,-8.772023,3.539065,-4.732195,8.201318,-5.197061,-6.543459,0.004961,-3.911050,-4.675473,-5.248852,7.168733,-2.038212,-4.904618,1.743626,8.921813,-0.471023,3.264646,-7.631770,9.095062,3.352254,4.527816,-8.138764,-2.218384,-1.971524,7.791840,1.138052,9.988836,-9.594960,2.534815,3.800769,-9.046396,-2.385534,1.406256,5.231023,-2.220801,7.398773,-1.585929,6.518252,-2.399117,4.714298,-9.892626,2.987867,-9.224838,1.381347,0.872871,-3.261543,-2.977979,-1.747002,-4.791185,1.961381,-5.013849,-1.260998,-3.636231,-7.715904,0.273606,-8.838677,-6.903456,4.070991,-6.810306,-2.829906,9.634201,1.725001,9.631680,-9.134840,8.268597,-7.543295,-4.763337,-9.749035,-1.146996,3.533706,0.633115,3.462593,9.172403,-6.487600,1.984193,-4.232564,-4.556865,4.751945,1.982874,0.947234,0.666977,-5.697731,-5.565463,-5.191043,6.220392,4.380133,0.277928,-6.034198,5.578560,-2.169021,1.972480,-4.272762,-2.473199,0.547326,5.627860,-9.823826,9.887539,-2.943085,-6.152080,-6.048813,-0.910490,-7.849245,7.856874,0.408272,9.582787,4.331375,-4.880450,-6.573448,9.726536,-5.799694,-6.774964,7.922661,0.264116,-5.189594,-6.019514,-0.977228,-9.908610,4.048945,2.065433,-4.194568,-0.615007,-8.085377,9.662168,-2.348855,-9.672681,8.417904,5.180625,-2.865686,-9.290841,-7.415040,-6.071372,-7.237595,1.596619,-1.543538,-4.978506,-7.722230,-9.585199,7.125067,1.194140,6.213603,-2.909855,1.233588,8.521988,-9.778098,-4.866781,5.587046,7.840223,2.098756,0.810267,-3.887746,-6.611483,-9.137053,7.645019,4.131330,8.193433,-9.494742,8.587349,-3.488082,-2.064810,7.319832,2.369302,9.861186,-5.831635,-0.138793,-2.590580,4.260463,5.276909,1.777705,0.510129,9.841810,0.570033,-7.520811,1.588673,-4.417601,9.027970,-4.094022,-9.834210,-6.889019,-0.404948,-8.345291,5.713983,-3.146746,9.646046,4.234065,-1.847939,-2.394202,-6.263632,-1.063941,8.506093,9.229823,-2.279916,7.941914,5.136400,5.450752,-4.666620,-7.298217,0.885372,-7.619581,7.816474,0.767467,4.106788,7.128784,-2.033487,3.461691,-1.924842,6.675726,9.941038,6.273444,-4.831514,-2.398540,-6.340738,-0.053168,0.457241,9.705937,-1.653900,-4.151822,-6.939821,8.390264,-4.281897,-4.586642,-9.444136,6.618176,-2.963609,-1.110337,-9.833665,-9.358782,-1.070294,-2.919345,0.028186,-3.432542,5.290142,3.780973,-3.988743,-3.162931,-4.820907,-8.871842,-6.482392,-3.417142,-9.569046,9.933696,4.719134,-2.011460,-9.504609,-4.023796,-9.146186,3.595513,9.561249,6.178447,-4.446063,-5.860746,-3.909291,2.952247,8.419408,7.538404,-3.064247,-2.789965,-7.245297,4.933434,6.179206,3.314440,-4.123035,6.252751,4.078720,-8.296825,0.586856,-4.350152,8.344674,-4.748927,0.593194,-2.812596,7.701843,-1.693781,7.594208,-4.041088,5.153008,-8.555211,4.087451,2.286132,-7.595569,-5.309764,9.123921,5.843736,-1.740922,6.600803,-7.822468,3.177512,-4.060181,4.727664,-1.222382,-8.692001,2.516995,4.990134,3.169706,-1.427817,-3.601542,0.946176,0.975859,-0.138741,-7.618512,-7.977678,-6.564513,-2.744248,7.222578,-7.614721,-5.370778,5.321763,-5.335883,-0.367508,1.685129,2.884719,8.899527,1.056251,-8.122050,-3.377312,1.673611,4.353218,-6.520358,-3.852529,3.215746,6.666321,-6.512194,-5.291127,-6.983272,-6.245351,7.359447,5.471702,-4.175419,1.429791,1.451033,0.906719,-9.411105,-3.962439,8.261298,-3.410280,0.903082,-1.313384,-3.754831,-3.709648,4.391187,1.489297,5.721151,0.089984,0.645635,-0.387852,-0.970451,-6.941459,-5.739718,8.741349,2.123187,-6.895190,-6.943914,-8.447785,7.466651,4.027865,8.003484,7.348749,2.906391,-3.723091,-6.307389,4.662126,4.724108,8.934363,-8.074370,4.907089,5.891505,7.957783,-9.763991,-1.869884,-7.009428,-1.786812,-2.077207,-3.190114,-1.432488,9.703097,2.707675,2.360177,-9.690614,-2.936973,3.768408,-6.623918,-5.752857,-2.850901,-0.981714,-1.801845,-2.040883,-1.908279,5.841330,9.151642,-0.626837,-7.304919,8.224496,-7.711436,-3.774636,9.866546,-9.399887,-3.642641,2.885868,5.793476,-6.103899,-0.355818,-0.764848,8.182414,-6.618228,1.490408,1.829902,-0.508950,8.522713,-3.474318,-9.280562,1.964401,-2.153873,0.172186,0.649920,2.986166,-3.623527,-6.405624,-1.209451,-2.142356,-8.943187,5.386240,4.283998,6.870669,-0.204769,7.614763,5.233239,2.859547,-5.980865,1.110233,9.984651,4.924511,-9.177267,-3.279815,-1.784233,3.567767,-9.161031,-6.359441,7.095472,-1.609491,-6.269040,-8.826780,0.899181,1.690638,-2.292479,5.687485,8.330918,4.920819,-3.190835,-6.752436,4.413669,-2.775477,9.361036,8.053580,-5.554102,-8.840812,4.518463,-2.650939,6.157215,0.612895,-5.049345,8.674867,9.348203,8.125380,2.832948,-1.525679,-1.128316,-3.151751,-4.187353,-2.602222,-2.615788,4.474305,9.375392,-1.501138,1.173715,-9.122970,-6.966014,2.355503,-7.421012,9.930083,-6.604899,-4.277009,-4.067527,-7.230169,4.429830,5.623356,-9.578160,9.628458,-4.465975,-9.930518,7.868623,7.832959,-3.969754,-9.938474,-2.726404,-0.006135,2.095447,0.134224,-0.287606,-7.732986,-8.741251,4.328485,-6.362186,-5.076433,-5.287648,-0.479592,4.623643,3.171607,-8.421457,-7.864534,7.527415,-7.570623,-8.646435,2.435667,6.951530,-0.332533,1.752290,-1.790315,-7.477605,0.046308,1.375285,8.231684,6.963172,7.153905,-1.792383,-6.715846,-6.613514,-0.829876,-9.002872,2.703778,-3.342415,0.274730,9.751501,7.499451,-9.350977,-4.765376,8.178767,-9.267466,-3.943373,-9.815117,-5.484336,7.177606,1.557898,5.741687,5.201520,-7.873963,-8.519575,9.049168,6.948134,7.934925,6.508803,-3.398376,1.481172,-2.001770,-8.684881,-1.976888,7.216935,7.119558,-5.360532,5.527513,-6.748708,0.960830,0.430672,-2.378007,8.521991,9.070181,-5.846059,6.750343,-4.082134,0.072899,2.607148,3.441624,9.002105,4.974589,7.760081,1.360202,-7.332202,-9.368834,-1.372259,5.337041,4.714787,-5.730827,-7.953427,6.578449,0.695022,2.384523,1.658353,-0.785381,7.409065,-5.616125,-1.358123,-0.955032,-6.588385,-8.626831,-6.945343,-4.574499,-0.962869,9.829181,4.905981,-5.244853,4.172300,7.138096,-0.129653,-1.490434,2.781294,5.058562,-4.948048,8.696299,-1.718657,6.544756,0.764077,-7.600667,2.950445,-9.988344,5.005306,1.978188,-0.725295,0.347152,-6.760271,-3.152478,-9.455553,1.723651,-1.500265,3.869264,0.161231,0.449665,-1.674032,-8.781973,5.177519,-9.695836,6.842165,5.038942,-9.976939,0.800886,-3.551333,0.783777,7.087522,-6.468950,4.733440,-9.246589,-9.251635,2.718159,-0.011521,-0.187041,-6.775873,-1.389916,0.372713,4.606780,-9.112497,-8.563575,-4.992821,1.965326,7.717056,4.389424,1.883256,0.368708,7.670623,-3.022896,-9.198162,5.404520,-9.459086,5.921188,-9.722708,9.769778,7.289429,9.671963,6.908633,6.461125,-3.943443,0.789615,-4.627545,-8.188540,0.036934,1.154445,1.298119,-7.918361,-1.194324,2.628614,-9.993223,5.999589,2.871623,-2.861497,2.124271,5.694584,-3.365498,1.144060,2.497930,5.313895,5.361891,-0.014825,3.731359,-6.620332,-5.660616,-3.812491,-1.925843,-8.500607,8.452818,8.065312,-2.929700,-5.932625,9.971350,-2.888425,5.528909,-2.228129,-9.232658,-3.297825,6.720693,-9.519842,-2.608161,5.098834,-5.983517,-8.941634,-3.275065,9.199152,-4.708955,8.111257,9.999805,-8.506562,2.120560,3.867914,-4.891671,-8.310987,-9.034813,4.798249,1.244984,-3.481904,6.323654,5.209367,-9.554216,-4.153328,0.724589,-9.831521,2.016597,5.130071,3.421809,1.710762,-8.188002,-9.167861,-6.599736,-1.422493,-2.898884,0.352493,8.899064,7.209642,4.269586,4.274149,0.060713,-7.316380,-1.886291,-6.379754,-7.370377,8.947802,7.964757,-9.693053,-4.403660,0.351747,0.659494,-2.663485,-5.011748,-0.469597,4.422632,-2.258983,9.803765,-6.046759,-3.792825,-8.221483,-4.234561,-3.280900,7.694864,5.489786,9.390027,-3.153937,8.652502,5.214275,-4.433083,-0.401829,1.317111,-1.819172,5.352953,7.449430,1.686518,-4.061435,9.471062,4.008678,2.543529,-2.947543,-2.636911,6.167234,1.565585,1.406857,-6.834411,-4.296007,-4.163948,0.483215,6.784146,9.884763,-4.409650,-8.217153,-8.580090,-5.183501,-0.957402,-9.602171,4.284836,-3.591878,7.685289,-5.131054,9.967686,4.667781,2.630590,6.626564,5.971425,-8.554786,5.354138,-9.057774,-7.037567,6.765448,0.242775,7.123973,-3.646231,-5.729480,8.030633,1.147210,9.334553,-6.344581,6.676429,2.439735,5.693541,-9.941002,-2.769996,-3.365089,2.503721,3.116000,-5.305139,6.063151,-6.754102,-2.430701,-7.113108,8.022278,-5.143536,8.517542,9.109305,8.643329,-1.063905,4.437537,-1.033645,2.267640,-3.858801,-2.806741,-7.743162,0.046948,2.397750,-3.760941,3.010345,8.817889,-5.542906,-0.460746,1.267681,-5.614474,5.578517,-1.740193,3.932417,-6.609113,-1.144479,-7.711884,-2.057067,-1.695370,7.109058,-4.756400,-8.894026,0.230002,-2.522587,-9.161631,4.198089,3.026326,6.868316,-9.032093,2.967529,-1.379984,2.761626,-8.299736,-3.714895,-0.762848,-5.786225,-9.795846,-4.918262,8.103831,8.741862,4.471240,-7.861107,-1.008096,-6.852821,-2.804020,5.955296,-3.704941,-4.357123,-7.044724,9.436957,-8.756152,2.606100,-6.629328,-3.716833,-8.265558,1.363332,-7.346134,-6.186368,7.656545,8.344284,7.726298,-9.579181,-4.190794,-1.160826,4.592625,1.844007,1.606246,0.173526,-0.959875,1.617171,9.679429,-0.259581,-1.401199,-3.086292,-2.129590,-8.681062,-3.998556,0.294108,0.748369,-3.094715,4.241143,-8.079685,-4.895230,-8.217284,-0.210548,-7.231643,-8.395820,9.718138,7.994067,0.377417,-8.435687,6.433761,-2.890791,8.957646,9.823593,5.709339,8.723153,5.813832,5.775188,-6.949255,-0.523668,3.450458,-5.447165,1.040089,0.356406,0.603501,-9.633718,-2.767757,5.514601,-5.512990,8.669008,7.416671,-2.707787,2.001404,-3.121658,3.267318,-7.445498,2.432305,6.864427,-7.899841,3.967333,-5.279553,1.172259,1.002239,-4.426128,2.693943,3.042513,-8.110306,4.045886,5.118794,-1.384839,-8.274362,8.052042,7.822778,7.484261,7.703886,0.503931,-3.524701,5.717711,6.584701,-0.315578,6.893091,3.536912,9.362660,9.582005,-1.762556,5.311005,-0.002208,-2.135372,5.580935,-4.053252,7.571638,2.665296,-6.090875,0.811802,-2.969117,-5.538814,3.388185,-8.584652,-4.882256,2.575102,0.707367,-0.254533,4.811437,0.608056,-0.693547,-0.698359,3.645919,6.113681,-8.820385,5.293881,-4.315662,-1.252255,0.207921,-4.648545,3.412759,-7.668815,-4.966236,-9.593502,6.849903,3.590638,7.470352,1.190054,9.434963,-2.272952,1.175145,-9.710493,8.916657,7.749505,0.714640,3.914922,1.336600,6.062361,-8.213687,-4.768579,0.650920,8.625472,6.695801,1.018990,1.793107,-1.301209,2.305184,8.567221,5.844021,3.270779,-3.650529,2.236917,-4.533606,-5.410065,0.321168,8.883350,-5.167263,2.454976,0.581524,-8.845800,5.648584,-5.784527,5.201738,4.589798,-0.689729,-8.029568,5.728048,8.234587,-0.854481,-4.970790,-8.938665,0.842847,-6.635169,-6.008378,3.963685,6.457464,7.415414,-9.482875,6.151645,2.051218,-4.327146,-0.527172,-6.103472,-6.539710,2.625100,-3.546002,-7.698389,-0.764172,-2.221790,-1.187826,1.093888,-3.785945,5.434437,-1.620020,8.591192,8.617101,7.067613,6.796232,7.603708,-4.763748,0.341248,-3.741700,-5.480428,-1.119373,5.312497,5.947631,-7.788787,3.241832,-0.067366,-9.171644,2.861674,5.247950,-1.982671,-3.695204,-5.380844,-3.992571,8.307272,5.028847,-4.482644,7.170536,5.766301,-2.992735,-1.686852,8.260421,5.100851,-6.640973,5.173700,7.240582,4.995767,4.600859,6.789481,5.670661,-7.176589,-8.136303,-5.492135,-0.600125,-9.522396,-1.064127,-6.637312,2.045270,9.821899,6.848146,-2.228302,-3.690138,-1.257149,1.786502,-4.081657,2.720708,-2.332009,8.238438,6.300816,-1.298031,-2.713387,-7.050527,-2.814869,9.073054,-7.624283,0.363262,7.589290,-4.006480,5.696882,9.567319,-4.471828,0.069670,1.887598,0.480939,-8.271966,-6.203451,-7.338630,-8.733874,5.887621,5.652320,-0.676294,-4.837217,-2.043219,6.711756,-1.961824,3.460636,9.913001,9.468017,6.701932,0.631600,-6.427669,0.386950,0.020076,-9.320924,9.345394,-5.851627,-3.115123,1.960162,6.349388,-9.004273,-0.466251,-2.679242,-2.313069,-6.653015,-2.875287,-3.055646,6.065426,-9.374715,3.566436,6.747967,-3.591178,-1.534174,-2.276542,8.925912,-2.352084,-3.981604,-2.187984,4.884906,-2.105771,-9.545329,2.309012,-1.347421,-3.947613,2.653069,3.505525,-3.318906,-4.739294,-2.901459,2.737202,-3.227340,8.256905,-7.397553,2.707879,3.272726,5.741986,4.027364,-4.320178,1.984828,-4.286635,-0.732335,-8.646056,1.905113,5.048578,0.843051,5.990056,-2.559360,-9.400300,-7.807662,-7.701102,-8.825808,-3.337177,3.627159,3.500186,1.768626,2.768309,9.802277,8.817909,6.864636,-1.119787,6.168599,-3.688206,-6.363358,-0.261243,9.854362,-5.462849,-0.374259,0.759604,5.832661,-4.036672,-7.040400,-6.129253,4.670106,-7.164235,-3.031436,-1.224106,-5.249931,-4.877954,0.293036,-9.493901,3.496093,-6.431329,2.864392,3.812634,-5.962584,5.072411,-2.863628,-8.702520,5.920412,-9.535684,1.766677,4.977014,9.648698,0.658744,-5.992886,2.927587,-5.125382,7.269976,7.725157,1.285364,6.360773,-0.073623,-1.906743,4.435168,4.500472,-3.587628,-8.689389,3.857988,3.810870,9.167966,-9.339294,7.918187,-3.786529,-0.949187,-8.353089,-6.875487,-0.882350,5.982517,7.207220,9.018990,-0.993874,-1.394171,1.779631,-4.695406,-1.554191,1.506323,2.651378,2.914400,8.089002,9.501550,9.077183,1.858147,7.698401,1.762266,-5.400296,1.699761,-2.278914,6.568385,3.514074,-7.651145,0.923025,-3.527527,-5.321224,4.823519,8.104588,5.017641,-1.320814,3.090194,7.518340,-3.254025,4.368104,-4.958125,1.061218,3.595690,-4.935508,-3.941271,8.722740,-5.152096,9.815210,-3.824086,-7.919520,8.668409,-1.729694,-8.010537,2.825116,7.029248,8.371788,-8.563736,-7.547750,6.601616,8.134176,-4.086360,1.737302,3.636664,-8.913685,6.796215], dtype = "float64")#candidate|11155|(1440,)|const|float64
const_11156 = relay.const([-3.547925,9.813317,8.134296,7.200190,0.253677,-8.548163,-7.403587,1.328644,-7.960050,3.310081,9.414173,1.178983,9.939248,8.952821,3.617398,-0.021705,-9.608021,1.001170,-7.331545,3.124044,-7.393771,6.948747,-4.972006,-6.402693,4.512185,-7.303838,7.954985,3.631126,-2.369080,-7.137189,-0.607130,3.887655,-4.674119,-2.543589,-5.916025,-9.235552,1.550291,4.042299,-9.073048,9.591142,-6.341502,-7.191550,0.727133,-2.674036,1.637647,8.206314,5.680199,-7.168709,-5.205153,1.518285,-7.720447,6.421746,8.012010,1.536898,-6.635855,4.831581,-1.442323,2.259578,7.367450,-4.536216,-2.630050,-5.074590,-6.031765,8.604408,-6.739464,8.523943,-2.313714,-4.543379,-6.077361,-6.577019,-7.496764,3.244692,8.618497,5.501184,-7.382227,8.859777,6.239258,-4.240946,-1.815684,-7.890644,-9.546137,-5.839891,0.645743,-5.108827,-1.428766,-5.165859,-8.247147,-0.191147,-4.301200,5.291403,7.698190,3.074809,-7.066587,-6.437972,2.172709,6.940868,6.986036,4.150554,4.109562,-6.342353,-3.518359,-7.441537,-2.337622,-3.723868,-0.728686,6.846713,9.246508,4.830702,-1.528508,-6.960147,-6.419604,-6.340984,3.022376,-5.852833,1.113463,1.188796,-3.536953,6.998182,-2.283226,2.409523,8.683916,-7.661016,-8.523660,-8.374938,9.606426,-2.349622,5.614560,5.212339,-9.366078,5.231501,-3.045699,7.460508,-5.373502,4.897951,2.378914,-3.857433,7.634973,7.605860,-0.420137,5.613684,-9.592057,8.150687,-6.343590,3.143869,2.773101,-8.264278,4.226414,-3.325408,-6.967204,-0.538317,-1.112464,-1.328058,8.381862,0.828039,-9.687307,2.426896,5.441203,-7.298825,-3.358510,-4.126941,-8.760110,0.515445,3.467617,6.856782,-0.789684,2.819317,-9.968871,-1.325007,5.149613,7.481926,-2.487989,-1.935198,-3.352968,1.094442,-7.822407,-4.372207,1.760142,-6.078316,0.453666,-4.965349,0.876904,-8.974737,-9.548110,0.080719,3.468114,5.301878,-5.497783,3.883950,-7.392013,9.932306,-7.527831,7.385554,3.053107,-4.213751,4.183434,-4.566476,-4.900764,4.782223,-4.563898,-3.235313,1.404700,2.599609,-6.524404,-2.923514,-6.594686,0.662908,9.064330,-3.949030,5.246143,1.646605,8.431548,8.552936,4.624097,-4.563017,-4.614747,8.939530,-5.276744,5.365278,2.124359,3.888925,4.201774,-3.923024,8.775270,0.545851,-1.078076,-2.825165,5.191018,2.598622,-1.386644,-6.451291,9.802436,-7.873072,-0.963494,-8.213582,-1.968073,4.670109,-5.038982,-1.541825,-6.726476,-8.202954,2.508280,8.320405,7.795307,9.560229,-1.776467,-2.524041,6.422336,-0.030366,-3.721527,2.494822,-6.488851,-0.040906,-3.124759,3.146638,-1.676575,7.048648,-2.607803,-5.156579,-6.714393,1.769878], dtype = "float32")#candidate|11156|(260,)|const|float32
const_11157 = relay.const([8,3,-1,3,10,-1,-3,9,-5,1,-9,-5,-9,-8,-4,5,10,10,-10,9,10,-10,-8,4,-1,5,1,7,-8,8,-7,5,-10,-1,5,-4,-7,-9,-5,-2,-1,-4,-6,10,-5,-7,-3,10,-7,-6,10,-1,-6,5,7,-8,4,-9,-5,6,1,-4,6,-10,6,7,-7,4,9,5,-5,-4,-8,-1,2,-5,-9,-7,-5,-7,-2,7,-5,3,8,-1,2,6,-6,3,2,-1,6,-7,-7,-2,-1,8,-7,1,10,2,5,4,-5,-1,6,10,-4,-3,-1,7,3,9,8,-9,10,-2,9,8,2,9,-3,-10,-5,-5,-1,10,10,5,-7,-8,-4,-4,6,-5,1,-8,4,-1,-4,-5,1,-6,5,2,-4,1,-1,-2,-8,9,4,4,-7,7,3,6,-9,8,-4,8,-9,9,-5,-10,8,2,9,10,-3,9,10,2,8,1,-10,-1,7,2,-10,5,-4,-10,3,10,6,3,-5,-3,-7,-4,-5,-6,6,6,-10,4,8,-10,-3,-6,-2,-4,4,-9,-4,-5,-1,-5,1,-2,2,7,-9,10,7,-10,-3,-5,4,7,8,-8,5,5,5,-8,-1,-9,-2,-2,-5,10,-9,-4,-1,-10,6,-10,-3,8,-10,7,1,-4,4,-6,8,-8,2,-9], dtype = "uint8")#candidate|11157|(252,)|const|uint8
var_11158 = relay.var("var_11158", dtype = "float64", shape = (112, 4))#candidate|11158|(112, 4)|var|float64
var_11159 = relay.var("var_11159", dtype = "float64", shape = (105,))#candidate|11159|(105,)|var|float64
call_11152 = relay.TupleGetItem(func_7675_call(relay.reshape(const_11153.astype('float64'), [9, 10, 8]), relay.reshape(const_11153.astype('float64'), [9, 10, 8]), relay.reshape(var_11154.astype('float32'), [65, 5]), relay.reshape(const_11155.astype('float64'), [1440,]), relay.reshape(call_11128.astype('float32'), [360,]), relay.reshape(const_11156.astype('float32'), [1, 260]), relay.reshape(const_11157.astype('uint8'), [252,]), relay.reshape(var_11158.astype('float64'), [448,]), relay.reshape(var_11159.astype('float64'), [21, 5]), ), 9)
call_11160 = relay.TupleGetItem(func_7686_call(relay.reshape(const_11153.astype('float64'), [9, 10, 8]), relay.reshape(const_11153.astype('float64'), [9, 10, 8]), relay.reshape(var_11154.astype('float32'), [65, 5]), relay.reshape(const_11155.astype('float64'), [1440,]), relay.reshape(call_11128.astype('float32'), [360,]), relay.reshape(const_11156.astype('float32'), [1, 260]), relay.reshape(const_11157.astype('uint8'), [252,]), relay.reshape(var_11158.astype('float64'), [448,]), relay.reshape(var_11159.astype('float64'), [21, 5]), ), 9)
func_5475_call = mod.get_global_var('func_5475')
func_5482_call = mutated_mod.get_global_var('func_5482')
var_11165 = relay.var("var_11165", dtype = "int64", shape = (128,))#candidate|11165|(128,)|var|int64
const_11166 = relay.const([7,-8,6,-7,-6,1,6,8,-10,4,5,-6,-10,-7,7,2,-1,10,-2,8,-4,4,2,1,-2,-8,8,9,-1,9,-2,3,-3,-3,-10,3,-9,-3,-2,4,1,8,-6,-7,5,6,-9,3,1,-7,6,-4,10,7,-4,-3,-3,-4,9,-9,-9,2,-5,10,-2,7,-8,4,-8,7,3,7,-10,-6,-2,3,-9,9,-9,-10,-5,-10,9,8,-4,1,4,3,9,-5,4,4,3,7,-4,5,-5,-4,-7,-2,-9,8,1,9,3,-2,-2,-2,2,6,-8,9,4,-8,8,-3,2,-2,7,2,-7,-6,-1,-3,8,2,10,9,-7,-8,6,-3,5,9,1,1,-6,-7,5,-1,-1,1,4,-9,9,-7,-9,1,-8,-7,2,4,-4,4,-5,4,-7,9,-7,4,4,-8,2,8,-2,6,10,9,-3,3,7,3,-4,-5,9,-6,-1,-7,-6,10,1,-1,7,6,2,-7,-9,-2,3,6,9,8,-8,2,1,3,7,2,3,-6,-9,5,5,1,-7,1,-8,-5,-5,2,8,-9,-9,-10,9,9,-9,6,-4,-2,-3,-6,-4,-9,7,-5,9,1,-5,8,7,3,-4,7,-7,8,2,3,8,-4,-5,1,5,10,2,-7,7,-2,1,8,8,6,-1,-5,2,3,10,-9,-5,6,-9,6,-3,9,-8,9,-3,8,-7,5,2,-5,4,-9,5,8,-8,-1,5,-4,7,10,2,5,1,-7,10,5,-7,4,-10,7,-9,9,-8,-8,8,-4,6,-10,-3,-9,-8,-8,-1,-9,9,8,-4,-3,-10,5,8,10,3,2,4,9,-8,-1,3,9,-5,9,6,10,-10,-5,8,-4,-3,7,8,1,6,6,-1,-9,-3,-4,8,-6,10,-9,-7,9,1,-9,-3,6,4,9,8,2,6,-2,-1,-5,2,-1,-8,10,10,10,-2,5,10,-1,-9,2,10,-10,-4,4,-10,4,-9,9,4,3,8,1,-1,8,7,7,-6,2,3,-8,3,3,6,1,3,-5,-3,1,-3,6,-3,-9,2,-10,9,10,-10,4,-2,6,-3,8,-1,2,10,-4,-4,1,-6,3,-7,-7,-3,-2,8,-2,-1,8,9,-6,1,9,4,-1,1,8,-4,-4,6,4,4,-8,4,6,8,-2,1,2,3,8,5,1,-10,6,1,-3,-6,9,-7,-3,9,3,7,7,-9,4,-4,-5,10,-2,3,-5,8,-9,2,-9,-7,1,8,-4,7,-10,2,5,7,2,-5,-9,4,-8,-7,-5,1,-10,8,-5,3,5,-1,9,10,-7,10,-7,-3,-9,4,-7,-4,2,-3,8,-2,-5,-5,-10,6,9,-5,-10,-3,-9,5,-10,4,-2,10,-5,4,5,4,6,7,6,4,-10,-5,4,6,-10,7,-9,1,-1,-4,6,-4,-10,8,4,-1,10,5,5,-9,2,-6,-5,5,-4,4,8,2,10,-1,-5,9,8,9,-5,-8,-4,-8,-3,-5,-3,-9,-9,-9,3,3,4,-3,-8,-6,9,-2,10,4,-4,-10,-9,7,2,-5,8,2,2,4,8,-4,6,3,-7,-1,7,-7,-2,2,-2,8,-9,-2,8,10,8,4,-2,-1,-2,-10,-4,5,3,10,6,-5,-10,5,-5,-1,-1,-8,-2,1,-3,-4,8,-3,-7,-4,2,-10,-8,-8,2,-7,-6,7,6,-3,7,-6,-5,5,5,-6,9,-9,3,-2,-9,-1,6,3,5,2,1,8,8,-9,3,10,-5,10,6,-4,-3,-8,-2,2,8,1,2,7,-1,5,-4,-5,-1,7,-9,2,8,8,2,-7,-3,-10,-8,-7,5,-2,-4,-8,-5,4,-9,-3,-8,-7,2,3,-4,10,-9,-10,6,3,-2,7,-9,-9,-9,3,3,8,-8,1,-3,2,6,8,6,4,-4,3,-1,-10,-5,8,7,-3,6,-4,5,-2,-10,4,2,3,-6,9,-1,10,6,-3,-5,-5,-2,-9,-9,-9,1,-6,-1,9,7,7,-9,-5,-6,-7,7,-3,2,-10,-2,9,-2,6,-6,-1,5,3,6,10,-6,-4,-8,6,8,1,4,-5,7,-2,-8,-5,10,10,8,9,-4,9,-1,-4,-10,10,4,-10,9,-3,-4,2,8,3,2,2,-6,-10,5,-5,8,8,-3,5,2,-10,6,-2,6,2,9,5,-2,-2,2,1,7,4,-10,1,-6,-10,-5,-7,-10,-10,-1,-4,-4,2,-6,-6,6,2,-10,10,5,8,-4,2,4,-1,-1,-1,-1,-2,8,9,-9,-10,3,-3,-9,10,-6,7,8,-8,-3,3,2,3,3,-3,-3,9,4,6,-3,-7,1,-10,2,-8,-4,10,-6,7,-5,2,-5,1,7,3,4,-10,3,-3,-7,-1,2,9,4,-7,-8,4,4,-5,5,-10,9,5,9,7,9,-8,-9,8,5,-10,-8,6,-2,-2,8,-5,1,9,7,7,5,-6,-2,-8,2,10,4,10,9,-2,-4,-6,-8,7,2,-3,9], dtype = "int64")#candidate|11166|(960,)|const|int64
const_11167 = relay.const([-4,10,9,-3,-8,-9,-5,-3,-10,5,5,-3,-8,-6,-6,10,-10,-5,2,1,1,6,1,-6,-10,8,3,-2,8,7,7,-5,8,5,5,10,6,-1,-7,7,-8,-3,-8,1,3,1,7,-6,-3,-7,-6,4,4,8,-4,1,2,4,-10,-8,-5,4,5,9,10,-8,-2,6,-10,7,3,-8,1,7,-1,4,-3,9,8,-8,1,-3,-8,7,7,-4,2,-5,7,2,-6,3,-5,-9,-10,9,3,-4,-3,9,-7,-10,8,-9,9,3,10,-7,10,-7,-5,2,10,-8,-9,5,-3,-2,-10,6,-4,5,4,-8,9,5,-2,3,2,-5,10,6,4,-4,3,-6,-6,-1,-6,-7,4,1,8,6,-5,3,-2,9,-1,2,3,-10,-10,1,2,3,9,-10,7,-9,6,8,-2,-5,9,6,-7,1,7,-5,10,-5,-1,-6,-8,9,-6,5,3,1,-7,-4,-1,-4,-6,9,9,5,-6,8,-5,-1,5,10,-4,-2,6,-7,-2,7,-2,-6,-2,-2,-3,4,7,-10,1,-2,9,-8,-1,-3,-8,1,-1,-4,9,1,4,1,-3,4,10,-1,-10,-5,-5,-4,-3,4,3,6,4,3,5,9,-4,1,7,-3,10,9,-10,-8,-7,6,-2,1,10,-2,-7,-2,-4,-5,3,-9,7,8,-1,2,-1,-10,-1,-7,-7,7,-1,-5,1,5,7,9,-4,-3,3,2,4,-7,3,9,4,-3,2,-2,-7,7,3,-10,-2,9,-10,9,3,10,-1,-7,2,2,8,-9,10,-1,-3,-9,3,2,1,7,7,-1,8,-3,-7,-6,-8,-10,-4,-3,-1,2,4,-7,-5,-10,-4,3,8,2,-3,-10,7,1,-2,-8,9,-7,6,-10,10,7,3,-6,6,-4,-10,1,-6,-9,-7,1,9,-10,2,9,-2,-6,6,3,1,2,4,9,4,-10,4,-8,9,-1,-10,5,-7,-6,-4,-5,-10,6,-8,6,2,-6,5,-3,-4,7,5,5,-2,4,-3,1,-6,7,-4,10,7,4,8,8,4,-7,5,2,4,-3,7,-8,3,-6,8,-2,-2,9,-8,3,2,2,1,-7,3,1,6,-2,-7,-5,-6,10,-3,-7,7,4,7,9,1,-2,7,-4,-3,3,7,-4,5,9,4,1,-6,-3,1,9,-7,8,-4,-1,1,8,-4,-10,-8,-8,-7,-6,-6,-3,10,-10,-5,-4,-5,10,9,-5,-2,-3,-6,-7,-4,3,3,-6,10,-9,-8,-7,-8,-2,-5,-1,4,9,8,4,-8,-1,-4,3,7,-10,5,-10,4,-1,9,-8,-7,-4,1,-7,4,10,-7,4,5,8,1,4,-10,-6,6,-3,-1,7,4,2,4,-5,-5,4,3,1,-2,3,7,-4,-3,7,5,-5,2,6,-9,6,2,-5,3,-2,8,-8,5,1,8,-4,-4,1,-8,1,-10,3,-8,-8,2,-6,3,9,-8,8,8,9,2,-1,7,-8,-10,10,9,9,-9,-4,-10,2,3,4,-3,7,-2,-6,10,-7,-4,6,-8,5,-9,10,1,-7,-4,-10,-1,10,5,4,9,6,2,-7,9,6,10,-9,-9,-7,-5,-8,6,-2,4,-8,7,6,-8,-10,4,6,3,7,2,-3,-1,-5,-8,7,3,7,-9,-9,-8,5,4,-6,-7,-9,6,-5,-2,5,-7,6,-10,-8,-7,-8,-8,9,-4,-1,9,-1,-1,-4,-7,6,3,-2,4,2,10,8,-2,-2,-1,9,-4,-7,-9,9,-1,-9,-7,-7,-4,-2,-10,-4,5,-1,2,6,-2,-2,-3,-8,8,-9,2,-3,9,-3,-4,-3,7,-7,6,5,-8,3,-10,6,-10,-10,-4,-9,10,2,-2,-5,1,-8,-5,6,-9,-7,-8,6,9,-10,-1,-6,2,-5,2,-3,-1,-9,3,-2,-4,1,1,2,3,2,1,-3,5,9,-7,10,3,-4,5,-9,2,-3,-9,-4,-4,-6,-6,2,-8,-1,-3,-1,-10,-3,1,-6,-3,-8,1,-5,-10,-2,2,8,-4,5,9,6,-10,-6,10,-4,10,-7,3,8,5,-10,5,-6,-6,-8,6,-6,-2,5,-6,-7,10,9,-6,-9,-8,-9,-6,4,8,8,-6,10,7,-10,-4,-1,-10,10,-7,6,-7,-10,2,6,6,1,8,-1,-7,-10,-9,9,-3,-5,9,8,8,10,2,9], dtype = "int8")#candidate|11167|(840,)|const|int8
call_11164 = relay.TupleGetItem(func_5475_call(relay.reshape(var_11165.astype('int64'), [2, 8, 8]), relay.reshape(var_11165.astype('int64'), [2, 8, 8]), relay.reshape(const_11166.astype('int64'), [960,]), relay.reshape(const_11167.astype('int8'), [840,]), relay.reshape(call_11150.astype('float32'), [360,]), ), 9)
call_11168 = relay.TupleGetItem(func_5482_call(relay.reshape(var_11165.astype('int64'), [2, 8, 8]), relay.reshape(var_11165.astype('int64'), [2, 8, 8]), relay.reshape(const_11166.astype('int64'), [960,]), relay.reshape(const_11167.astype('int8'), [840,]), relay.reshape(call_11150.astype('float32'), [360,]), ), 9)
output = relay.Tuple([call_11128,call_11150,call_11152,const_11153,var_11154,const_11155,const_11156,const_11157,var_11158,var_11159,call_11164,var_11165,const_11166,const_11167,])
output2 = relay.Tuple([call_11129,call_11151,call_11160,const_11153,var_11154,const_11155,const_11156,const_11157,var_11158,var_11159,call_11168,var_11165,const_11166,const_11167,])
func_11187 = relay.Function([var_11154,var_11158,var_11159,var_11165,], output)
mod['func_11187'] = func_11187
mod = relay.transform.InferType()(mod)
var_11188 = relay.var("var_11188", dtype = "float32", shape = (325,))#candidate|11188|(325,)|var|float32
var_11189 = relay.var("var_11189", dtype = "float64", shape = (112, 4))#candidate|11189|(112, 4)|var|float64
var_11190 = relay.var("var_11190", dtype = "float64", shape = (105,))#candidate|11190|(105,)|var|float64
var_11191 = relay.var("var_11191", dtype = "int64", shape = (128,))#candidate|11191|(128,)|var|int64
output = func_11187(var_11188,var_11189,var_11190,var_11191,)
func_11192 = relay.Function([var_11188,var_11189,var_11190,var_11191,], output)
mutated_mod['func_11192'] = func_11192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10128_call = mod.get_global_var('func_10128')
func_10129_call = mutated_mod.get_global_var('func_10129')
call_11211 = relay.TupleGetItem(func_10128_call(), 0)
call_11212 = relay.TupleGetItem(func_10129_call(), 0)
func_11187_call = mod.get_global_var('func_11187')
func_11192_call = mutated_mod.get_global_var('func_11192')
const_11217 = relay.const([-1.147742,3.867248,-9.278570,-6.276977,-4.703440,-1.816680,6.390059,-0.918018,-4.969460,6.049522,-9.052321,7.209575,-3.335383,8.152933,4.016591,-1.496339,0.689914,-4.116161,-9.444599,0.856915,-3.954178,-0.826973,-5.653069,-9.895232,-9.246132,-3.788536,-2.077269,7.174189,7.522106,-1.376095,6.824632,-7.090891,-2.286118,-9.978205,2.578262,2.985680,6.815270,0.958460,-2.211247,-0.996249,7.320481,1.377436,-3.486980,-0.147653,9.756322,3.500621,4.478960,-2.400953,-0.464923,-9.178428,-7.264467,-1.247947,-4.410043,0.459949,3.533733,8.915842,-2.613375,-0.441472,2.901947,-0.344106,2.383519,7.571314,9.775719,-3.475632,-6.824404,2.265054,-5.264054,-9.283831,3.106440,-5.495364,5.478934,0.775680,-4.087926,5.344250,9.565668,7.056842,4.007116,4.233608,-9.250642,-3.407917,3.144981,5.265773,0.864209,-7.746969,0.283360,-3.371414,-2.446800,3.461082,2.973343,-9.735836,-1.742091,-4.906299,-9.022187,9.127191,3.522193,0.667733,1.079291,3.351281,-4.491131,-8.119314,-1.976992,-3.235766,-8.781658,0.920107,-0.406072,-0.353971,4.879628,-8.608604,8.172904,-8.936207,-6.227042,0.120001,-1.302259,-9.249079,-7.906704,0.009244,7.747667,1.057958,3.991510,-8.447625,-1.225381,-8.410736,1.087496,9.977276,-5.896951,8.117392,7.785772,7.496118,9.633541,-3.854031,-2.717017,-9.940240,3.337640,3.188469,2.529752,1.661994,6.131132,1.537179,-6.667225,9.294338,4.290090,3.591958,7.205044,-9.675301,0.179964,-5.237240,-0.703347,6.409717,-1.700030,-8.948984,-2.622222,5.646807,-0.068600,-0.932749,4.286969,9.051943,8.809764,2.269321,9.346323,5.180138,-0.154000,-2.812940,9.759562,-9.097499,1.672072,4.956094,-6.294824,8.823525,8.742958,-1.921684,5.708981,3.610376,-3.151626,0.419965,8.607315,-4.159360,-8.830852,-1.273948,9.317573,9.739347,-4.585650,-7.772224,3.852213,3.490481,-1.911364,4.986507,9.744986,-7.679482,4.855804,-1.374818,-9.698887,-0.453272,6.086407,-5.557736,1.603092,9.446058,-8.416702,0.018721,9.311351,1.657297,-5.314752,9.966621,1.689283,2.922263,2.107960,6.496275,3.014251,-8.464779,1.673464,6.957082,-2.066973,-9.315762,-5.006595,-0.271285,-5.737162,4.918398,-0.368599,-8.518934,-3.700393,-1.082862,9.537397,-0.787303,1.977466,-7.951295,1.200730,-9.760708,-2.581172,9.579705,-8.411412,3.503404,8.202975,2.734751,5.068101,1.778948,2.659210,-4.473518,-5.301404,3.634959,4.555513,-0.113382,2.936846,8.141555,4.709269,0.473760,-0.569159,-6.978492,3.378075,-5.328089,6.425029,4.919377,5.564309,-3.752092,-8.099965,-1.279991,7.527962,-3.766039,9.817100,-2.595692,-0.682700,-0.382768,-3.957526,-8.209324,-4.196223,2.777136,9.976741,-6.363731,-7.393521,-2.014173,6.472480,-1.883296,7.672552,5.087954,-0.742693,2.069386,8.030404,-2.276391,-0.693902,-6.881993,9.114725,-7.010412,-3.574618,2.315377,4.319252,3.010244,-1.022690,4.549234,-8.383640,-0.429404,9.204257,-0.978023,1.957697,-8.328168,8.463939,-7.200704,-3.522536,8.690899,-1.666728,9.149796,-8.823706,-1.187810,7.993376,-5.835818,-5.346710,-2.645750,-9.815270,7.995965,8.992029,0.703322,-0.465588,7.698368,6.663581,9.108178,-3.198267,0.357535,6.733520,3.550776,-2.141153,-9.159324,3.641417,-2.339615,6.433160,1.904027,0.559842,-0.047297,4.747168], dtype = "float32")#candidate|11217|(325,)|const|float32
const_11218 = relay.const([-8.737500,7.092945,-1.418798,8.836540,1.285669,4.608978,-8.864083,5.561615,3.396384,-7.632893,1.418103,1.926561,0.993743,-6.502324,0.759203,6.451003,8.119448,-8.808462,1.225919,1.658456,8.477899,8.764939,7.041553,-1.335375,9.223339,-6.670078,-7.752158,-0.135965,-5.449322,-1.475937,-0.510809,0.547150,4.787368,8.013571,0.513680,9.674844,1.025940,-0.949048,3.609947,2.103906,-7.854142,-7.021978,-2.163500,-2.440514,4.172131,-6.568993,8.705888,1.584820,4.062680,5.547956,4.665951,0.911881,5.106510,-7.775979,-3.703140,-3.735651,9.558368,-4.606066,2.399381,-8.613840,8.280057,-4.147223,-4.542338,2.662767,-3.949846,-5.642413,-1.974007,7.769667,8.071081,-1.685831,6.961581,-0.061809,1.444990,-1.730159,-2.871882,3.286865,-6.465185,-4.672710,5.444016,-4.493164,-2.970541,-1.190767,1.692786,6.641667,4.209386,-4.749287,-1.595137,8.537301,5.790177,-1.677401,-4.055604,-6.366414,-7.015771,9.951418,-1.738845,1.244663,-1.449471,1.934568,0.135677,-6.041507,6.038802,-8.458648,-7.199350,2.039165,8.866056,3.245794,-2.288651,-3.449637,-8.699650,-8.036529,-8.827734,6.790485,9.967861,-8.240432,9.670969,6.972926,7.888656,-0.448477,8.969499,-3.533135,-2.395599,-5.266910,2.935869,0.296518,-3.459068,-4.274072,0.427797,6.544821,6.477732,-5.162168,0.449019,0.899135,4.787911,-8.570567,5.299135,9.343444,-6.119300,-3.456166,5.986310,9.435856,-9.496798,-6.129389,2.508485,-2.163567,1.439178,-8.072580,5.927656,9.534614,5.471190,0.607263,-6.120498,-3.008574,3.366310,-1.084120,-6.740973,-8.742653,-3.450673,5.091676,5.407196,-5.189894,-7.761404,3.764967,-4.823911,-6.040522,-6.730552,-4.354132,-7.179291,5.303076,-4.886636,-0.279518,5.888862,2.968391,3.000293,6.361590,-6.400844,3.857447,-1.497358,-5.178171,-1.277139,1.318973,7.151467,7.704989,-1.459528,3.563511,0.864361,-6.423383,-5.986472,-4.805120,-7.708697,-8.095557,2.838460,7.818294,-4.846686,-2.728961,-5.703896,7.475144,4.211555,9.904155,1.142962,-4.765420,0.948372,7.708064,-9.000232,6.982238,-9.843873,-2.030340,-8.605016,1.027808,1.274446,8.838378,1.652357,1.504991,3.009134,6.327251,1.389002,6.047374,-0.035827,9.963494,-4.045851,8.987886,-1.999990,-3.878942,9.084465,-8.464182,9.310581,-5.242308,-3.077050,-1.120431,-4.245801,6.212684,6.950002,-6.045968,3.214951,9.595319,3.802336,-5.286706,-2.594245,-6.026964,5.148256,-4.577184,-9.542486,8.462207,9.976891,-3.900547,5.806500,8.023875,9.438822,-9.456872,7.052349,-8.881753,-4.112276,2.693366,-3.711274,-1.795676,-3.984133,-2.282744,2.588367,5.150548,4.703041,1.126363,0.322244,-8.649551,-3.907522,-7.903034,-0.886836,-9.229998,7.895067,9.817281,0.436766,2.816299,-7.806584,-9.181886,-4.956140,-2.824744,-1.209550,-4.246705,2.372383,-0.465139,-1.151668,7.185178,7.670613,3.556136,7.222157,-5.556088,2.187511,-7.110945,-6.125491,5.148090,0.240972,-2.471155,8.645439,7.084051,3.931825,7.290864,-5.298146,-6.274010,-5.351999,3.651352,-4.516783,5.728468,4.484943,-7.558106,-5.700955,-8.707190,9.575563,4.963739,-4.832280,5.474265,-3.448189,5.362618,-0.748066,5.185736,3.318877,-8.024206,-4.553326,2.234332,-3.932524,1.295033,-4.486738,-6.013732,3.291364,-1.630455,-3.792559,7.676737,-6.556151,-5.248503,1.309576,-8.994190,-7.319556,-2.600350,-0.281403,-6.426596,4.736971,3.403553,-7.466336,-7.312694,-4.143155,6.239116,-5.582204,0.711489,0.261706,9.701287,3.035295,8.780660,8.444814,2.286038,-2.922400,-0.446224,4.907724,7.182917,8.506403,7.985336,-5.875963,-9.078433,-7.419235,-3.825438,8.645169,-6.640616,8.912801,-0.939840,0.872699,-6.297411,-2.349318,-3.619017,-0.259473,0.990610,3.556697,7.360932,2.458535,-6.322771,-7.298382,8.853618,0.758316,-3.287596,0.724827,9.571160,-6.899292,-0.587372,-8.380479,3.158361,-3.237741,-6.823968,3.142426,-2.841428,8.633583,-8.011870,9.013594,-7.943485,3.786870,8.678275,4.829072,-1.126397,-6.763603,-3.425729,7.289702,2.910515,-7.479496,9.339588,-1.102479,-8.336994,-3.300486,7.020153,-7.745822,-9.683634,-5.425466,8.674423,-2.978621,-4.497005,-8.985068,3.946162,-2.834090,-1.675852,-1.244511,-8.820469,9.263517,4.216975,-9.103903,7.979814,-6.829724,-3.724354,6.308382,-2.498411,8.291792,-2.396825,-2.514372,8.951168,-9.976672,6.924950,3.038066,6.749522,8.033584,0.539354,6.809614,-7.976304,-1.337398,5.874549,-3.311523,-6.247071,-9.579180,-6.665402,-0.880381,1.344882,8.189917,-7.765704,-6.132621,5.095987,-6.407273,3.788998], dtype = "float64")#candidate|11218|(448,)|const|float64
const_11219 = relay.const([9.946539,2.875695,-4.764687,1.252751,-0.435473,6.778533,-8.722843,4.127517,-6.597183,-3.814588,-4.424716,-6.954681,-2.868773,-5.575824,5.745528,-7.723456,-1.207025,7.908884,3.370997,5.170904,-8.980357,-1.753814,6.135226,-9.447729,5.591026,6.998634,-2.659304,-4.731398,0.175230,-3.803366,-6.232203,2.505247,-2.542713,-0.774034,-5.744151,7.105432,-5.551711,4.504565,1.080713,4.386338,-8.260167,-3.593132,-9.954766,-8.969645,-9.044359,4.295143,7.483221,3.449946,4.771921,6.368119,-8.096529,-7.956517,-5.389613,-3.824372,3.854171,9.213991,-4.145312,-8.985582,-2.794671,3.675671,3.507427,-0.738848,8.492073,-6.626740,8.699292,-4.316752,-4.957332,-6.673964,-9.716669,-5.924598,4.270292,-1.666728,-0.622353,-7.961216,0.614548,7.226218,-7.799689,1.615035,7.141598,-3.594767,9.699081,-2.535333,3.966012,-7.914450,-2.347102,4.058189,-7.627031,6.770584,-4.559842,-8.226384,9.815263,-3.948835,8.434299,-9.763227,9.681467,3.649146,6.221862,-3.332646,-7.888092,2.750004,-4.376447,-7.622612,-4.813995,7.429697,-6.915484], dtype = "float64")#candidate|11219|(105,)|const|float64
var_11220 = relay.var("var_11220", dtype = "int64", shape = (128,))#candidate|11220|(128,)|var|int64
call_11216 = relay.TupleGetItem(func_11187_call(relay.reshape(const_11217.astype('float32'), [325,]), relay.reshape(const_11218.astype('float64'), [112, 4]), relay.reshape(const_11219.astype('float64'), [105,]), relay.reshape(var_11220.astype('int64'), [128,]), ), 3)
call_11221 = relay.TupleGetItem(func_11192_call(relay.reshape(const_11217.astype('float32'), [325,]), relay.reshape(const_11218.astype('float64'), [112, 4]), relay.reshape(const_11219.astype('float64'), [105,]), relay.reshape(var_11220.astype('int64'), [128,]), ), 3)
output = relay.Tuple([call_11211,call_11216,const_11217,const_11218,const_11219,var_11220,])
output2 = relay.Tuple([call_11212,call_11221,const_11217,const_11218,const_11219,var_11220,])
func_11230 = relay.Function([var_11220,], output)
mod['func_11230'] = func_11230
mod = relay.transform.InferType()(mod)
var_11231 = relay.var("var_11231", dtype = "int64", shape = (128,))#candidate|11231|(128,)|var|int64
output = func_11230(var_11231)
func_11232 = relay.Function([var_11231], output)
mutated_mod['func_11232'] = func_11232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9912_call = mod.get_global_var('func_9912')
func_9914_call = mutated_mod.get_global_var('func_9914')
call_11273 = func_9912_call()
call_11274 = func_9912_call()
func_2128_call = mod.get_global_var('func_2128')
func_2134_call = mutated_mod.get_global_var('func_2134')
const_11300 = relay.const([10,10,-8,2,-7,-10,10,-5,7,2,-10,8,-10,-6,-2,-1,-4,4,5,5,6,3,5,-2,5,2,-8,-7,-3,9,7,-8,10,1,10,7,1,-4,5,-1,-10,6,-5,-8,6,-4,9,2,-5,-5,8,3,-2,-8,-2,9,-1,-10,8,5,-7,-4,10,-6,-10,-2,-4,2,3,-3,8,-9,-7,-5,8,8,8,10,10,3,-8,2,1,8,-3,-10,-4,-10,-7,7,-5,-1,-9,-1,8,2,-10,-7,-8,6,7,4,3,4,1,7,6,-10,-8,5,6,1,-2,6,3,-3,8,-2,3,2,5,1,5,8,2,-9,-1,-6,-9,2,4,2,5,4,-10,-2,-6,-8,-4,-6,2,-7,-8,-5,-5,10,-2,-1,8,5,-2,5,-9,10,-1,-10,-4,5,9,-10,7,-4,-4,-6,-2,2,-7,3,10,-9,-10,6,-7,-7,-3,1,-8,-10,1,7,-8,-7,-4,3,4,8,3,9,9,6,-6,1,-3,-8,-9,-8,-4,2,-7,-5,-6,-4,-9,9,-2,7,4,-2,10,-1,-7,-6,6,-10,-2,4,7,9,5,-3,2,3,-1,3,6,-8,5,-3,-1,-5,-5,-3,9,10,9,-10,-5,-9,7,6,7,6,10,-2,2,8,-6,-2,2,-10,-5,-5], dtype = "uint8")#candidate|11300|(252,)|const|uint8
const_11301 = relay.const([-9.830463,0.995864,-7.654026,-3.431169,-3.155630,-6.000454,7.256981,-5.618966,8.269340,0.981686,-9.241822,3.675469,9.851234,-3.070094,-4.445649,6.834526,8.822749,5.811018,-7.817006,5.301664,-9.324653,-0.969045,-6.480699,1.758377,7.529794,1.041832,2.291466,-0.027862,-8.919314,-3.390576,-8.759533,8.535081,-2.504975,7.086145,-5.044009,5.982737,-5.375694,-2.416987,3.893033,7.983833,5.337005,-6.864543,7.684936,7.554096,3.592136,-3.250835,2.322966,1.453149,-7.469162,-3.797700,1.352902,4.735553,8.576494,5.978549,1.150581,2.708464,2.342950,4.883862,-1.313805,-5.613838,-8.291804,8.299983,-1.933498,-5.699103,3.310207,6.683180,-4.480537,8.455839,5.040950,-5.321707,5.076175,8.849647,1.054870,7.690247,4.500103,8.597038,-3.369047,0.781926,-6.695084,3.315170,-2.883883,-0.197274,0.036459,-5.663769,-9.909832,0.354931,9.220559,1.935988,5.948687,-3.403663,-1.684076,3.937267,8.013108,-9.226552,-5.572024,2.654772,-4.424959,8.757508,3.432421,-1.607693,0.011188,0.714332,-7.944560,1.865700,6.874485,-1.909008,-4.840930,-7.836844,-8.758088,2.060889,-7.051282,3.652790,-2.317789,-6.408724,4.677569,-4.663919,-7.204007,5.987693,-4.608986,5.972869,-6.491665,6.216639,9.574950,-1.486609,-0.019460,-9.082847,7.627360,-3.808967,-2.477299,6.642281,2.993976,-3.708754,-0.788077,2.508021,8.938809,-8.555869,-5.019259,-3.191232,-8.227064,-4.726608,-0.884934,5.030488,-6.034552,6.400286,4.844063,-2.827045,-9.514761,-6.355582,-9.941067,7.593402,-5.291654,-5.025435,-2.367562,-6.641600,2.834713,6.928576,8.582884,8.211992,-0.782391,9.184189,-8.559787,6.971323,-6.586984,9.376541,0.846963,-0.677491,-6.964074,-0.889863,9.905184,8.662688,5.324357,-5.369588,-6.797759,9.687896,7.556128,-1.008928,-0.956265,-4.851964,3.688088,-9.165429,5.828186,3.713186,3.306538,-7.170861,-2.687526,7.215743,-7.914546,0.537435,-4.679077,-7.555219,2.463920,7.046431,-7.111289,-5.843476,1.320511,-6.288458,-5.694341,-9.181196,5.359382,-3.307473,2.497691,-7.530317,-9.499074,-2.882029,-9.395371,-5.596958,2.947782,9.191722,8.122484,9.318355,-6.259216,8.733505,4.088813,-8.660763,-7.408865,1.733555,5.872420,-0.155687,1.995957,-0.717976,9.097714,8.688030,-9.419026,-2.130842,-1.210770,-9.170824,2.330053,5.031462,3.077844,1.884804,3.063071,1.653410,-1.842608,-3.861196,-1.722762,4.594865,3.186858,-1.632156,-1.242064,6.670992,3.349374,1.510007,-7.309996,7.210239,5.054227,0.495551,4.255863,5.954717,-3.881180,8.976972,-2.985999,-4.908372,2.537881,0.930275,6.244296,8.525948,-0.311851,9.625448,3.981330,-2.066937,-3.038534,0.616691,2.083839,0.426899,-0.872367,-7.290056,-9.005712,-7.895202,-8.845649,8.430316,4.332880,-1.830343,6.758729,-3.953820,-6.197669,3.840087,-7.220715,3.750823,7.525294,-4.892562,7.060379,-1.645723,8.792288,-6.671878,-1.799013,-6.411916,-4.023127,4.779394,-6.124338,-0.527439,3.861520,5.415048,1.772378,4.162833,-0.599746,-4.390125,-4.501267,7.901033,-8.057972,8.888749,6.722836,-7.792968,-7.894575,3.396006,9.362147,-5.694565,-4.296159,-6.353899,-7.869780,-7.696863,6.127979,-4.362435,-9.575234,-8.393062,8.858120,7.406659,5.294620,-2.914136,-4.626417,-9.623293,-6.259966,-4.356579,0.052753,-4.941238,-4.101875,-1.351592,7.236631,5.156113,-3.425983,-1.582625,-6.940694,-2.244049,6.959443,2.988683,-0.260406,2.997555,-2.489947,7.695472,6.058128,5.797606,6.312821,7.394662,5.380233,-7.588070,-5.901066,2.207077,-5.603866,-8.003202,7.873299,1.600985,-1.352569,-3.757227,-5.732751,-4.217767,5.722112,6.902850,8.463987,7.433392,-3.186175,-7.805002], dtype = "float32")#candidate|11301|(360,)|const|float32
const_11302 = relay.const([4.775253,2.160419,3.900950,-9.775693,-9.051956,0.580410,8.240258,-4.867812,1.900363,9.104981,-3.728058,3.297506,-7.332574,-4.575942,-5.000422,2.480260,5.196897,-7.027487,-1.684743,-2.389779,8.032057,6.888267,1.778568,4.045710,-4.939006,0.472778,6.881012,9.324464,-5.425324,8.777857,2.201562,-8.601485,-8.753529,2.766871,-1.499672,7.259234,7.665055,-9.804573,-9.378446,-1.169871,-9.373707,3.261728,-0.458813,8.772116,-6.210205,0.384460,6.664530,0.011661,-8.002638,-9.320462,-7.465120,-7.678513,0.847139,4.310071,-8.334964,-7.797701,9.592853,7.641100,-6.321822,8.070331,0.273816,-3.356138,-1.168047,-0.814446,-0.083070,5.895773,-2.509029,2.606799,-4.045927,8.039777,-6.451230,6.992578,-5.962340,8.967022,0.636830,6.871104,-0.896051,-6.164778,6.267848,5.358593,5.635124,5.869459,5.487940,8.202236,6.307652,-8.239979,-9.897858,3.475488,-4.900435,6.084668,4.243928,7.486409,-4.207746,2.564700,-6.160820,-7.753537,2.070718,-7.556353,-6.505868,8.132457,-8.315181,7.558734,5.930531,9.258729,8.284296,-5.186290,-9.691409,-1.787474,8.262074,-2.255758,7.798551,7.094527,-1.130159,8.372143,-1.812138,-0.778926,-1.235143,6.668387,4.171053,-2.355946,-6.978824,4.262388,-7.395887,3.313352,9.750637,1.987917,-6.965789,-7.561026,-1.466076,9.054770,-4.460348,-2.044176,3.745535,-8.256574,-0.489314,-2.021490,0.372328,8.756382,4.510744,2.902176,6.013469,4.293971,-1.694229,-1.120675,2.556496,6.208748,-5.184906,8.593329,2.823764,-8.724682,-9.072931,-2.979764,-6.643090,0.460943,8.530596,6.204457,5.170822,-0.616855,-9.600389,6.791636,1.405754,6.863544,-9.101170,5.658097,-1.420785,0.491270,-9.575010,9.542983,-1.867868,8.512253,0.982497,-7.252194,9.739151,-8.743990,3.322914,-4.568252,-3.160907,-4.813535,-1.064891,2.529246,6.112770,2.452907,-2.457771,2.857402,8.828204,-7.715098,6.104786,8.705030,-1.952569,-0.470006,4.944530,-5.119857,-8.776065,-1.446592,-3.670289,7.441848,6.006809,-8.373616,0.010022,-0.297559,-5.003335,-6.434011,2.036300,-5.364325,3.940890,8.283437,5.910715,5.699828,4.060177,-7.817592,9.700129,7.203362,-1.011025,-9.699541,2.066766,-2.347163,-5.256859,2.181629,5.303849,0.769658,-6.322816,3.192697,-8.313920,9.828353,6.439704,7.486822,-9.294688,9.504761,-7.270346,-0.939880,-5.640200,8.132524,5.213433,-1.069898,5.804731,-1.163348,-2.192101,2.920490,-7.026744,-6.430101,6.447671,-2.568744,5.252662,-7.060303,0.821277,9.751576,-2.258839,-1.323115,-1.702791,-1.096571,-7.617993,5.232846,-6.358247,1.364641,-6.163553,-7.758332,-5.755246,6.547434,-8.260627,1.580909,-0.795651,9.525638,-9.835171,5.374723,-3.507032,-5.178937,-2.540896,-6.185887,-9.271774,4.798399,6.538143,-5.478580,-3.421777,9.099807,-6.208758,-1.875145,-2.797195,9.678249,-7.650151,0.794258,-1.895764,4.517564,5.141810,0.490723,-1.826157,-6.275724,4.511100,4.355798,-5.595891,-3.573237,3.855019,-3.350351,1.085856,-3.800095,-9.820636,-8.219283,8.389026,8.900124,4.952590,9.489725,3.583240,-1.803406,-6.703562,-2.780220,-0.199505,3.552886,5.920901,7.784642,5.159058,-8.465360,0.785780,-4.281174,9.318669,-9.763969,6.053576,-6.544061,9.280500,3.425104,-5.012853,5.593161,-0.708313,-2.194849,-0.987659,-5.044066,-4.832941,2.982402,-0.587241,-6.153240,5.903138,-1.082028,-8.553125,3.354929,6.026489,-4.117824,-3.778797,4.367968,-8.180711,-6.758066,3.498714,4.794791,-9.911570,-8.368267,-3.825085,-9.277979,2.341979,-8.399724,9.537467,4.360848,-8.333541,-3.393349,0.282393,-5.217961,5.843048,-2.071390,6.415946,-1.590178,-1.824064,-5.012951,-2.635256,-3.464405,-8.952201,6.220210,-2.382439,-9.133415,-8.599718,9.087645,-8.937069,-3.292978,3.132586,4.051008,-4.484645,-3.979686,-2.648514,4.956719,1.554366,-3.522467,4.971030,7.694226,-5.284419,-0.888187,-2.821265,2.746271,6.214389,-3.037206,-5.770509,-7.489923,-5.447471,-3.361997,5.647281,8.752164,9.243727,-0.965772,5.863548,7.937802,-4.802436,5.673682,9.931478,5.118961,-7.247140,2.577494,3.719907,6.538369,-7.697393,-8.300598,7.449504,-4.514148,1.749971,9.296653,-8.930183,8.932999,3.455821,7.424205,8.683984,0.438312,4.246227,-2.696145,-8.778586,-4.903773,7.719325,0.285682,-5.240397,-5.637003,-1.124229,-0.443556,-6.629442,9.997854,-0.017002,-6.332136,-1.031392,9.496088,5.060501,-7.625156,6.048618,-3.898422,-6.093018,-8.973532,-9.233127,-8.155963,-7.881065,5.481661,-5.028460,-7.120096,-1.006920,-2.441462,8.505686,-3.432651,-7.331291,-8.347888], dtype = "float64")#candidate|11302|(448,)|const|float64
const_11303 = relay.const([-8,-5,-9,4,6,-1,-9,-1,-5,-3,9,-10,-6,5,1,3,2,-10,9,-4,2,-1,4,-7,5,3,-5,8,-5,-1,4,6,2,-6,-3,-5,6,7,9,10,-6,-5,-8,-2,7,-9,-9,-4,-2,1,1,-2,1,-6,3,-2,10,10,4,3,7,-2,-9,-7,-9,8,-4,6,2,-6,9,-6,9,7,9,-5,-3,3,3,5,-2,-3,-3,-2,2,-10,7,-2,-3,8,-8,-6,-9,-3,3,-6,2,1,-8,-2,10,1,-9,2,1,-2,4,-2,-1,5,6,8,9,-3,2,-7,-7,-10,3,-8,5,-5,-10,-1,-5,-4,8,-7,1,5,-5,-8,1,9,-3,10,7,-6,-4,5,-3,-10,-10,9,-9,7,-7,8,-2,-3,6,-2,9,-9,4,4,-4,10,5,7,4,-2,10,8,-7,-6,4,-5,7,8,9,-9,-10,8,8,3,-1,2,3,3,1,-4,-1,-10,6,-8,-3,7,-5,3,2,5,9,7,7,5,-3,-5,-1,-1,-4,-1,7,4,-4,-5,-1,4,-8,-5,2,3,10,-10,-2,7,3,4,-5,-1,-5,9,-9,-7,5,1,1,-5,-1,-1,7,8,-3,9,3,9,10,-6,-3,7,-5,5,4,7,4,-8,-4,-2,-1,7,5,-3,-5,4,-2,-6,-1,2,-9,-9,-5,-8,3,7,3,1,-3,-2,3,-8,9,1,5,5,2,-8,1,9,-8,-2,-2,8,7,-4,10,-5,-6,-10,2,4,9,3,10,8,8,-8,10,6,9,-8,-3,-7,1,-9,-3,9,7,-4,5,6,9,-6,1,8,1,7,9,3,1,5,7,6,5,2,3,3,-1,2,-10,-9,6,-7,2,-5,1,9,-3,1,-6,-7,-10,-10,1,10,4,-4,-7,-5,2,4,-1,3,-9,-1,-7,5,-3,6,-10,-7,8,-3,4,-6,10,-2,-4,-3,9,-1,6,-4,2,3,8,6,-3,1,-9,-6,6,7,10,4,-8,6,10,3,1,5,7,-5,2,-10,2,9,-3,-7,-8,4,5,-10,-1,-8,10,-2,-7,-7,-3,-10,-4,-3,5,10,1,3,-4,-1,-7,-7,-2,-4,-8,-8,10,7,6,9,-10,-9,2,6,-5,9,6,9,-7,-9,-3,-7,4,7,4,3,4,6,4,-2,-1,-10,-8,-8,-1,-1,1,-1,2,5,3,-9,-8,5,-8,-10,1,-9,1,6,-4,8,5,-10,-7,-2,-3,-9,7,-2,4,-8,-3,4,6,-6,8,-6,5,-9,-3,5,3,6,2,9,-3,1,-5,10,4,2,3,-5,7,3,7,5,-5,-4,-10,-5,9,9,-10,7,-6,-7,10,9,8,-5,-1,-6,3,7,10,-8,-7,-7,7,-2,5,-2,-1,-10,5,3,8,-4,7,6,-3,-10,-3,-7,3,3,-1,2,-8,-1,10,8,-3,-10,-4,-10,3,9,-9,4,8,-7,-4,10,-3,-2,-5,2,-5,-10,1,7,-2,-9,3,-10,-3,-7,-7,-9,-8,-3,1,2,-8,-6,4,4,-8,-4,8,-1,2,8,-6,8,-7,-8,-6,6,-5,-6,6,3,-3,-4,-1,-4,2,2,8,-2,1,-7,10,-3,-8,4,-9,5,-3,4,3,-9,-9,-2,1,4,-4,8,-6,1,-10,-5,1,2,2,-10,-4,-9,7,10,7,-9,6,-7,10,6,2,-8,3,4,6,10,2,2,3,9,-7,3,8,6,5,-8,3,-9,-8,4,9,-3,-3,2,7,10,-2,5,-10,-7,-5,3,3,-6,4,-6,-2,-4,3,5,-9,-2,-7,-2,2,-3,6,-4,-5,-1,-8,2,5,-9,3,-6,8,-5,9,-1,7,-5,-7,4,-9,2,10,-1,1,-3,3,-9,9,5,9,8,-9,1,-4,-9,7,-2,7,-4,-3,-3,6,7,-3,-5,2,2,-8,9,-7,-7,-2,-3,-2,5,4,2,-7,-7,-5,5,-8,9,10,-10,-6,3,-7,7,5,-7,-10,-1,9,-9,10,2,-1,-6,8,-7,-4,-2,-7,2,-1,-3,9,-7,-1,5,-2,-3,-7,-3,-4,9,3,9,-10,-5,2,-3,-1,-9,9,-8,-10,-2,-8,10,-9,2,-10,-5,-5,-5,-6,8,-9,2,1,-6,10,8,7,2,6,-10,-8,-1,5,8,2,-3,-2,-8,-4,6,4,-4,3,-9,-1,-9,5,-9,-6,6,-4,-1,-3,-1,-5,10,2,-2,-1,6,-1,-2,5,-9,-10,-8,-3,3,10,-10,5,-6,-8,-4,1,-3,-4,-9,8,-9,4,-5,8,10,3,3,-3,-5,-9,-10,-8,1,7,3,9,-4,-1,9,-8,-7,10,-9,1,2,2,8,-4,-5,10,-6,2,-3,2,2,2,1,9,3,-3,-10,6,6,-7,-10,-1,-10,-8,-5,7,-10,-7,9,10,-6,8,9,-3,3,-8,-1,-1,3,3,2,5,1,5,-8,3,-10,-1,4,-6,6,-1,-4,-7,6,4,2,-3,1,-4,-3,-4,-7,-1,-1], dtype = "int64")#candidate|11303|(960,)|const|int64
call_11299 = relay.TupleGetItem(func_2128_call(relay.reshape(const_11300.astype('uint8'), [6, 7, 6]), relay.reshape(const_11300.astype('uint8'), [6, 7, 6]), relay.reshape(const_11301.astype('float32'), [36, 10]), relay.reshape(const_11302.astype('float64'), [4, 112]), relay.reshape(const_11303.astype('int64'), [960,]), ), 2)
call_11304 = relay.TupleGetItem(func_2134_call(relay.reshape(const_11300.astype('uint8'), [6, 7, 6]), relay.reshape(const_11300.astype('uint8'), [6, 7, 6]), relay.reshape(const_11301.astype('float32'), [36, 10]), relay.reshape(const_11302.astype('float64'), [4, 112]), relay.reshape(const_11303.astype('int64'), [960,]), ), 2)
output = relay.Tuple([call_11273,call_11299,const_11300,const_11301,const_11302,const_11303,])
output2 = relay.Tuple([call_11274,call_11304,const_11300,const_11301,const_11302,const_11303,])
func_11315 = relay.Function([], output)
mod['func_11315'] = func_11315
mod = relay.transform.InferType()(mod)
output = func_11315()
func_11316 = relay.Function([], output)
mutated_mod['func_11316'] = func_11316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6317_call = mod.get_global_var('func_6317')
func_6319_call = mutated_mod.get_global_var('func_6319')
call_11327 = func_6317_call()
call_11328 = func_6317_call()
func_2128_call = mod.get_global_var('func_2128')
func_2134_call = mutated_mod.get_global_var('func_2134')
var_11382 = relay.var("var_11382", dtype = "uint8", shape = (252,))#candidate|11382|(252,)|var|uint8
var_11383 = relay.var("var_11383", dtype = "float64", shape = (448,))#candidate|11383|(448,)|var|float64
var_11384 = relay.var("var_11384", dtype = "int64", shape = (960,))#candidate|11384|(960,)|var|int64
call_11381 = relay.TupleGetItem(func_2128_call(relay.reshape(var_11382.astype('uint8'), [6, 7, 6]), relay.reshape(var_11382.astype('uint8'), [6, 7, 6]), relay.reshape(call_11327.astype('float32'), [36, 10]), relay.reshape(var_11383.astype('float64'), [4, 112]), relay.reshape(var_11384.astype('int64'), [960,]), ), 2)
call_11385 = relay.TupleGetItem(func_2134_call(relay.reshape(var_11382.astype('uint8'), [6, 7, 6]), relay.reshape(var_11382.astype('uint8'), [6, 7, 6]), relay.reshape(call_11327.astype('float32'), [36, 10]), relay.reshape(var_11383.astype('float64'), [4, 112]), relay.reshape(var_11384.astype('int64'), [960,]), ), 2)
uop_11427 = relay.cos(call_11381.astype('float32')) # shape=(36, 10)
uop_11429 = relay.cos(call_11385.astype('float32')) # shape=(36, 10)
func_8194_call = mod.get_global_var('func_8194')
func_8195_call = mutated_mod.get_global_var('func_8195')
call_11434 = relay.TupleGetItem(func_8194_call(), 0)
call_11435 = relay.TupleGetItem(func_8195_call(), 0)
func_9119_call = mod.get_global_var('func_9119')
func_9120_call = mutated_mod.get_global_var('func_9120')
call_11440 = relay.TupleGetItem(func_9119_call(), 0)
call_11441 = relay.TupleGetItem(func_9120_call(), 0)
func_10522_call = mod.get_global_var('func_10522')
func_10523_call = mutated_mod.get_global_var('func_10523')
call_11446 = func_10522_call()
call_11447 = func_10522_call()
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_11457 = relay.TupleGetItem(func_6811_call(relay.reshape(var_11384.astype('int64'), [960,])), 1)
call_11458 = relay.TupleGetItem(func_6813_call(relay.reshape(var_11384.astype('int64'), [960,])), 1)
func_9647_call = mod.get_global_var('func_9647')
func_9649_call = mutated_mod.get_global_var('func_9649')
call_11462 = relay.TupleGetItem(func_9647_call(), 2)
call_11463 = relay.TupleGetItem(func_9649_call(), 2)
func_5863_call = mod.get_global_var('func_5863')
func_5865_call = mutated_mod.get_global_var('func_5865')
call_11469 = relay.TupleGetItem(func_5863_call(), 1)
call_11470 = relay.TupleGetItem(func_5865_call(), 1)
func_10128_call = mod.get_global_var('func_10128')
func_10129_call = mutated_mod.get_global_var('func_10129')
call_11471 = relay.TupleGetItem(func_10128_call(), 0)
call_11472 = relay.TupleGetItem(func_10129_call(), 0)
bop_11486 = relay.bitwise_xor(call_11457.astype('int32'), relay.reshape(var_11384.astype('int32'), relay.shape_of(call_11457))) # shape=(16, 15, 4)
bop_11489 = relay.bitwise_xor(call_11458.astype('int32'), relay.reshape(var_11384.astype('int32'), relay.shape_of(call_11458))) # shape=(16, 15, 4)
func_390_call = mod.get_global_var('func_390')
func_393_call = mutated_mod.get_global_var('func_393')
call_11492 = relay.TupleGetItem(func_390_call(relay.reshape(call_11434.astype('float32'), [4, 9, 10]), relay.reshape(call_11440.astype('float32'), [4, 9, 10]), ), 0)
call_11493 = relay.TupleGetItem(func_393_call(relay.reshape(call_11434.astype('float32'), [4, 9, 10]), relay.reshape(call_11440.astype('float32'), [4, 9, 10]), ), 0)
output = relay.Tuple([call_11327,var_11382,var_11383,uop_11427,call_11434,call_11440,call_11446,call_11462,call_11469,call_11471,bop_11486,call_11492,])
output2 = relay.Tuple([call_11328,var_11382,var_11383,uop_11429,call_11435,call_11441,call_11447,call_11463,call_11470,call_11472,bop_11489,call_11493,])
func_11501 = relay.Function([var_11382,var_11383,var_11384,], output)
mod['func_11501'] = func_11501
mod = relay.transform.InferType()(mod)
var_11502 = relay.var("var_11502", dtype = "uint8", shape = (252,))#candidate|11502|(252,)|var|uint8
var_11503 = relay.var("var_11503", dtype = "float64", shape = (448,))#candidate|11503|(448,)|var|float64
var_11504 = relay.var("var_11504", dtype = "int64", shape = (960,))#candidate|11504|(960,)|var|int64
output = func_11501(var_11502,var_11503,var_11504,)
func_11505 = relay.Function([var_11502,var_11503,var_11504,], output)
mutated_mod['func_11505'] = func_11505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9017_call = mod.get_global_var('func_9017')
func_9018_call = mutated_mod.get_global_var('func_9018')
call_11524 = relay.TupleGetItem(func_9017_call(), 1)
call_11525 = relay.TupleGetItem(func_9018_call(), 1)
output = relay.Tuple([call_11524,])
output2 = relay.Tuple([call_11525,])
func_11535 = relay.Function([], output)
mod['func_11535'] = func_11535
mod = relay.transform.InferType()(mod)
mutated_mod['func_11535'] = func_11535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11535_call = mutated_mod.get_global_var('func_11535')
call_11536 = func_11535_call()
output = call_11536
func_11537 = relay.Function([], output)
mutated_mod['func_11537'] = func_11537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11622 = relay.var("var_11622", dtype = "float64", shape = (3, 3, 15))#candidate|11622|(3, 3, 15)|var|float64
uop_11623 = relay.atan(var_11622.astype('float64')) # shape=(3, 3, 15)
func_10614_call = mod.get_global_var('func_10614')
func_10618_call = mutated_mod.get_global_var('func_10618')
var_11634 = relay.var("var_11634", dtype = "float32", shape = (375,))#candidate|11634|(375,)|var|float32
const_11635 = relay.const([[9],[-1],[1],[-5],[-7],[4],[4],[-7],[-9],[-9],[-9],[-9],[7],[-1],[-7],[-3],[-9],[7],[4],[-10],[4],[4],[-5],[1],[9],[6],[-4],[1],[2],[2],[-1],[4],[-7],[-1],[-2],[-1],[-6],[-6],[-7],[6],[6],[-4],[-4],[10],[6],[-5],[-6],[8],[-1],[6],[1],[-10],[2],[9],[-3],[-7],[-4],[9],[-5],[6],[-2],[-10],[-10],[-4],[9],[-2],[7],[9],[-8],[-3],[3],[1],[-9],[9],[-9],[7],[6],[10],[6],[-4],[-5],[-5],[-10],[4],[-3],[2],[6],[-5],[-4],[-1],[9],[-4],[3],[-10],[-1],[-4],[-5],[-9],[-1],[5],[-9],[-2],[-10],[2],[-3],[-9],[-10],[7],[1],[4],[6],[-6],[-7],[5],[7],[4],[9],[-1],[-2],[7],[5],[-8],[-8],[-8],[-4],[9],[-10],[-10],[10],[-5],[-9],[3],[2],[9],[8],[-7],[-1],[-7],[2],[10],[-10],[6],[5],[-7],[3],[-4],[-8],[2],[-2],[3],[-8],[-4],[-7],[-10],[8],[5],[-10],[-8],[-8],[2],[4],[6],[2],[3],[1],[-5],[-8],[8],[7],[2],[-9],[-5],[-9],[3],[-7],[-3],[-8],[4],[-8],[-5],[5],[-8],[6],[8],[-3],[1],[9],[-10],[-9],[8],[-6],[9],[-1],[-6],[-2],[-8],[1],[-9],[1],[2],[-10],[-5],[-1],[7],[-7],[-7],[7],[1],[-1],[-9],[-7],[1],[4],[-7],[-9],[-8],[-2],[-6],[-9],[4],[-2],[-1],[7],[9],[8],[-2],[-8],[5],[2],[4],[8],[10],[4],[-6],[1],[-8],[-1],[1],[8],[7],[-1],[-1],[1],[-8],[7],[-6],[-3],[-9],[-2],[-1],[3],[5],[-8],[-3],[10],[4],[-8],[-8],[-2],[-3],[8],[6],[-8],[10],[9],[3],[1],[-5],[6],[-7],[7],[-8],[6],[-3],[-2],[-9],[-8],[2],[9],[-5],[3],[10],[8],[3],[5],[-2],[1],[7]], dtype = "uint16")#candidate|11635|(288, 1)|const|uint16
var_11636 = relay.var("var_11636", dtype = "int8", shape = (7, 10))#candidate|11636|(7, 10)|var|int8
call_11633 = relay.TupleGetItem(func_10614_call(relay.reshape(var_11634.astype('float32'), [375,]), relay.reshape(const_11635.astype('uint16'), [288,]), relay.reshape(var_11636.astype('int8'), [70,]), ), 4)
call_11637 = relay.TupleGetItem(func_10618_call(relay.reshape(var_11634.astype('float32'), [375,]), relay.reshape(const_11635.astype('uint16'), [288,]), relay.reshape(var_11636.astype('int8'), [70,]), ), 4)
const_11639 = relay.const([[[-1.027157,2.321507,6.111446,4.303476,-1.066510,1.879546,0.835900,-1.528546,4.721188,9.921645,-9.545966,-2.215735,-0.730524,-8.091987,9.618578],[-7.820524,4.433570,-1.161297,5.737768,-4.380149,-4.014593,-3.999305,3.974233,2.104485,4.168142,-4.353265,-9.300395,1.749147,5.835400,6.969368],[5.496484,-7.425455,1.973708,2.645523,-9.342755,-5.529070,5.300183,-7.909490,-4.444877,-9.812598,6.727022,5.435191,8.873928,-9.122657,-6.504986]],[[1.104788,9.999856,2.175160,-8.426849,5.713776,-8.380671,3.231108,-6.086348,-2.153023,2.863452,2.805151,7.677912,-8.711371,7.160009,4.793511],[7.305793,1.994879,2.897178,1.411724,-1.123764,-0.425592,4.124922,-6.022474,-1.656625,-5.473096,4.068697,-6.890903,-8.939322,-6.659255,7.084676],[5.769885,-9.140339,6.378082,2.370171,-1.200850,6.537348,-6.169519,-2.021894,-8.038620,-2.298449,7.375235,-2.161883,-9.908185,-2.939951,-0.530628]],[[0.035345,-3.709397,8.481119,0.654420,6.851669,-3.513914,-7.864393,2.466307,5.091575,2.871088,-9.451464,-3.395097,-1.095324,2.271030,1.804911],[-1.835981,9.304987,-9.512523,-1.800176,-3.690763,8.494349,-9.918653,3.565335,5.161628,-8.982117,-7.855458,1.434809,4.382325,-2.257285,-7.669977],[9.912629,-5.223992,-0.509142,7.505540,-2.971138,-5.994944,-2.498834,3.428579,-3.594170,-8.218126,-9.428770,1.567616,8.016453,4.157348,7.106057]]], dtype = "float64")#candidate|11639|(3, 3, 15)|const|float64
bop_11640 = relay.greater(uop_11623.astype('bool'), relay.reshape(const_11639.astype('bool'), relay.shape_of(uop_11623))) # shape=(3, 3, 15)
func_984_call = mod.get_global_var('func_984')
func_987_call = mutated_mod.get_global_var('func_987')
const_11646 = relay.const([-9.573982,-8.107787,3.647767,5.634896,8.958822,-2.276234,-1.594957,-8.832304,-1.284574,6.873458,-8.957698,-7.183413,2.111347,-3.811082,3.990726,3.341610,-5.998360,4.224864,7.888638,-1.510816,1.529079,-4.157576,-1.641512,-5.626152,-3.611532,7.377701,-6.060605,-0.821004,-4.808266,-2.535128,7.237248,7.014423,5.894957,2.324168,-6.055223,7.686584,4.235733,3.849394,-3.853516,-9.637337], dtype = "float64")#candidate|11646|(40,)|const|float64
const_11647 = relay.const([5,6,-10,-5,-5,-9,-7,-10,3,10,-10,2,-5,-7,9,3,-5,-6,-1,1,7,8,-8,9,-6,1,-7,7,3,9,7,-6,2,7,-4,3,2,-5,8,2,-2,2,-6,-3,1,1,-5,2,8,3,10,5,-5,-10,4,-9,-7,-10,-9,1,7,10,8,1,1,-2,-2,-3,-7,2,-7,10,1,6,-2,-10,1,-3,1,-9,-10,3,5,-8,1,4,8,-1,-5,-9,-5,8,-8,-9,4,1,-6,-5,2,-3,-1,10,-2,-10,-9,-6,7,-4,-6,4,-8,6,-9,5,4,6,-5,-9,-9,-8,10,-5,-9,-2,2,8,8,4,-7,-1,-4,-8,-5,-10,6,5,3,2,10,8,9,2,2,-7,2,9,6,9,-6,8,-6,-9,2,10,7,-4,5,-4,-9,-7,-2,8,-6,1,-5,-6,-1,-9,-8,5,-8,10,4,-2,6,5,-8,5,-2,-7,-5,-6,-10,9,6,1,-4,7,6,2,-9,-9,-2,2,-3,8,2,6,1,-7,-1,10,1,5,7,9,-6,4,5,1,4,7,5,7,-9,4,-5,7,-2,-3,-2,6,5,6,-7,-9,6,7,1,9,10,-2,-8,1,3,-10,8,-3,-9,2,-5,6,-9,3,9,-10,5,-4,-2,4,8,-2,-3,1,3,-5,6,-10,-8,-7,-4,8,10,6,-6,9,6,2,6,1,-9,-10,10,2,-4,7,-5,-9,8,6,6,9,7,-3,-7,4,1,-10,3,-10,-10,-5,3,-1,9,-4,3,1,5,4,-8,-7,-2,1,1,-2,-10,8,-3,4,-6,-9,2,-10,-5,10,-5,-6,7,2,-1,-9,-3,6,-5,10,-1,-2,-10,-1,-9,2,-1,10,-6,-6,-9,9,3,10,10,-1,8,5,8,-6,-8,-2,5,-8,6,-9,8,-9,-5,-1,8,7,5,-5,-9,-9,-7,7,5,-4,-7,6,-1,8,-3,-5,1,6,-4,-9,9,-10,-1,10,-2,8,7,7,-10,-8,-6,-3,-2,2,-9,-9,-1,7,-7,1,-1,-9,3,-8,2,6,-6,-4,-8,-6,-9,5,5,-5,9,10,-3,8,-4,8,10,-4,3,-7,-6,7,-10,-7,-6,-7,-8,-3,-7,-8,-7,1,-2,-6,-2,-7,-7,-6,-9,-4,-5,8,-2,-6,-3,-4,-1,-10,9,-10,-2,-1,-3,8,10,-7,-4,10,-7,7,-1,2,5,8,1,-4,5,2,4,10,-1,-1,-3,3,9,1,2,-5,9,-2,1,3,-3,6,4,-1,4,-2,-5,6,-8,6,-4,6,6,4,-3,-5,-2,4,-8,3,-7,8,1,-5,-3,-8,6,10,3,9,-3,-4,7,2,-1,7,1,9,9,2,9,-1,-5,6,7,4,2,-6,6,-4,7,4,-7,2,10,-2,-6,-3,5,7,-5,-3,-10,5,9,2,1,3,-2,-5,-1,-1,-9,-5,4,-6,6,-5,8,-2,-1,2,4,-9,-2,-9,1,-1,-4,3,-10,-6,-6,-5,-1,1,5,4,-1,-6,-9,-10,-4,-1,7,4,-2,-6,-1,7,9,-6,3,4,6,1,-2,8,-9,-4,-4,6,1,8,-2,-6,3,7,-5,-2,-8,8,1,8,6,10,2,-8,7,-7,-1,2,-6,-1,-10,3,3,2,9,8,5,7,-4,-2,-3,10,1,-9,2,9,-3,4,4,-4,9,8,1,-9,10,-4,10,8,-7,-8,7,5,-10,9,-6,-6,-4,6,8,10,9,-3,-9,10,-8,-7,6,6,-2,9,-8,2,9,-9,5,7,3,-3,-10,10,-1,-2,10,4,-5,-9,-10,-6,9,6,-5,8,-2,2,-3,-10,1,5,4,-3,-4,3,-5,3,-4,-8,3,-9,-8,-6,5,-7,-10,8,-4,2,-7,-4,-1,6,7,8,-1,-2,10,-10,-6,9,-1,-9,-2,-7,-3,1,9,3,1,-3,-6,9,-4,1,8,-5,9,-6,-4,-9,-3,3,8,-5,5,1,-4,9,1,-10,-10,-8,1,-1,6,-2,-2,10,-10,1,4,7,4,5,-6,4,10,-6,-5,-5,-8,-1,-1,10,-7,-7,5,-10,1,-6,-2,4,2,4,6,-10,6,5,-2,1,10,-2,-1,3,10,9,-10,4,3,-3,7,5,5,-3,9,-10,-9,3,7,-3,5,-6,7,1,8,-8,7,10,-5,3,-6,-2,-5,8,1,6,-3,3,6,9,9,-1,-3,10,-6,2,6,-1,-7,1,-10,3,3,3,-3,-3,10,-9,-7,-10,4,6,-6,-8,-6,8,-10,-9,-9,2,7,-4,-1,1,-4,2,-3,-5,-7,-1,-2,9,1,4,-2,-4,6,-7,1,-7,-9,2,-9,-2,-9,-9,3,4,-10,6,9,-1,9,1,6,-6,9,10,4,6,4,-6,-7,-2,3,9,7,-6,-9,-6,-7,3,-10,-7,4,10,1,4,-10,-5,4,4,3,10,7,9,10,-1,3,-7,-1,7,-6,-10,-7,9,8,-5,-5,2,-2,-7,3,3,6,-4], dtype = "int64")#candidate|11647|(960,)|const|int64
call_11645 = relay.TupleGetItem(func_984_call(relay.reshape(const_11646.astype('float64'), [4, 5, 2]), relay.reshape(const_11647.astype('int64'), [960,]), ), 0)
call_11648 = relay.TupleGetItem(func_987_call(relay.reshape(const_11646.astype('float64'), [4, 5, 2]), relay.reshape(const_11647.astype('int64'), [960,]), ), 0)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_11652 = func_8571_call()
call_11653 = func_8571_call()
output = relay.Tuple([call_11633,var_11634,const_11635,var_11636,bop_11640,call_11645,const_11646,const_11647,call_11652,])
output2 = relay.Tuple([call_11637,var_11634,const_11635,var_11636,bop_11640,call_11648,const_11646,const_11647,call_11653,])
func_11655 = relay.Function([var_11622,var_11634,var_11636,], output)
mod['func_11655'] = func_11655
mod = relay.transform.InferType()(mod)
mutated_mod['func_11655'] = func_11655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11655_call = mutated_mod.get_global_var('func_11655')
var_11657 = relay.var("var_11657", dtype = "float64", shape = (3, 3, 15))#candidate|11657|(3, 3, 15)|var|float64
var_11658 = relay.var("var_11658", dtype = "float32", shape = (375,))#candidate|11658|(375,)|var|float32
var_11659 = relay.var("var_11659", dtype = "int8", shape = (7, 10))#candidate|11659|(7, 10)|var|int8
call_11656 = func_11655_call(var_11657,var_11658,var_11659,)
output = call_11656
func_11660 = relay.Function([var_11657,var_11658,var_11659,], output)
mutated_mod['func_11660'] = func_11660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10302_call = mod.get_global_var('func_10302')
func_10304_call = mutated_mod.get_global_var('func_10304')
call_11737 = relay.TupleGetItem(func_10302_call(), 1)
call_11738 = relay.TupleGetItem(func_10304_call(), 1)
output = relay.Tuple([call_11737,])
output2 = relay.Tuple([call_11738,])
func_11748 = relay.Function([], output)
mod['func_11748'] = func_11748
mod = relay.transform.InferType()(mod)
mutated_mod['func_11748'] = func_11748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11748_call = mutated_mod.get_global_var('func_11748')
call_11749 = func_11748_call()
output = call_11749
func_11750 = relay.Function([], output)
mutated_mod['func_11750'] = func_11750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9970_call = mod.get_global_var('func_9970')
func_9971_call = mutated_mod.get_global_var('func_9971')
call_11793 = func_9970_call()
call_11794 = func_9970_call()
output = call_11793
output2 = call_11794
func_11820 = relay.Function([], output)
mod['func_11820'] = func_11820
mod = relay.transform.InferType()(mod)
output = func_11820()
func_11821 = relay.Function([], output)
mutated_mod['func_11821'] = func_11821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8398_call = mod.get_global_var('func_8398')
func_8400_call = mutated_mod.get_global_var('func_8400')
call_11881 = relay.TupleGetItem(func_8398_call(), 0)
call_11882 = relay.TupleGetItem(func_8400_call(), 0)
func_1267_call = mod.get_global_var('func_1267')
func_1270_call = mutated_mod.get_global_var('func_1270')
var_11906 = relay.var("var_11906", dtype = "float64", shape = (1440,))#candidate|11906|(1440,)|var|float64
call_11905 = relay.TupleGetItem(func_1267_call(relay.reshape(var_11906.astype('float64'), [15, 6, 16])), 0)
call_11907 = relay.TupleGetItem(func_1270_call(relay.reshape(var_11906.astype('float64'), [15, 6, 16])), 0)
output = relay.Tuple([call_11881,call_11905,var_11906,])
output2 = relay.Tuple([call_11882,call_11907,var_11906,])
func_11918 = relay.Function([var_11906,], output)
mod['func_11918'] = func_11918
mod = relay.transform.InferType()(mod)
var_11919 = relay.var("var_11919", dtype = "float64", shape = (1440,))#candidate|11919|(1440,)|var|float64
output = func_11918(var_11919)
func_11920 = relay.Function([var_11919], output)
mutated_mod['func_11920'] = func_11920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6335_call = mod.get_global_var('func_6335')
func_6337_call = mutated_mod.get_global_var('func_6337')
call_11926 = relay.TupleGetItem(func_6335_call(), 0)
call_11927 = relay.TupleGetItem(func_6337_call(), 0)
func_7088_call = mod.get_global_var('func_7088')
func_7091_call = mutated_mod.get_global_var('func_7091')
call_11930 = relay.TupleGetItem(func_7088_call(relay.reshape(call_11926.astype('float64'), [16, 16, 14])), 0)
call_11931 = relay.TupleGetItem(func_7091_call(relay.reshape(call_11926.astype('float64'), [16, 16, 14])), 0)
output = relay.Tuple([call_11926,call_11930,])
output2 = relay.Tuple([call_11927,call_11931,])
func_11934 = relay.Function([], output)
mod['func_11934'] = func_11934
mod = relay.transform.InferType()(mod)
output = func_11934()
func_11935 = relay.Function([], output)
mutated_mod['func_11935'] = func_11935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8143_call = mod.get_global_var('func_8143')
func_8145_call = mutated_mod.get_global_var('func_8145')
call_12021 = relay.TupleGetItem(func_8143_call(), 0)
call_12022 = relay.TupleGetItem(func_8145_call(), 0)
output = relay.Tuple([call_12021,])
output2 = relay.Tuple([call_12022,])
func_12028 = relay.Function([], output)
mod['func_12028'] = func_12028
mod = relay.transform.InferType()(mod)
mutated_mod['func_12028'] = func_12028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12028_call = mutated_mod.get_global_var('func_12028')
call_12029 = func_12028_call()
output = call_12029
func_12030 = relay.Function([], output)
mutated_mod['func_12030'] = func_12030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8989_call = mod.get_global_var('func_8989')
func_8990_call = mutated_mod.get_global_var('func_8990')
call_12107 = func_8989_call()
call_12108 = func_8989_call()
output = relay.Tuple([call_12107,])
output2 = relay.Tuple([call_12108,])
func_12109 = relay.Function([], output)
mod['func_12109'] = func_12109
mod = relay.transform.InferType()(mod)
output = func_12109()
func_12110 = relay.Function([], output)
mutated_mod['func_12110'] = func_12110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6307_call = mod.get_global_var('func_6307')
func_6309_call = mutated_mod.get_global_var('func_6309')
call_12141 = func_6307_call()
call_12142 = func_6307_call()
func_8503_call = mod.get_global_var('func_8503')
func_8505_call = mutated_mod.get_global_var('func_8505')
call_12148 = relay.TupleGetItem(func_8503_call(), 0)
call_12149 = relay.TupleGetItem(func_8505_call(), 0)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_12153 = relay.TupleGetItem(func_6615_call(), 2)
call_12154 = relay.TupleGetItem(func_6617_call(), 2)
func_1981_call = mod.get_global_var('func_1981')
func_1984_call = mutated_mod.get_global_var('func_1984')
var_12156 = relay.var("var_12156", dtype = "float32", shape = (375,))#candidate|12156|(375,)|var|float32
call_12155 = func_1981_call(relay.reshape(var_12156.astype('float32'), [5, 15, 5]))
call_12157 = func_1981_call(relay.reshape(var_12156.astype('float32'), [5, 15, 5]))
bop_12160 = relay.floor_mod(var_12156.astype('float64'), relay.reshape(call_12155.astype('float64'), relay.shape_of(var_12156))) # shape=(375,)
bop_12163 = relay.floor_mod(var_12156.astype('float64'), relay.reshape(call_12157.astype('float64'), relay.shape_of(var_12156))) # shape=(375,)
func_390_call = mod.get_global_var('func_390')
func_393_call = mutated_mod.get_global_var('func_393')
call_12165 = relay.TupleGetItem(func_390_call(relay.reshape(call_12141.astype('float32'), [4, 9, 10]), relay.reshape(call_12141.astype('float32'), [4, 9, 10]), ), 0)
call_12166 = relay.TupleGetItem(func_393_call(relay.reshape(call_12141.astype('float32'), [4, 9, 10]), relay.reshape(call_12141.astype('float32'), [4, 9, 10]), ), 0)
bop_12186 = relay.right_shift(bop_12160.astype('uint8'), relay.reshape(var_12156.astype('uint8'), relay.shape_of(bop_12160))) # shape=(375,)
bop_12189 = relay.right_shift(bop_12163.astype('uint8'), relay.reshape(var_12156.astype('uint8'), relay.shape_of(bop_12163))) # shape=(375,)
output = relay.Tuple([call_12141,call_12148,call_12153,call_12165,bop_12186,])
output2 = relay.Tuple([call_12142,call_12149,call_12154,call_12166,bop_12189,])
func_12191 = relay.Function([var_12156,], output)
mod['func_12191'] = func_12191
mod = relay.transform.InferType()(mod)
var_12192 = relay.var("var_12192", dtype = "float32", shape = (375,))#candidate|12192|(375,)|var|float32
output = func_12191(var_12192)
func_12193 = relay.Function([var_12192], output)
mutated_mod['func_12193'] = func_12193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_12205 = relay.TupleGetItem(func_6615_call(), 1)
call_12206 = relay.TupleGetItem(func_6617_call(), 1)
output = call_12205
output2 = call_12206
func_12216 = relay.Function([], output)
mod['func_12216'] = func_12216
mod = relay.transform.InferType()(mod)
output = func_12216()
func_12217 = relay.Function([], output)
mutated_mod['func_12217'] = func_12217
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12233 = relay.var("var_12233", dtype = "float64", shape = (13, 15, 5))#candidate|12233|(13, 15, 5)|var|float64
var_12234 = relay.var("var_12234", dtype = "float64", shape = (13, 15, 5))#candidate|12234|(13, 15, 5)|var|float64
bop_12235 = relay.greater_equal(var_12233.astype('bool'), relay.reshape(var_12234.astype('bool'), relay.shape_of(var_12233))) # shape=(13, 15, 5)
uop_12250 = relay.sinh(var_12234.astype('float64')) # shape=(13, 15, 5)
output = relay.Tuple([bop_12235,uop_12250,])
output2 = relay.Tuple([bop_12235,uop_12250,])
func_12284 = relay.Function([var_12233,var_12234,], output)
mod['func_12284'] = func_12284
mod = relay.transform.InferType()(mod)
mutated_mod['func_12284'] = func_12284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12284_call = mutated_mod.get_global_var('func_12284')
var_12286 = relay.var("var_12286", dtype = "float64", shape = (13, 15, 5))#candidate|12286|(13, 15, 5)|var|float64
var_12287 = relay.var("var_12287", dtype = "float64", shape = (13, 15, 5))#candidate|12287|(13, 15, 5)|var|float64
call_12285 = func_12284_call(var_12286,var_12287,)
output = call_12285
func_12288 = relay.Function([var_12286,var_12287,], output)
mutated_mod['func_12288'] = func_12288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10522_call = mod.get_global_var('func_10522')
func_10523_call = mutated_mod.get_global_var('func_10523')
call_12305 = func_10522_call()
call_12306 = func_10522_call()
output = relay.Tuple([call_12305,])
output2 = relay.Tuple([call_12306,])
func_12314 = relay.Function([], output)
mod['func_12314'] = func_12314
mod = relay.transform.InferType()(mod)
output = func_12314()
func_12315 = relay.Function([], output)
mutated_mod['func_12315'] = func_12315
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12332 = relay.const([[[-9,-8,5,6,-7,-2,8,-8,-5,2,3,-9,7],[-3,2,4,1,8,5,3,4,2,-9,8,-3,8],[-2,-2,-6,-10,2,-2,6,-1,7,-3,-1,-5,-5],[2,3,3,-9,-6,3,3,-2,6,-6,-10,-1,4],[-8,-2,-1,-1,6,-10,1,10,-4,7,8,3,-2],[-7,-6,7,-1,6,-3,6,1,4,4,5,-7,-1],[10,10,-8,7,9,7,2,2,8,-7,-6,2,3],[7,10,6,3,-1,3,5,3,4,3,3,5,-2],[-8,-10,-2,2,4,-1,4,-10,-2,-10,4,10,-1],[-1,-2,-7,7,-3,4,-10,-5,-9,-5,-7,3,3],[1,-7,6,-9,10,1,5,6,-1,-10,-9,7,-8],[-2,2,-8,-9,-7,2,-5,4,-2,10,-8,6,9],[-5,-9,3,-3,7,9,-8,-2,6,5,-5,-1,-4],[-10,-7,6,-7,6,-6,-6,2,-8,-6,1,2,-4]],[[-10,4,3,6,4,3,-7,-3,10,4,9,-10,-4],[6,6,3,-4,2,2,9,-2,-9,-1,-9,-4,-1],[-7,-9,-4,7,7,-8,8,10,9,-7,-2,-7,-1],[-4,-1,1,9,-9,4,-5,-5,-4,4,-4,-3,-4],[-9,8,9,-8,-8,-8,-6,-2,-10,-1,-9,-9,-1],[5,-6,-1,-2,-7,-2,3,2,6,10,-8,4,-7],[-6,-7,-1,-1,3,-4,-10,10,-5,-1,-6,-5,-9],[-7,6,-8,-2,9,9,-10,3,-1,-4,4,-4,6],[-6,-8,-8,9,-1,-6,2,-6,-9,-5,-10,-5,7],[-4,8,3,-5,-10,8,-6,-4,1,10,-9,4,1],[-2,10,6,10,-8,-10,4,3,-7,10,-1,-9,8],[10,-6,8,7,-5,4,9,-8,4,-6,3,-5,-7],[2,7,-6,4,10,-7,-1,-10,-8,8,7,-10,-8],[8,-6,10,-1,-9,-6,8,-4,2,9,-10,-10,-5]],[[-10,-2,7,-10,5,10,8,4,10,-9,6,10,3],[2,-10,-4,1,-7,-8,-1,8,10,1,-10,-5,-7],[-2,6,-9,-1,-7,-9,1,-7,4,3,-9,8,8],[-1,10,-3,7,8,-10,-4,3,7,1,2,-4,-7],[-7,-5,6,-7,-3,7,-2,5,3,2,5,10,3],[-1,-7,2,-5,1,2,-8,-10,7,9,7,3,7],[-7,6,-1,1,-5,-5,9,-4,4,7,4,-8,-8],[-6,-4,-3,-2,-3,5,-2,-6,-5,-3,-9,8,2],[2,6,5,-2,-6,2,-3,-10,8,3,9,2,-4],[8,6,3,-10,-9,2,5,-6,4,1,-2,-10,-6],[2,10,8,-7,9,-4,10,5,-5,-7,-9,-2,9],[-3,8,7,-9,5,6,-4,3,-4,-1,4,3,-7],[-6,-5,5,-3,9,-5,8,6,4,-9,-7,-2,5],[-6,-9,1,4,-2,5,-5,7,3,-2,9,8,-4]],[[4,5,4,-8,-6,8,-4,-10,8,-5,7,-10,4],[6,-9,9,8,3,-7,3,-9,-5,3,-3,-1,6],[6,-7,-7,-4,-3,2,-9,1,5,1,-9,8,-2],[-3,-9,10,-4,6,10,-8,3,4,4,-9,-3,2],[7,-2,-10,1,-3,-7,-8,8,2,-8,-5,-8,2],[-7,-6,-5,-10,-1,3,2,-2,4,-1,-5,8,10],[8,2,5,-4,-8,-5,5,9,-7,5,1,7,-10],[6,8,1,8,-7,-3,-4,-8,-1,7,3,4,-3],[-5,-6,-5,-7,2,10,-3,1,-5,-9,7,8,-2],[8,-8,1,-3,10,-1,2,5,3,6,4,-10,6],[4,1,-6,-4,-2,-8,1,-5,-7,6,-9,-1,-1],[-8,-9,10,10,-9,-2,1,-7,-9,8,-9,-10,-8],[1,2,4,7,-6,-5,10,-5,9,4,-6,2,-6],[-1,-7,-3,-8,-2,-9,-6,-6,3,6,-8,-3,-1]],[[-7,3,6,-10,-2,-1,2,-3,-4,5,-9,-8,4],[2,-8,6,-9,-9,-4,-10,-3,-9,4,-5,-2,-10],[7,-7,-4,10,-3,-9,5,7,-8,6,-8,8,8],[2,-4,-10,-10,3,6,-8,-10,-3,-7,-4,9,-8],[-6,3,-2,3,-9,8,-10,5,-4,8,2,-9,-4],[-3,5,-2,-2,7,9,-9,-3,-10,-7,10,10,3],[9,-8,-5,6,6,2,-2,-1,9,1,-6,4,6],[3,3,-5,-10,-5,-7,8,10,1,-9,5,10,-9],[-5,-10,-8,-6,-10,5,-7,8,3,5,-4,-7,7],[-10,-6,-7,-1,-3,-9,1,-1,3,7,1,-5,-5],[-3,3,-4,10,1,10,-4,2,3,5,10,-3,-9],[-10,1,7,-10,5,-5,-4,2,-8,-9,10,-6,8],[-4,4,5,10,-1,-3,7,-5,-5,-9,-2,-3,-7],[-1,-9,10,1,-7,-8,-4,3,-10,-5,3,3,-9]],[[10,4,-7,2,-5,1,6,4,-4,5,-6,-10,-1],[5,6,6,5,3,6,-8,-6,7,-7,-6,-9,-10],[7,10,-2,9,-8,-2,-7,-5,-8,6,-3,6,3],[-3,-2,-1,-3,-6,-5,-3,-1,6,-9,5,-5,3],[-3,8,-2,10,3,4,4,1,6,2,8,-7,8],[-6,2,-9,-10,-1,-9,10,-4,-8,-6,-8,4,10],[-8,8,-9,-9,6,6,-8,-10,-1,8,7,-4,8],[3,-3,-1,10,-9,6,1,-7,-7,5,-1,-10,-2],[7,-7,-9,5,3,-3,7,-3,-9,4,3,-2,-1],[-5,-1,7,4,-3,6,4,-7,-4,8,-7,4,-6],[7,5,10,10,-8,1,2,-4,-3,-10,5,5,3],[-2,-7,4,-4,-1,-1,-6,-7,1,-3,2,3,-8],[-7,-2,7,7,-2,-10,-2,-3,-2,-3,7,10,1],[8,3,-10,9,1,8,3,-1,-8,-2,7,1,-2]],[[-6,-8,6,10,-2,-10,-4,8,-8,-2,4,1,1],[9,-10,10,-7,2,4,3,-2,-8,5,-8,9,-4],[-2,-6,-5,-4,-9,-2,3,-10,-7,5,-7,8,9],[8,10,10,9,4,2,-10,2,-7,-7,4,-9,5],[-1,9,1,-9,-9,2,4,1,-3,9,4,-2,1],[5,4,6,-3,9,-2,6,9,9,-1,1,1,9],[4,-6,-7,6,3,1,9,-1,-10,2,2,-3,2],[-6,4,10,-7,4,9,7,2,-7,8,3,4,5],[9,-10,-4,5,4,-7,-4,-6,10,5,1,-4,10],[5,3,2,2,4,-2,5,8,8,-2,5,10,-4],[1,-10,-5,9,-6,1,-4,-3,6,2,-9,-6,-7],[-1,-2,-9,-2,8,-3,5,-7,-9,-3,-9,10,3],[-2,-8,-3,-7,5,9,-5,5,3,9,-8,3,1],[-10,-3,-10,-3,5,7,-10,10,-10,-6,2,6,-9]],[[2,-4,4,-5,7,2,-4,-6,1,-5,-5,3,-9],[1,10,10,4,6,7,4,5,-4,5,1,-5,-4],[-9,-2,-5,6,2,9,9,1,5,10,3,10,-3],[1,-7,-8,3,-7,-2,-6,-10,-8,8,-4,9,6],[7,10,-9,10,8,-2,-8,1,-3,-4,-10,1,4],[-5,-9,-4,7,8,5,-9,8,5,-2,5,3,-8],[4,3,5,2,8,-2,-10,-10,10,7,3,-3,-8],[10,-10,4,-8,-5,-4,-6,-2,7,1,-6,-9,7],[5,-8,-10,4,-7,-7,5,9,-8,-6,-5,2,-2],[-5,3,4,-3,3,-1,7,-5,-4,-6,-4,9,-5],[-2,-10,-7,-5,8,10,-2,-7,2,-10,10,-9,-8],[-3,10,-3,6,7,8,-6,3,-8,-1,-5,-2,-1],[-10,1,3,9,3,-8,-3,4,10,8,6,-8,2],[3,10,-8,-4,2,-4,-3,-1,8,9,-7,-10,2]]], dtype = "uint64")#candidate|12332|(8, 14, 13)|const|uint64
var_12333 = relay.var("var_12333", dtype = "uint64", shape = (8, 14, 13))#candidate|12333|(8, 14, 13)|var|uint64
bop_12334 = relay.right_shift(const_12332.astype('uint64'), relay.reshape(var_12333.astype('uint64'), relay.shape_of(const_12332))) # shape=(8, 14, 13)
output = bop_12334
output2 = bop_12334
func_12358 = relay.Function([var_12333,], output)
mod['func_12358'] = func_12358
mod = relay.transform.InferType()(mod)
mutated_mod['func_12358'] = func_12358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12359 = relay.var("var_12359", dtype = "uint64", shape = (8, 14, 13))#candidate|12359|(8, 14, 13)|var|uint64
func_12358_call = mutated_mod.get_global_var('func_12358')
call_12360 = func_12358_call(var_12359)
output = call_12360
func_12361 = relay.Function([var_12359], output)
mutated_mod['func_12361'] = func_12361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10522_call = mod.get_global_var('func_10522')
func_10523_call = mutated_mod.get_global_var('func_10523')
call_12363 = func_10522_call()
call_12364 = func_10522_call()
func_8302_call = mod.get_global_var('func_8302')
func_8304_call = mutated_mod.get_global_var('func_8304')
const_12376 = relay.const([-5.916025,-8.030501,-0.701659,-3.249013,8.054418,5.803628,8.514104,4.575774,7.349883,-8.206956,-8.911623,0.579385,-2.135738,-8.852208,9.923900,-7.373320,1.885531,1.887099,-5.155154,8.057224,-4.310917,-8.241680,-8.748476,8.845165,2.096570,-4.090126,-4.977351,0.771456,0.025811,-5.228726,9.128422,-7.337703,5.289837,-8.752576,4.568551,-4.174155,-0.344205,-9.636391,-2.454590,-0.231134,3.769362,9.371535,1.526865,1.826464,2.944154,5.828439,-6.809350,7.422217,-9.546283,5.571056,-5.312209,5.670172,-6.383936,8.793080,8.809368,5.591558,-7.955746,9.046718,0.524472,-9.388699,-7.628809,-4.582318,-9.849974,6.958819,2.629278,-9.396126,-5.916171,5.179001,1.650261,4.261722,-1.247532,-7.194220,-4.199989,-6.393277,-5.743245,-2.983314,8.423237,2.231785,-3.875892,-5.451787,4.077076,0.798190,-4.927853,-2.665056,0.540448,0.961549,-2.985632,-2.779881,9.332538,8.898435,-8.887054,-8.641529,-8.188338,5.989861,-3.159195,-5.546004,-4.838948,3.250861,-7.872311,5.547971,-1.748986,-6.115269,-2.787020,0.583797,4.237298,0.042420,-2.800715,3.313816,2.860640,1.138757,-5.037859,3.101536,-5.999993,-1.542519,-2.499573,-7.465518,-6.425414,-0.558702,-4.475594,-8.517171,-9.457410,1.157490,6.044121,4.882848,4.254982,7.536111,-6.044984,-8.411755,3.481917,-4.577904,-5.478303,-5.502967,1.525480,5.328229,-4.167055,9.220443,9.146127,6.602618,-7.086861,6.529827,-2.058042,6.536392,0.285210,1.975180,-2.946936,1.281521,-3.996195,7.537242,-4.322970,7.429238,-3.086935,4.399550,7.236446,2.340701,4.226024,3.251769,2.354854,-7.018950,5.931619,1.984294,8.801551,-3.305304,6.950977,6.396052,0.567507,-9.195251,-8.601615,8.582192,7.649085,6.358554,-1.137382,-4.398038,1.686731,-5.998925,-2.465255,6.442735,-1.241938,3.252543,0.181920,8.418363,-4.911319,6.367894,7.483815,-0.231399,6.072334,4.888941,9.020495,9.752179,4.389968,3.353692,5.135235,2.851154,-7.389647,5.025068,-5.575647,-0.258309,2.697164,4.648494,8.641560,0.127889,3.276177,-8.311870,-1.738150,8.911961,7.695771,1.497897,9.145187,3.200511,1.780152,-6.326022,7.841902,-7.482049,-9.766350,-3.431429,-9.390346,-5.992056,-4.853785,-5.377321,-5.857129,-2.162459,-9.422121,-3.703612,8.502621,9.732171,8.322524,-7.678343,9.645411,8.522692,-7.129527,0.109257,4.377110,-9.084785,-2.365239,-4.112174,-9.198230,-3.986157,-4.607387,5.640265,-3.996503,-1.649680,-2.052104,9.848607,-7.617553,8.339741,-8.983290,9.339078,-9.172347,1.035738,-0.513353,3.997598,8.662246,8.832114,-0.804920,4.146203,0.683518,-6.465626,-1.172151,2.140013,-9.731382,0.733904,0.706456,-3.772375,-1.616422,-3.581787,8.204058,2.082157,-6.876001,-7.331581,0.738267,3.473723,-7.111361,-2.448382,1.921752,1.827495,-3.473562,-3.014978,2.533791,4.550639,3.333331,-8.840078,6.882426,9.541731,-5.101645,5.228823,8.037330,-7.619393,-8.692123,-1.000488,4.345172,-2.069612,-8.828290,7.428985,7.144664,0.137752,9.520581,-3.749658,6.580234,-8.895083,3.835976,-9.853770,-4.673757,-6.646907,1.005360,7.168415,-6.379732,8.067047,-6.162487,-5.994930,6.538499,-9.659131,5.587242,-8.913635,-1.165019,-0.907312,-8.648179,-0.583052,-9.959259,3.106369,3.933025,-0.062443,-0.384119,-4.306889,-8.953139,3.259776,-5.956396,-0.503156,-2.527637,9.024454,9.454383,-8.680417,-7.342643,7.543037,-9.340857,-7.939500,5.607932,3.619878,-6.135065,-7.404842,2.013313,1.345897,-1.091245,4.019240,-1.086029,1.131967,3.346926,9.675578,2.247536,-0.385805,4.427107,2.594077,0.941488,1.002305,6.585959,-6.198300,9.568093,-8.269542,-4.785412,-8.833156,-4.998180,-5.814822,0.938725,1.032650,-9.700289,-0.677464,2.014953,-7.527492,0.573964,-0.835947,-5.180768,6.478109,-3.787504,5.224174,5.641479,5.736088,9.427520,2.674059,5.337877,0.373530,-5.916977,-6.903068,-1.560050,-5.730601,-1.937995,-2.173451,-2.077410,-7.278509,1.752726,5.857856,0.653920,1.111258,-1.602068,4.684616,3.311661,-4.517701,8.686831,3.304763,2.078600,0.117025,7.529201,-6.505344,1.766953,-1.732759,-1.711837,7.738696,8.395449,3.072744,-2.162155,9.566177,9.163757,8.184699,-2.453566,-8.468812,5.737361,1.921425,9.776039,-7.884889,-3.478285,-9.941803,-1.411794,-0.677987,-2.129687,0.432429,7.309865,-3.188949,-3.764765,1.140398,8.343508,4.509245,8.440148,7.205857,-9.597699,9.270983,-0.667623,-0.786153,9.103660,-1.792994,-3.591301,-3.710666,5.651611,-3.551841,6.737093,-2.967789,-0.266290,6.261865,9.829143,-1.256632,-4.610211,-8.561766,4.419886,7.969623,-0.118792,-9.339507,4.941454,-3.099798,-6.587643,1.651828,-3.069862,-5.700564,0.095939,-2.338005,-3.800401,-8.235840,-4.515103,3.116717,6.670667,-9.709037,7.448511,-9.479035,-3.340728,2.594800,-1.154014,-7.381404,-6.420442,8.871582,-0.287349,-8.200244,-1.405412,8.803357,-9.409094,4.995348,3.835112,3.472444,-7.577001,8.156759,-6.812857,9.221394,0.979889,1.972509,-2.767028,0.974279,-0.786785,3.298904,8.516326,7.833934,-1.940463,1.674086,-7.191783,-9.422430,0.180752,5.147319,-3.499439,-0.727647,-7.683003,6.829817,-0.340923,2.153937,1.300523,4.357828,2.266435,-9.968858,2.264079,7.694272,-2.500639,7.435900,-1.916827,8.611623,1.023847,-7.845286,3.937731,2.969955,1.191879,-7.244907,6.875314,8.352258,-1.605852,-1.305794,6.209610,3.239542,4.098319,2.937158,-9.453249,-6.701460,-8.207477,1.404748,6.886838,7.221485,-8.159155,7.757779,-2.330331,-0.041580,-4.375455,-3.652982,8.129524,2.809803,-7.654972,-5.208835,6.784228,6.757241,6.227714,0.836048,2.226727,5.082522,-7.217672,3.855719,6.499830,5.331023,1.156752,-9.010912,3.179572,4.759145,-1.142712,-3.799387,3.821089,-0.690573,8.621406,2.839065,-0.265869,-4.229970,7.008504,0.931502,4.088585,-5.950522,4.743254,2.397181,-7.251805,-5.816811,-3.217508,-1.469178,-0.486137,4.308186,-2.891409,-2.499947,3.099481,6.935918,4.634416,-0.985805,9.550331,5.574647,6.577712,0.158807,0.986026,-3.033156,5.367943,4.845004,7.584302,3.615257,9.365495,0.612122,-0.258983,4.775812,9.383372,-0.246088,-6.684493,4.004629,0.769903,7.991037,1.702578,-4.279342,-8.663607,-4.619610,-2.100913,2.730182,-5.452914,7.847991,9.927394,-0.836577,-2.877749,1.189515,-9.152978,-6.043989,-2.126228,-4.851823,9.061436,-1.798698,0.257875,-2.360495,-1.298901,5.536963,-9.634695,9.091224,-3.885593,-0.419530,-3.627070,2.736735,9.449687,-5.508143,-2.694328,9.179692,-4.003535,5.606192,-9.886893,9.706890,-1.729764,3.070753,7.757276,-5.883677,-1.695667,-1.184935,1.191807,7.134247,7.063790,-4.567454,8.548476,-8.168319,3.850236,0.460229,8.368942,-2.555513,6.262135,-7.043548,-3.524046,-3.180201,4.420626,6.366453,9.037069,3.125054,8.133311,-6.935937,9.106608,-2.545806,-1.383502,4.527070,-4.605251,6.357994,8.685624,4.359769,8.967495,6.197573,-6.131861,6.433192,3.966896,7.472835,-8.000523,4.284262,-6.887089,-9.270501,4.509898,-5.903050,6.558750,-1.146101,4.364031,-0.392603,1.765582,1.029923,-7.038142,3.295830,-6.519480,-3.817133,-4.465341,-3.383837,6.980394,-6.697269,-7.330959,5.792536,-9.689323,4.190908,4.352794,-2.653835,2.253285,-2.766984,-1.402331,3.372888,-3.193557,0.764937,-3.856813,2.799029,-9.542146,-5.355680,-4.213387,-8.493389,7.398096,-0.447857,4.951165,-9.854983,5.608925,9.627408,-0.373859,-8.699048,-8.322704,-5.089647,8.478477,5.988985,2.677159,3.655933,9.144081,-5.648821,2.318895,1.929556,-6.084277,2.009562,-3.699919,6.187697,5.587523,-5.542803,-6.406858,-8.515263,-2.153966,4.583218,-0.257673,-4.065120,3.434534,-3.606845,0.952948,9.034544,2.422617,2.784759,6.211594,2.285927,-4.876236,9.607491,-9.828496,2.849602,1.770917,-8.037507,4.608935,9.486410,9.213682,2.695831,8.599270,-0.746541], dtype = "float32")#candidate|12376|(770,)|const|float32
call_12375 = relay.TupleGetItem(func_8302_call(relay.reshape(const_12376.astype('float32'), [14, 11, 5])), 0)
call_12377 = relay.TupleGetItem(func_8304_call(relay.reshape(const_12376.astype('float32'), [14, 11, 5])), 0)
func_8398_call = mod.get_global_var('func_8398')
func_8400_call = mutated_mod.get_global_var('func_8400')
call_12379 = relay.TupleGetItem(func_8398_call(), 0)
call_12380 = relay.TupleGetItem(func_8400_call(), 0)
output = relay.Tuple([call_12363,call_12375,const_12376,call_12379,])
output2 = relay.Tuple([call_12364,call_12377,const_12376,call_12380,])
func_12381 = relay.Function([], output)
mod['func_12381'] = func_12381
mod = relay.transform.InferType()(mod)
output = func_12381()
func_12382 = relay.Function([], output)
mutated_mod['func_12382'] = func_12382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8571_call = mod.get_global_var('func_8571')
func_8572_call = mutated_mod.get_global_var('func_8572')
call_12383 = func_8571_call()
call_12384 = func_8571_call()
output = relay.Tuple([call_12383,])
output2 = relay.Tuple([call_12384,])
func_12424 = relay.Function([], output)
mod['func_12424'] = func_12424
mod = relay.transform.InferType()(mod)
mutated_mod['func_12424'] = func_12424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12424_call = mutated_mod.get_global_var('func_12424')
call_12425 = func_12424_call()
output = call_12425
func_12426 = relay.Function([], output)
mutated_mod['func_12426'] = func_12426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8503_call = mod.get_global_var('func_8503')
func_8505_call = mutated_mod.get_global_var('func_8505')
call_12429 = relay.TupleGetItem(func_8503_call(), 0)
call_12430 = relay.TupleGetItem(func_8505_call(), 0)
func_747_call = mod.get_global_var('func_747')
func_749_call = mutated_mod.get_global_var('func_749')
var_12432 = relay.var("var_12432", dtype = "float32", shape = (363, 1))#candidate|12432|(363, 1)|var|float32
call_12431 = relay.TupleGetItem(func_747_call(relay.reshape(var_12432.astype('float32'), [11, 11, 3])), 0)
call_12433 = relay.TupleGetItem(func_749_call(relay.reshape(var_12432.astype('float32'), [11, 11, 3])), 0)
func_11535_call = mod.get_global_var('func_11535')
func_11537_call = mutated_mod.get_global_var('func_11537')
call_12434 = relay.TupleGetItem(func_11535_call(), 0)
call_12435 = relay.TupleGetItem(func_11537_call(), 0)
var_12436 = relay.var("var_12436", dtype = "float32", shape = (11, 11, 3))#candidate|12436|(11, 11, 3)|var|float32
bop_12437 = relay.right_shift(call_12431.astype('uint64'), relay.reshape(var_12436.astype('uint64'), relay.shape_of(call_12431))) # shape=(11, 11, 3)
bop_12440 = relay.right_shift(call_12433.astype('uint64'), relay.reshape(var_12436.astype('uint64'), relay.shape_of(call_12433))) # shape=(11, 11, 3)
uop_12450 = relay.log2(bop_12437.astype('float64')) # shape=(11, 11, 3)
uop_12452 = relay.log2(bop_12440.astype('float64')) # shape=(11, 11, 3)
func_2128_call = mod.get_global_var('func_2128')
func_2134_call = mutated_mod.get_global_var('func_2134')
const_12459 = relay.const([-9,1,3,-6,-6,1,9,-3,-8,-4,-9,-3,6,-5,7,-1,-4,-6,4,-7,-10,-4,2,-2,6,-3,4,4,-1,-5,8,5,-6,-8,-4,3,-3,2,8,8,-9,9,-6,-5,3,-7,4,2,4,4,-6,1,4,7,-9,-6,-5,-4,-7,9,-9,-10,8,-4,-3,-8,5,-10,-3,1,-1,10,1,6,3,7,-2,4,2,-2,-8,5,10,-4,-2,4,-3,9,8,-3,3,-2,10,4,-6,6,7,-9,7,-9,-8,4,9,7,-1,8,-2,-10,8,2,-10,-8,-2,-3,10,-9,7,2,-7,3,9,3,-4,4,8,-6,6,7,-2,-6,4,-3,-9,7,3,-5,5,-6,2,1,-7,10,2,1,2,4,-1,9,1,-5,7,-1,-9,-1,8,-2,-10,10,4,6,7,3,7,9,7,-6,-3,9,3,-4,6,10,2,8,9,3,-3,5,6,2,7,2,-3,5,-2,1,-7,-4,10,7,7,7,-4,-2,8,8,9,9,-10,10,-3,2,3,-1,9,4,9,3,-6,6,8,1,-3,-9,-3,6,3,8,-3,9,-8,-5,-4,10,5,4,-9,1,5,4,-3,6,6,2,-2,1,-3,6,-7,7,-2,7,10,-5,10,-5,-10,8,6,5,-10,9], dtype = "uint8")#candidate|12459|(252,)|const|uint8
const_12460 = relay.const([4.505787,8.724648,5.396936,9.266084,5.191967,-7.147796,1.553509,-8.850834,-0.994451,7.587650,0.884792,8.085834,5.021904,2.083702,-0.786791,-9.414483,-9.605108,-6.467233,1.500813,7.732456,-5.147121,5.605218,0.728042,-5.754185,-4.476003,2.215148,-2.149226,-0.729050,7.033989,-6.016646,-2.273882,6.975149,-8.938250,6.204795,6.167047,-0.572195,-5.940116,7.566836,5.182713,6.104802,-5.630446,-4.152944,-0.129943,-3.334517,-5.602560,0.363154,-5.406037,-7.452178,-2.065546,-7.813722,-1.133751,-1.976249,-9.764476,1.599782,1.078963,-6.289440,4.206516,-7.155527,1.755424,8.970840,5.612411,6.011617,-3.788846,-6.841086,1.638175,-7.530562,-6.940941,-4.141113,3.960826,-7.407734,-9.795564,-9.549725,3.242971,1.086435,7.097370,6.404038,-6.087925,-6.727673,-4.798217,7.229885,8.118294,2.691536,-7.527825,4.837279,7.071448,-8.103751,-5.034111,-2.529651,8.567509,-7.898671,-9.356483,2.004467,-8.619079,2.682410,7.681505,-2.493509,9.002980,-4.388772,7.279743,2.575189,8.589139,3.784282,-3.989278,-0.174739,9.388402,-0.874588,-9.707909,-8.799048,-0.960261,0.993685,1.036587,-0.261532,5.418344,-7.691490,-6.532277,-0.317451,-0.436850,2.469081,2.165516,-8.623130,4.750598,-3.332555,5.161549,-7.135048,2.148598,9.058731,-4.863069,7.935559,-3.005792,-6.436122,2.047561,-1.720864,-9.325569,-2.898863,9.417698,4.986013,3.513187,-6.108930,-3.688306,-2.093639,-4.725847,-5.080557,-8.289707,0.005772,-6.201311,3.565657,-0.203584,7.099956,-1.278834,-3.847327,-0.224428,-7.583852,5.177701,-2.336636,2.484765,4.931175,-7.684861,-8.088560,1.573435,8.024065,-2.688384,5.940730,4.882715,3.018881,-6.371282,2.940403,7.884609,0.617207,0.009834,8.760395,-9.629782,-5.265516,-1.611808,0.666478,-3.992125,2.470269,-7.555374,9.633670,5.769213,8.700035,-1.888961,1.523835,-2.328066,5.501973,-8.905911,-6.123984,3.706822,-3.428203,-0.353229,-4.452413,-1.925043,9.265994,-2.322953,-0.146798,5.978853,-9.510502,1.418322,-7.692720,-8.441758,9.066109,-8.231610,0.476758,-6.876369,9.539503,-8.179710,-7.165098,-1.949947,6.458284,-6.139843,-2.644573,6.192872,-2.159241,-6.723011,-8.786420,-3.311377,-1.046847,4.697176,-1.780803,6.159700,-3.658282,9.342627,-4.958963,-3.427456,9.748879,-6.229416,7.930318,-7.156846,-7.505639,-9.426523,8.564477,-0.918644,9.022406,3.546315,3.127890,1.915290,-0.576779,-9.895516,-6.030673,-0.890310,-0.383789,-0.830751,-2.713464,6.489154,1.292889,0.198034,-2.825501,-7.451623,-8.947594,0.075019,-2.495767,9.275948,-3.041586,-3.358137,0.033202,-8.311365,7.242919,8.230801,4.540974,-5.167971,-9.921779,0.100500,6.727864,-3.187846,3.845640,3.178608,-9.394283,9.417096,9.765888,-9.379412,-8.554582,-8.997821,0.251573,-3.200975,-8.723483,8.651490,-1.808442,0.969076,1.656417,0.792642,9.141824,-8.693785,-7.125856,-8.387184,5.456237,-6.743426,3.835604,6.952922,-0.498961,5.266801,-7.758438,6.941901,8.146815,-6.983229,-6.857084,-6.507170,5.582244,3.253300,-4.345886,0.934255,-4.573036,7.731738,-7.763289,-0.943314,-9.013762,0.557182,7.189544,-1.584154,1.990862,5.902749,-9.850598,2.931984,-1.542166,2.362421,7.071378,5.749114,-5.376582,0.020421,0.372332,4.171286,-8.390337,6.554178,1.284147,-7.606243,-6.275979,-8.455302,3.977456,-7.634661,9.753734,-2.884561,-2.019414,-9.572893,0.628843,1.887479,-0.380163,-4.641035,8.182837,-3.578822,8.210762,7.888516,-6.439561,6.738126,-9.792714,8.663609,2.582454,-5.768046,9.872418,2.459246,-5.448844,-2.417541,9.056144,0.572733,-0.028438,-1.132560,4.469268,8.567179,5.109683,1.736307,4.762623,6.314691,7.547801,-2.158046,2.800959,2.626849,4.856635,-0.298435,-2.171632,7.967622,4.403131,4.432574,-2.182561,-4.505415,1.548767,2.522294,-7.333658,3.746040,-7.527062,5.047563,3.856028,7.235131,-4.517663,-2.867758,-0.550381,4.671882,1.058472,-6.124996,5.479558,7.955957,-8.408004,7.530652,-5.574814,-4.036072,0.034761,-4.524122,-8.254176,9.621008,1.405523,-9.037329,3.071286,7.988959,-8.644502,-8.511290,-4.934739,-7.913484,-5.765993,8.931198,-4.701504,7.750100,4.270525,3.486008,-1.132032,-6.018728,-8.392638,3.998797,-7.869218,-1.133018,-8.965186,1.205993,-0.632232,8.014259,3.469756,1.393766,9.851141,3.221123,-3.162034,-4.311983,9.643752,-3.877598,8.851255,-6.588833,-2.080353,-2.965010,6.154389,5.837962,0.653158,1.372138,-4.416085,5.542086,7.765699,-0.671378,6.205862,-6.290389,-6.092888,-2.184833,-3.383458,2.821418,3.202682,1.944182,9.940566], dtype = "float64")#candidate|12460|(448,)|const|float64
var_12461 = relay.var("var_12461", dtype = "int64", shape = (960,))#candidate|12461|(960,)|var|int64
call_12458 = relay.TupleGetItem(func_2128_call(relay.reshape(const_12459.astype('uint8'), [6, 7, 6]), relay.reshape(const_12459.astype('uint8'), [6, 7, 6]), relay.reshape(call_12434.astype('float32'), [36, 10]), relay.reshape(const_12460.astype('float64'), [4, 112]), relay.reshape(var_12461.astype('int64'), [960,]), ), 12)
call_12462 = relay.TupleGetItem(func_2134_call(relay.reshape(const_12459.astype('uint8'), [6, 7, 6]), relay.reshape(const_12459.astype('uint8'), [6, 7, 6]), relay.reshape(call_12434.astype('float32'), [36, 10]), relay.reshape(const_12460.astype('float64'), [4, 112]), relay.reshape(var_12461.astype('int64'), [960,]), ), 12)
bop_12468 = relay.logical_xor(call_12434.astype('int32'), var_12432.astype('int32')) # shape=(363, 360)
bop_12471 = relay.logical_xor(call_12435.astype('int32'), var_12432.astype('int32')) # shape=(363, 360)
uop_12475 = relay.atan(uop_12450.astype('float32')) # shape=(11, 11, 3)
uop_12477 = relay.atan(uop_12452.astype('float32')) # shape=(11, 11, 3)
bop_12509 = relay.power(uop_12475.astype('float64'), relay.reshape(uop_12450.astype('float64'), relay.shape_of(uop_12475))) # shape=(11, 11, 3)
bop_12512 = relay.power(uop_12477.astype('float64'), relay.reshape(uop_12452.astype('float64'), relay.shape_of(uop_12477))) # shape=(11, 11, 3)
output = relay.Tuple([call_12429,call_12458,const_12459,const_12460,var_12461,bop_12468,bop_12509,])
output2 = relay.Tuple([call_12430,call_12462,const_12459,const_12460,var_12461,bop_12471,bop_12512,])
func_12517 = relay.Function([var_12432,var_12436,var_12461,], output)
mod['func_12517'] = func_12517
mod = relay.transform.InferType()(mod)
mutated_mod['func_12517'] = func_12517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12517_call = mutated_mod.get_global_var('func_12517')
var_12519 = relay.var("var_12519", dtype = "float32", shape = (363, 1))#candidate|12519|(363, 1)|var|float32
var_12520 = relay.var("var_12520", dtype = "float32", shape = (11, 11, 3))#candidate|12520|(11, 11, 3)|var|float32
var_12521 = relay.var("var_12521", dtype = "int64", shape = (960,))#candidate|12521|(960,)|var|int64
call_12518 = func_12517_call(var_12519,var_12520,var_12521,)
output = call_12518
func_12522 = relay.Function([var_12519,var_12520,var_12521,], output)
mutated_mod['func_12522'] = func_12522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12532 = relay.var("var_12532", dtype = "float32", shape = (3, 3, 4))#candidate|12532|(3, 3, 4)|var|float32
var_12533 = relay.var("var_12533", dtype = "float32", shape = (3, 3, 4))#candidate|12533|(3, 3, 4)|var|float32
bop_12534 = relay.subtract(var_12532.astype('float32'), relay.reshape(var_12533.astype('float32'), relay.shape_of(var_12532))) # shape=(3, 3, 4)
output = relay.Tuple([bop_12534,])
output2 = relay.Tuple([bop_12534,])
func_12539 = relay.Function([var_12532,var_12533,], output)
mod['func_12539'] = func_12539
mod = relay.transform.InferType()(mod)
mutated_mod['func_12539'] = func_12539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12539_call = mutated_mod.get_global_var('func_12539')
var_12541 = relay.var("var_12541", dtype = "float32", shape = (3, 3, 4))#candidate|12541|(3, 3, 4)|var|float32
var_12542 = relay.var("var_12542", dtype = "float32", shape = (3, 3, 4))#candidate|12542|(3, 3, 4)|var|float32
call_12540 = func_12539_call(var_12541,var_12542,)
output = call_12540
func_12543 = relay.Function([var_12541,var_12542,], output)
mutated_mod['func_12543'] = func_12543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6077_call = mod.get_global_var('func_6077')
func_6079_call = mutated_mod.get_global_var('func_6079')
call_12604 = relay.TupleGetItem(func_6077_call(), 0)
call_12605 = relay.TupleGetItem(func_6079_call(), 0)
output = relay.Tuple([call_12604,])
output2 = relay.Tuple([call_12605,])
func_12608 = relay.Function([], output)
mod['func_12608'] = func_12608
mod = relay.transform.InferType()(mod)
output = func_12608()
func_12609 = relay.Function([], output)
mutated_mod['func_12609'] = func_12609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8384_call = mod.get_global_var('func_8384')
func_8385_call = mutated_mod.get_global_var('func_8385')
call_12657 = relay.TupleGetItem(func_8384_call(), 0)
call_12658 = relay.TupleGetItem(func_8385_call(), 0)
func_10384_call = mod.get_global_var('func_10384')
func_10385_call = mutated_mod.get_global_var('func_10385')
call_12664 = relay.TupleGetItem(func_10384_call(), 0)
call_12665 = relay.TupleGetItem(func_10385_call(), 0)
output = relay.Tuple([call_12657,call_12664,])
output2 = relay.Tuple([call_12658,call_12665,])
func_12670 = relay.Function([], output)
mod['func_12670'] = func_12670
mod = relay.transform.InferType()(mod)
mutated_mod['func_12670'] = func_12670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12670_call = mutated_mod.get_global_var('func_12670')
call_12671 = func_12670_call()
output = call_12671
func_12672 = relay.Function([], output)
mutated_mod['func_12672'] = func_12672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10128_call = mod.get_global_var('func_10128')
func_10129_call = mutated_mod.get_global_var('func_10129')
call_12695 = relay.TupleGetItem(func_10128_call(), 0)
call_12696 = relay.TupleGetItem(func_10129_call(), 0)
output = call_12695
output2 = call_12696
func_12701 = relay.Function([], output)
mod['func_12701'] = func_12701
mod = relay.transform.InferType()(mod)
mutated_mod['func_12701'] = func_12701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12701_call = mutated_mod.get_global_var('func_12701')
call_12702 = func_12701_call()
output = call_12702
func_12703 = relay.Function([], output)
mutated_mod['func_12703'] = func_12703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6307_call = mod.get_global_var('func_6307')
func_6309_call = mutated_mod.get_global_var('func_6309')
call_12707 = func_6307_call()
call_12708 = func_6307_call()
func_7532_call = mod.get_global_var('func_7532')
func_7534_call = mutated_mod.get_global_var('func_7534')
const_12712 = relay.const([3,-3,-1,10,-6,2,1,1,-6,9,1,-2,2,-4,-10,1,1,4,2,7,3,9,3,-7,-9,3,-6,-4,4,7,1,5,-1,-3,5,10,-1,9,8,-3,4,-4,-4,9,8,-9,-3,10,-5,6,5,7,4,2,-4,7,-2,8,-1,3,4,-10,-8,10,3,3,-3,-4,8,7,2,2,8,1,9,-1,-5,10,9,-9,10,-10,4,-8,-1,-6,10,10,-8,-7,4,9,-9,5,3,-10,-5,3,-8,2,7,-4,-6,5,5,10,-2,-9,10,-8,-7,5,3,-1,-9,10,-1,-5,1,8,3,-5,8,5,9,10,-6,-8,-1,9,10,-7,8,-7,-3,-4,6,1,-3,-10,4,8,5,10,-3,-9,2,5,8,-8,-10,7,-2,-7,-9,-9,9,2,3,3,2,-10,-7,-4,-10,8,-5,-3,-5,1,-1,4,8,-7,9,7,-9,-6,4,1,-2,-2,-4,-1,-9,-1,-3,-2,3,1,7,-7,-7,-3,5,-2,5,-4,-3,9,9,4,-7,4,6,-5,-5,1,5,2,-10,-5,-10,-5,5,-7,-4,-8,-9,-2,-10,-10,-7,-9,-7,-2,-7,3,7,-2,-3,-7,-2,-1,-9,-6,10,-8,-6,-1,9,-1,2,4,5,-2,-9,-9,-5,-1,-3,-5,-2,-2,-9,-3,-8,-5,-10,2,8,-6,-4,-5,-5,-3,-3,1,-1,-8,-10,1,7,10,6,5,-5,-9,7,-8,-2,9,1,-5,-5,-5,3,-4,-9,-2,-8,8,-9,4,3,-6,-3,10,-7,8,-7,-10,6,-3,-10,-9,3,4,4,-7,10,-2,2,-8,-7,2,7,6,-6,8,5,4,7,-9,-6,8,4,8,3,3,-2,6,7,-3,-1,8,-10,-2,-2,8,9,-3,-7,9,7,-10,8,-10,-7,7,4,2,8,3,-6,8,-8,-10,-2,-6,10,-9,1,-3,-2,4,6,2,-1,5,-5,-5,-4,9,-2,8,-1,2,6,-10,-8,6,2,7,10,-1,5,-7,8,8,1,6,2,-3,5,-9,-8,6,-1,-3,7,8,-9,2,3,9,-5,-5,3,5,9,-9,-9,9,10,-2,6,-8,5,4,1,1,8,-4,1,-9,5,1,4,3,2,10,5,4,-9,9,2,7,5,-1,1,9,9,-10,-10,7,-8,3,-3,5,-7,-4,-6,9,2,-8,-1,9,-8,2,-1,3,4,-5,3,10,6,-9,5,-4,9,8,-2,9,-5,10,-10,7,7,10,4,9,4,-4,9,3,-1,-9,9,3,-9,-4,-5,2,3,-3,-1,-10,-2,3,-4,9,-9,-10,-6,-6,7,-5,-1,4,6,2,2,2,6,-5,-2,-8,3,-3,3,6,-9,2,-8,3,-6,3,7,-1,-3,-5,-1,7,-3,4,10,-7,3,-9,8,6,9,1,5,10,8,-4,-2,-4,-3,-2,2,-4,-7,-7,6,-8,-3,2,-10,-7,-10,7,1,-7,-4,7,-6,-1,5,9,-1,8,-5,3,5,-4,-8,6,-6,6,-2,6,-6,-5,6,4,-3,3,-5,5,-4,-6,4,6,7,-10,4,8,-4,1,-9,9,-9,1,-7,-5,-7,-7,-3,1,-2,-8,8,4,-1,1,-2,-3,3,5,10,2,3,8,-10,-7,-9,-9,-2,-8,10,4,-2,-10,-1,-4,9,8,-5,9,5,-8,-2,3,9,-9,-3,-8,-2,-7,-7,5,6,7,10,-7,-1,-1,-1,7,8,-9,-2,5,7,-8,4,10,7,-3,3,-3,-6,-7,3,-7,1,1,4,7,7,-8,9,2,7,-4,-7,5,3,8,-10,-6,-4,-4,10,-4,9,9,1,-3,-7,9,3,-7,9,-2,-4,-10,3,7,-7,2,2,-3,3,3,2,3,-7,-2,8,3,-2,8,-7,3,-7,-2,-4,-4,-1,-6,1,8,2,4,4,1,10,-5,8,5,-3,-6,9,6,9,3,-3,-9,1,-6,1,-4,1,-2,-7,4,-1,9,-2,-2,-6,10,7,4,-3,2,-10,-6,8,-1,4,-5,6,9,-8,9,-7,1,10,-2,10,6,-2,2,-2,-5,8,5,5,-4,-6,-6,3,9,-5,-8,-4,-4,9,-8,-8,-1,-4,-2,2,-3,10,3,7,9,-10,-6,3,5,-7,-7,6,3,6,-9,3,9,1,7,4,1,-4,2,-8,-9,8,2,-6,3,2,2,-6,-9,3,-5,3,-2,-3,-4,1,-10,3,-2,8,-1,-9,-8,-4,-2,-4,-5,-2,-3,1,-10,5,1,3,-5,1,3,-8,3,-9,-8,-3,-7,-10,-2,2,-5,-3,4,-10,-6,6,-10,-2,6,-9,2,9,-7,-4,2,-4,-4,1,-2,9,-3,9,1,6,3,-6,-7,8,2,6,9,-8,4,3,4,4,-10,9,-6,-1,-2,6,9,-5,10,-6,-9,4,-8,9,-10,7,8,1,3,-3,-10,4,6,2,-1,5,-5,-3,-7,-4,7,-4,9,7,9,9,-10,9,-2,-2,-1,3,5,10,-10,8,6,-2,-9,-9,10,10,-10,-6,1,-7,4,-10,-8,2,5,-7,1,-7,8,-1,-3,8,9,6,-1,-2,-5,-3,-3,2,2,10,-9,-6,-3,5,7,7,-7,-5,10,-3,-2,-9,-1,4,2,-9,-2,-8,-1,9,6,5,3,-4,-9,-7,1,-5,-10,-6,-4,-3,-9,9,4,1,8,-5,-5,-1,6,-5,-7,-9,-1,9,-1,2,-5,-1,3,-1,7,-9,7,-9,9,9,-4,4,5,-3,-10,-6,7,6,-1,-8,-4,-3,6,-5,-7,4,-3,9,4,6,-6,-8,2,-1,-10,-3,6,9,-1,-1,-7,10,-5,-1,10,2,-2,8,-6,-8,10,3,9,-1,4,-9,-9,4,9,-3,-3,-6,7,8,5,-10,-7,-2,-4,-9,5,3,8,-7,3,7,-7,2,8,-7,-5,-9,-1,3,4,-8,-9,-4,-8,-3,3,10,2,5,-9,-3,9,-9,3,-6,3,7,-4,-10,-5,5,2,9,-7,-3,7,3,6,-6,5,5,5,1,-6,-4,-5,-1,4,2,-4,-8,-9,-9,-4,-5,7,8,-5,-3,-1,1,6,4,2,3,-8,-1,3,-5,2,-5,-1,3,1,6,5,-9,-9,-2,8,-1,8,5,-9], dtype = "int8")#candidate|12712|(1200,)|const|int8
call_12711 = relay.TupleGetItem(func_7532_call(relay.reshape(const_12712.astype('int8'), [1200,])), 1)
call_12713 = relay.TupleGetItem(func_7534_call(relay.reshape(const_12712.astype('int8'), [1200,])), 1)
func_8810_call = mod.get_global_var('func_8810')
func_8811_call = mutated_mod.get_global_var('func_8811')
call_12728 = func_8810_call()
call_12729 = func_8810_call()
output = relay.Tuple([call_12707,call_12711,const_12712,call_12728,])
output2 = relay.Tuple([call_12708,call_12713,const_12712,call_12729,])
func_12733 = relay.Function([], output)
mod['func_12733'] = func_12733
mod = relay.transform.InferType()(mod)
output = func_12733()
func_12734 = relay.Function([], output)
mutated_mod['func_12734'] = func_12734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8939_call = mod.get_global_var('func_8939')
func_8941_call = mutated_mod.get_global_var('func_8941')
call_12847 = relay.TupleGetItem(func_8939_call(), 0)
call_12848 = relay.TupleGetItem(func_8941_call(), 0)
func_12517_call = mod.get_global_var('func_12517')
func_12522_call = mutated_mod.get_global_var('func_12522')
const_12867 = relay.const([-4.246512,4.151590,7.542089,7.050183,4.733945,-5.368299,-5.074184,-9.277482,8.205001,6.923301,-1.745446,8.225343,4.314090,4.596066,-9.598010,6.874651,-7.526029,7.740545,-6.184067,-0.191927,-6.178809,5.020880,-5.694644,1.773438,-9.834429,-4.122953,2.628303,-4.705797,-7.492622,3.496523,7.546846,7.659027,8.451188,2.366722,-7.120923,-0.812716,-9.505908,7.248701,1.583127,4.935427,-4.339527,-0.197023,7.604443,-1.277658,9.394491,-6.002566,-4.293842,-0.763400,-1.392824,2.921399,6.145619,-6.804215,-5.963671,-3.013833,-3.422415,3.084862,0.486778,-5.312102,4.297098,8.713677,9.705996,6.224291,0.899377,6.657784,5.125072,-7.127093,-8.888395,-2.599490,1.590718,-2.895001,-5.110971,-1.029719,-8.897773,8.900675,4.138670,-3.597439,-7.702022,-2.088508,1.944690,-1.402393,-3.976795,9.617633,9.927789,8.889910,6.271785,-8.129351,-3.996554,1.665468,-3.790462,-5.494234,8.918506,-1.471482,-3.685132,-7.902122,-5.903913,-2.837343,4.025930,-8.063578,2.834095,8.740822,6.070684,6.965227,-0.648640,-7.806312,2.601727,-7.876852,9.753889,-8.119338,7.773364,1.589530,0.470156,7.235840,-9.611593,2.157200,5.556317,-2.612337,8.021584,-5.801354,-5.097940,-7.080194,8.450411,6.996776,4.424180,-9.782057,-3.925397,-4.661254,8.239252,-0.498265,7.093826,-5.464321,1.257822,-2.443383,-7.304352,-2.743170,2.597967,-2.390016,-2.294240,-7.143678,8.230451,-9.284714,-9.284777,-0.042791,-8.931660,1.123128,-2.116662,8.678291,-0.787220,-5.151525,-3.109142,-1.163804,7.369487,4.475867,-8.690642,4.800218,-5.022957,3.235609,7.641093,4.654380,-0.418692,2.709358,-5.570410,-7.966036,-4.184104,0.351158,-1.788752,5.155447,-0.083980,0.677047,-8.922202,-7.176335,-2.624379,4.027656,4.290803,-5.986925,-6.613684,3.447274,-3.200549,9.296421,-8.927197,5.519571,-1.728112,2.169127,6.147936,7.767859,3.679040,9.146213,1.898683,8.919130,5.646260,6.913534,-6.264777,-4.007307,-0.990586,0.040583,-4.324291,7.739502,9.981504,6.742207,0.136789,-3.700428,-7.270307,7.703974,3.315562,5.363111,-4.369059,-8.198163,5.781753,2.701901,-3.837927,-8.970674,7.816509,-6.176790,-5.431905,-6.870826,-3.378716,4.036055,-5.133632,5.668287,8.409968,-7.150894,5.767362,-5.172134,5.674937,-3.657689,7.854405,-9.243550,3.017936,7.358357,-3.760345,4.723021,0.143189,8.974307,3.538331,5.532464,1.286574,-9.744600,-2.953852,7.250234,-5.801890,5.183722,7.195861,9.617578,-9.617247,-3.929654,-9.826782,-0.481463,-6.310607,6.678245,-3.751002,9.104132,-6.905087,-9.826303,-8.317254,-2.466436,7.331737,-7.230155,5.779868,1.142541,2.706747,-2.246625,-8.814740,3.986304,-7.827230,-5.159998,1.358885,0.986409,-0.398186,-8.674897,0.649946,7.226840,-0.996969,6.436204,6.892117,-3.777243,6.730584,-6.216477,0.314281,-6.270448,-8.401283,-8.186338,-9.103078,9.237656,5.303513,-8.810831,-6.617369,1.375274,7.948082,-8.887581,-2.856299,5.130182,6.486293,2.166345,0.566307,2.346878,-4.438164,5.711324,1.661926,9.326162,-8.512323,1.284932,-2.044857,-3.842410,-9.765725,-7.567728,8.166910,-4.345269,-3.621134,0.735380,6.480014,4.023704,-9.278470,7.596914,-2.165482,-9.775545,-1.529571,5.141335,-8.724351,-9.798266,8.460774,2.369015,9.098365,3.817794,5.752790,7.306630,1.548513,0.584718,-2.871367,8.730965,2.517710,8.584222,-5.787679,-8.575300,-8.506335,4.655471,-1.601457,-2.382591,-4.802435,8.928262,-9.507120,-3.783505,5.903681,5.636394,-1.734252,-5.189894,-7.630017,5.749364,5.233721,-3.275280,2.907578,5.444901,-0.195432,0.274931,7.263822,6.210405,7.452563,-7.700691,2.679266,-6.486469,-0.053442,6.746931,3.404042,7.660415,5.365631], dtype = "float32")#candidate|12867|(363,)|const|float32
const_12868 = relay.const([[-2,-9,-6,-7,-1,-10,-6,-6],[-8,10,-8,-9,8,10,10,4],[6,-8,10,-9,-2,6,1,-2],[10,9,8,8,-9,-10,6,-1],[-7,-7,4,8,4,-3,-7,-3],[9,-4,1,-3,-10,-9,8,9],[9,-2,3,-1,5,3,1,8],[8,-6,-4,7,-5,2,-8,-9],[-8,-2,-1,9,8,-8,6,8],[-6,10,5,-7,6,4,-10,-1],[-3,9,-7,-10,10,4,3,-9],[8,10,9,-6,7,-8,-4,-5],[-3,1,-5,-5,-10,-1,2,-4],[9,4,1,2,-9,-5,1,-9],[8,-6,-2,10,-1,7,-10,2],[4,9,5,5,2,-6,-2,7],[5,-3,-4,1,3,-9,-8,4],[8,-7,-5,-4,4,3,-4,-6],[-4,6,-3,5,2,10,-6,1],[-10,-6,3,-5,1,3,-8,2],[1,2,-2,9,-5,-5,-5,-7],[-7,1,3,8,-4,9,1,4],[9,5,6,-7,-5,6,-1,9],[5,9,-6,2,-10,-1,-2,3],[4,-3,4,-5,-4,-2,-1,-2],[-9,-4,10,6,-7,-10,-4,8],[-3,-10,1,-7,-6,2,10,-2],[7,-5,-2,-6,9,-7,1,3],[-6,-2,-10,-4,9,-2,9,7],[1,-4,2,3,-8,-6,-6,4],[4,1,-6,-10,10,-2,-9,-7],[-3,-5,-1,-8,-9,-7,-3,-6],[-8,1,-1,-8,5,2,-1,4],[7,8,-10,-6,-1,3,-3,-3],[8,-4,-6,-10,4,-7,-10,-10],[-2,7,-5,10,-6,-3,6,2],[1,10,10,-2,-3,-1,10,10],[-10,-2,9,-4,-9,-4,3,6],[3,5,8,-10,-4,4,4,6],[2,-10,1,4,1,2,5,1],[-6,1,-4,6,2,2,7,-10],[7,10,6,-8,3,4,-10,5],[-1,-3,-7,-3,-3,7,-6,-9],[-8,10,4,-10,10,6,-9,7],[9,-5,10,-7,6,3,10,-2],[2,2,-10,4,6,-1,2,7],[7,-8,-1,-10,-7,-8,4,7],[3,-1,-4,2,-4,7,10,-7],[-5,6,8,-2,8,3,-1,9],[2,7,-4,5,2,3,-5,1],[-5,-7,-4,1,-8,-5,7,-3],[3,-4,-8,4,-3,4,-9,-2],[-1,-1,-8,8,-7,5,8,-2],[7,-7,-6,-5,-1,-9,-1,7],[7,-8,8,-1,10,8,5,8],[-7,6,-7,2,-7,8,-9,-1],[-3,-3,8,6,1,5,-6,-7],[7,6,-4,4,7,-9,-7,5],[1,10,2,-7,-2,9,5,-2],[-1,8,5,7,4,-10,-6,8],[1,-7,6,5,6,7,-4,-6],[7,10,-6,4,3,-10,9,6],[-7,-4,-9,-2,-5,-8,8,-3],[10,9,-2,-5,-8,-2,4,-6],[3,4,9,10,-5,-2,-4,9],[10,-9,10,-5,-10,3,7,5],[-1,5,-4,-5,-5,1,-4,5],[-6,-6,10,-3,10,-6,-9,-8],[-9,10,8,-10,2,2,10,10],[4,2,-7,6,-3,6,-1,-2],[-7,-4,8,8,5,-6,9,-3],[-1,-7,-2,-10,5,-8,-10,9],[-3,-10,6,2,8,-8,-3,-10],[-8,7,-9,-6,2,-3,6,-8],[4,1,8,3,9,-4,2,1],[10,9,-4,4,-1,-6,10,6],[-6,5,-8,9,-2,4,-7,-4],[-2,8,2,-1,10,7,-5,-5],[-10,2,-1,-7,-6,-6,5,-1],[5,-4,1,9,5,1,-1,-9],[-7,10,4,8,10,2,-6,-2],[-10,7,2,-3,3,6,-2,-6],[-6,8,4,7,-2,9,1,8],[-10,7,2,-10,5,1,-9,-8],[-1,-4,-4,1,1,3,-3,-7],[5,-4,3,-4,-10,-8,9,-5],[-4,-7,9,4,8,-5,-6,4],[6,10,4,8,8,2,-3,8],[-5,6,3,-5,9,1,-2,-9],[-3,-8,5,-8,5,8,6,-7],[-3,6,-5,6,-10,-9,10,-3],[-9,9,-10,-4,-8,2,10,-6],[2,-10,2,1,3,-8,-10,-7],[3,-10,4,7,8,-9,-9,-3],[6,10,-9,3,2,6,-2,8],[10,8,6,7,7,4,10,10],[3,5,-10,-8,10,4,-9,-9],[2,3,5,2,4,9,-5,2],[-1,-2,7,-5,3,1,2,1],[7,2,3,-3,1,-3,-5,6],[1,-6,9,-7,1,-4,-8,-8],[8,7,5,-8,-6,-7,-5,-6],[3,7,3,4,-4,8,-3,6],[-6,5,-5,-2,-4,-1,-3,7],[8,10,8,7,2,3,-2,1],[4,-3,-8,1,5,-1,10,4],[2,1,-8,1,6,9,4,7],[-3,8,-5,-3,4,9,-4,4],[-9,-5,7,-8,1,-10,7,-3],[-6,-2,-10,3,9,-8,5,8],[-8,2,10,-8,-7,-5,6,5],[-9,-4,1,2,9,2,3,9],[-4,9,-9,6,5,-2,-1,2],[-3,-8,-6,-4,-4,9,8,-1],[7,8,-8,5,8,-6,-4,9],[-7,-2,1,7,4,-3,2,-5],[-7,-6,-9,-10,-6,-8,-9,10],[5,-8,-7,10,-1,-4,-8,-1],[-1,-9,7,9,-10,-6,5,-4],[7,7,-6,-5,-1,-9,7,-3]], dtype = "int64")#candidate|12868|(120, 8)|const|int64
call_12866 = relay.TupleGetItem(func_12517_call(relay.reshape(const_12867.astype('float32'), [363, 1]), relay.reshape(const_12867.astype('float32'), [11, 11, 3]), relay.reshape(const_12868.astype('int64'), [960,]), ), 5)
call_12869 = relay.TupleGetItem(func_12522_call(relay.reshape(const_12867.astype('float32'), [363, 1]), relay.reshape(const_12867.astype('float32'), [11, 11, 3]), relay.reshape(const_12868.astype('int64'), [960,]), ), 5)
uop_12875 = relay.acosh(const_12868.astype('float32')) # shape=(120, 8)
output = relay.Tuple([call_12847,call_12866,const_12867,uop_12875,])
output2 = relay.Tuple([call_12848,call_12869,const_12867,uop_12875,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

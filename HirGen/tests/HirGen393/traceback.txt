==========mod==========
#[version = "0.0.5"]
def @func_12314() -> (Tensor[(11, 9, 8), float64],) {
  %0 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
  (%0,)
}

def @func_11820() -> Tensor[(360), float32] {
  @func_9970() /* ty=Tensor[(360), float32] */
}

def @func_10614(%var_10570: Tensor[(375), float32], %var_10581: Tensor[(288), uint16], %var_10582: Tensor[(70), int8]) -> (Tensor[(360), float32], Tensor[(375), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(5, 15, 5), uint16]) {
  %1 = cast(%var_10581, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %2 = cast(%var_10582, dtype="int8") /* ty=Tensor[(70), int8] */;
  %3 = reshape(%1, newshape=[288]) /* ty=Tensor[(288), uint16] */;
  %4 = reshape(%2, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %5 = @func_6542(%3, %4) /* ty=(Tensor[(360), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %6 = cast(%var_10570, dtype="float32") /* ty=Tensor[(375), float32] */;
  %7 = reshape(%6, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), float32] */;
  %8 = @func_1981(%7) /* ty=Tensor[(5, 15, 5), float32] */;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(5, 15, 5), float32] */;
  %10 = sin(%9) /* ty=Tensor[(5, 15, 5), float32] */;
  %11 = cast(%8, dtype="uint16") /* ty=Tensor[(5, 15, 5), uint16] */;
  %12 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %13 = cast(%10, dtype="uint16") /* ty=Tensor[(5, 15, 5), uint16] */;
  %14 = dyn.reshape(%11, %12, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %15 = @func_6092() /* ty=Tensor[(360), float32] */;
  %16 = %5.3;
  %17 = subtract(%13, %14) /* ty=Tensor[(5, 15, 5), uint16] */;
  (%15, %var_10570, %16, %var_10581, %var_10582, %17)
}

def @func_7465(%var_7331: Tensor[(1, 325), float32], %var_7332: Tensor[(1440), float64], %var_7333: Tensor[(360), float32], %var_7335: Tensor[(70), int8], %var_7348: Tensor[(260), float32]) -> (Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) {
  %18 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %19 = cast(%var_7331, dtype="float32") /* ty=Tensor[(1, 325), float32] */;
  %20 = cast(%var_7332, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %21 = cast(%var_7333, dtype="float32") /* ty=Tensor[(360), float32] */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %23 = cast(%var_7335, dtype="int8") /* ty=Tensor[(70), int8] */;
  %24 = reshape(%19, newshape=[13, 5, 5]) /* ty=Tensor[(13, 5, 5), float32] */;
  %25 = reshape(%20, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %26 = reshape(%21, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %27 = reshape(%22, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %28 = reshape(%23, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %29 = @func_5158(%24, %25, %26, %27, %28) /* ty=(Tensor[(13, 5, 5), float32], Tensor[(4, 5, 13), bool], Tensor[(20), uint32], Tensor[(260), uint32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(4, 9, 10), float64], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64], Tensor[(10, 7, 12), int16], Tensor[(70), int8], Tensor[(840), int8]) */;
  %30 = cast(%var_7348, dtype="float32") /* ty=Tensor[(260), float32] */;
  %31 = cast(%var_7335, dtype="int8") /* ty=Tensor[(70), int8] */;
  %32 = %29.11;
  %33 = cast(%32, dtype="int8") /* ty=Tensor[(10, 7, 12), int8] */;
  %34 = reshape(%30, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
  %35 = reshape(%31, newshape=[70, 1]) /* ty=Tensor[(70, 1), int8] */;
  %36 = reshape(%33, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %37 = @func_2532(%34, %35, %36) /* ty=(Tensor[(5, 4, 13), int32], Tensor[(960), int64], Tensor[(70, 1), int8], Tensor[(840), int8], Tensor[(960), int64]) */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %39 = reshape(%38, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %40 = @func_2172(%39) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %41 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %42 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %43 = %18.1;
  %44 = @func_6317() /* ty=Tensor[(360), float32] */;
  %45 = %37.0;
  %46 = @func_6092() /* ty=Tensor[(360), float32] */;
  %47 = %40.0;
  %48 = %41.1;
  %49 = %42.1;
  (%43, %32, %var_7331, %var_7332, %var_7333, meta[relay.Constant][0] /* ty=Tensor[(448), float64] */, %var_7335, %44, %45, %var_7348, %46, %47, meta[relay.Constant][1] /* ty=Tensor[(792), float64] */, %48, %49)
}

def @func_12381() -> (Tensor[(11, 9, 8), float64], Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(11, 9, 8), float64]) {
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %51 = reshape(%50, newshape=[14, 11, 5]) /* ty=Tensor[(14, 11, 5), float32] */;
  %52 = @func_8302(%51) /* ty=(Tensor[(14, 11, 5), float32],) */;
  %53 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %54 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
  %55 = %52.0;
  %56 = %53.0;
  (%54, %55, meta[relay.Constant][2] /* ty=Tensor[(770), float32] */, %56)
}

def @func_9647() -> (Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) {
  %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %58 = reshape(%57, newshape=[11, 1, 16]) /* ty=Tensor[(11, 1, 16), float32] */;
  %59 = @func_4343(%58) /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(16, 15, 4), int64], Tensor[(84), int16], Tensor[(60, 14), int8], Tensor[(960), int64]) */;
  %60 = @func_8749() /* ty=Tensor[(360), float32] */;
  %61 = %59.5;
  (%60, %61, meta[relay.Constant][3] /* ty=Tensor[(176), float32] */)
}

def @func_7919() -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64]) {
  %62 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %63 = @func_6307() /* ty=Tensor[(360), float32] */;
  %64 = %62.1;
  (%63, %64)
}

def @func_2480(%var_2454: Tensor[(5, 2, 1), float64]) -> (Tensor[(5, 2, ?), uint64], Tensor[(360), float32], Tensor[(4, 9, 10), float32]) {
  %65 = cast(%var_2454, dtype="float64") /* ty=Tensor[(5, 2, 1), float64] */;
  %66 = sigmoid(%65) /* ty=Tensor[(5, 2, 1), float64] */;
  %67 = cast(%66, dtype="uint64") /* ty=Tensor[(5, 2, 1), uint64] */;
  %68 = shape_of(%var_2454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%var_2454, dtype="uint64") /* ty=Tensor[(5, 2, 1), uint64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %73 = reshape(%71, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %74 = reshape(%72, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %75 = @func_390(%73, %74) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %76 = %75.0;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %78 = add(%69, %70) /* ty=Tensor[(5, 2, ?), uint64] */;
  %79 = rsqrt(%77) /* ty=Tensor[(4, 9, 10), float32] */;
  (%78, meta[relay.Constant][4] /* ty=Tensor[(360), float32] */, %79)
}

def @func_747(%var_736: Tensor[(11, 11, 3), float32]) -> (Tensor[(11, 11, 3), float32],) {
  %80 = cast(%var_736, dtype="float32") /* ty=Tensor[(11, 11, 3), float32] */;
  %81 = log10(%80) /* ty=Tensor[(11, 11, 3), float32] */;
  (%81,)
}

def @func_12539(%var_12532: Tensor[(3, 3, 4), float32], %var_12533: Tensor[(3, 3, 4), float32]) -> (Tensor[(3, 3, 4), float32],) {
  %82 = cast(%var_12533, dtype="float32") /* ty=Tensor[(3, 3, 4), float32] */;
  %83 = shape_of(%var_12532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%var_12532, dtype="float32") /* ty=Tensor[(3, 3, 4), float32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %86 = subtract(%84, %85) /* ty=Tensor[(3, 3, 4), float32] */;
  (%86,)
}

def @func_10384() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %87 = @func_9647() /* ty=(Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) */;
  %88 = @func_6960() /* ty=Tensor[(360), float32] */;
  %89 = %87.0;
  (%88, %89)
}

def @func_6542(%var_6519: Tensor[(288), uint16], %var_6520: Tensor[(70), int8]) -> (Tensor[(360), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64], Tensor[(360), float32], Tensor[(10), float64]) {
  %90 = cast(%var_6519, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %91 = cast(%var_6520, dtype="int8") /* ty=Tensor[(70), int8] */;
  %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %93 = reshape(%90, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint16] */;
  %94 = reshape(%91, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %95 = reshape(%92, newshape=[1, 105]) /* ty=Tensor[(1, 105), float64] */;
  %96 = @func_2240(%93, %94, %95) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */;
  %97 = @func_6077() /* ty=(Tensor[(10), float64],) */;
  %98 = @func_6009() /* ty=Tensor[(360), float32] */;
  %99 = %96.2;
  %100 = @func_6307() /* ty=Tensor[(360), float32] */;
  %101 = %97.0;
  (%98, %99, %var_6519, %var_6520, meta[relay.Constant][5] /* ty=Tensor[(105), float64] */, %100, %101)
}

def @func_10434(%var_10422: Tensor[(11, 11, 3), float32]) -> (Tensor[(10), float64], Tensor[(11, 11, 3), int16]) {
  %102 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %103 = @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */;
  %104 = %103.1;
  %105 = cast(%var_10422, dtype="int16") /* ty=Tensor[(11, 11, 3), int16] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int16") /* ty=Tensor[(11, 11, 3), int16] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %109 = %102.2;
  %110 = maximum(%107, %108) /* ty=Tensor[(11, 11, 3), int16] */;
  (%109, %110)
}

def @func_6888(%var_6872: Tensor[(5, 10, 1), uint64], %var_6883: Tensor[(24), int32], %var_6884: Tensor[(384), int32]) -> (Tensor[(5, 10, 8), bool], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(360), float32]) {
  %111 = cast(%var_6872, dtype="bool") /* ty=Tensor[(5, 10, 1), bool] */;
  %112 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 10, 8), uint64] */, dtype="bool") /* ty=Tensor[(5, 10, 8), bool] */;
  %113 = cast(%var_6883, dtype="int32") /* ty=Tensor[(24), int32] */;
  %114 = cast(%var_6884, dtype="int32") /* ty=Tensor[(384), int32] */;
  %115 = reshape(%113, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), int32] */;
  %116 = reshape(%114, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), int32] */;
  %117 = not_equal(%111, %112) /* ty=Tensor[(5, 10, 8), bool] */;
  %118 = @func_1926(%115, %116) /* ty=Tensor[(4, 6, 16), int32] */;
  %119 = @func_6573() /* ty=Tensor[(360), float32] */;
  (%117, %118, %var_6883, %var_6884, %119)
}

def @func_6077() -> (Tensor[(10), float64],) {
  %120 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %121 = %120.2;
  (%121,)
}

def @func_11187(%var_11154: Tensor[(325), float32], %var_11158: Tensor[(112, 4), float64], %var_11159: Tensor[(105), float64], %var_11165: Tensor[(128), int64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(448), float64], Tensor[(720), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(260), float32], Tensor[(252), uint8], Tensor[(112, 4), float64], Tensor[(105), float64], Tensor[(6, 7, 6), bool], Tensor[(128), int64], Tensor[(960), int64], Tensor[(840), int8]) {
  %122 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
  %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %124 = cast(meta[relay.Constant][7] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %125 = cast(%var_11154, dtype="float32") /* ty=Tensor[(325), float32] */;
  %126 = cast(meta[relay.Constant][8] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %127 = %122.1;
  %128 = cast(%127, dtype="float32") /* ty=Tensor[(360), float32] */;
  %129 = cast(meta[relay.Constant][9] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %131 = cast(%var_11158, dtype="float64") /* ty=Tensor[(112, 4), float64] */;
  %132 = cast(%var_11159, dtype="float64") /* ty=Tensor[(105), float64] */;
  %133 = reshape(%123, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %134 = reshape(%124, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
  %135 = reshape(%125, newshape=[65, 5]) /* ty=Tensor[(65, 5), float32] */;
  %136 = reshape(%126, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %137 = reshape(%128, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %138 = reshape(%129, newshape=[1, 260]) /* ty=Tensor[(1, 260), float32] */;
  %139 = reshape(%130, newshape=[252]) /* ty=Tensor[(252), uint8] */;
  %140 = reshape(%131, newshape=[448]) /* ty=Tensor[(448), float64] */;
  %141 = reshape(%132, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %142 = @func_7675(%133, %134, %135, %136, %137, %138, %139, %140, %141) /* ty=(Tensor[(9, 10, 8), float64], Tensor[(70), int8], Tensor[(65, 5), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(7, 10), int8], Tensor[(1, 260), float32], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(1, 960), int64], Tensor[(9, 10, 8), int8], Tensor[(9, 10, 8), uint8], Tensor[(360), float32], Tensor[(21, 5), float64]) */;
  %143 = cast(%var_11165, dtype="int64") /* ty=Tensor[(128), int64] */;
  %144 = cast(%var_11165, dtype="int64") /* ty=Tensor[(128), int64] */;
  %145 = cast(meta[relay.Constant][11] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %146 = cast(meta[relay.Constant][12] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %147 = @func_8571() /* ty=Tensor[(360), float32] */;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(360), float32] */;
  %149 = reshape(%143, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), int64] */;
  %150 = reshape(%144, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), int64] */;
  %151 = reshape(%145, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %152 = reshape(%146, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %153 = reshape(%148, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %154 = @func_5475(%149, %150, %151, %152, %153) /* ty=(Tensor[(2, 8, 8), float32], Tensor[(960), int64], Tensor[(448), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(2, 8, 8), float64], Tensor[(840), int8], Tensor[(1, 84), int16], Tensor[(840), int8], Tensor[(6, 7, 6), bool], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(960), int64]) */;
  %155 = %142.9;
  %156 = %154.9;
  (%127, %147, %155, meta[relay.Constant][7] /* ty=Tensor[(720), float64] */, %var_11154, meta[relay.Constant][8] /* ty=Tensor[(1440), float64] */, meta[relay.Constant][9] /* ty=Tensor[(260), float32] */, meta[relay.Constant][10] /* ty=Tensor[(252), uint8] */, %var_11158, %var_11159, %156, %var_11165, meta[relay.Constant][11] /* ty=Tensor[(960), int64] */, meta[relay.Constant][12] /* ty=Tensor[(840), int8] */)
}

def @func_6335() -> (Tensor[(16, 16, 14), float64],) {
  %157 = @func_6133() /* ty=Tensor[(16, 16, 14), float64] */;
  (%157,)
}

def @func_390(%var_350: Tensor[(4, 9, 10), float32], %var_355: Tensor[(4, 9, 10), float32]) -> (Tensor[(4, 9, 10), float64],) {
  %158 = cast(%var_350, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %159 = sin(%158) /* ty=Tensor[(4, 9, 10), float32] */;
  %160 = cast(%var_355, dtype="float64") /* ty=Tensor[(4, 9, 10), float64] */;
  %161 = shape_of(%159, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%159, dtype="float64") /* ty=Tensor[(4, 9, 10), float64] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %164 = floor_divide(%162, %163) /* ty=Tensor[(4, 9, 10), float64] */;
  (%164,)
}

def @func_10918(%var_10886: Tensor[(5, 2, 7), float64]) -> (Tensor[(5, 2, 7), int32], Tensor[(360), float32]) {
  %165 = cast(%var_10886, dtype="float64") /* ty=Tensor[(5, 2, 7), float64] */;
  %166 = cosh(%165) /* ty=Tensor[(5, 2, 7), float64] */;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(5, 2, 7), float64] */;
  %168 = asin(%167) /* ty=Tensor[(5, 2, 7), float64] */;
  %169 = cast(%166, dtype="int32") /* ty=Tensor[(5, 2, 7), int32] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%168, dtype="int32") /* ty=Tensor[(5, 2, 7), int32] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %173 = @func_10167() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(10, 1, 5), float32], Tensor[(50), float32]) */;
  %174 = logical_xor(%171, %172) /* ty=Tensor[(5, 2, 7), int32] */;
  %175 = %173.0;
  (%174, %175)
}

def @func_10804() -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(5, 6, 3), uint32]) {
  %176 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %178 = cast(meta[relay.Constant][13] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %179 = reshape(%177, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint64] */;
  %180 = reshape(%178, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint64] */;
  %181 = @func_8256(%179, %180) /* ty=(Tensor[(5, 6, 3), uint64], Tensor[(5, 6, 3), float64]) */;
  %182 = %181.1;
  %183 = cast(meta[relay.Constant][13] /* ty=Tensor[(90), uint64] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%182, dtype="uint32") /* ty=Tensor[(5, 6, 3), uint32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %187 = @func_6317() /* ty=Tensor[(360), float32] */;
  %188 = %176.0;
  %189 = minimum(%185, %186) /* ty=Tensor[(5, 6, 3), uint32] */;
  (%187, %188, %189)
}

def @func_12733() -> (Tensor[(360), float32], Tensor[(10, 15, 8), int8], Tensor[(1200), int8], Tensor[(360), float32]) {
  %190 = cast(meta[relay.Constant][14] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %191 = reshape(%190, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %192 = @func_7532(%191) /* ty=(Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) */;
  %193 = @func_6307() /* ty=Tensor[(360), float32] */;
  %194 = %192.1;
  %195 = @func_8810() /* ty=Tensor[(360), float32] */;
  (%193, %194, meta[relay.Constant][14] /* ty=Tensor[(1200), int8] */, %195)
}

def @func_8384() -> (Tensor[(16, 16, 14), float64],) {
  %196 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %197 = %196.0;
  (%197,)
}

def @func_5475(%var_5402: Tensor[(2, 8, 8), int64], %var_5403: Tensor[(2, 8, 8), int64], %var_5412: Tensor[(960), int64], %var_5434: Tensor[(840), int8], %var_5454: Tensor[(360), float32]) -> (Tensor[(2, 8, 8), float32], Tensor[(960), int64], Tensor[(448), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(2, 8, 8), float64], Tensor[(840), int8], Tensor[(1, 84), int16], Tensor[(840), int8], Tensor[(6, 7, 6), bool], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(960), int64]) {
  %198 = cast(%var_5403, dtype="bool") /* ty=Tensor[(2, 8, 8), bool] */;
  %199 = shape_of(%var_5402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%var_5402, dtype="bool") /* ty=Tensor[(2, 8, 8), bool] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %202 = greater(%200, %201) /* ty=Tensor[(2, 8, 8), bool] */;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(2, 8, 8), float32] */;
  %204 = cast(meta[relay.Constant][15] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %205 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %206 = cast(%var_5412, dtype="int64") /* ty=Tensor[(960), int64] */;
  %207 = reshape(%204, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
  %208 = reshape(%205, newshape=[10, 4]) /* ty=Tensor[(10, 4), float64] */;
  %209 = reshape(%206, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %210 = @func_1847(%207, %208, %209) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */;
  %211 = cast(%202, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %212 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 84), int16] */, dtype="int16") /* ty=Tensor[(1, 84), int16] */;
  %213 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 84), int16] */, dtype="int16") /* ty=Tensor[(1, 84), int16] */;
  %214 = cast(%var_5434, dtype="int8") /* ty=Tensor[(840), int8] */;
  %215 = %210.3;
  %216 = cast(%215, dtype="int64") /* ty=Tensor[(960), int64] */;
  %217 = reshape(%212, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
  %218 = reshape(%213, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
  %219 = reshape(%214, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %220 = reshape(%216, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %221 = @func_3520(%217, %218, %219, %220) /* ty=(Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) */;
  %222 = cast(meta[relay.Constant][18] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %223 = cast(meta[relay.Constant][18] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %224 = cast(%var_5454, dtype="float32") /* ty=Tensor[(360), float32] */;
  %225 = cast(meta[relay.Constant][15] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %226 = cast(%var_5412, dtype="int64") /* ty=Tensor[(960), int64] */;
  %227 = reshape(%222, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %228 = reshape(%223, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %229 = reshape(%224, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %230 = reshape(%225, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %231 = reshape(%226, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %232 = @func_2128(%227, %228, %229, %230, %231) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %233 = cast(meta[relay.Constant][15] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %234 = cast(meta[relay.Constant][16] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %235 = cast(%var_5412, dtype="int64") /* ty=Tensor[(960), int64] */;
  %236 = reshape(%233, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
  %237 = reshape(%234, newshape=[10, 4]) /* ty=Tensor[(10, 4), float64] */;
  %238 = reshape(%235, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %239 = @func_1847(%236, %237, %238) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */;
  %240 = sigmoid(%203) /* ty=Tensor[(2, 8, 8), float32] */;
  %241 = asin(%211) /* ty=Tensor[(2, 8, 8), float64] */;
  %242 = %221.3;
  %243 = %232.0;
  %244 = %239.3;
  (%240, %215, meta[relay.Constant][15] /* ty=Tensor[(448), float64] */, meta[relay.Constant][16] /* ty=Tensor[(40), float64] */, %var_5412, %241, %242, meta[relay.Constant][17] /* ty=Tensor[(1, 84), int16] */, %var_5434, %243, meta[relay.Constant][18] /* ty=Tensor[(252), uint8] */, %var_5454, %244)
}

def @func_9102() -> Tensor[(10), float64] {
  %245 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %245.0
}

def @func_6759() -> (Tensor[(16, 16, 14), float64],) {
  %246 = @func_6133() /* ty=Tensor[(16, 16, 14), float64] */;
  (%246,)
}

def @func_8064(%var_8055: Tensor[(12, 5, 1), float32]) -> Tensor[(12, 5, 1), float32] {
  %247 = cast(%var_8055, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  log2(%247) /* ty=Tensor[(12, 5, 1), float32] */
}

def @func_4343(%var_4305: Tensor[(11, 1, 16), float32]) -> (Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(16, 15, 4), int64], Tensor[(84), int16], Tensor[(60, 14), int8], Tensor[(960), int64]) {
  %248 = cast(%var_4305, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %249 = cast(%var_4305, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %250 = cast(meta[relay.Constant][19] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %251 = cast(meta[relay.Constant][19] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %252 = cast(meta[relay.Constant][20] /* ty=Tensor[(60, 14), int8] */, dtype="int8") /* ty=Tensor[(60, 14), int8] */;
  %253 = cast(meta[relay.Constant][21] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %254 = reshape(%250, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
  %255 = reshape(%251, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
  %256 = reshape(%252, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %257 = reshape(%253, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %258 = @func_3520(%254, %255, %256, %257) /* ty=(Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) */;
  %259 = asin(%248) /* ty=Tensor[(11, 1, 16), float32] */;
  %260 = sin(%249) /* ty=Tensor[(11, 1, 16), float64] */;
  %261 = %258.5;
  (%259, %260, %261, meta[relay.Constant][19] /* ty=Tensor[(84), int16] */, meta[relay.Constant][20] /* ty=Tensor[(60, 14), int8] */, meta[relay.Constant][21] /* ty=Tensor[(960), int64] */)
}

def @main() -> (Tensor[(360), float32], Tensor[(363, 360), int32], Tensor[(363), float32], Tensor[(120, 8), float32]) {
  %262 = @func_8939() /* ty=(Tensor[(360), float32],) */;
  %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(363), float32] */, dtype="float32") /* ty=Tensor[(363), float32] */;
  %264 = cast(meta[relay.Constant][22] /* ty=Tensor[(363), float32] */, dtype="float32") /* ty=Tensor[(363), float32] */;
  %265 = cast(meta[relay.Constant][23] /* ty=Tensor[(120, 8), int64] */, dtype="int64") /* ty=Tensor[(120, 8), int64] */;
  %266 = reshape(%263, newshape=[363, 1]) /* ty=Tensor[(363, 1), float32] */;
  %267 = reshape(%264, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %268 = reshape(%265, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %269 = @func_12517(%266, %267, %268) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(960), int64], Tensor[(363, 360), int32], Tensor[(11, 11, 3), float64]) */;
  %270 = cast(meta[relay.Constant][23] /* ty=Tensor[(120, 8), int64] */, dtype="float32") /* ty=Tensor[(120, 8), float32] */;
  %271 = %262.0;
  %272 = %269.5;
  %273 = acosh(%270) /* ty=Tensor[(120, 8), float32] */;
  (%271, %272, meta[relay.Constant][22] /* ty=Tensor[(363), float32] */, %273)
}

def @func_1847(%var_1831: Tensor[(4, 14, 8), float64], %var_1835: Tensor[(10, 4), float64], %var_1836: Tensor[(960), int64]) -> (Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) {
  %274 = cast(%var_1831, dtype="float64") /* ty=Tensor[(4, 14, 8), float64] */;
  %275 = cast(%var_1835, dtype="float64") /* ty=Tensor[(10, 4), float64] */;
  %276 = cast(%var_1836, dtype="int64") /* ty=Tensor[(960), int64] */;
  %277 = reshape(%275, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %278 = reshape(%276, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %279 = @func_984(%277, %278) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %280 = rsqrt(%274) /* ty=Tensor[(4, 14, 8), float64] */;
  %281 = %279.3;
  (%280, %281, %var_1835, %var_1836)
}

def @func_6317() -> Tensor[(360), float32] {
  @func_6009() /* ty=Tensor[(360), float32] */
}

def @func_9191(%var_9180: Tensor[(1200), int8]) -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1200), int8]) {
  %282 = @func_9119() /* ty=(Tensor[(360), float32],) */;
  %283 = cast(%var_9180, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %284 = reshape(%283, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %285 = @func_7532(%284) /* ty=(Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) */;
  %286 = %282.0;
  %287 = %285.0;
  (%286, %287, %var_9180)
}

def @func_10302() -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64]) {
  %288 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
  %289 = @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %290 = %289.0;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %292 = %288.1;
  %293 = tan(%291) /* ty=Tensor[(16, 16, 14), float64] */;
  (%292, %293)
}

def @func_6960() -> Tensor[(360), float32] {
  @func_6573() /* ty=Tensor[(360), float32] */
}

def @func_8571() -> Tensor[(360), float32] {
  %294 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %294.0
}

def @func_10522() -> Tensor[(11, 9, 8), float64] {
  %295 = @func_7149() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */;
  %295.3
}

def @func_9264() -> Tensor[(10), float64] {
  %296 = @func_6077() /* ty=(Tensor[(10), float64],) */;
  %296.0
}

def @func_6009() -> Tensor[(360), float32] {
  %297 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %297.1
}

def @func_10052(%var_10020: Tensor[(5, 16, 10), float64], %var_10027: Tensor[(10, 144), float64]) -> (Tensor[(5, 16, 10), float64], Tensor[(15, 6, 16), float64], Tensor[(10, 144), float64]) {
  %298 = cast(%var_10020, dtype="float64") /* ty=Tensor[(5, 16, 10), float64] */;
  %299 = cast(%var_10027, dtype="float64") /* ty=Tensor[(10, 144), float64] */;
  %300 = reshape(%299, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %301 = @func_7855(%300) /* ty=(Tensor[(360), float32], Tensor[(15, 6, 16), float64], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(36, 22), float64]) */;
  %302 = sin(%298) /* ty=Tensor[(5, 16, 10), float64] */;
  %303 = %301.1;
  (%302, %303, %var_10027)
}

def @func_6307() -> Tensor[(360), float32] {
  @func_6092() /* ty=Tensor[(360), float32] */
}

def @func_8423() -> (Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) {
  %304 = @func_6288() /* ty=(Tensor[(360), float32],) */;
  %305 = cast(meta[relay.Constant][24] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %306 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 4), int32] */, dtype="int32") /* ty=Tensor[(6, 4), int32] */;
  %307 = reshape(%305, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %308 = reshape(%306, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %309 = @func_5941(%307, %308) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) */;
  %310 = %304.0;
  %311 = %309.1;
  (%310, %311, meta[relay.Constant][24] /* ty=Tensor[(32), float64] */, meta[relay.Constant][25] /* ty=Tensor[(6, 4), int32] */)
}

def @func_12284(%var_12233: Tensor[(13, 15, 5), float64], %var_12234: Tensor[(13, 15, 5), float64]) -> (Tensor[(13, 15, 5), bool], Tensor[(13, 15, 5), float64]) {
  %312 = cast(%var_12234, dtype="bool") /* ty=Tensor[(13, 15, 5), bool] */;
  %313 = shape_of(%var_12233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%var_12233, dtype="bool") /* ty=Tensor[(13, 15, 5), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %316 = cast(%var_12234, dtype="float64") /* ty=Tensor[(13, 15, 5), float64] */;
  %317 = greater_equal(%314, %315) /* ty=Tensor[(13, 15, 5), bool] */;
  %318 = sinh(%316) /* ty=Tensor[(13, 15, 5), float64] */;
  (%317, %318)
}

def @func_871(%var_830: Tensor[(1, 15, 7), float64]) -> (Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) {
  %319 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %320 = cast(meta[relay.Constant][26] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %321 = reshape(%319, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %322 = reshape(%320, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %323 = @func_390(%321, %322) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %324 = cast(%var_830, dtype="float64") /* ty=Tensor[(1, 15, 7), float64] */;
  %325 = cosh(%324) /* ty=Tensor[(1, 15, 7), float64] */;
  %326 = cast(%var_830, dtype="bool") /* ty=Tensor[(1, 15, 7), bool] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="bool") /* ty=Tensor[(1, 15, 7), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = cast(meta[relay.Constant][27] /* ty=Tensor[(363), float32] */, dtype="float32") /* ty=Tensor[(363), float32] */;
  %331 = reshape(%330, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %332 = @func_747(%331) /* ty=(Tensor[(11, 11, 3), float32],) */;
  %333 = %323.0;
  %334 = logical_or(%328, %329) /* ty=Tensor[(?, 15, 7), bool] */;
  %335 = %332.0;
  (%333, meta[relay.Constant][26] /* ty=Tensor[(360), float32] */, %334, %335, meta[relay.Constant][27] /* ty=Tensor[(363), float32] */)
}

def @func_6840(%var_6831: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 14), bool], Tensor[(16, 16, 14), float64]) {
  %336 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %337 = %336.0;
  %338 = cast(%var_6831, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %339 = shape_of(%337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%337, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %342 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %343 = not_equal(%340, %341) /* ty=Tensor[(16, 16, 14), bool] */;
  %344 = %342.0;
  (%343, %344)
}

def @func_5863() -> (Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) {
  %345 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 14), float32] */;
  %346 = exp(%345) /* ty=Tensor[(16, 16, 14), float32] */;
  %347 = cast(%346, dtype="uint16") /* ty=Tensor[(16, 16, 14), uint16] */;
  %348 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(16, 16, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 16, 14), float32] */, dtype="uint16") /* ty=Tensor[(16, 16, 14), uint16] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %351 = cast(%346, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %352 = left_shift(%349, %350) /* ty=Tensor[(16, 16, 14), uint16] */;
  %353 = cos(%351) /* ty=Tensor[(16, 16, 14), float64] */;
  (%352, %353)
}

def @func_10728(%var_10666: Tensor[(325), float32], %var_10667: Tensor[(1440), float64], %var_10668: Tensor[(360), float32], %var_10669: Tensor[(70), int8], %var_10670: Tensor[(260), float32]) -> (Tensor[(792), float64], Tensor[(363), float32], Tensor[(105), float64], Tensor[(792), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(70), int8], Tensor[(260), float32], Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64]) {
  %354 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %355 = cast(meta[relay.Constant][29] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %356 = reshape(%355, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %357 = @func_871(%356) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %358 = cast(%var_10666, dtype="float32") /* ty=Tensor[(325), float32] */;
  %359 = cast(%var_10667, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %360 = cast(%var_10668, dtype="float32") /* ty=Tensor[(360), float32] */;
  %361 = cast(%var_10669, dtype="int8") /* ty=Tensor[(70), int8] */;
  %362 = cast(%var_10670, dtype="float32") /* ty=Tensor[(260), float32] */;
  %363 = reshape(%358, newshape=[1, 325]) /* ty=Tensor[(1, 325), float32] */;
  %364 = reshape(%359, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %365 = reshape(%360, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %366 = reshape(%361, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %367 = reshape(%362, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %368 = @func_7465(%363, %364, %365, %366, %367) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) */;
  %369 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %370 = @func_10384() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %371 = @func_10239() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %372 = %354.2;
  %373 = %357.4;
  %374 = %368.12;
  %375 = %369.1;
  %376 = %370.1;
  %377 = %371.0;
  (%372, %373, meta[relay.Constant][29] /* ty=Tensor[(105), float64] */, %374, %var_10666, %var_10667, %var_10668, %var_10669, %var_10670, %375, %376, %377)
}

def @func_6092() -> Tensor[(360), float32] {
  @func_6009() /* ty=Tensor[(360), float32] */
}

def @func_11748() -> (Tensor[(16, 16, 14), float64],) {
  %378 = @func_10302() /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64]) */;
  %379 = %378.1;
  (%379,)
}

def @func_11315() -> (Tensor[(10), float64], Tensor[(36, 10), float32], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64]) {
  %380 = cast(meta[relay.Constant][30] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %381 = cast(meta[relay.Constant][30] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %382 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %383 = cast(meta[relay.Constant][32] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %384 = cast(meta[relay.Constant][33] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %385 = reshape(%380, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %386 = reshape(%381, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %387 = reshape(%382, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %388 = reshape(%383, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %389 = reshape(%384, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %390 = @func_2128(%385, %386, %387, %388, %389) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %391 = @func_9912() /* ty=Tensor[(10), float64] */;
  %392 = %390.2;
  (%391, %392, meta[relay.Constant][30] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][31] /* ty=Tensor[(360), float32] */, meta[relay.Constant][32] /* ty=Tensor[(448), float64] */, meta[relay.Constant][33] /* ty=Tensor[(960), int64] */)
}

def @func_8846() -> (Tensor[(10), float64], Tensor[(360), float32]) {
  %393 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %394 = %393.2;
  %395 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%394, %395)
}

def @func_2128(%var_2074: Tensor[(6, 7, 6), uint8], %var_2075: Tensor[(6, 7, 6), uint8], %var_2087: Tensor[(36, 10), float32], %var_2091: Tensor[(4, 112), float64], %var_2093: Tensor[(960), int64]) -> (Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) {
  %396 = cast(%var_2075, dtype="uint8") /* ty=Tensor[(6, 7, 6), uint8] */;
  %397 = shape_of(%var_2074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_2074, dtype="uint8") /* ty=Tensor[(6, 7, 6), uint8] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %400 = right_shift(%398, %399) /* ty=Tensor[(6, 7, 6), uint8] */;
  %401 = cast(%400, dtype="bool") /* ty=Tensor[(6, 7, 6), bool] */;
  %402 = shape_of(%var_2074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %403 = cast(%var_2074, dtype="bool") /* ty=Tensor[(6, 7, 6), bool] */;
  %404 = dyn.reshape(%401, %402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %405 = cast(%var_2087, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %406 = cast(%var_2087, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %407 = reshape(%405, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %408 = reshape(%406, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %409 = @func_390(%407, %408) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %410 = cast(%var_2091, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
  %411 = cast(meta[relay.Constant][34] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %412 = cast(%var_2093, dtype="int64") /* ty=Tensor[(960), int64] */;
  %413 = reshape(%410, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
  %414 = reshape(%411, newshape=[10, 4]) /* ty=Tensor[(10, 4), float64] */;
  %415 = reshape(%412, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %416 = @func_1847(%413, %414, %415) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */;
  %417 = %416.1;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(960), float32] */;
  %419 = cast(meta[relay.Constant][35] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %420 = reshape(%419, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %421 = @func_871(%420) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %422 = cast(meta[relay.Constant][36] /* ty=Tensor[(24), int32] */, dtype="int32") /* ty=Tensor[(24), int32] */;
  %423 = cast(meta[relay.Constant][37] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %424 = reshape(%422, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), int32] */;
  %425 = reshape(%423, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), int32] */;
  %426 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %427 = cast(%var_2093, dtype="int64") /* ty=Tensor[(960), int64] */;
  %428 = reshape(%426, newshape=[]) /* ty=int64 */;
  %429 = reshape(%427, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %430 = @func_710(%428, %429) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %431 = not_equal(%403, %404) /* ty=Tensor[(6, 7, 6), bool] */;
  %432 = %409.0;
  %433 = log2(%418) /* ty=Tensor[(960), float32] */;
  %434 = %421.2;
  %435 = @func_1926(%424, %425) /* ty=Tensor[(4, 6, 16), int32] */;
  %436 = %430.0;
  (%431, %432, %var_2087, %var_2091, meta[relay.Constant][34] /* ty=Tensor[(40), float64] */, %var_2093, %433, %434, meta[relay.Constant][35] /* ty=Tensor[(105), float64] */, %435, meta[relay.Constant][36] /* ty=Tensor[(24), int32] */, meta[relay.Constant][37] /* ty=Tensor[(384), int32] */, %436, 4 /* ty=int64 */)
}

def @func_9351() -> (Tensor[(16, 16, 14), float64], Tensor[(384), int32], Tensor[(32), float64], Tensor[(24), int32]) {
  %437 = @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %438 = cast(meta[relay.Constant][38] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %439 = cast(meta[relay.Constant][39] /* ty=Tensor[(24), int32] */, dtype="int32") /* ty=Tensor[(24), int32] */;
  %440 = reshape(%438, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %441 = reshape(%439, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %442 = @func_5941(%440, %441) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) */;
  %443 = %437.0;
  %444 = %442.4;
  (%443, %444, meta[relay.Constant][38] /* ty=Tensor[(32), float64] */, meta[relay.Constant][39] /* ty=Tensor[(24), int32] */)
}

def @func_5960() -> (Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) {
  %445 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %446 = cast(meta[relay.Constant][40] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %447 = reshape(%446, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float64] */;
  %448 = @func_2480(%447) /* ty=(Tensor[(5, 2, ?), uint64], Tensor[(360), float32], Tensor[(4, 9, 10), float32]) */;
  %449 = %445.1;
  %450 = %448.1;
  (%449, %450, meta[relay.Constant][40] /* ty=Tensor[(10), float64] */)
}

def @func_7042(%var_7039: Tensor[(10, 1, 5), float32]) -> (Tensor[(10, 1, 5), float32],) {
  %451 = cast(%var_7039, dtype="float32") /* ty=Tensor[(10, 1, 5), float32] */;
  %452 = erf(%451) /* ty=Tensor[(10, 1, 5), float32] */;
  (%452,)
}

def @func_2576(%var_2564: Tensor[(10, 1, 8), int8], %var_2565: Tensor[(10, 15, 8), int8]) -> (Tensor[(10, 15, 8), int8], Tensor[(10, 1, 8), float64]) {
  %453 = cast(%var_2564, dtype="int8") /* ty=Tensor[(10, 1, 8), int8] */;
  %454 = cast(%var_2565, dtype="int8") /* ty=Tensor[(10, 15, 8), int8] */;
  %455 = cast(%var_2564, dtype="float64") /* ty=Tensor[(10, 1, 8), float64] */;
  %456 = bitwise_and(%453, %454) /* ty=Tensor[(10, 15, 8), int8] */;
  %457 = exp(%455) /* ty=Tensor[(10, 1, 8), float64] */;
  (%456, %457)
}

def @func_12670() -> (Tensor[(16, 16, 14), float64], Tensor[(360), float32]) {
  %458 = @func_8384() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %459 = @func_10384() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %460 = %458.0;
  %461 = %459.0;
  (%460, %461)
}

def @func_12517(%var_12432: Tensor[(363, 1), float32], %var_12436: Tensor[(11, 11, 3), float32], %var_12461: Tensor[(960), int64]) -> (Tensor[(16, 16, 14), float64], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(960), int64], Tensor[(363, 360), int32], Tensor[(11, 11, 3), float64]) {
  %462 = @func_8503() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %463 = cast(meta[relay.Constant][41] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %464 = cast(meta[relay.Constant][41] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %465 = @func_11535() /* ty=(Tensor[(360), float32],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="float32") /* ty=Tensor[(360), float32] */;
  %468 = cast(meta[relay.Constant][42] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %469 = cast(%var_12461, dtype="int64") /* ty=Tensor[(960), int64] */;
  %470 = reshape(%463, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %471 = reshape(%464, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %472 = reshape(%467, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %473 = reshape(%468, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %474 = reshape(%469, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %475 = @func_2128(%470, %471, %472, %473, %474) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %476 = cast(%466, dtype="int32") /* ty=Tensor[(360), int32] */;
  %477 = cast(%var_12432, dtype="int32") /* ty=Tensor[(363, 1), int32] */;
  %478 = cast(%var_12432, dtype="float32") /* ty=Tensor[(363, 1), float32] */;
  %479 = reshape(%478, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %480 = @func_747(%479) /* ty=(Tensor[(11, 11, 3), float32],) */;
  %481 = %480.0;
  %482 = cast(%var_12436, dtype="uint64") /* ty=Tensor[(11, 11, 3), uint64] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%481, dtype="uint64") /* ty=Tensor[(11, 11, 3), uint64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %486 = right_shift(%484, %485) /* ty=Tensor[(11, 11, 3), uint64] */;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %488 = log2(%487) /* ty=Tensor[(11, 11, 3), float64] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(11, 11, 3), float32] */;
  %490 = atan(%489) /* ty=Tensor[(11, 11, 3), float32] */;
  %491 = cast(%488, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %492 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %493 = cast(%490, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %494 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %495 = %462.0;
  %496 = %475.12;
  %497 = logical_xor(%476, %477) /* ty=Tensor[(363, 360), int32] */;
  %498 = power(%493, %494) /* ty=Tensor[(11, 11, 3), float64] */;
  (%495, %496, meta[relay.Constant][41] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][42] /* ty=Tensor[(448), float64] */, %var_12461, %497, %498)
}

def @func_11230(%var_11220: Tensor[(128), int64]) -> (Tensor[(16, 16, 14), int32], Tensor[(720), float64], Tensor[(325), float32], Tensor[(448), float64], Tensor[(105), float64], Tensor[(128), int64]) {
  %499 = @func_10128() /* ty=(Tensor[(16, 16, 14), int32],) */;
  %500 = cast(meta[relay.Constant][43] /* ty=Tensor[(325), float32] */, dtype="float32") /* ty=Tensor[(325), float32] */;
  %501 = cast(meta[relay.Constant][44] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %502 = cast(meta[relay.Constant][45] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %503 = cast(%var_11220, dtype="int64") /* ty=Tensor[(128), int64] */;
  %504 = reshape(%500, newshape=[325]) /* ty=Tensor[(325), float32] */;
  %505 = reshape(%501, newshape=[112, 4]) /* ty=Tensor[(112, 4), float64] */;
  %506 = reshape(%502, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %507 = reshape(%503, newshape=[128]) /* ty=Tensor[(128), int64] */;
  %508 = @func_11187(%504, %505, %506, %507) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(448), float64], Tensor[(720), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(260), float32], Tensor[(252), uint8], Tensor[(112, 4), float64], Tensor[(105), float64], Tensor[(6, 7, 6), bool], Tensor[(128), int64], Tensor[(960), int64], Tensor[(840), int8]) */;
  %509 = %499.0;
  %510 = %508.3;
  (%509, %510, meta[relay.Constant][43] /* ty=Tensor[(325), float32] */, meta[relay.Constant][44] /* ty=Tensor[(448), float64] */, meta[relay.Constant][45] /* ty=Tensor[(105), float64] */, %var_11220)
}

def @func_9832() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %511 = @func_7919() /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64]) */;
  %512 = @func_7486() /* ty=(Tensor[(360), float32],) */;
  %513 = %511.0;
  %514 = @func_6573() /* ty=Tensor[(360), float32] */;
  %515 = %512.0;
  (%513, %514, %515)
}

def @func_7192() -> (Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) {
  %516 = @func_6261() /* ty=(Tensor[(360), float32],) */;
  %517 = cast(meta[relay.Constant][46] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %518 = reshape(%517, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %519 = @func_871(%518) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %520 = %516.0;
  %521 = %519.3;
  (%520, %521, meta[relay.Constant][46] /* ty=Tensor[(105), float64] */)
}

def @func_6133() -> Tensor[(16, 16, 14), float64] {
  %522 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %522.0
}

def @func_8503() -> (Tensor[(16, 16, 14), float64],) {
  %523 = @func_8484() /* ty=Tensor[(16, 16, 14), float64] */;
  (%523,)
}

def @func_12701() -> Tensor[(16, 16, 14), int32] {
  %524 = @func_10128() /* ty=(Tensor[(16, 16, 14), int32],) */;
  %524.0
}

def @func_2172(%var_2158: Tensor[(11, 9, 8), float64]) -> (Tensor[(11, 9, 8), float64],) {
  %525 = cast(%var_2158, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
  %526 = sinh(%525) /* ty=Tensor[(11, 9, 8), float64] */;
  (%526,)
}

def @func_11655(%var_11622: Tensor[(3, 3, 15), float64], %var_11634: Tensor[(375), float32], %var_11636: Tensor[(7, 10), int8]) -> (Tensor[(70), int8], Tensor[(375), float32], Tensor[(288, 1), uint16], Tensor[(7, 10), int8], Tensor[(3, 3, 15), bool], Tensor[(4, 5, 2), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(360), float32]) {
  %527 = cast(%var_11634, dtype="float32") /* ty=Tensor[(375), float32] */;
  %528 = cast(meta[relay.Constant][47] /* ty=Tensor[(288, 1), uint16] */, dtype="uint16") /* ty=Tensor[(288, 1), uint16] */;
  %529 = cast(%var_11636, dtype="int8") /* ty=Tensor[(7, 10), int8] */;
  %530 = reshape(%527, newshape=[375]) /* ty=Tensor[(375), float32] */;
  %531 = reshape(%528, newshape=[288]) /* ty=Tensor[(288), uint16] */;
  %532 = reshape(%529, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %533 = @func_10614(%530, %531, %532) /* ty=(Tensor[(360), float32], Tensor[(375), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(5, 15, 5), uint16]) */;
  %534 = cast(%var_11622, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %535 = atan(%534) /* ty=Tensor[(3, 3, 15), float64] */;
  %536 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 3, 15), float64] */, dtype="bool") /* ty=Tensor[(3, 3, 15), bool] */;
  %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%535, dtype="bool") /* ty=Tensor[(3, 3, 15), bool] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %540 = cast(meta[relay.Constant][49] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %541 = cast(meta[relay.Constant][50] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %542 = reshape(%540, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %543 = reshape(%541, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %544 = @func_984(%542, %543) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %545 = %533.4;
  %546 = greater(%538, %539) /* ty=Tensor[(3, 3, 15), bool] */;
  %547 = %544.0;
  %548 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%545, %var_11634, meta[relay.Constant][47] /* ty=Tensor[(288, 1), uint16] */, %var_11636, %546, %547, meta[relay.Constant][49] /* ty=Tensor[(40), float64] */, meta[relay.Constant][50] /* ty=Tensor[(960), int64] */, %548)
}

def @func_8398() -> (Tensor[(11, 9, 8), float64],) {
  %549 = @func_7149() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */;
  %550 = %549.3;
  (%550,)
}

def @func_6261() -> (Tensor[(360), float32],) {
  %551 = @func_6009() /* ty=Tensor[(360), float32] */;
  (%551,)
}

def @func_5158(%var_5105: Tensor[(13, 5, 5), float32], %var_5129: Tensor[(1440), float64], %var_5144: Tensor[(360), float32], %var_5145: Tensor[(448), float64], %var_5154: Tensor[(70), int8]) -> (Tensor[(13, 5, 5), float32], Tensor[(4, 5, 13), bool], Tensor[(20), uint32], Tensor[(260), uint32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(4, 9, 10), float64], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64], Tensor[(10, 7, 12), int16], Tensor[(70), int8], Tensor[(840), int8]) {
  %552 = cast(%var_5105, dtype="float32") /* ty=Tensor[(13, 5, 5), float32] */;
  %553 = cast(meta[relay.Constant][51] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %554 = cast(meta[relay.Constant][52] /* ty=Tensor[(260), uint32] */, dtype="uint32") /* ty=Tensor[(260), uint32] */;
  %555 = reshape(%553, newshape=[4, 5, 1]) /* ty=Tensor[(4, 5, 1), uint32] */;
  %556 = reshape(%554, newshape=[4, 5, 13]) /* ty=Tensor[(4, 5, 13), uint32] */;
  %557 = @func_4079(%555, %556) /* ty=(Tensor[(4, 5, 13), bool],) */;
  %558 = cast(%var_5129, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %559 = reshape(%558, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %560 = @func_4364(%559) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %561 = cast(meta[relay.Constant][53] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %562 = cast(meta[relay.Constant][53] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %563 = cast(%var_5144, dtype="float32") /* ty=Tensor[(360), float32] */;
  %564 = cast(%var_5145, dtype="float64") /* ty=Tensor[(448), float64] */;
  %565 = cast(meta[relay.Constant][54] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %566 = reshape(%561, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %567 = reshape(%562, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %568 = reshape(%563, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %569 = reshape(%564, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %570 = reshape(%565, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %571 = @func_2128(%566, %567, %568, %569, %570) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %572 = cast(%var_5154, dtype="int8") /* ty=Tensor[(70), int8] */;
  %573 = cast(meta[relay.Constant][55] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %574 = cast(meta[relay.Constant][54] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %575 = reshape(%572, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %576 = reshape(%573, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %577 = reshape(%574, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %578 = @func_1632(%575, %576, %577) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %579 = cos(%552) /* ty=Tensor[(13, 5, 5), float32] */;
  %580 = %557.0;
  %581 = %560.1;
  %582 = %571.1;
  %583 = %578.4;
  (%579, %580, meta[relay.Constant][51] /* ty=Tensor[(20), uint32] */, meta[relay.Constant][52] /* ty=Tensor[(260), uint32] */, %581, %var_5129, %582, meta[relay.Constant][53] /* ty=Tensor[(252), uint8] */, %var_5144, %var_5145, meta[relay.Constant][54] /* ty=Tensor[(960), int64] */, %583, %var_5154, meta[relay.Constant][55] /* ty=Tensor[(840), int8] */)
}

def @func_8302(%var_8296: Tensor[(14, 11, 5), float32]) -> (Tensor[(14, 11, 5), float32],) {
  %584 = cast(%var_8296, dtype="float32") /* ty=Tensor[(14, 11, 5), float32] */;
  %585 = atanh(%584) /* ty=Tensor[(14, 11, 5), float32] */;
  (%585,)
}

def @func_8143() -> (Tensor[(360), float32],) {
  %586 = @func_8023() /* ty=Tensor[(360), float32] */;
  (%586,)
}

def @func_7269(%var_7232: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), int16], Tensor[(16, 3, 12), float64]) {
  %587 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %588 = shape_of(%var_7232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%var_7232, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %591 = floor_mod(%589, %590) /* ty=Tensor[(16, 3, 12), float64] */;
  %592 = cast(%591, dtype="int16") /* ty=Tensor[(16, 3, 12), int16] */;
  %593 = shape_of(%var_7232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%var_7232, dtype="int16") /* ty=Tensor[(16, 3, 12), int16] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %596 = cast(%var_7232, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %597 = subtract(%594, %595) /* ty=Tensor[(16, 3, 12), int16] */;
  %598 = log(%596) /* ty=Tensor[(16, 3, 12), float64] */;
  (%597, %598)
}

def @func_8484() -> Tensor[(16, 16, 14), float64] {
  %599 = @func_8384() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %599.0
}

def @func_9753() -> Tensor[(360), float32] {
  @func_6960() /* ty=Tensor[(360), float32] */
}

def @func_9773() -> (Tensor[(11, 9, 8), float64],) {
  %600 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %601 = %600.0;
  (%601,)
}

def @func_7532(%var_7530: Tensor[(1200), int8]) -> (Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) {
  %602 = @func_7149() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */;
  %603 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 40), int8] */, dtype="int8") /* ty=Tensor[(2, 40), int8] */;
  %604 = cast(%var_7530, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %605 = reshape(%603, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), int8] */;
  %606 = reshape(%604, newshape=[10, 15, 8]) /* ty=Tensor[(10, 15, 8), int8] */;
  %607 = @func_2576(%605, %606) /* ty=(Tensor[(10, 15, 8), int8], Tensor[(10, 1, 8), float64]) */;
  %608 = %602.3;
  %609 = %607.0;
  (%608, %609, meta[relay.Constant][57] /* ty=Tensor[(2, 40), int8] */, %var_7530)
}

def @func_8989() -> Tensor[(360), float32] {
  @func_8571() /* ty=Tensor[(360), float32] */
}

def @func_9329() -> (Tensor[(360), float32], Tensor[(11, 11, 3), float32]) {
  %610 = @func_8362() /* ty=(Tensor[(360), float32],) */;
  %611 = @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */;
  %612 = %610.0;
  %613 = %611.1;
  (%612, %613)
}

def @func_2240(%var_2194: Tensor[(16, 6, 3), uint16], %var_2223: Tensor[(70), int8], %var_2230: Tensor[(1, 105), float64]) -> (Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) {
  %614 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 6, 3), uint16] */, dtype="bool") /* ty=Tensor[(16, 6, 3), bool] */;
  %615 = shape_of(%var_2194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_2194, dtype="bool") /* ty=Tensor[(16, 6, 3), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %618 = cast(%var_2223, dtype="int8") /* ty=Tensor[(70), int8] */;
  %619 = cast(meta[relay.Constant][59] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %620 = cast(meta[relay.Constant][60] /* ty=Tensor[(120, 8), int64] */, dtype="int64") /* ty=Tensor[(120, 8), int64] */;
  %621 = reshape(%618, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %622 = reshape(%619, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %623 = reshape(%620, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %624 = @func_1632(%621, %622, %623) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %625 = cast(%var_2230, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
  %626 = reshape(%625, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %627 = @func_871(%626) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %628 = greater_equal(%616, %617) /* ty=Tensor[(16, 6, 3), bool] */;
  %629 = %624.0;
  %630 = %627.2;
  (%628, %629, %var_2223, meta[relay.Constant][59] /* ty=Tensor[(840), int8] */, meta[relay.Constant][60] /* ty=Tensor[(120, 8), int64] */, %630, %var_2230)
}

def @func_8256(%var_8215: Tensor[(5, 6, 3), uint64], %var_8216: Tensor[(5, 6, 3), uint64]) -> (Tensor[(5, 6, 3), uint64], Tensor[(5, 6, 3), float64]) {
  %631 = cast(%var_8216, dtype="uint64") /* ty=Tensor[(5, 6, 3), uint64] */;
  %632 = shape_of(%var_8215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%var_8215, dtype="uint64") /* ty=Tensor[(5, 6, 3), uint64] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %635 = cast(%var_8215, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %636 = bitwise_or(%633, %634) /* ty=Tensor[(5, 6, 3), uint64] */;
  %637 = log(%635) /* ty=Tensor[(5, 6, 3), float64] */;
  (%636, %637)
}

def @func_12109() -> (Tensor[(360), float32],) {
  %638 = @func_8989() /* ty=Tensor[(360), float32] */;
  (%638,)
}

def @func_2532(%var_2509: Tensor[(5, 4, 13), float32], %var_2526: Tensor[(70, 1), int8], %var_2527: Tensor[(840), int8]) -> (Tensor[(5, 4, 13), int32], Tensor[(960), int64], Tensor[(70, 1), int8], Tensor[(840), int8], Tensor[(960), int64]) {
  %639 = cast(%var_2509, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
  %640 = exp(%639) /* ty=Tensor[(5, 4, 13), float32] */;
  %641 = cast(%var_2509, dtype="int32") /* ty=Tensor[(5, 4, 13), int32] */;
  %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%640, dtype="int32") /* ty=Tensor[(5, 4, 13), int32] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %645 = cast(%var_2526, dtype="int8") /* ty=Tensor[(70, 1), int8] */;
  %646 = cast(%var_2527, dtype="int8") /* ty=Tensor[(840), int8] */;
  %647 = cast(meta[relay.Constant][61] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %648 = reshape(%645, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %649 = reshape(%646, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %650 = reshape(%647, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %651 = @func_1632(%648, %649, %650) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %652 = bitwise_xor(%643, %644) /* ty=Tensor[(5, 4, 13), int32] */;
  %653 = %651.2;
  (%652, %653, %var_2526, %var_2527, meta[relay.Constant][61] /* ty=Tensor[(960), int64] */)
}

def @func_11934() -> (Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), float64]) {
  %654 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %657 = reshape(%656, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), float64] */;
  %658 = @func_7088(%657) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) */;
  %659 = %658.0;
  (%655, %659)
}

def @func_12358(%var_12333: Tensor[(8, 14, 13), uint64]) -> Tensor[(8, 14, 13), uint64] {
  %660 = cast(%var_12333, dtype="uint64") /* ty=Tensor[(8, 14, 13), uint64] */;
  %661 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(8, 14, 13), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(meta[relay.Constant][62] /* ty=Tensor[(8, 14, 13), uint64] */, dtype="uint64") /* ty=Tensor[(8, 14, 13), uint64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%662, %663) /* ty=Tensor[(8, 14, 13), uint64] */
}

def @func_1926(%var_1918: Tensor[(4, 6, 1), int32], %var_1919: Tensor[(4, 6, 16), int32]) -> Tensor[(4, 6, 16), int32] {
  %664 = cast(%var_1918, dtype="int32") /* ty=Tensor[(4, 6, 1), int32] */;
  %665 = cast(%var_1919, dtype="int32") /* ty=Tensor[(4, 6, 16), int32] */;
  bitwise_and(%664, %665) /* ty=Tensor[(4, 6, 16), int32] */
}

def @func_12608() -> (Tensor[(10), float64],) {
  %666 = @func_6077() /* ty=(Tensor[(10), float64],) */;
  %667 = %666.0;
  (%667,)
}

def @func_4079(%var_4065: Tensor[(4, 5, 1), uint32], %var_4066: Tensor[(4, 5, 13), uint32]) -> (Tensor[(4, 5, 13), bool],) {
  %668 = cast(%var_4065, dtype="bool") /* ty=Tensor[(4, 5, 1), bool] */;
  %669 = cast(%var_4066, dtype="bool") /* ty=Tensor[(4, 5, 13), bool] */;
  %670 = less(%668, %669) /* ty=Tensor[(4, 5, 13), bool] */;
  (%670,)
}

def @func_11535() -> (Tensor[(360), float32],) {
  %671 = @func_9017() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %672 = %671.1;
  (%672,)
}

def @func_8362() -> (Tensor[(360), float32],) {
  %673 = @func_6092() /* ty=Tensor[(360), float32] */;
  (%673,)
}

def @func_4364(%var_4349: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) {
  %674 = cast(%var_4349, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %675 = cast(%var_4349, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %676 = atan(%674) /* ty=Tensor[(9, 10, 16), float64] */;
  %677 = exp(%675) /* ty=Tensor[(9, 10, 16), float64] */;
  (%676, %677)
}

def @func_8939() -> (Tensor[(360), float32],) {
  %678 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%678,)
}

def @func_6573() -> Tensor[(360), float32] {
  @func_6307() /* ty=Tensor[(360), float32] */
}

def @func_8708() -> (Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  %679 = @func_8362() /* ty=(Tensor[(360), float32],) */;
  %680 = cast(meta[relay.Constant][63] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %681 = reshape(%680, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %682 = @func_4364(%681) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %683 = %679.0;
  %684 = %682.1;
  (%683, %684, meta[relay.Constant][63] /* ty=Tensor[(1440), float64] */)
}

def @func_9690() -> Tensor[(360), float32] {
  @func_8571() /* ty=Tensor[(360), float32] */
}

def @func_8749() -> Tensor[(360), float32] {
  @func_6573() /* ty=Tensor[(360), float32] */
}

def @func_3728(%var_3715: int64, %var_3716: Tensor[(2, 15, 8), int64]) -> Tensor[(2, 15, 8), int64] {
  %685 = cast(%var_3715, dtype="int64") /* ty=int64 */;
  %686 = cast(%var_3716, dtype="int64") /* ty=Tensor[(2, 15, 8), int64] */;
  bitwise_xor(%685, %686) /* ty=Tensor[(2, 15, 8), int64] */
}

def @func_6615() -> (Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) {
  %687 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %688 = cast(meta[relay.Constant][64] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %689 = reshape(%688, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %690 = @func_2172(%689) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %691 = %687.1;
  %692 = %690.0;
  (%691, %692, meta[relay.Constant][64] /* ty=Tensor[(792), float64] */)
}

def @func_10213(%var_10205: int64) -> (Tensor[(360), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  %693 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
  %694 = cast(meta[relay.Constant][65] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %695 = %693.1;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(360), float32] */;
  %697 = reshape(%694, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %698 = reshape(%696, newshape=[2, 180]) /* ty=Tensor[(2, 180), float32] */;
  %699 = @func_9411(%697, %698) /* ty=(Tensor[(9, 10, 16), float32], Tensor[(12, 5, 1), float32], Tensor[(60), float32], Tensor[(4, 9, 10), float64], Tensor[(2, 180), float32], Tensor[(32), float64], Tensor[(10), float64]) */;
  %700 = cast(%var_10205, dtype="int64") /* ty=int64 */;
  %701 = cast(meta[relay.Constant][66] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %702 = reshape(%700, newshape=[]) /* ty=int64 */;
  %703 = reshape(%701, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %704 = @func_710(%702, %703) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %705 = %699.2;
  %706 = %704.0;
  (%695, %705, meta[relay.Constant][65] /* ty=Tensor[(60), float32] */, %706, %var_10205, meta[relay.Constant][66] /* ty=Tensor[(960), int64] */)
}

def @func_7149() -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) {
  %707 = cast(meta[relay.Constant][67] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %708 = reshape(%707, newshape=[9, 14, 10]) /* ty=Tensor[(9, 14, 10), float64] */;
  %709 = @func_2742(%708) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %710 = %709.1;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
  %712 = reshape(%711, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %713 = @func_2172(%712) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %714 = @func_6092() /* ty=Tensor[(360), float32] */;
  %715 = %713.0;
  (%714, %710, meta[relay.Constant][67] /* ty=Tensor[(1260), float64] */, %715)
}

def @func_3491(%var_3452: Tensor[(2, 8, 2), float64], %var_3469: Tensor[(24), int32], %var_3470: Tensor[(384), int32]) -> (Tensor[(2, 8, 2), int8], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(2, 8, 2), bool]) {
  %716 = cast(%var_3452, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %717 = erf(%716) /* ty=Tensor[(2, 8, 2), float64] */;
  %718 = cast(%var_3452, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %722 = cast(%var_3469, dtype="int32") /* ty=Tensor[(24), int32] */;
  %723 = cast(%var_3470, dtype="int32") /* ty=Tensor[(384), int32] */;
  %724 = reshape(%722, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), int32] */;
  %725 = reshape(%723, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), int32] */;
  %726 = cast(meta[relay.Constant][68] /* ty=Tensor[(2, 8, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %727 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%717, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %730 = maximum(%720, %721) /* ty=Tensor[(2, 8, 2), int8] */;
  %731 = @func_1926(%724, %725) /* ty=Tensor[(4, 6, 16), int32] */;
  %732 = less_equal(%728, %729) /* ty=Tensor[(2, 8, 2), bool] */;
  (%730, %731, %var_3469, %var_3470, %732)
}

def @func_6288() -> (Tensor[(360), float32],) {
  %733 = @func_6009() /* ty=Tensor[(360), float32] */;
  (%733,)
}

def @func_7855(%var_7840: Tensor[(1440), float64]) -> (Tensor[(360), float32], Tensor[(15, 6, 16), float64], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(36, 22), float64]) {
  %734 = cast(%var_7840, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %735 = reshape(%734, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), float64] */;
  %736 = @func_1267(%735) /* ty=(Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) */;
  %737 = cast(meta[relay.Constant][69] /* ty=Tensor[(36, 22), float64] */, dtype="float64") /* ty=Tensor[(36, 22), float64] */;
  %738 = reshape(%737, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %739 = @func_2172(%738) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %740 = @func_6960() /* ty=Tensor[(360), float32] */;
  %741 = %736.0;
  %742 = @func_6092() /* ty=Tensor[(360), float32] */;
  %743 = %739.0;
  (%740, %741, %var_7840, %742, %743, meta[relay.Constant][69] /* ty=Tensor[(36, 22), float64] */)
}

def @func_9970() -> Tensor[(360), float32] {
  @func_9690() /* ty=Tensor[(360), float32] */
}

def @func_8981() -> (Tensor[(360), float32],) {
  %744 = @func_8362() /* ty=(Tensor[(360), float32],) */;
  %745 = %744.0;
  (%745,)
}

def @func_3520(%var_3503: Tensor[(6, 7, 2), int16], %var_3504: Tensor[(6, 7, 2), int16], %var_3511: Tensor[(840), int8], %var_3512: Tensor[(960), int64]) -> (Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) {
  %746 = cast(%var_3504, dtype="int16") /* ty=Tensor[(6, 7, 2), int16] */;
  %747 = shape_of(%var_3503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_3503, dtype="int16") /* ty=Tensor[(6, 7, 2), int16] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %750 = cast(meta[relay.Constant][70] /* ty=Tensor[(70), int8] */, dtype="int8") /* ty=Tensor[(70), int8] */;
  %751 = cast(%var_3511, dtype="int8") /* ty=Tensor[(840), int8] */;
  %752 = cast(%var_3512, dtype="int64") /* ty=Tensor[(960), int64] */;
  %753 = reshape(%750, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %754 = reshape(%751, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %755 = reshape(%752, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %756 = @func_1632(%753, %754, %755) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %757 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %758 = cast(%var_3512, dtype="int64") /* ty=Tensor[(960), int64] */;
  %759 = reshape(%757, newshape=[]) /* ty=int64 */;
  %760 = reshape(%758, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %761 = @func_710(%759, %760) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %762 = maximum(%748, %749) /* ty=Tensor[(6, 7, 2), int16] */;
  %763 = %756.1;
  %764 = %761.0;
  (%762, %763, meta[relay.Constant][70] /* ty=Tensor[(70), int8] */, %var_3511, %var_3512, %764, 8 /* ty=int64 */)
}

def @func_6717(%var_6658: Tensor[(1440), float64], %var_6687: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64], Tensor[(9, 10, 16), float64]) {
  %765 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %766 = cast(%var_6658, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %767 = reshape(%766, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %768 = @func_4364(%767) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %769 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %770 = cast(%var_6687, dtype="int64") /* ty=Tensor[(960), int64] */;
  %771 = reshape(%769, newshape=[]) /* ty=int64 */;
  %772 = reshape(%770, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %773 = @func_710(%771, %772) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %774 = %768.1;
  %775 = cast(%774, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %776 = reshape(%775, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %777 = @func_4364(%776) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %778 = %765.0;
  %779 = @func_6573() /* ty=Tensor[(360), float32] */;
  %780 = %773.0;
  %781 = %777.0;
  (%778, %779, %774, %var_6658, %780, 9 /* ty=int64 */, %var_6687, %781)
}

def @func_10623() -> Tensor[(360), float32] {
  @func_8571() /* ty=Tensor[(360), float32] */
}

def @func_5941(%var_5920: Tensor[(32), float64], %var_5921: Tensor[(24), int32]) -> (Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) {
  %782 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %783 = cast(%var_5920, dtype="float64") /* ty=Tensor[(32), float64] */;
  %784 = cast(%var_5921, dtype="int32") /* ty=Tensor[(24), int32] */;
  %785 = cast(meta[relay.Constant][71] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %786 = reshape(%783, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float64] */;
  %787 = reshape(%784, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %788 = reshape(%785, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %789 = @func_3491(%786, %787, %788) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(2, 8, 2), bool]) */;
  %790 = %782.1;
  %791 = %789.1;
  (%790, %791, %var_5920, %var_5921, meta[relay.Constant][71] /* ty=Tensor[(384), int32] */)
}

def @func_12216() -> Tensor[(11, 9, 8), float64] {
  %792 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %792.1
}

def @func_6901() -> (Tensor[(360), float32],) {
  %793 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %794 = %793.1;
  (%794,)
}

def @func_984(%var_961: Tensor[(4, 5, 2), float64], %var_966: Tensor[(960), int64]) -> (Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  %795 = cast(%var_961, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %796 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %797 = cast(%var_966, dtype="int64") /* ty=Tensor[(960), int64] */;
  %798 = reshape(%796, newshape=[]) /* ty=int64 */;
  %799 = reshape(%797, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %800 = @func_710(%798, %799) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %801 = atan(%795) /* ty=Tensor[(4, 5, 2), float64] */;
  %802 = %800.0;
  (%801, %802, 10 /* ty=int64 */, %var_966)
}

def @func_10001() -> Tensor[(360), float32] {
  @func_9753() /* ty=Tensor[(360), float32] */
}

def @func_7763(%var_7717: int32, %var_7718: Tensor[(1, 8, 11), int32], %var_7739: Tensor[(3584), float64]) -> (Tensor[(1, 8, 11), bool], Tensor[(360), float32], Tensor[(3584), float64], Tensor[(16, 16, 14), bool]) {
  %803 = cast(%var_7717, dtype="bool") /* ty=bool */;
  %804 = cast(%var_7718, dtype="bool") /* ty=Tensor[(1, 8, 11), bool] */;
  %805 = @func_6901() /* ty=(Tensor[(360), float32],) */;
  %806 = cast(%var_7739, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %807 = reshape(%806, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), float64] */;
  %808 = @func_6840(%807) /* ty=(Tensor[(16, 16, 14), bool], Tensor[(16, 16, 14), float64]) */;
  %809 = %808.0;
  %810 = cast(meta[relay.Constant][72] /* ty=Tensor[(16, 16, 14), bool] */, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%809, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %814 = greater_equal(%803, %804) /* ty=Tensor[(1, 8, 11), bool] */;
  %815 = %805.0;
  %816 = less(%812, %813) /* ty=Tensor[(16, 16, 14), bool] */;
  (%814, %815, %var_7739, %816)
}

def @func_8810() -> Tensor[(360), float32] {
  @func_6960() /* ty=Tensor[(360), float32] */
}

def @func_6464(%var_6457: Tensor[(375), float32]) -> (Tensor[(10), float64], Tensor[(5, 15, 5), float64]) {
  %817 = @func_6077() /* ty=(Tensor[(10), float64],) */;
  %818 = cast(%var_6457, dtype="float32") /* ty=Tensor[(375), float32] */;
  %819 = reshape(%818, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), float32] */;
  %820 = @func_1981(%819) /* ty=Tensor[(5, 15, 5), float32] */;
  %821 = cast(%var_6457, dtype="float64") /* ty=Tensor[(375), float64] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%820, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %825 = %817.0;
  %826 = floor_mod(%823, %824) /* ty=Tensor[(5, 15, 5), float64] */;
  (%825, %826)
}

def @func_6152() -> (Tensor[(360), float32], Tensor[(10), float64]) {
  %827 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %828 = @func_6009() /* ty=Tensor[(360), float32] */;
  %829 = %827.2;
  (%828, %829)
}

def @func_10978(%var_10938: Tensor[(1440), float64], %var_10939: Tensor[(960), int64], %var_10965: Tensor[(363), float32]) -> (Tensor[(16, 16, 14), float64], Tensor[(1440), float64], Tensor[(1440), float64], Tensor[(960), int64], Tensor[(360), float32], Tensor[(11, 11, 3), int16], Tensor[(363), float32], Tensor[(11, 11, 3), float32]) {
  %830 = cast(%var_10938, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %831 = cast(%var_10939, dtype="int64") /* ty=Tensor[(960), int64] */;
  %832 = reshape(%830, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %833 = reshape(%831, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %834 = @func_6717(%832, %833) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64], Tensor[(9, 10, 16), float64]) */;
  %835 = cast(%var_10965, dtype="float32") /* ty=Tensor[(363), float32] */;
  %836 = reshape(%835, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %837 = @func_10434(%836) /* ty=(Tensor[(10), float64], Tensor[(11, 11, 3), int16]) */;
  %838 = @func_9329() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32]) */;
  %839 = @func_6133() /* ty=Tensor[(16, 16, 14), float64] */;
  %840 = %834.3;
  %841 = @func_9970() /* ty=Tensor[(360), float32] */;
  %842 = %837.1;
  %843 = %838.1;
  (%839, %840, %var_10938, %var_10939, %841, %842, %var_10965, %843)
}

def @func_9119() -> (Tensor[(360), float32],) {
  %844 = @func_8749() /* ty=Tensor[(360), float32] */;
  (%844,)
}

def @func_9912() -> Tensor[(10), float64] {
  @func_9264() /* ty=Tensor[(10), float64] */
}

def @func_7675(%var_7580: Tensor[(9, 10, 8), float64], %var_7581: Tensor[(9, 10, 8), float64], %var_7606: Tensor[(65, 5), float32], %var_7607: Tensor[(1440), float64], %var_7608: Tensor[(360), float32], %var_7610: Tensor[(1, 260), float32], %var_7625: Tensor[(252), uint8], %var_7626: Tensor[(448), float64], %var_7660: Tensor[(21, 5), float64]) -> (Tensor[(9, 10, 8), float64], Tensor[(70), int8], Tensor[(65, 5), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(7, 10), int8], Tensor[(1, 260), float32], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(1, 960), int64], Tensor[(9, 10, 8), int8], Tensor[(9, 10, 8), uint8], Tensor[(360), float32], Tensor[(21, 5), float64]) {
  %845 = cast(%var_7581, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %846 = shape_of(%var_7580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_7580, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %849 = cast(%var_7606, dtype="float32") /* ty=Tensor[(65, 5), float32] */;
  %850 = cast(%var_7607, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %851 = cast(%var_7608, dtype="float32") /* ty=Tensor[(360), float32] */;
  %852 = cast(meta[relay.Constant][73] /* ty=Tensor[(7, 10), int8] */, dtype="int8") /* ty=Tensor[(7, 10), int8] */;
  %853 = cast(%var_7610, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
  %854 = reshape(%849, newshape=[1, 325]) /* ty=Tensor[(1, 325), float32] */;
  %855 = reshape(%850, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %856 = reshape(%851, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %857 = reshape(%852, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %858 = reshape(%853, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %859 = @func_7465(%854, %855, %856, %857, %858) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) */;
  %860 = cast(%var_7625, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %861 = cast(%var_7625, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %862 = cast(%var_7608, dtype="float32") /* ty=Tensor[(360), float32] */;
  %863 = cast(%var_7626, dtype="float64") /* ty=Tensor[(448), float64] */;
  %864 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 960), int64] */, dtype="int64") /* ty=Tensor[(1, 960), int64] */;
  %865 = reshape(%860, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %866 = reshape(%861, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %867 = reshape(%862, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %868 = reshape(%863, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %869 = reshape(%864, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %870 = @func_2128(%865, %866, %867, %868, %869) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %871 = cast(%var_7580, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %872 = sinh(%871) /* ty=Tensor[(9, 10, 8), float64] */;
  %873 = cast(%var_7581, dtype="int8") /* ty=Tensor[(9, 10, 8), int8] */;
  %874 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%872, dtype="int8") /* ty=Tensor[(9, 10, 8), int8] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %877 = cast(%872, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %878 = shape_of(%var_7581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%var_7581, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %881 = less_equal(%879, %880) /* ty=Tensor[(9, 10, 8), bool] */;
  %882 = cast(%881, dtype="uint8") /* ty=Tensor[(9, 10, 8), uint8] */;
  %883 = shape_of(%872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %884 = cast(%872, dtype="uint8") /* ty=Tensor[(9, 10, 8), uint8] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %886 = cast(%var_7660, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %887 = reshape(%886, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %888 = @func_871(%887) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %889 = floor_divide(%847, %848) /* ty=Tensor[(9, 10, 8), float64] */;
  %890 = %859.6;
  %891 = %870.12;
  %892 = logical_xor(%875, %876) /* ty=Tensor[(9, 10, 8), int8] */;
  %893 = bitwise_or(%884, %885) /* ty=Tensor[(9, 10, 8), uint8] */;
  %894 = %888.1;
  (%889, %890, %var_7606, %var_7607, %var_7608, meta[relay.Constant][73] /* ty=Tensor[(7, 10), int8] */, %var_7610, %891, %var_7625, %var_7626, meta[relay.Constant][74] /* ty=Tensor[(1, 960), int64] */, %892, %893, %894, %var_7660)
}

def @func_9411(%var_9381: Tensor[(60), float32], %var_9392: Tensor[(2, 180), float32]) -> (Tensor[(9, 10, 16), float32], Tensor[(12, 5, 1), float32], Tensor[(60), float32], Tensor[(4, 9, 10), float64], Tensor[(2, 180), float32], Tensor[(32), float64], Tensor[(10), float64]) {
  %895 = @func_8708() /* ty=(Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */;
  %896 = %895.1;
  %897 = cast(meta[relay.Constant][75] /* ty=Tensor[(9, 10, 16), float64] */, dtype="int32") /* ty=Tensor[(9, 10, 16), int32] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%896, dtype="int32") /* ty=Tensor[(9, 10, 16), int32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %901 = bitwise_and(%899, %900) /* ty=Tensor[(9, 10, 16), int32] */;
  %902 = cast(%896, dtype="float32") /* ty=Tensor[(9, 10, 16), float32] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%901, dtype="float32") /* ty=Tensor[(9, 10, 16), float32] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %906 = cast(%var_9381, dtype="float32") /* ty=Tensor[(60), float32] */;
  %907 = reshape(%906, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %908 = cast(%var_9392, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %909 = cast(%var_9392, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %910 = reshape(%908, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %911 = reshape(%909, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %912 = @func_390(%910, %911) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %913 = @func_8423() /* ty=(Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) */;
  %914 = @func_6077() /* ty=(Tensor[(10), float64],) */;
  %915 = mod(%904, %905) /* ty=Tensor[(9, 10, 16), float32] */;
  %916 = @func_8064(%907) /* ty=Tensor[(12, 5, 1), float32] */;
  %917 = %912.0;
  %918 = %913.2;
  %919 = %914.0;
  (%915, %916, %var_9381, %917, %var_9392, %918, %919)
}

def @func_10128() -> (Tensor[(16, 16, 14), int32],) {
  %920 = @func_7548() /* ty=Tensor[(16, 16, 14), int32] */;
  (%920,)
}

def @func_11102() -> (Tensor[(11, 9, 8), float64], Tensor[(?, 15, 7), bool], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64]) {
  %921 = cast(meta[relay.Constant][76] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %922 = cast(meta[relay.Constant][77] /* ty=Tensor[(70), int8] */, dtype="int8") /* ty=Tensor[(70), int8] */;
  %923 = cast(meta[relay.Constant][78] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %924 = reshape(%921, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint16] */;
  %925 = reshape(%922, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %926 = reshape(%923, newshape=[1, 105]) /* ty=Tensor[(1, 105), float64] */;
  %927 = @func_2240(%924, %925, %926) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */;
  %928 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
  %929 = %927.5;
  (%928, %929, meta[relay.Constant][76] /* ty=Tensor[(288), uint16] */, meta[relay.Constant][77] /* ty=Tensor[(70), int8] */, meta[relay.Constant][78] /* ty=Tensor[(105), float64] */)
}

def @func_12028() -> (Tensor[(360), float32],) {
  %930 = @func_8143() /* ty=(Tensor[(360), float32],) */;
  %931 = %930.0;
  (%931,)
}

def @func_1632(%var_1606: Tensor[(10, 7, 1), int8], %var_1607: Tensor[(10, 7, 12), int8], %var_1620: Tensor[(960), int64]) -> (Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) {
  %932 = cast(meta[relay.Constant][79] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %933 = cast(%var_1620, dtype="int64") /* ty=Tensor[(960), int64] */;
  %934 = reshape(%932, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %935 = reshape(%933, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %936 = @func_984(%934, %935) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %937 = cast(meta[relay.Constant][79] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %938 = %936.3;
  %939 = cast(%938, dtype="int64") /* ty=Tensor[(960), int64] */;
  %940 = reshape(%937, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %941 = reshape(%939, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %942 = @func_984(%940, %941) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %943 = cast(%var_1606, dtype="int8") /* ty=Tensor[(10, 7, 1), int8] */;
  %944 = cast(%var_1607, dtype="int8") /* ty=Tensor[(10, 7, 12), int8] */;
  %945 = logical_xor(%943, %944) /* ty=Tensor[(10, 7, 12), int8] */;
  %946 = cast(%var_1607, dtype="int16") /* ty=Tensor[(10, 7, 12), int16] */;
  %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(%945, dtype="int16") /* ty=Tensor[(10, 7, 12), int16] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %950 = %942.3;
  %951 = subtract(%948, %949) /* ty=Tensor[(10, 7, 12), int16] */;
  (%938, meta[relay.Constant][79] /* ty=Tensor[(40), float64] */, %var_1620, %950, %951)
}

def @func_9017() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %952 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
  %953 = @func_6092() /* ty=Tensor[(360), float32] */;
  %954 = %952.1;
  (%953, %954)
}

def @func_8194() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %955 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %956 = @func_6960() /* ty=Tensor[(360), float32] */;
  %957 = %955.0;
  (%956, %957)
}

def @func_710(%var_705: int64, %var_706: Tensor[(16, 15, 4), int64]) -> (Tensor[(16, 15, 4), int64],) {
  %958 = cast(%var_705, dtype="int64") /* ty=int64 */;
  %959 = cast(%var_706, dtype="int64") /* ty=Tensor[(16, 15, 4), int64] */;
  %960 = subtract(%958, %959) /* ty=Tensor[(16, 15, 4), int64] */;
  (%960,)
}

def @func_8914(%var_8862: Tensor[(13, 12, 12), int64], %var_8871: Tensor[(3584), float64], %var_8887: Tensor[(13, 12, 12), int64], %var_8898: Tensor[(13, 12, 12), int64]) -> (Tensor[(16, 16, 14), bool], Tensor[(3584), float64], Tensor[(13, 12, 12), bool], Tensor[(360), float32], Tensor[(13, 12, 12), uint8]) {
  %961 = cast(%var_8871, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %962 = reshape(%961, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), float64] */;
  %963 = @func_7088(%962) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) */;
  %964 = cast(%var_8862, dtype="int64") /* ty=Tensor[(13, 12, 12), int64] */;
  %965 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(13, 12, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(meta[relay.Constant][80] /* ty=Tensor[(13, 12, 12), int64] */, dtype="int64") /* ty=Tensor[(13, 12, 12), int64] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %968 = bitwise_xor(%966, %967) /* ty=Tensor[(13, 12, 12), int64] */;
  %969 = cast(%var_8887, dtype="bool") /* ty=Tensor[(13, 12, 12), bool] */;
  %970 = shape_of(%968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %971 = cast(%968, dtype="bool") /* ty=Tensor[(13, 12, 12), bool] */;
  %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %973 = @func_6261() /* ty=(Tensor[(360), float32],) */;
  %974 = cast(%var_8898, dtype="uint8") /* ty=Tensor[(13, 12, 12), uint8] */;
  %975 = shape_of(%var_8862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%var_8862, dtype="uint8") /* ty=Tensor[(13, 12, 12), uint8] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %978 = %963.1;
  %979 = equal(%971, %972) /* ty=Tensor[(13, 12, 12), bool] */;
  %980 = %973.0;
  %981 = subtract(%976, %977) /* ty=Tensor[(13, 12, 12), uint8] */;
  (%978, %var_8871, %979, %980, %981)
}

def @func_11501(%var_11382: Tensor[(252), uint8], %var_11383: Tensor[(448), float64], %var_11384: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(36, 10), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(176), float32], Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), int32], Tensor[(16, 15, 4), int32], Tensor[(4, 9, 10), float64]) {
  %982 = cast(%var_11382, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %983 = cast(%var_11382, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %984 = @func_6317() /* ty=Tensor[(360), float32] */;
  %985 = cast(%984, dtype="float32") /* ty=Tensor[(360), float32] */;
  %986 = cast(%var_11383, dtype="float64") /* ty=Tensor[(448), float64] */;
  %987 = cast(%var_11384, dtype="int64") /* ty=Tensor[(960), int64] */;
  %988 = reshape(%982, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %989 = reshape(%983, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %990 = reshape(%985, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %991 = reshape(%986, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %992 = reshape(%987, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %993 = @func_2128(%988, %989, %990, %991, %992) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %994 = %993.2;
  %995 = cast(%994, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
  %996 = @func_8194() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %997 = @func_9119() /* ty=(Tensor[(360), float32],) */;
  %998 = @func_9647() /* ty=(Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) */;
  %999 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1000 = @func_10128() /* ty=(Tensor[(16, 16, 14), int32],) */;
  %1001 = cast(%var_11384, dtype="int64") /* ty=Tensor[(960), int64] */;
  %1002 = reshape(%1001, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %1003 = @func_6811(%1002) /* ty=(Tensor[(360), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %1004 = %1003.1;
  %1005 = cast(%var_11384, dtype="int32") /* ty=Tensor[(960), int32] */;
  %1006 = shape_of(%1004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%1004, dtype="int32") /* ty=Tensor[(16, 15, 4), int32] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1009 = %996.0;
  %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1011 = %997.0;
  %1012 = cast(%1011, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1013 = reshape(%1010, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %1014 = reshape(%1012, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %1015 = @func_390(%1013, %1014) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %1016 = cos(%995) /* ty=Tensor[(36, 10), float32] */;
  %1017 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
  %1018 = %998.2;
  %1019 = %999.1;
  %1020 = %1000.0;
  %1021 = bitwise_xor(%1007, %1008) /* ty=Tensor[(16, 15, 4), int32] */;
  %1022 = %1015.0;
  (%984, %var_11382, %var_11383, %1016, %1009, %1011, %1017, %1018, %1019, %1020, %1021, %1022)
}

def @func_7088(%var_7079: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) {
  %1023 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1024 = %1023.1;
  %1025 = cast(%var_7079, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%1024, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1029 = cast(%1024, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %1030 = shape_of(%var_7079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%var_7079, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1033 = power(%1027, %1028) /* ty=Tensor[(16, 16, 14), float64] */;
  %1034 = less_equal(%1031, %1032) /* ty=Tensor[(16, 16, 14), bool] */;
  (%1033, %1034)
}

def @func_12191(%var_12156: Tensor[(375), float32]) -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64], Tensor[(792), float64], Tensor[(4, 9, 10), float64], Tensor[(375), uint8]) {
  %1035 = @func_8503() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %1036 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %1037 = @func_6307() /* ty=Tensor[(360), float32] */;
  %1038 = cast(%1037, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1039 = cast(%1037, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1040 = reshape(%1038, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %1041 = reshape(%1039, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %1042 = @func_390(%1040, %1041) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %1043 = cast(%var_12156, dtype="float32") /* ty=Tensor[(375), float32] */;
  %1044 = reshape(%1043, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), float32] */;
  %1045 = @func_1981(%1044) /* ty=Tensor[(5, 15, 5), float32] */;
  %1046 = cast(%1045, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
  %1047 = shape_of(%var_12156, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1048 = cast(%var_12156, dtype="float64") /* ty=Tensor[(375), float64] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1050 = floor_mod(%1048, %1049) /* ty=Tensor[(375), float64] */;
  %1051 = cast(%var_12156, dtype="uint8") /* ty=Tensor[(375), uint8] */;
  %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1053 = cast(%1050, dtype="uint8") /* ty=Tensor[(375), uint8] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1055 = %1035.0;
  %1056 = %1036.2;
  %1057 = %1042.0;
  %1058 = right_shift(%1053, %1054) /* ty=Tensor[(375), uint8] */;
  (%1037, %1055, %1056, %1057, %1058)
}

def @func_11918(%var_11906: Tensor[(1440), float64]) -> (Tensor[(11, 9, 8), float64], Tensor[(15, 6, 16), float64], Tensor[(1440), float64]) {
  %1059 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %1060 = cast(%var_11906, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1061 = reshape(%1060, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), float64] */;
  %1062 = @func_1267(%1061) /* ty=(Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) */;
  %1063 = %1059.0;
  %1064 = %1062.0;
  (%1063, %1064, %var_11906)
}

def @func_10239() -> (Tensor[(11, 9, 8), float64],) {
  %1065 = @func_9773() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %1066 = %1065.0;
  (%1066,)
}

def @func_8023() -> Tensor[(360), float32] {
  %1067 = @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */;
  %1067.0
}

def @func_1267(%var_1193: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) {
  %1068 = cast(%var_1193, dtype="float64") /* ty=Tensor[(15, 6, 16), float64] */;
  %1069 = erf(%1068) /* ty=Tensor[(15, 6, 16), float64] */;
  %1070 = cast(%1069, dtype="float64") /* ty=Tensor[(15, 6, 16), float64] */;
  %1071 = cast(%1069, dtype="float32") /* ty=Tensor[(15, 6, 16), float32] */;
  %1072 = shape_of(%var_1193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1073 = cast(%var_1193, dtype="float32") /* ty=Tensor[(15, 6, 16), float32] */;
  %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1075 = sqrt(%1070) /* ty=Tensor[(15, 6, 16), float64] */;
  %1076 = power(%1073, %1074) /* ty=Tensor[(15, 6, 16), float32] */;
  (%1075, %1076)
}

def @func_6811(%var_6809: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  %1077 = @func_6261() /* ty=(Tensor[(360), float32],) */;
  %1078 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1079 = cast(%var_6809, dtype="int64") /* ty=Tensor[(960), int64] */;
  %1080 = reshape(%1078, newshape=[]) /* ty=int64 */;
  %1081 = reshape(%1079, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %1082 = @func_710(%1080, %1081) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %1083 = %1077.0;
  %1084 = %1082.0;
  (%1083, %1084, -7 /* ty=int64 */, %var_6809)
}

def @func_5995(%var_5983: Tensor[(288), uint16], %var_5985: Tensor[(105), float64]) -> (Tensor[(16, 16, 14), float64], Tensor[(1, 105), float64], Tensor[(288), uint16], Tensor[(1, 70), int8], Tensor[(105), float64], Tensor[(16, 16, 14), float64]) {
  %1085 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %1086 = cast(%var_5983, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %1087 = cast(meta[relay.Constant][81] /* ty=Tensor[(1, 70), int8] */, dtype="int8") /* ty=Tensor[(1, 70), int8] */;
  %1088 = cast(%var_5985, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1089 = reshape(%1086, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint16] */;
  %1090 = reshape(%1087, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %1091 = reshape(%1088, newshape=[1, 105]) /* ty=Tensor[(1, 105), float64] */;
  %1092 = @func_2240(%1089, %1090, %1091) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */;
  %1093 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1094 = %1085.0;
  %1095 = %1092.6;
  %1096 = %1093.1;
  (%1094, %1095, %var_5983, meta[relay.Constant][81] /* ty=Tensor[(1, 70), int8] */, %var_5985, %1096)
}

def @func_11054(%var_11011: Tensor[(6, 15, 10), uint16], %var_11012: Tensor[(6, 15, 10), uint16]) -> (Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(360), float32], Tensor[(1200), int8], Tensor[(6, 15, 10), float64], Tensor[(16, 16, 14), float64]) {
  %1097 = cast(meta[relay.Constant][82] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %1098 = reshape(%1097, newshape=[14, 11, 5]) /* ty=Tensor[(14, 11, 5), float32] */;
  %1099 = @func_8302(%1098) /* ty=(Tensor[(14, 11, 5), float32],) */;
  %1100 = cast(meta[relay.Constant][83] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %1101 = reshape(%1100, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %1102 = @func_9191(%1101) /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1200), int8]) */;
  %1103 = cast(%var_11012, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %1104 = shape_of(%var_11011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1105 = cast(%var_11011, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1107 = logical_xor(%1105, %1106) /* ty=Tensor[(6, 15, 10), uint16] */;
  %1108 = cast(%1107, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %1109 = tan(%1108) /* ty=Tensor[(6, 15, 10), float64] */;
  %1110 = cast(%var_11011, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
  %1111 = shape_of(%1109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1112 = cast(%1109, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
  %1113 = dyn.reshape(%1110, %1111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1114 = equal(%1112, %1113) /* ty=Tensor[(6, 15, 10), bool] */;
  %1115 = cast(%1114, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %1116 = @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %1117 = %1099.0;
  %1118 = %1102.0;
  %1119 = sqrt(%1115) /* ty=Tensor[(6, 15, 10), float64] */;
  %1120 = %1116.0;
  (%1117, meta[relay.Constant][82] /* ty=Tensor[(770), float32] */, %1118, meta[relay.Constant][83] /* ty=Tensor[(1200), int8] */, %1119, %1120)
}

def @func_7486() -> (Tensor[(360), float32],) {
  %1121 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %1122 = %1121.0;
  (%1122,)
}

def @func_7548() -> Tensor[(16, 16, 14), int32] {
  %1123 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1124 = %1123.1;
  %1125 = cast(meta[relay.Constant][84] /* ty=Tensor[(16, 16, 14), float64] */, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %1126 = shape_of(%1124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1127 = cast(%1124, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%1127, %1128) /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_2742(%var_2731: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) {
  %1129 = cast(%var_2731, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %1130 = cast(meta[relay.Constant][85] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1131 = reshape(%1130, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %1132 = @func_2172(%1131) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %1133 = sigmoid(%1129) /* ty=Tensor[(9, 14, 10), float64] */;
  %1134 = %1132.0;
  (%1133, %1134, meta[relay.Constant][85] /* ty=Tensor[(792), float64] */)
}

def @func_12424() -> (Tensor[(360), float32],) {
  %1135 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%1135,)
}

def @func_1981(%var_1978: Tensor[(5, 15, 5), float32]) -> Tensor[(5, 15, 5), float32] {
  %1136 = cast(%var_1978, dtype="float32") /* ty=Tensor[(5, 15, 5), float32] */;
  asin(%1136) /* ty=Tensor[(5, 15, 5), float32] */
}

def @func_10167() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(10, 1, 5), float32], Tensor[(50), float32]) {
  %1137 = @func_6261() /* ty=(Tensor[(360), float32],) */;
  %1138 = @func_8423() /* ty=(Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) */;
  %1139 = cast(meta[relay.Constant][86] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
  %1140 = reshape(%1139, newshape=[10, 1, 5]) /* ty=Tensor[(10, 1, 5), float32] */;
  %1141 = @func_7042(%1140) /* ty=(Tensor[(10, 1, 5), float32],) */;
  %1142 = %1137.0;
  %1143 = %1138.0;
  %1144 = %1141.0;
  (%1142, %1143, %1144, meta[relay.Constant][86] /* ty=Tensor[(50), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6721(%var_6719: Tensor[(1440), float64], %var_6720: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64], Tensor[(9, 10, 16), float64]) {
  @func_6717(%var_6719, %var_6720) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64], Tensor[(9, 10, 16), float64]) */
}

def @func_8398() -> (Tensor[(11, 9, 8), float64],) {
  %0 = @func_7149() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */;
  %1 = %0.3;
  (%1,)
}

def @func_12193(%var_12192: Tensor[(375), float32]) -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64], Tensor[(792), float64], Tensor[(4, 9, 10), float64], Tensor[(375), uint8]) {
  %26 = fn (%var_12156: Tensor[(375), float32]) -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64], Tensor[(792), float64], Tensor[(4, 9, 10), float64], Tensor[(375), uint8]) {
    %2 = @func_8503() /* ty=(Tensor[(16, 16, 14), float64],) */;
    %3 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
    %4 = @func_6307() /* ty=Tensor[(360), float32] */;
    %5 = cast(%4, dtype="float32") /* ty=Tensor[(360), float32] */;
    %6 = cast(%4, dtype="float32") /* ty=Tensor[(360), float32] */;
    %7 = reshape(%5, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %8 = reshape(%6, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %9 = @func_390(%7, %8) /* ty=(Tensor[(4, 9, 10), float64],) */;
    %10 = cast(%var_12156, dtype="float32") /* ty=Tensor[(375), float32] */;
    %11 = reshape(%10, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), float32] */;
    %12 = @func_1981(%11) /* ty=Tensor[(5, 15, 5), float32] */;
    %13 = cast(%12, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
    %14 = shape_of(%var_12156, dtype="int32") /* ty=Tensor[(1), int32] */;
    %15 = cast(%var_12156, dtype="float64") /* ty=Tensor[(375), float64] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?), float64] */;
    %17 = floor_mod(%15, %16) /* ty=Tensor[(375), float64] */;
    %18 = cast(%var_12156, dtype="uint8") /* ty=Tensor[(375), uint8] */;
    %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(1), int32] */;
    %20 = cast(%17, dtype="uint8") /* ty=Tensor[(375), uint8] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %22 = %2.0;
    %23 = %3.2;
    %24 = %9.0;
    %25 = right_shift(%20, %21) /* ty=Tensor[(375), uint8] */;
    (%4, %22, %23, %24, %25)
  };
  %26(%var_12192) /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64], Tensor[(792), float64], Tensor[(4, 9, 10), float64], Tensor[(375), uint8]) */
}

def @func_10804() -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(5, 6, 3), uint32]) {
  %27 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %30 = reshape(%28, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint64] */;
  %31 = reshape(%29, newshape=[5, 6, 3]) /* ty=Tensor[(5, 6, 3), uint64] */;
  %32 = @func_8256(%30, %31) /* ty=(Tensor[(5, 6, 3), uint64], Tensor[(5, 6, 3), float64]) */;
  %33 = %32.1;
  %34 = cast(meta[relay.Constant][0] /* ty=Tensor[(90), uint64] */, dtype="uint32") /* ty=Tensor[(90), uint32] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%33, dtype="uint32") /* ty=Tensor[(5, 6, 3), uint32] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %38 = @func_6317() /* ty=Tensor[(360), float32] */;
  %39 = %27.0;
  %40 = minimum(%36, %37) /* ty=Tensor[(5, 6, 3), uint32] */;
  (%38, %39, %40)
}

def @func_8363() -> (Tensor[(360), float32],) {
  %42 = fn () -> (Tensor[(360), float32],) {
    %41 = @func_6092() /* ty=Tensor[(360), float32] */;
    (%41,)
  };
  %42() /* ty=(Tensor[(360), float32],) */
}

def @func_871(%var_830: Tensor[(1, 15, 7), float64]) -> (Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) {
  %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %45 = reshape(%43, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %46 = reshape(%44, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %47 = @func_390(%45, %46) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %48 = cast(%var_830, dtype="float64") /* ty=Tensor[(1, 15, 7), float64] */;
  %49 = cosh(%48) /* ty=Tensor[(1, 15, 7), float64] */;
  %50 = cast(%var_830, dtype="bool") /* ty=Tensor[(1, 15, 7), bool] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="bool") /* ty=Tensor[(1, 15, 7), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(363), float32] */, dtype="float32") /* ty=Tensor[(363), float32] */;
  %55 = reshape(%54, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %56 = @func_747(%55) /* ty=(Tensor[(11, 11, 3), float32],) */;
  %57 = %47.0;
  %58 = logical_or(%52, %53) /* ty=Tensor[(?, 15, 7), bool] */;
  %59 = %56.0;
  (%57, meta[relay.Constant][1] /* ty=Tensor[(360), float32] */, %58, %59, meta[relay.Constant][2] /* ty=Tensor[(363), float32] */)
}

def @func_9914() -> Tensor[(10), float64] {
  @func_9912() /* ty=Tensor[(10), float64] */
}

def @func_6545(%var_6543: Tensor[(288), uint16], %var_6544: Tensor[(70), int8]) -> (Tensor[(360), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64], Tensor[(360), float32], Tensor[(10), float64]) {
  %72 = fn (%var_6519: Tensor[(288), uint16], %var_6520: Tensor[(70), int8]) -> (Tensor[(360), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64], Tensor[(360), float32], Tensor[(10), float64]) {
    %60 = cast(%var_6519, dtype="uint16") /* ty=Tensor[(288), uint16] */;
    %61 = cast(%var_6520, dtype="int8") /* ty=Tensor[(70), int8] */;
    %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %63 = reshape(%60, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint16] */;
    %64 = reshape(%61, newshape=[70]) /* ty=Tensor[(70), int8] */;
    %65 = reshape(%62, newshape=[1, 105]) /* ty=Tensor[(1, 105), float64] */;
    %66 = @func_2240(%63, %64, %65) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */;
    %67 = @func_6077() /* ty=(Tensor[(10), float64],) */;
    %68 = @func_6009() /* ty=Tensor[(360), float32] */;
    %69 = %66.2;
    %70 = @func_6307() /* ty=Tensor[(360), float32] */;
    %71 = %67.0;
    (%68, %69, %var_6519, %var_6520, meta[relay.Constant][3] /* ty=Tensor[(105), float64] */, %70, %71)
  };
  %72(%var_6543, %var_6544) /* ty=(Tensor[(360), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64], Tensor[(360), float32], Tensor[(10), float64]) */
}

def @func_7548() -> Tensor[(16, 16, 14), int32] {
  %73 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %74 = %73.1;
  %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 16, 14), float64] */, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%74, dtype="int32") /* ty=Tensor[(16, 16, 14), int32] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%77, %78) /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_6893(%var_6890: Tensor[(5, 10, 1), uint64], %var_6891: Tensor[(24), int32], %var_6892: Tensor[(384), int32]) -> (Tensor[(5, 10, 8), bool], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(360), float32]) {
  @func_6888(%var_6890, %var_6891, %var_6892) /* ty=(Tensor[(5, 10, 8), bool], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(360), float32]) */
}

def @func_6759() -> (Tensor[(16, 16, 14), float64],) {
  %79 = @func_6133() /* ty=Tensor[(16, 16, 14), float64] */;
  (%79,)
}

def @func_7920() -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64]) {
  %83 = fn () -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64]) {
    %80 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
    %81 = @func_6307() /* ty=Tensor[(360), float32] */;
    %82 = %80.1;
    (%81, %82)
  };
  %83() /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64]) */
}

def @func_9834() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  @func_9832() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_5482(%var_5477: Tensor[(2, 8, 8), int64], %var_5478: Tensor[(2, 8, 8), int64], %var_5479: Tensor[(960), int64], %var_5480: Tensor[(840), int8], %var_5481: Tensor[(360), float32]) -> (Tensor[(2, 8, 8), float32], Tensor[(960), int64], Tensor[(448), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(2, 8, 8), float64], Tensor[(840), int8], Tensor[(1, 84), int16], Tensor[(840), int8], Tensor[(6, 7, 6), bool], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(960), int64]) {
  @func_5475(%var_5477, %var_5478, %var_5479, %var_5480, %var_5481) /* ty=(Tensor[(2, 8, 8), float32], Tensor[(960), int64], Tensor[(448), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(2, 8, 8), float64], Tensor[(840), int8], Tensor[(1, 84), int16], Tensor[(840), int8], Tensor[(6, 7, 6), bool], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(960), int64]) */
}

def @func_10436(%var_10435: Tensor[(11, 11, 3), float32]) -> (Tensor[(10), float64], Tensor[(11, 11, 3), int16]) {
  %93 = fn (%var_10422: Tensor[(11, 11, 3), float32]) -> (Tensor[(10), float64], Tensor[(11, 11, 3), int16]) {
    %84 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
    %85 = @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */;
    %86 = %85.1;
    %87 = cast(%var_10422, dtype="int16") /* ty=Tensor[(11, 11, 3), int16] */;
    %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%86, dtype="int16") /* ty=Tensor[(11, 11, 3), int16] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %91 = %84.2;
    %92 = maximum(%89, %90) /* ty=Tensor[(11, 11, 3), int16] */;
    (%91, %92)
  };
  %93(%var_10435) /* ty=(Tensor[(10), float64], Tensor[(11, 11, 3), int16]) */
}

def @func_9353() -> (Tensor[(16, 16, 14), float64], Tensor[(384), int32], Tensor[(32), float64], Tensor[(24), int32]) {
  @func_9351() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(384), int32], Tensor[(32), float64], Tensor[(24), int32]) */
}

def @func_10241() -> (Tensor[(11, 9, 8), float64],) {
  @func_10239() /* ty=(Tensor[(11, 9, 8), float64],) */
}

def @func_8846() -> (Tensor[(10), float64], Tensor[(360), float32]) {
  %94 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %95 = %94.2;
  %96 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%95, %96)
}

def @func_12361(%var_12359: Tensor[(8, 14, 13), uint64]) -> Tensor[(8, 14, 13), uint64] {
  @func_12358(%var_12359) /* ty=Tensor[(8, 14, 13), uint64] */
}

def @func_2174(%var_2173: Tensor[(11, 9, 8), float64]) -> (Tensor[(11, 9, 8), float64],) {
  %99 = fn (%var_2158: Tensor[(11, 9, 8), float64]) -> (Tensor[(11, 9, 8), float64],) {
    %97 = cast(%var_2158, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
    %98 = sinh(%97) /* ty=Tensor[(11, 9, 8), float64] */;
    (%98,)
  };
  %99(%var_2173) /* ty=(Tensor[(11, 9, 8), float64],) */
}

def @func_1981(%var_1978: Tensor[(5, 15, 5), float32]) -> Tensor[(5, 15, 5), float32] {
  %100 = cast(%var_1978, dtype="float32") /* ty=Tensor[(5, 15, 5), float32] */;
  asin(%100) /* ty=Tensor[(5, 15, 5), float32] */
}

def @func_11920(%var_11919: Tensor[(1440), float64]) -> (Tensor[(11, 9, 8), float64], Tensor[(15, 6, 16), float64], Tensor[(1440), float64]) {
  %107 = fn (%var_11906: Tensor[(1440), float64]) -> (Tensor[(11, 9, 8), float64], Tensor[(15, 6, 16), float64], Tensor[(1440), float64]) {
    %101 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
    %102 = cast(%var_11906, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %103 = reshape(%102, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), float64] */;
    %104 = @func_1267(%103) /* ty=(Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) */;
    %105 = %101.0;
    %106 = %104.0;
    (%105, %106, %var_11906)
  };
  %107(%var_11919) /* ty=(Tensor[(11, 9, 8), float64], Tensor[(15, 6, 16), float64], Tensor[(1440), float64]) */
}

def @func_6574() -> Tensor[(360), float32] {
  %108 = fn () -> Tensor[(360), float32] {
    @func_6307() /* ty=Tensor[(360), float32] */
  };
  %108() /* ty=Tensor[(360), float32] */
}

def @func_4345(%var_4344: Tensor[(11, 1, 16), float32]) -> (Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(16, 15, 4), int64], Tensor[(84), int16], Tensor[(60, 14), int8], Tensor[(960), int64]) {
  %123 = fn (%var_4305: Tensor[(11, 1, 16), float32]) -> (Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(16, 15, 4), int64], Tensor[(84), int16], Tensor[(60, 14), int8], Tensor[(960), int64]) {
    %109 = cast(%var_4305, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
    %110 = cast(%var_4305, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
    %111 = cast(meta[relay.Constant][5] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %112 = cast(meta[relay.Constant][5] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %113 = cast(meta[relay.Constant][6] /* ty=Tensor[(60, 14), int8] */, dtype="int8") /* ty=Tensor[(60, 14), int8] */;
    %114 = cast(meta[relay.Constant][7] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
    %115 = reshape(%111, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
    %116 = reshape(%112, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
    %117 = reshape(%113, newshape=[840]) /* ty=Tensor[(840), int8] */;
    %118 = reshape(%114, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %119 = @func_3520(%115, %116, %117, %118) /* ty=(Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) */;
    %120 = asin(%109) /* ty=Tensor[(11, 1, 16), float32] */;
    %121 = sin(%110) /* ty=Tensor[(11, 1, 16), float64] */;
    %122 = %119.5;
    (%120, %121, %122, meta[relay.Constant][5] /* ty=Tensor[(84), int16] */, meta[relay.Constant][6] /* ty=Tensor[(60, 14), int8] */, meta[relay.Constant][7] /* ty=Tensor[(960), int64] */)
  };
  %123(%var_4344) /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(16, 15, 4), int64], Tensor[(84), int16], Tensor[(60, 14), int8], Tensor[(960), int64]) */
}

def @func_5865() -> (Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) {
  @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */
}

def @func_8811() -> Tensor[(360), float32] {
  %124 = fn () -> Tensor[(360), float32] {
    @func_6960() /* ty=Tensor[(360), float32] */
  };
  %124() /* ty=Tensor[(360), float32] */
}

def @func_6717(%var_6658: Tensor[(1440), float64], %var_6687: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64], Tensor[(9, 10, 16), float64]) {
  %125 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %126 = cast(%var_6658, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %127 = reshape(%126, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %128 = @func_4364(%127) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %129 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %130 = cast(%var_6687, dtype="int64") /* ty=Tensor[(960), int64] */;
  %131 = reshape(%129, newshape=[]) /* ty=int64 */;
  %132 = reshape(%130, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %133 = @func_710(%131, %132) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %134 = %128.1;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %136 = reshape(%135, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %137 = @func_4364(%136) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %138 = %125.0;
  %139 = @func_6573() /* ty=Tensor[(360), float32] */;
  %140 = %133.0;
  %141 = %137.0;
  (%138, %139, %134, %var_6658, %140, 9 /* ty=int64 */, %var_6687, %141)
}

def @func_10806() -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(5, 6, 3), uint32]) {
  @func_10804() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(5, 6, 3), uint32]) */
}

def @func_6262() -> (Tensor[(360), float32],) {
  %143 = fn () -> (Tensor[(360), float32],) {
    %142 = @func_6009() /* ty=Tensor[(360), float32] */;
    (%142,)
  };
  %143() /* ty=(Tensor[(360), float32],) */
}

def @func_4083(%var_4081: Tensor[(4, 5, 1), uint32], %var_4082: Tensor[(4, 5, 13), uint32]) -> (Tensor[(4, 5, 13), bool],) {
  @func_4079(%var_4081, %var_4082) /* ty=(Tensor[(4, 5, 13), bool],) */
}

def @func_7763(%var_7717: int32, %var_7718: Tensor[(1, 8, 11), int32], %var_7739: Tensor[(3584), float64]) -> (Tensor[(1, 8, 11), bool], Tensor[(360), float32], Tensor[(3584), float64], Tensor[(16, 16, 14), bool]) {
  %144 = cast(%var_7717, dtype="bool") /* ty=bool */;
  %145 = cast(%var_7718, dtype="bool") /* ty=Tensor[(1, 8, 11), bool] */;
  %146 = @func_6901() /* ty=(Tensor[(360), float32],) */;
  %147 = cast(%var_7739, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %148 = reshape(%147, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), float64] */;
  %149 = @func_6840(%148) /* ty=(Tensor[(16, 16, 14), bool], Tensor[(16, 16, 14), float64]) */;
  %150 = %149.0;
  %151 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 16, 14), bool] */, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%150, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %155 = greater_equal(%144, %145) /* ty=Tensor[(1, 8, 11), bool] */;
  %156 = %146.0;
  %157 = less(%153, %154) /* ty=Tensor[(16, 16, 14), bool] */;
  (%155, %156, %var_7739, %157)
}

def @func_7858(%var_7856: Tensor[(1440), float64]) -> (Tensor[(360), float32], Tensor[(15, 6, 16), float64], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(36, 22), float64]) {
  @func_7855(%var_7856) /* ty=(Tensor[(360), float32], Tensor[(15, 6, 16), float64], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(36, 22), float64]) */
}

def @func_10618(%var_10615: Tensor[(375), float32], %var_10616: Tensor[(288), uint16], %var_10617: Tensor[(70), int8]) -> (Tensor[(360), float32], Tensor[(375), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(5, 15, 5), uint16]) {
  %175 = fn (%var_10570: Tensor[(375), float32], %var_10581: Tensor[(288), uint16], %var_10582: Tensor[(70), int8]) -> (Tensor[(360), float32], Tensor[(375), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(5, 15, 5), uint16]) {
    %158 = cast(%var_10581, dtype="uint16") /* ty=Tensor[(288), uint16] */;
    %159 = cast(%var_10582, dtype="int8") /* ty=Tensor[(70), int8] */;
    %160 = reshape(%158, newshape=[288]) /* ty=Tensor[(288), uint16] */;
    %161 = reshape(%159, newshape=[70]) /* ty=Tensor[(70), int8] */;
    %162 = @func_6542(%160, %161) /* ty=(Tensor[(360), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
    %163 = cast(%var_10570, dtype="float32") /* ty=Tensor[(375), float32] */;
    %164 = reshape(%163, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), float32] */;
    %165 = @func_1981(%164) /* ty=Tensor[(5, 15, 5), float32] */;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(5, 15, 5), float32] */;
    %167 = sin(%166) /* ty=Tensor[(5, 15, 5), float32] */;
    %168 = cast(%165, dtype="uint16") /* ty=Tensor[(5, 15, 5), uint16] */;
    %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %170 = cast(%167, dtype="uint16") /* ty=Tensor[(5, 15, 5), uint16] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %172 = @func_6092() /* ty=Tensor[(360), float32] */;
    %173 = %162.3;
    %174 = subtract(%170, %171) /* ty=Tensor[(5, 15, 5), uint16] */;
    (%172, %var_10570, %173, %var_10581, %var_10582, %174)
  };
  %175(%var_10615, %var_10616, %var_10617) /* ty=(Tensor[(360), float32], Tensor[(375), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(5, 15, 5), uint16]) */
}

def @func_12288(%var_12286: Tensor[(13, 15, 5), float64], %var_12287: Tensor[(13, 15, 5), float64]) -> (Tensor[(13, 15, 5), bool], Tensor[(13, 15, 5), float64]) {
  @func_12284(%var_12286, %var_12287) /* ty=(Tensor[(13, 15, 5), bool], Tensor[(13, 15, 5), float64]) */
}

def @func_1930(%var_1928: Tensor[(4, 6, 1), int32], %var_1929: Tensor[(4, 6, 16), int32]) -> Tensor[(4, 6, 16), int32] {
  @func_1926(%var_1928, %var_1929) /* ty=Tensor[(4, 6, 16), int32] */
}

def @func_5999(%var_5997: Tensor[(288), uint16], %var_5998: Tensor[(105), float64]) -> (Tensor[(16, 16, 14), float64], Tensor[(1, 105), float64], Tensor[(288), uint16], Tensor[(1, 70), int8], Tensor[(105), float64], Tensor[(16, 16, 14), float64]) {
  @func_5995(%var_5997, %var_5998) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(1, 105), float64], Tensor[(288), uint16], Tensor[(1, 70), int8], Tensor[(105), float64], Tensor[(16, 16, 14), float64]) */
}

def @func_7550() -> Tensor[(16, 16, 14), int32] {
  @func_7548() /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_8848() -> (Tensor[(10), float64], Tensor[(360), float32]) {
  @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */
}

def @func_10239() -> (Tensor[(11, 9, 8), float64],) {
  %176 = @func_9773() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %177 = %176.0;
  (%177,)
}

def @func_6617() -> (Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) {
  @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */
}

def @func_12284(%var_12233: Tensor[(13, 15, 5), float64], %var_12234: Tensor[(13, 15, 5), float64]) -> (Tensor[(13, 15, 5), bool], Tensor[(13, 15, 5), float64]) {
  %178 = cast(%var_12234, dtype="bool") /* ty=Tensor[(13, 15, 5), bool] */;
  %179 = shape_of(%var_12233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(%var_12233, dtype="bool") /* ty=Tensor[(13, 15, 5), bool] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %182 = cast(%var_12234, dtype="float64") /* ty=Tensor[(13, 15, 5), float64] */;
  %183 = greater_equal(%180, %181) /* ty=Tensor[(13, 15, 5), bool] */;
  %184 = sinh(%182) /* ty=Tensor[(13, 15, 5), float64] */;
  (%183, %184)
}

def @func_12217() -> Tensor[(11, 9, 8), float64] {
  %186 = fn () -> Tensor[(11, 9, 8), float64] {
    %185 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
    %185.1
  };
  %186() /* ty=Tensor[(11, 9, 8), float64] */
}

def @func_749(%var_748: Tensor[(11, 11, 3), float32]) -> (Tensor[(11, 11, 3), float32],) {
  %189 = fn (%var_736: Tensor[(11, 11, 3), float32]) -> (Tensor[(11, 11, 3), float32],) {
    %187 = cast(%var_736, dtype="float32") /* ty=Tensor[(11, 11, 3), float32] */;
    %188 = log10(%187) /* ty=Tensor[(11, 11, 3), float32] */;
    (%188,)
  };
  %189(%var_748) /* ty=(Tensor[(11, 11, 3), float32],) */
}

def @func_3731(%var_3729: int64, %var_3730: Tensor[(2, 15, 8), int64]) -> Tensor[(2, 15, 8), int64] {
  %192 = fn (%var_3715: int64, %var_3716: Tensor[(2, 15, 8), int64]) -> Tensor[(2, 15, 8), int64] {
    %190 = cast(%var_3715, dtype="int64") /* ty=int64 */;
    %191 = cast(%var_3716, dtype="int64") /* ty=Tensor[(2, 15, 8), int64] */;
    bitwise_xor(%190, %191) /* ty=Tensor[(2, 15, 8), int64] */
  };
  %192(%var_3729, %var_3730) /* ty=Tensor[(2, 15, 8), int64] */
}

def @func_9971() -> Tensor[(360), float32] {
  %193 = fn () -> Tensor[(360), float32] {
    @func_9690() /* ty=Tensor[(360), float32] */
  };
  %193() /* ty=Tensor[(360), float32] */
}

def @func_9649() -> (Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) {
  @func_9647() /* ty=(Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) */
}

def @func_6153() -> (Tensor[(360), float32], Tensor[(10), float64]) {
  %197 = fn () -> (Tensor[(360), float32], Tensor[(10), float64]) {
    %194 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
    %195 = @func_6009() /* ty=Tensor[(360), float32] */;
    %196 = %194.2;
    (%195, %196)
  };
  %197() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */
}

def @func_11054(%var_11011: Tensor[(6, 15, 10), uint16], %var_11012: Tensor[(6, 15, 10), uint16]) -> (Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(360), float32], Tensor[(1200), int8], Tensor[(6, 15, 10), float64], Tensor[(16, 16, 14), float64]) {
  %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %199 = reshape(%198, newshape=[14, 11, 5]) /* ty=Tensor[(14, 11, 5), float32] */;
  %200 = @func_8302(%199) /* ty=(Tensor[(14, 11, 5), float32],) */;
  %201 = cast(meta[relay.Constant][10] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
  %202 = reshape(%201, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
  %203 = @func_9191(%202) /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1200), int8]) */;
  %204 = cast(%var_11012, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %205 = shape_of(%var_11011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%var_11011, dtype="uint16") /* ty=Tensor[(6, 15, 10), uint16] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %208 = logical_xor(%206, %207) /* ty=Tensor[(6, 15, 10), uint16] */;
  %209 = cast(%208, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %210 = tan(%209) /* ty=Tensor[(6, 15, 10), float64] */;
  %211 = cast(%var_11011, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="bool") /* ty=Tensor[(6, 15, 10), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = equal(%213, %214) /* ty=Tensor[(6, 15, 10), bool] */;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(6, 15, 10), float64] */;
  %217 = @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %218 = %200.0;
  %219 = %203.0;
  %220 = sqrt(%216) /* ty=Tensor[(6, 15, 10), float64] */;
  %221 = %217.0;
  (%218, meta[relay.Constant][9] /* ty=Tensor[(770), float32] */, %219, meta[relay.Constant][10] /* ty=Tensor[(1200), int8] */, %220, %221)
}

def @func_8572() -> Tensor[(360), float32] {
  %223 = fn () -> Tensor[(360), float32] {
    %222 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
    %222.0
  };
  %223() /* ty=Tensor[(360), float32] */
}

def @func_12517(%var_12432: Tensor[(363, 1), float32], %var_12436: Tensor[(11, 11, 3), float32], %var_12461: Tensor[(960), int64]) -> (Tensor[(16, 16, 14), float64], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(960), int64], Tensor[(363, 360), int32], Tensor[(11, 11, 3), float64]) {
  %224 = @func_8503() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %225 = cast(meta[relay.Constant][11] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %226 = cast(meta[relay.Constant][11] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %227 = @func_11535() /* ty=(Tensor[(360), float32],) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(360), float32] */;
  %230 = cast(meta[relay.Constant][12] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %231 = cast(%var_12461, dtype="int64") /* ty=Tensor[(960), int64] */;
  %232 = reshape(%225, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %233 = reshape(%226, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %234 = reshape(%229, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %235 = reshape(%230, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %236 = reshape(%231, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %237 = @func_2128(%232, %233, %234, %235, %236) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %238 = cast(%228, dtype="int32") /* ty=Tensor[(360), int32] */;
  %239 = cast(%var_12432, dtype="int32") /* ty=Tensor[(363, 1), int32] */;
  %240 = cast(%var_12432, dtype="float32") /* ty=Tensor[(363, 1), float32] */;
  %241 = reshape(%240, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %242 = @func_747(%241) /* ty=(Tensor[(11, 11, 3), float32],) */;
  %243 = %242.0;
  %244 = cast(%var_12436, dtype="uint64") /* ty=Tensor[(11, 11, 3), uint64] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="uint64") /* ty=Tensor[(11, 11, 3), uint64] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %248 = right_shift(%246, %247) /* ty=Tensor[(11, 11, 3), uint64] */;
  %249 = cast(%248, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %250 = log2(%249) /* ty=Tensor[(11, 11, 3), float64] */;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(11, 11, 3), float32] */;
  %252 = atan(%251) /* ty=Tensor[(11, 11, 3), float32] */;
  %253 = cast(%250, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="float64") /* ty=Tensor[(11, 11, 3), float64] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %257 = %224.0;
  %258 = %237.12;
  %259 = logical_xor(%238, %239) /* ty=Tensor[(363, 360), int32] */;
  %260 = power(%255, %256) /* ty=Tensor[(11, 11, 3), float64] */;
  (%257, %258, meta[relay.Constant][11] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(448), float64] */, %var_12461, %259, %260)
}

def @func_1632(%var_1606: Tensor[(10, 7, 1), int8], %var_1607: Tensor[(10, 7, 12), int8], %var_1620: Tensor[(960), int64]) -> (Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) {
  %261 = cast(meta[relay.Constant][13] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %262 = cast(%var_1620, dtype="int64") /* ty=Tensor[(960), int64] */;
  %263 = reshape(%261, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %264 = reshape(%262, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %265 = @func_984(%263, %264) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %266 = cast(meta[relay.Constant][13] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %267 = %265.3;
  %268 = cast(%267, dtype="int64") /* ty=Tensor[(960), int64] */;
  %269 = reshape(%266, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %270 = reshape(%268, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %271 = @func_984(%269, %270) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %272 = cast(%var_1606, dtype="int8") /* ty=Tensor[(10, 7, 1), int8] */;
  %273 = cast(%var_1607, dtype="int8") /* ty=Tensor[(10, 7, 12), int8] */;
  %274 = logical_xor(%272, %273) /* ty=Tensor[(10, 7, 12), int8] */;
  %275 = cast(%var_1607, dtype="int16") /* ty=Tensor[(10, 7, 12), int16] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%274, dtype="int16") /* ty=Tensor[(10, 7, 12), int16] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %279 = %271.3;
  %280 = subtract(%277, %278) /* ty=Tensor[(10, 7, 12), int16] */;
  (%267, meta[relay.Constant][13] /* ty=Tensor[(40), float64] */, %var_1620, %279, %280)
}

def @func_8983() -> (Tensor[(360), float32],) {
  @func_8981() /* ty=(Tensor[(360), float32],) */
}

def @func_11821() -> Tensor[(360), float32] {
  %281 = fn () -> Tensor[(360), float32] {
    @func_9970() /* ty=Tensor[(360), float32] */
  };
  %281() /* ty=Tensor[(360), float32] */
}

def @func_10735(%var_10730: Tensor[(325), float32], %var_10731: Tensor[(1440), float64], %var_10732: Tensor[(360), float32], %var_10733: Tensor[(70), int8], %var_10734: Tensor[(260), float32]) -> (Tensor[(792), float64], Tensor[(363), float32], Tensor[(105), float64], Tensor[(792), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(70), int8], Tensor[(260), float32], Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64]) {
  @func_10728(%var_10730, %var_10731, %var_10732, %var_10733, %var_10734) /* ty=(Tensor[(792), float64], Tensor[(363), float32], Tensor[(105), float64], Tensor[(792), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(70), int8], Tensor[(260), float32], Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64]) */
}

def @func_12539(%var_12532: Tensor[(3, 3, 4), float32], %var_12533: Tensor[(3, 3, 4), float32]) -> (Tensor[(3, 3, 4), float32],) {
  %282 = cast(%var_12533, dtype="float32") /* ty=Tensor[(3, 3, 4), float32] */;
  %283 = shape_of(%var_12532, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%var_12532, dtype="float32") /* ty=Tensor[(3, 3, 4), float32] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %286 = subtract(%284, %285) /* ty=Tensor[(3, 3, 4), float32] */;
  (%286,)
}

def @func_6289() -> (Tensor[(360), float32],) {
  %288 = fn () -> (Tensor[(360), float32],) {
    %287 = @func_6009() /* ty=Tensor[(360), float32] */;
    (%287,)
  };
  %288() /* ty=(Tensor[(360), float32],) */
}

def @func_9351() -> (Tensor[(16, 16, 14), float64], Tensor[(384), int32], Tensor[(32), float64], Tensor[(24), int32]) {
  %289 = @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %290 = cast(meta[relay.Constant][14] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %291 = cast(meta[relay.Constant][15] /* ty=Tensor[(24), int32] */, dtype="int32") /* ty=Tensor[(24), int32] */;
  %292 = reshape(%290, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %293 = reshape(%291, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %294 = @func_5941(%292, %293) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) */;
  %295 = %289.0;
  %296 = %294.4;
  (%295, %296, meta[relay.Constant][14] /* ty=Tensor[(32), float64] */, meta[relay.Constant][15] /* ty=Tensor[(24), int32] */)
}

def @func_10302() -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64]) {
  %297 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
  %298 = @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %299 = %298.0;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %301 = %297.1;
  %302 = tan(%300) /* ty=Tensor[(16, 16, 14), float64] */;
  (%301, %302)
}

def @func_8981() -> (Tensor[(360), float32],) {
  %303 = @func_8362() /* ty=(Tensor[(360), float32],) */;
  %304 = %303.0;
  (%304,)
}

def @main() -> (Tensor[(360), float32], Tensor[(363, 360), int32], Tensor[(363), float32], Tensor[(120, 8), float32]) {
  %305 = @func_8941() /* ty=(Tensor[(360), float32],) */;
  %306 = cast(meta[relay.Constant][16] /* ty=Tensor[(363), float32] */, dtype="float32") /* ty=Tensor[(363), float32] */;
  %307 = cast(meta[relay.Constant][16] /* ty=Tensor[(363), float32] */, dtype="float32") /* ty=Tensor[(363), float32] */;
  %308 = cast(meta[relay.Constant][17] /* ty=Tensor[(120, 8), int64] */, dtype="int64") /* ty=Tensor[(120, 8), int64] */;
  %309 = reshape(%306, newshape=[363, 1]) /* ty=Tensor[(363, 1), float32] */;
  %310 = reshape(%307, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %311 = reshape(%308, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %312 = @func_12522(%309, %310, %311) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(960), int64], Tensor[(363, 360), int32], Tensor[(11, 11, 3), float64]) */;
  %313 = cast(meta[relay.Constant][17] /* ty=Tensor[(120, 8), int64] */, dtype="float32") /* ty=Tensor[(120, 8), float32] */;
  %314 = %305.0;
  %315 = %312.5;
  %316 = acosh(%313) /* ty=Tensor[(120, 8), float32] */;
  (%314, %315, meta[relay.Constant][16] /* ty=Tensor[(363), float32] */, %316)
}

def @func_12672() -> (Tensor[(16, 16, 14), float64], Tensor[(360), float32]) {
  @func_12670() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32]) */
}

def @func_713(%var_711: int64, %var_712: Tensor[(16, 15, 4), int64]) -> (Tensor[(16, 15, 4), int64],) {
  %320 = fn (%var_705: int64, %var_706: Tensor[(16, 15, 4), int64]) -> (Tensor[(16, 15, 4), int64],) {
    %317 = cast(%var_705, dtype="int64") /* ty=int64 */;
    %318 = cast(%var_706, dtype="int64") /* ty=Tensor[(16, 15, 4), int64] */;
    %319 = subtract(%317, %318) /* ty=Tensor[(16, 15, 4), int64] */;
    (%319,)
  };
  %320(%var_711, %var_712) /* ty=(Tensor[(16, 15, 4), int64],) */
}

def @func_8256(%var_8215: Tensor[(5, 6, 3), uint64], %var_8216: Tensor[(5, 6, 3), uint64]) -> (Tensor[(5, 6, 3), uint64], Tensor[(5, 6, 3), float64]) {
  %321 = cast(%var_8216, dtype="uint64") /* ty=Tensor[(5, 6, 3), uint64] */;
  %322 = shape_of(%var_8215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%var_8215, dtype="uint64") /* ty=Tensor[(5, 6, 3), uint64] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %325 = cast(%var_8215, dtype="float64") /* ty=Tensor[(5, 6, 3), float64] */;
  %326 = bitwise_or(%323, %324) /* ty=Tensor[(5, 6, 3), uint64] */;
  %327 = log(%325) /* ty=Tensor[(5, 6, 3), float64] */;
  (%326, %327)
}

def @func_11660(%var_11657: Tensor[(3, 3, 15), float64], %var_11658: Tensor[(375), float32], %var_11659: Tensor[(7, 10), int8]) -> (Tensor[(70), int8], Tensor[(375), float32], Tensor[(288, 1), uint16], Tensor[(7, 10), int8], Tensor[(3, 3, 15), bool], Tensor[(4, 5, 2), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(360), float32]) {
  @func_11655(%var_11657, %var_11658, %var_11659) /* ty=(Tensor[(70), int8], Tensor[(375), float32], Tensor[(288, 1), uint16], Tensor[(7, 10), int8], Tensor[(3, 3, 15), bool], Tensor[(4, 5, 2), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(360), float32]) */
}

def @func_4079(%var_4065: Tensor[(4, 5, 1), uint32], %var_4066: Tensor[(4, 5, 13), uint32]) -> (Tensor[(4, 5, 13), bool],) {
  %328 = cast(%var_4065, dtype="bool") /* ty=Tensor[(4, 5, 1), bool] */;
  %329 = cast(%var_4066, dtype="bool") /* ty=Tensor[(4, 5, 13), bool] */;
  %330 = less(%328, %329) /* ty=Tensor[(4, 5, 13), bool] */;
  (%330,)
}

def @func_12522(%var_12519: Tensor[(363, 1), float32], %var_12520: Tensor[(11, 11, 3), float32], %var_12521: Tensor[(960), int64]) -> (Tensor[(16, 16, 14), float64], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(960), int64], Tensor[(363, 360), int32], Tensor[(11, 11, 3), float64]) {
  @func_12517(%var_12519, %var_12520, %var_12521) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(960), int64], Tensor[(363, 360), int32], Tensor[(11, 11, 3), float64]) */
}

def @func_6961() -> Tensor[(360), float32] {
  %331 = fn () -> Tensor[(360), float32] {
    @func_6573() /* ty=Tensor[(360), float32] */
  };
  %331() /* ty=Tensor[(360), float32] */
}

def @func_9103() -> Tensor[(10), float64] {
  %333 = fn () -> Tensor[(10), float64] {
    %332 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
    %332.0
  };
  %333() /* ty=Tensor[(10), float64] */
}

def @func_7269(%var_7232: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), int16], Tensor[(16, 3, 12), float64]) {
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(16, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %335 = shape_of(%var_7232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%var_7232, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %338 = floor_mod(%336, %337) /* ty=Tensor[(16, 3, 12), float64] */;
  %339 = cast(%338, dtype="int16") /* ty=Tensor[(16, 3, 12), int16] */;
  %340 = shape_of(%var_7232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%var_7232, dtype="int16") /* ty=Tensor[(16, 3, 12), int16] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %343 = cast(%var_7232, dtype="float64") /* ty=Tensor[(16, 3, 12), float64] */;
  %344 = subtract(%341, %342) /* ty=Tensor[(16, 3, 12), int16] */;
  %345 = log(%343) /* ty=Tensor[(16, 3, 12), float64] */;
  (%344, %345)
}

def @func_8709() -> (Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
  %352 = fn () -> (Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) {
    %346 = @func_8362() /* ty=(Tensor[(360), float32],) */;
    %347 = cast(meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %348 = reshape(%347, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
    %349 = @func_4364(%348) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
    %350 = %346.0;
    %351 = %349.1;
    (%350, %351, meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */)
  };
  %352() /* ty=(Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */
}

def @func_8485() -> Tensor[(16, 16, 14), float64] {
  %354 = fn () -> Tensor[(16, 16, 14), float64] {
    %353 = @func_8384() /* ty=(Tensor[(16, 16, 14), float64],) */;
    %353.0
  };
  %354() /* ty=Tensor[(16, 16, 14), float64] */
}

def @func_8505() -> (Tensor[(16, 16, 14), float64],) {
  @func_8503() /* ty=(Tensor[(16, 16, 14), float64],) */
}

def @func_9773() -> (Tensor[(11, 9, 8), float64],) {
  %355 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %356 = %355.0;
  (%356,)
}

def @func_9775() -> (Tensor[(11, 9, 8), float64],) {
  @func_9773() /* ty=(Tensor[(11, 9, 8), float64],) */
}

def @func_6337() -> (Tensor[(16, 16, 14), float64],) {
  @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */
}

def @func_6094() -> Tensor[(360), float32] {
  @func_6092() /* ty=Tensor[(360), float32] */
}

def @func_7045(%var_7043: Tensor[(10, 1, 5), float32]) -> (Tensor[(10, 1, 5), float32],) {
  @func_7042(%var_7043) /* ty=(Tensor[(10, 1, 5), float32],) */
}

def @func_2579(%var_2577: Tensor[(10, 1, 8), int8], %var_2578: Tensor[(10, 15, 8), int8]) -> (Tensor[(10, 15, 8), int8], Tensor[(10, 1, 8), float64]) {
  %362 = fn (%var_2564: Tensor[(10, 1, 8), int8], %var_2565: Tensor[(10, 15, 8), int8]) -> (Tensor[(10, 15, 8), int8], Tensor[(10, 1, 8), float64]) {
    %357 = cast(%var_2564, dtype="int8") /* ty=Tensor[(10, 1, 8), int8] */;
    %358 = cast(%var_2565, dtype="int8") /* ty=Tensor[(10, 15, 8), int8] */;
    %359 = cast(%var_2564, dtype="float64") /* ty=Tensor[(10, 1, 8), float64] */;
    %360 = bitwise_and(%357, %358) /* ty=Tensor[(10, 15, 8), int8] */;
    %361 = exp(%359) /* ty=Tensor[(10, 1, 8), float64] */;
    (%360, %361)
  };
  %362(%var_2577, %var_2578) /* ty=(Tensor[(10, 15, 8), int8], Tensor[(10, 1, 8), float64]) */
}

def @func_10523() -> Tensor[(11, 9, 8), float64] {
  %364 = fn () -> Tensor[(11, 9, 8), float64] {
    %363 = @func_7149() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */;
    %363.3
  };
  %364() /* ty=Tensor[(11, 9, 8), float64] */
}

def @func_9692() -> Tensor[(360), float32] {
  @func_9690() /* ty=Tensor[(360), float32] */
}

def @func_12609() -> (Tensor[(10), float64],) {
  %367 = fn () -> (Tensor[(10), float64],) {
    %365 = @func_6077() /* ty=(Tensor[(10), float64],) */;
    %366 = %365.0;
    (%366,)
  };
  %367() /* ty=(Tensor[(10), float64],) */
}

def @func_6079() -> (Tensor[(10), float64],) {
  @func_6077() /* ty=(Tensor[(10), float64],) */
}

def @func_10625() -> Tensor[(360), float32] {
  @func_10623() /* ty=Tensor[(360), float32] */
}

def @func_1267(%var_1193: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) {
  %368 = cast(%var_1193, dtype="float64") /* ty=Tensor[(15, 6, 16), float64] */;
  %369 = erf(%368) /* ty=Tensor[(15, 6, 16), float64] */;
  %370 = cast(%369, dtype="float64") /* ty=Tensor[(15, 6, 16), float64] */;
  %371 = cast(%369, dtype="float32") /* ty=Tensor[(15, 6, 16), float32] */;
  %372 = shape_of(%var_1193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_1193, dtype="float32") /* ty=Tensor[(15, 6, 16), float32] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %375 = sqrt(%370) /* ty=Tensor[(15, 6, 16), float64] */;
  %376 = power(%373, %374) /* ty=Tensor[(15, 6, 16), float32] */;
  (%375, %376)
}

def @func_4364(%var_4349: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) {
  %377 = cast(%var_4349, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %378 = cast(%var_4349, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %379 = atan(%377) /* ty=Tensor[(9, 10, 16), float64] */;
  %380 = exp(%378) /* ty=Tensor[(9, 10, 16), float64] */;
  (%379, %380)
}

def @func_9411(%var_9381: Tensor[(60), float32], %var_9392: Tensor[(2, 180), float32]) -> (Tensor[(9, 10, 16), float32], Tensor[(12, 5, 1), float32], Tensor[(60), float32], Tensor[(4, 9, 10), float64], Tensor[(2, 180), float32], Tensor[(32), float64], Tensor[(10), float64]) {
  %381 = @func_8708() /* ty=(Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64]) */;
  %382 = %381.1;
  %383 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 10, 16), float64] */, dtype="int32") /* ty=Tensor[(9, 10, 16), int32] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="int32") /* ty=Tensor[(9, 10, 16), int32] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %387 = bitwise_and(%385, %386) /* ty=Tensor[(9, 10, 16), int32] */;
  %388 = cast(%382, dtype="float32") /* ty=Tensor[(9, 10, 16), float32] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="float32") /* ty=Tensor[(9, 10, 16), float32] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %392 = cast(%var_9381, dtype="float32") /* ty=Tensor[(60), float32] */;
  %393 = reshape(%392, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %394 = cast(%var_9392, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %395 = cast(%var_9392, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %396 = reshape(%394, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %397 = reshape(%395, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %398 = @func_390(%396, %397) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %399 = @func_8423() /* ty=(Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) */;
  %400 = @func_6077() /* ty=(Tensor[(10), float64],) */;
  %401 = mod(%390, %391) /* ty=Tensor[(9, 10, 16), float32] */;
  %402 = @func_8064(%393) /* ty=Tensor[(12, 5, 1), float32] */;
  %403 = %398.0;
  %404 = %399.2;
  %405 = %400.0;
  (%401, %402, %var_9381, %403, %var_9392, %404, %405)
}

def @func_7686(%var_7677: Tensor[(9, 10, 8), float64], %var_7678: Tensor[(9, 10, 8), float64], %var_7679: Tensor[(65, 5), float32], %var_7680: Tensor[(1440), float64], %var_7681: Tensor[(360), float32], %var_7682: Tensor[(1, 260), float32], %var_7683: Tensor[(252), uint8], %var_7684: Tensor[(448), float64], %var_7685: Tensor[(21, 5), float64]) -> (Tensor[(9, 10, 8), float64], Tensor[(70), int8], Tensor[(65, 5), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(7, 10), int8], Tensor[(1, 260), float32], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(1, 960), int64], Tensor[(9, 10, 8), int8], Tensor[(9, 10, 8), uint8], Tensor[(360), float32], Tensor[(21, 5), float64]) {
  @func_7675(%var_7677, %var_7678, %var_7679, %var_7680, %var_7681, %var_7682, %var_7683, %var_7684, %var_7685) /* ty=(Tensor[(9, 10, 8), float64], Tensor[(70), int8], Tensor[(65, 5), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(7, 10), int8], Tensor[(1, 260), float32], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(1, 960), int64], Tensor[(9, 10, 8), int8], Tensor[(9, 10, 8), uint8], Tensor[(360), float32], Tensor[(21, 5), float64]) */
}

def @func_2480(%var_2454: Tensor[(5, 2, 1), float64]) -> (Tensor[(5, 2, ?), uint64], Tensor[(360), float32], Tensor[(4, 9, 10), float32]) {
  %406 = cast(%var_2454, dtype="float64") /* ty=Tensor[(5, 2, 1), float64] */;
  %407 = sigmoid(%406) /* ty=Tensor[(5, 2, 1), float64] */;
  %408 = cast(%407, dtype="uint64") /* ty=Tensor[(5, 2, 1), uint64] */;
  %409 = shape_of(%var_2454, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%var_2454, dtype="uint64") /* ty=Tensor[(5, 2, 1), uint64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %413 = cast(meta[relay.Constant][21] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %414 = reshape(%412, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %415 = reshape(%413, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %416 = @func_390(%414, %415) /* ty=(Tensor[(4, 9, 10), float64],) */;
  %417 = %416.0;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %419 = add(%410, %411) /* ty=Tensor[(5, 2, ?), uint64] */;
  %420 = rsqrt(%418) /* ty=Tensor[(4, 9, 10), float32] */;
  (%419, meta[relay.Constant][21] /* ty=Tensor[(360), float32] */, %420)
}

def @func_7150() -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) {
  %430 = fn () -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) {
    %421 = cast(meta[relay.Constant][22] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %422 = reshape(%421, newshape=[9, 14, 10]) /* ty=Tensor[(9, 14, 10), float64] */;
    %423 = @func_2742(%422) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
    %424 = %423.1;
    %425 = cast(%424, dtype="float64") /* ty=Tensor[(11, 9, 8), float64] */;
    %426 = reshape(%425, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
    %427 = @func_2172(%426) /* ty=(Tensor[(11, 9, 8), float64],) */;
    %428 = @func_6092() /* ty=Tensor[(360), float32] */;
    %429 = %427.0;
    (%428, %424, meta[relay.Constant][22] /* ty=Tensor[(1260), float64] */, %429)
  };
  %430() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */
}

def @func_6317() -> Tensor[(360), float32] {
  @func_6009() /* ty=Tensor[(360), float32] */
}

def @func_8939() -> (Tensor[(360), float32],) {
  %431 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%431,)
}

def @func_9647() -> (Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) {
  %432 = cast(meta[relay.Constant][23] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %433 = reshape(%432, newshape=[11, 1, 16]) /* ty=Tensor[(11, 1, 16), float32] */;
  %434 = @func_4343(%433) /* ty=(Tensor[(11, 1, 16), float32], Tensor[(11, 1, 16), float64], Tensor[(16, 15, 4), int64], Tensor[(84), int16], Tensor[(60, 14), int8], Tensor[(960), int64]) */;
  %435 = @func_8749() /* ty=Tensor[(360), float32] */;
  %436 = %434.5;
  (%435, %436, meta[relay.Constant][23] /* ty=Tensor[(176), float32] */)
}

def @func_2483(%var_2481: Tensor[(5, 2, 1), float64]) -> (Tensor[(5, 2, ?), uint64], Tensor[(360), float32], Tensor[(4, 9, 10), float32]) {
  @func_2480(%var_2481) /* ty=(Tensor[(5, 2, ?), uint64], Tensor[(360), float32], Tensor[(4, 9, 10), float32]) */
}

def @func_8941() -> (Tensor[(360), float32],) {
  @func_8939() /* ty=(Tensor[(360), float32],) */
}

def @func_7192() -> (Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) {
  %437 = @func_6261() /* ty=(Tensor[(360), float32],) */;
  %438 = cast(meta[relay.Constant][24] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %439 = reshape(%438, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %440 = @func_871(%439) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %441 = %437.0;
  %442 = %440.3;
  (%441, %442, meta[relay.Constant][24] /* ty=Tensor[(105), float64] */)
}

def @func_10216(%var_10214: int64) -> (Tensor[(360), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  @func_10213(%var_10214) /* ty=(Tensor[(360), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */
}

def @func_9690() -> Tensor[(360), float32] {
  @func_8571() /* ty=Tensor[(360), float32] */
}

def @func_9265() -> Tensor[(10), float64] {
  %444 = fn () -> Tensor[(10), float64] {
    %443 = @func_6077() /* ty=(Tensor[(10), float64],) */;
    %443.0
  };
  %444() /* ty=Tensor[(10), float64] */
}

def @func_8304(%var_8303: Tensor[(14, 11, 5), float32]) -> (Tensor[(14, 11, 5), float32],) {
  %447 = fn (%var_8296: Tensor[(14, 11, 5), float32]) -> (Tensor[(14, 11, 5), float32],) {
    %445 = cast(%var_8296, dtype="float32") /* ty=Tensor[(14, 11, 5), float32] */;
    %446 = atanh(%445) /* ty=Tensor[(14, 11, 5), float32] */;
    (%446,)
  };
  %447(%var_8303) /* ty=(Tensor[(14, 11, 5), float32],) */
}

def @func_2245(%var_2242: Tensor[(16, 6, 3), uint16], %var_2243: Tensor[(70), int8], %var_2244: Tensor[(1, 105), float64]) -> (Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) {
  @func_2240(%var_2242, %var_2243, %var_2244) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */
}

def @func_7855(%var_7840: Tensor[(1440), float64]) -> (Tensor[(360), float32], Tensor[(15, 6, 16), float64], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(36, 22), float64]) {
  %448 = cast(%var_7840, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %449 = reshape(%448, newshape=[15, 6, 16]) /* ty=Tensor[(15, 6, 16), float64] */;
  %450 = @func_1267(%449) /* ty=(Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) */;
  %451 = cast(meta[relay.Constant][25] /* ty=Tensor[(36, 22), float64] */, dtype="float64") /* ty=Tensor[(36, 22), float64] */;
  %452 = reshape(%451, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %453 = @func_2172(%452) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %454 = @func_6960() /* ty=Tensor[(360), float32] */;
  %455 = %450.0;
  %456 = @func_6092() /* ty=Tensor[(360), float32] */;
  %457 = %453.0;
  (%454, %455, %var_7840, %456, %457, meta[relay.Constant][25] /* ty=Tensor[(36, 22), float64] */)
}

def @func_11058(%var_11056: Tensor[(6, 15, 10), uint16], %var_11057: Tensor[(6, 15, 10), uint16]) -> (Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(360), float32], Tensor[(1200), int8], Tensor[(6, 15, 10), float64], Tensor[(16, 16, 14), float64]) {
  @func_11054(%var_11056, %var_11057) /* ty=(Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(360), float32], Tensor[(1200), int8], Tensor[(6, 15, 10), float64], Tensor[(16, 16, 14), float64]) */
}

def @func_9912() -> Tensor[(10), float64] {
  @func_9264() /* ty=Tensor[(10), float64] */
}

def @func_8260(%var_8258: Tensor[(5, 6, 3), uint64], %var_8259: Tensor[(5, 6, 3), uint64]) -> (Tensor[(5, 6, 3), uint64], Tensor[(5, 6, 3), float64]) {
  @func_8256(%var_8258, %var_8259) /* ty=(Tensor[(5, 6, 3), uint64], Tensor[(5, 6, 3), float64]) */
}

def @func_5945(%var_5943: Tensor[(32), float64], %var_5944: Tensor[(24), int32]) -> (Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) {
  @func_5941(%var_5943, %var_5944) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) */
}

def @func_7091(%var_7089: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) {
  @func_7088(%var_7089) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) */
}

def @func_11103() -> (Tensor[(11, 9, 8), float64], Tensor[(?, 15, 7), bool], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64]) {
  %467 = fn () -> (Tensor[(11, 9, 8), float64], Tensor[(?, 15, 7), bool], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64]) {
    %458 = cast(meta[relay.Constant][26] /* ty=Tensor[(288), uint16] */, dtype="uint16") /* ty=Tensor[(288), uint16] */;
    %459 = cast(meta[relay.Constant][27] /* ty=Tensor[(70), int8] */, dtype="int8") /* ty=Tensor[(70), int8] */;
    %460 = cast(meta[relay.Constant][28] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %461 = reshape(%458, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint16] */;
    %462 = reshape(%459, newshape=[70]) /* ty=Tensor[(70), int8] */;
    %463 = reshape(%460, newshape=[1, 105]) /* ty=Tensor[(1, 105), float64] */;
    %464 = @func_2240(%461, %462, %463) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */;
    %465 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
    %466 = %464.5;
    (%465, %466, meta[relay.Constant][26] /* ty=Tensor[(288), uint16] */, meta[relay.Constant][27] /* ty=Tensor[(70), int8] */, meta[relay.Constant][28] /* ty=Tensor[(105), float64] */)
  };
  %467() /* ty=(Tensor[(11, 9, 8), float64], Tensor[(?, 15, 7), bool], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(105), float64]) */
}

def @func_10055(%var_10053: Tensor[(5, 16, 10), float64], %var_10054: Tensor[(10, 144), float64]) -> (Tensor[(5, 16, 10), float64], Tensor[(15, 6, 16), float64], Tensor[(10, 144), float64]) {
  %474 = fn (%var_10020: Tensor[(5, 16, 10), float64], %var_10027: Tensor[(10, 144), float64]) -> (Tensor[(5, 16, 10), float64], Tensor[(15, 6, 16), float64], Tensor[(10, 144), float64]) {
    %468 = cast(%var_10020, dtype="float64") /* ty=Tensor[(5, 16, 10), float64] */;
    %469 = cast(%var_10027, dtype="float64") /* ty=Tensor[(10, 144), float64] */;
    %470 = reshape(%469, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
    %471 = @func_7855(%470) /* ty=(Tensor[(360), float32], Tensor[(15, 6, 16), float64], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(36, 22), float64]) */;
    %472 = sin(%468) /* ty=Tensor[(5, 16, 10), float64] */;
    %473 = %471.1;
    (%472, %473, %var_10027)
  };
  %474(%var_10053, %var_10054) /* ty=(Tensor[(5, 16, 10), float64], Tensor[(15, 6, 16), float64], Tensor[(10, 144), float64]) */
}

def @func_5475(%var_5402: Tensor[(2, 8, 8), int64], %var_5403: Tensor[(2, 8, 8), int64], %var_5412: Tensor[(960), int64], %var_5434: Tensor[(840), int8], %var_5454: Tensor[(360), float32]) -> (Tensor[(2, 8, 8), float32], Tensor[(960), int64], Tensor[(448), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(2, 8, 8), float64], Tensor[(840), int8], Tensor[(1, 84), int16], Tensor[(840), int8], Tensor[(6, 7, 6), bool], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(960), int64]) {
  %475 = cast(%var_5403, dtype="bool") /* ty=Tensor[(2, 8, 8), bool] */;
  %476 = shape_of(%var_5402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_5402, dtype="bool") /* ty=Tensor[(2, 8, 8), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = greater(%477, %478) /* ty=Tensor[(2, 8, 8), bool] */;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(2, 8, 8), float32] */;
  %481 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %482 = cast(meta[relay.Constant][30] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %483 = cast(%var_5412, dtype="int64") /* ty=Tensor[(960), int64] */;
  %484 = reshape(%481, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
  %485 = reshape(%482, newshape=[10, 4]) /* ty=Tensor[(10, 4), float64] */;
  %486 = reshape(%483, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %487 = @func_1847(%484, %485, %486) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */;
  %488 = cast(%479, dtype="float64") /* ty=Tensor[(2, 8, 8), float64] */;
  %489 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 84), int16] */, dtype="int16") /* ty=Tensor[(1, 84), int16] */;
  %490 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 84), int16] */, dtype="int16") /* ty=Tensor[(1, 84), int16] */;
  %491 = cast(%var_5434, dtype="int8") /* ty=Tensor[(840), int8] */;
  %492 = %487.3;
  %493 = cast(%492, dtype="int64") /* ty=Tensor[(960), int64] */;
  %494 = reshape(%489, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
  %495 = reshape(%490, newshape=[6, 7, 2]) /* ty=Tensor[(6, 7, 2), int16] */;
  %496 = reshape(%491, newshape=[840]) /* ty=Tensor[(840), int8] */;
  %497 = reshape(%493, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %498 = @func_3520(%494, %495, %496, %497) /* ty=(Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) */;
  %499 = cast(meta[relay.Constant][32] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %500 = cast(meta[relay.Constant][32] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %501 = cast(%var_5454, dtype="float32") /* ty=Tensor[(360), float32] */;
  %502 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %503 = cast(%var_5412, dtype="int64") /* ty=Tensor[(960), int64] */;
  %504 = reshape(%499, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %505 = reshape(%500, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %506 = reshape(%501, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %507 = reshape(%502, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %508 = reshape(%503, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %509 = @func_2128(%504, %505, %506, %507, %508) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %510 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
  %511 = cast(meta[relay.Constant][30] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %512 = cast(%var_5412, dtype="int64") /* ty=Tensor[(960), int64] */;
  %513 = reshape(%510, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
  %514 = reshape(%511, newshape=[10, 4]) /* ty=Tensor[(10, 4), float64] */;
  %515 = reshape(%512, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %516 = @func_1847(%513, %514, %515) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */;
  %517 = sigmoid(%480) /* ty=Tensor[(2, 8, 8), float32] */;
  %518 = asin(%488) /* ty=Tensor[(2, 8, 8), float64] */;
  %519 = %498.3;
  %520 = %509.0;
  %521 = %516.3;
  (%517, %492, meta[relay.Constant][29] /* ty=Tensor[(448), float64] */, meta[relay.Constant][30] /* ty=Tensor[(40), float64] */, %var_5412, %518, %519, meta[relay.Constant][31] /* ty=Tensor[(1, 84), int16] */, %var_5434, %520, meta[relay.Constant][32] /* ty=Tensor[(252), uint8] */, %var_5454, %521)
}

def @func_3496(%var_3493: Tensor[(2, 8, 2), float64], %var_3494: Tensor[(24), int32], %var_3495: Tensor[(384), int32]) -> (Tensor[(2, 8, 2), int8], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(2, 8, 2), bool]) {
  @func_3491(%var_3493, %var_3494, %var_3495) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(2, 8, 2), bool]) */
}

def @func_2532(%var_2509: Tensor[(5, 4, 13), float32], %var_2526: Tensor[(70, 1), int8], %var_2527: Tensor[(840), int8]) -> (Tensor[(5, 4, 13), int32], Tensor[(960), int64], Tensor[(70, 1), int8], Tensor[(840), int8], Tensor[(960), int64]) {
  %522 = cast(%var_2509, dtype="float32") /* ty=Tensor[(5, 4, 13), float32] */;
  %523 = exp(%522) /* ty=Tensor[(5, 4, 13), float32] */;
  %524 = cast(%var_2509, dtype="int32") /* ty=Tensor[(5, 4, 13), int32] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="int32") /* ty=Tensor[(5, 4, 13), int32] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %528 = cast(%var_2526, dtype="int8") /* ty=Tensor[(70, 1), int8] */;
  %529 = cast(%var_2527, dtype="int8") /* ty=Tensor[(840), int8] */;
  %530 = cast(meta[relay.Constant][33] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %531 = reshape(%528, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %532 = reshape(%529, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %533 = reshape(%530, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %534 = @func_1632(%531, %532, %533) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %535 = bitwise_xor(%526, %527) /* ty=Tensor[(5, 4, 13), int32] */;
  %536 = %534.2;
  (%535, %536, %var_2526, %var_2527, meta[relay.Constant][33] /* ty=Tensor[(960), int64] */)
}

def @func_8066(%var_8065: Tensor[(12, 5, 1), float32]) -> Tensor[(12, 5, 1), float32] {
  %538 = fn (%var_8055: Tensor[(12, 5, 1), float32]) -> Tensor[(12, 5, 1), float32] {
    %537 = cast(%var_8055, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
    log2(%537) /* ty=Tensor[(12, 5, 1), float32] */
  };
  %538(%var_8065) /* ty=Tensor[(12, 5, 1), float32] */
}

def @func_10129() -> (Tensor[(16, 16, 14), int32],) {
  %540 = fn () -> (Tensor[(16, 16, 14), int32],) {
    %539 = @func_7548() /* ty=Tensor[(16, 16, 14), int32] */;
    (%539,)
  };
  %540() /* ty=(Tensor[(16, 16, 14), int32],) */
}

def @func_8503() -> (Tensor[(16, 16, 14), float64],) {
  %541 = @func_8484() /* ty=Tensor[(16, 16, 14), float64] */;
  (%541,)
}

def @func_6335() -> (Tensor[(16, 16, 14), float64],) {
  %542 = @func_6133() /* ty=Tensor[(16, 16, 14), float64] */;
  (%542,)
}

def @func_7042(%var_7039: Tensor[(10, 1, 5), float32]) -> (Tensor[(10, 1, 5), float32],) {
  %543 = cast(%var_7039, dtype="float32") /* ty=Tensor[(10, 1, 5), float32] */;
  %544 = erf(%543) /* ty=Tensor[(10, 1, 5), float32] */;
  (%544,)
}

def @func_5941(%var_5920: Tensor[(32), float64], %var_5921: Tensor[(24), int32]) -> (Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) {
  %545 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %546 = cast(%var_5920, dtype="float64") /* ty=Tensor[(32), float64] */;
  %547 = cast(%var_5921, dtype="int32") /* ty=Tensor[(24), int32] */;
  %548 = cast(meta[relay.Constant][34] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
  %549 = reshape(%546, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float64] */;
  %550 = reshape(%547, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %551 = reshape(%548, newshape=[384]) /* ty=Tensor[(384), int32] */;
  %552 = @func_3491(%549, %550, %551) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(2, 8, 2), bool]) */;
  %553 = %545.1;
  %554 = %552.1;
  (%553, %554, %var_5920, %var_5921, meta[relay.Constant][34] /* ty=Tensor[(384), int32] */)
}

def @func_2240(%var_2194: Tensor[(16, 6, 3), uint16], %var_2223: Tensor[(70), int8], %var_2230: Tensor[(1, 105), float64]) -> (Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) {
  %555 = cast(meta[relay.Constant][35] /* ty=Tensor[(16, 6, 3), uint16] */, dtype="bool") /* ty=Tensor[(16, 6, 3), bool] */;
  %556 = shape_of(%var_2194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_2194, dtype="bool") /* ty=Tensor[(16, 6, 3), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = cast(%var_2223, dtype="int8") /* ty=Tensor[(70), int8] */;
  %560 = cast(meta[relay.Constant][36] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %561 = cast(meta[relay.Constant][37] /* ty=Tensor[(120, 8), int64] */, dtype="int64") /* ty=Tensor[(120, 8), int64] */;
  %562 = reshape(%559, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %563 = reshape(%560, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %564 = reshape(%561, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %565 = @func_1632(%562, %563, %564) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %566 = cast(%var_2230, dtype="float64") /* ty=Tensor[(1, 105), float64] */;
  %567 = reshape(%566, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %568 = @func_871(%567) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %569 = greater_equal(%557, %558) /* ty=Tensor[(16, 6, 3), bool] */;
  %570 = %565.0;
  %571 = %568.2;
  (%569, %570, %var_2223, meta[relay.Constant][36] /* ty=Tensor[(840), int8] */, meta[relay.Constant][37] /* ty=Tensor[(120, 8), int64] */, %571, %var_2230)
}

def @func_10982(%var_10979: Tensor[(1440), float64], %var_10980: Tensor[(960), int64], %var_10981: Tensor[(363), float32]) -> (Tensor[(16, 16, 14), float64], Tensor[(1440), float64], Tensor[(1440), float64], Tensor[(960), int64], Tensor[(360), float32], Tensor[(11, 11, 3), int16], Tensor[(363), float32], Tensor[(11, 11, 3), float32]) {
  %586 = fn (%var_10938: Tensor[(1440), float64], %var_10939: Tensor[(960), int64], %var_10965: Tensor[(363), float32]) -> (Tensor[(16, 16, 14), float64], Tensor[(1440), float64], Tensor[(1440), float64], Tensor[(960), int64], Tensor[(360), float32], Tensor[(11, 11, 3), int16], Tensor[(363), float32], Tensor[(11, 11, 3), float32]) {
    %572 = cast(%var_10938, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %573 = cast(%var_10939, dtype="int64") /* ty=Tensor[(960), int64] */;
    %574 = reshape(%572, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
    %575 = reshape(%573, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %576 = @func_6717(%574, %575) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64], Tensor[(9, 10, 16), float64]) */;
    %577 = cast(%var_10965, dtype="float32") /* ty=Tensor[(363), float32] */;
    %578 = reshape(%577, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
    %579 = @func_10434(%578) /* ty=(Tensor[(10), float64], Tensor[(11, 11, 3), int16]) */;
    %580 = @func_9329() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32]) */;
    %581 = @func_6133() /* ty=Tensor[(16, 16, 14), float64] */;
    %582 = %576.3;
    %583 = @func_9970() /* ty=Tensor[(360), float32] */;
    %584 = %579.1;
    %585 = %580.1;
    (%581, %582, %var_10938, %var_10939, %583, %584, %var_10965, %585)
  };
  %586(%var_10979, %var_10980, %var_10981) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(1440), float64], Tensor[(1440), float64], Tensor[(960), int64], Tensor[(360), float32], Tensor[(11, 11, 3), int16], Tensor[(363), float32], Tensor[(11, 11, 3), float32]) */
}

def @func_5158(%var_5105: Tensor[(13, 5, 5), float32], %var_5129: Tensor[(1440), float64], %var_5144: Tensor[(360), float32], %var_5145: Tensor[(448), float64], %var_5154: Tensor[(70), int8]) -> (Tensor[(13, 5, 5), float32], Tensor[(4, 5, 13), bool], Tensor[(20), uint32], Tensor[(260), uint32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(4, 9, 10), float64], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64], Tensor[(10, 7, 12), int16], Tensor[(70), int8], Tensor[(840), int8]) {
  %587 = cast(%var_5105, dtype="float32") /* ty=Tensor[(13, 5, 5), float32] */;
  %588 = cast(meta[relay.Constant][38] /* ty=Tensor[(20), uint32] */, dtype="uint32") /* ty=Tensor[(20), uint32] */;
  %589 = cast(meta[relay.Constant][39] /* ty=Tensor[(260), uint32] */, dtype="uint32") /* ty=Tensor[(260), uint32] */;
  %590 = reshape(%588, newshape=[4, 5, 1]) /* ty=Tensor[(4, 5, 1), uint32] */;
  %591 = reshape(%589, newshape=[4, 5, 13]) /* ty=Tensor[(4, 5, 13), uint32] */;
  %592 = @func_4079(%590, %591) /* ty=(Tensor[(4, 5, 13), bool],) */;
  %593 = cast(%var_5129, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %594 = reshape(%593, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %595 = @func_4364(%594) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */;
  %596 = cast(meta[relay.Constant][40] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %597 = cast(meta[relay.Constant][40] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %598 = cast(%var_5144, dtype="float32") /* ty=Tensor[(360), float32] */;
  %599 = cast(%var_5145, dtype="float64") /* ty=Tensor[(448), float64] */;
  %600 = cast(meta[relay.Constant][41] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %601 = reshape(%596, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %602 = reshape(%597, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %603 = reshape(%598, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %604 = reshape(%599, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %605 = reshape(%600, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %606 = @func_2128(%601, %602, %603, %604, %605) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %607 = cast(%var_5154, dtype="int8") /* ty=Tensor[(70), int8] */;
  %608 = cast(meta[relay.Constant][42] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
  %609 = cast(meta[relay.Constant][41] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %610 = reshape(%607, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
  %611 = reshape(%608, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
  %612 = reshape(%609, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %613 = @func_1632(%610, %611, %612) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
  %614 = cos(%587) /* ty=Tensor[(13, 5, 5), float32] */;
  %615 = %592.0;
  %616 = %595.1;
  %617 = %606.1;
  %618 = %613.4;
  (%614, %615, meta[relay.Constant][38] /* ty=Tensor[(20), uint32] */, meta[relay.Constant][39] /* ty=Tensor[(260), uint32] */, %616, %var_5129, %617, meta[relay.Constant][40] /* ty=Tensor[(252), uint8] */, %var_5144, %var_5145, meta[relay.Constant][41] /* ty=Tensor[(960), int64] */, %618, %var_5154, meta[relay.Constant][42] /* ty=Tensor[(840), int8] */)
}

def @func_1851(%var_1848: Tensor[(4, 14, 8), float64], %var_1849: Tensor[(10, 4), float64], %var_1850: Tensor[(960), int64]) -> (Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) {
  %627 = fn (%var_1831: Tensor[(4, 14, 8), float64], %var_1835: Tensor[(10, 4), float64], %var_1836: Tensor[(960), int64]) -> (Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) {
    %619 = cast(%var_1831, dtype="float64") /* ty=Tensor[(4, 14, 8), float64] */;
    %620 = cast(%var_1835, dtype="float64") /* ty=Tensor[(10, 4), float64] */;
    %621 = cast(%var_1836, dtype="int64") /* ty=Tensor[(960), int64] */;
    %622 = reshape(%620, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
    %623 = reshape(%621, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %624 = @func_984(%622, %623) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
    %625 = rsqrt(%619) /* ty=Tensor[(4, 14, 8), float64] */;
    %626 = %624.3;
    (%625, %626, %var_1835, %var_1836)
  };
  %627(%var_1848, %var_1849, %var_1850) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */
}

def @func_11535() -> (Tensor[(360), float32],) {
  %628 = @func_9017() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %629 = %628.1;
  (%629,)
}

def @func_11748() -> (Tensor[(16, 16, 14), float64],) {
  %630 = @func_10302() /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64]) */;
  %631 = %630.1;
  (%631,)
}

def @func_6840(%var_6831: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 14), bool], Tensor[(16, 16, 14), float64]) {
  %632 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %633 = %632.0;
  %634 = cast(%var_6831, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%633, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %638 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %639 = not_equal(%636, %637) /* ty=Tensor[(16, 16, 14), bool] */;
  %640 = %638.0;
  (%639, %640)
}

def @func_11505(%var_11502: Tensor[(252), uint8], %var_11503: Tensor[(448), float64], %var_11504: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(36, 10), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(176), float32], Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), int32], Tensor[(16, 15, 4), int32], Tensor[(4, 9, 10), float64]) {
  %682 = fn (%var_11382: Tensor[(252), uint8], %var_11383: Tensor[(448), float64], %var_11384: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(36, 10), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(176), float32], Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), int32], Tensor[(16, 15, 4), int32], Tensor[(4, 9, 10), float64]) {
    %641 = cast(%var_11382, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %642 = cast(%var_11382, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %643 = @func_6317() /* ty=Tensor[(360), float32] */;
    %644 = cast(%643, dtype="float32") /* ty=Tensor[(360), float32] */;
    %645 = cast(%var_11383, dtype="float64") /* ty=Tensor[(448), float64] */;
    %646 = cast(%var_11384, dtype="int64") /* ty=Tensor[(960), int64] */;
    %647 = reshape(%641, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
    %648 = reshape(%642, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
    %649 = reshape(%644, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
    %650 = reshape(%645, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
    %651 = reshape(%646, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %652 = @func_2128(%647, %648, %649, %650, %651) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
    %653 = %652.2;
    %654 = cast(%653, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
    %655 = @func_8194() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
    %656 = @func_9119() /* ty=(Tensor[(360), float32],) */;
    %657 = @func_9647() /* ty=(Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) */;
    %658 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
    %659 = @func_10128() /* ty=(Tensor[(16, 16, 14), int32],) */;
    %660 = cast(%var_11384, dtype="int64") /* ty=Tensor[(960), int64] */;
    %661 = reshape(%660, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %662 = @func_6811(%661) /* ty=(Tensor[(360), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
    %663 = %662.1;
    %664 = cast(%var_11384, dtype="int32") /* ty=Tensor[(960), int32] */;
    %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%663, dtype="int32") /* ty=Tensor[(16, 15, 4), int32] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %668 = %655.0;
    %669 = cast(%668, dtype="float32") /* ty=Tensor[(360), float32] */;
    %670 = %656.0;
    %671 = cast(%670, dtype="float32") /* ty=Tensor[(360), float32] */;
    %672 = reshape(%669, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %673 = reshape(%671, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %674 = @func_390(%672, %673) /* ty=(Tensor[(4, 9, 10), float64],) */;
    %675 = cos(%654) /* ty=Tensor[(36, 10), float32] */;
    %676 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
    %677 = %657.2;
    %678 = %658.1;
    %679 = %659.0;
    %680 = bitwise_xor(%666, %667) /* ty=Tensor[(16, 15, 4), int32] */;
    %681 = %674.0;
    (%643, %var_11382, %var_11383, %675, %668, %670, %676, %677, %678, %679, %680, %681)
  };
  %682(%var_11502, %var_11503, %var_11504) /* ty=(Tensor[(360), float32], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(36, 10), float32], Tensor[(360), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(176), float32], Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), int32], Tensor[(16, 15, 4), int32], Tensor[(4, 9, 10), float64]) */
}

def @func_7471(%var_7466: Tensor[(1, 325), float32], %var_7467: Tensor[(1440), float64], %var_7468: Tensor[(360), float32], %var_7469: Tensor[(70), int8], %var_7470: Tensor[(260), float32]) -> (Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) {
  %715 = fn (%var_7331: Tensor[(1, 325), float32], %var_7332: Tensor[(1440), float64], %var_7333: Tensor[(360), float32], %var_7335: Tensor[(70), int8], %var_7348: Tensor[(260), float32]) -> (Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) {
    %683 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
    %684 = cast(%var_7331, dtype="float32") /* ty=Tensor[(1, 325), float32] */;
    %685 = cast(%var_7332, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %686 = cast(%var_7333, dtype="float32") /* ty=Tensor[(360), float32] */;
    %687 = cast(meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %688 = cast(%var_7335, dtype="int8") /* ty=Tensor[(70), int8] */;
    %689 = reshape(%684, newshape=[13, 5, 5]) /* ty=Tensor[(13, 5, 5), float32] */;
    %690 = reshape(%685, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
    %691 = reshape(%686, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %692 = reshape(%687, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %693 = reshape(%688, newshape=[70]) /* ty=Tensor[(70), int8] */;
    %694 = @func_5158(%689, %690, %691, %692, %693) /* ty=(Tensor[(13, 5, 5), float32], Tensor[(4, 5, 13), bool], Tensor[(20), uint32], Tensor[(260), uint32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(4, 9, 10), float64], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64], Tensor[(10, 7, 12), int16], Tensor[(70), int8], Tensor[(840), int8]) */;
    %695 = cast(%var_7348, dtype="float32") /* ty=Tensor[(260), float32] */;
    %696 = cast(%var_7335, dtype="int8") /* ty=Tensor[(70), int8] */;
    %697 = %694.11;
    %698 = cast(%697, dtype="int8") /* ty=Tensor[(10, 7, 12), int8] */;
    %699 = reshape(%695, newshape=[5, 4, 13]) /* ty=Tensor[(5, 4, 13), float32] */;
    %700 = reshape(%696, newshape=[70, 1]) /* ty=Tensor[(70, 1), int8] */;
    %701 = reshape(%698, newshape=[840]) /* ty=Tensor[(840), int8] */;
    %702 = @func_2532(%699, %700, %701) /* ty=(Tensor[(5, 4, 13), int32], Tensor[(960), int64], Tensor[(70, 1), int8], Tensor[(840), int8], Tensor[(960), int64]) */;
    %703 = cast(meta[relay.Constant][44] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %704 = reshape(%703, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
    %705 = @func_2172(%704) /* ty=(Tensor[(11, 9, 8), float64],) */;
    %706 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
    %707 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
    %708 = %683.1;
    %709 = @func_6317() /* ty=Tensor[(360), float32] */;
    %710 = %702.0;
    %711 = @func_6092() /* ty=Tensor[(360), float32] */;
    %712 = %705.0;
    %713 = %706.1;
    %714 = %707.1;
    (%708, %697, %var_7331, %var_7332, %var_7333, meta[relay.Constant][43] /* ty=Tensor[(448), float64] */, %var_7335, %709, %710, %var_7348, %711, %712, meta[relay.Constant][44] /* ty=Tensor[(792), float64] */, %713, %714)
  };
  %715(%var_7466, %var_7467, %var_7468, %var_7469, %var_7470) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) */
}

def @func_8914(%var_8862: Tensor[(13, 12, 12), int64], %var_8871: Tensor[(3584), float64], %var_8887: Tensor[(13, 12, 12), int64], %var_8898: Tensor[(13, 12, 12), int64]) -> (Tensor[(16, 16, 14), bool], Tensor[(3584), float64], Tensor[(13, 12, 12), bool], Tensor[(360), float32], Tensor[(13, 12, 12), uint8]) {
  %716 = cast(%var_8871, dtype="float64") /* ty=Tensor[(3584), float64] */;
  %717 = reshape(%716, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), float64] */;
  %718 = @func_7088(%717) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) */;
  %719 = cast(%var_8862, dtype="int64") /* ty=Tensor[(13, 12, 12), int64] */;
  %720 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(13, 12, 12), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 12, 12), int64] */, dtype="int64") /* ty=Tensor[(13, 12, 12), int64] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %723 = bitwise_xor(%721, %722) /* ty=Tensor[(13, 12, 12), int64] */;
  %724 = cast(%var_8887, dtype="bool") /* ty=Tensor[(13, 12, 12), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(13, 12, 12), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %728 = @func_6261() /* ty=(Tensor[(360), float32],) */;
  %729 = cast(%var_8898, dtype="uint8") /* ty=Tensor[(13, 12, 12), uint8] */;
  %730 = shape_of(%var_8862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_8862, dtype="uint8") /* ty=Tensor[(13, 12, 12), uint8] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %733 = %718.1;
  %734 = equal(%726, %727) /* ty=Tensor[(13, 12, 12), bool] */;
  %735 = %728.0;
  %736 = subtract(%731, %732) /* ty=Tensor[(13, 12, 12), uint8] */;
  (%733, %var_8871, %734, %735, %736)
}

def @func_12315() -> (Tensor[(11, 9, 8), float64],) {
  %738 = fn () -> (Tensor[(11, 9, 8), float64],) {
    %737 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
    (%737,)
  };
  %738() /* ty=(Tensor[(11, 9, 8), float64],) */
}

def @func_6466(%var_6465: Tensor[(375), float32]) -> (Tensor[(10), float64], Tensor[(5, 15, 5), float64]) {
  %749 = fn (%var_6457: Tensor[(375), float32]) -> (Tensor[(10), float64], Tensor[(5, 15, 5), float64]) {
    %739 = @func_6077() /* ty=(Tensor[(10), float64],) */;
    %740 = cast(%var_6457, dtype="float32") /* ty=Tensor[(375), float32] */;
    %741 = reshape(%740, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), float32] */;
    %742 = @func_1981(%741) /* ty=Tensor[(5, 15, 5), float32] */;
    %743 = cast(%var_6457, dtype="float64") /* ty=Tensor[(375), float64] */;
    %744 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
    %745 = cast(%742, dtype="float64") /* ty=Tensor[(5, 15, 5), float64] */;
    %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %747 = %739.0;
    %748 = floor_mod(%745, %746) /* ty=Tensor[(5, 15, 5), float64] */;
    (%747, %748)
  };
  %749(%var_6465) /* ty=(Tensor[(10), float64], Tensor[(5, 15, 5), float64]) */
}

def @func_7194() -> (Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) {
  @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */
}

def @func_9018() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %753 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %750 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
    %751 = @func_6092() /* ty=Tensor[(360), float32] */;
    %752 = %750.1;
    (%751, %752)
  };
  %753() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_12382() -> (Tensor[(11, 9, 8), float64], Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(11, 9, 8), float64]) {
  %761 = fn () -> (Tensor[(11, 9, 8), float64], Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(11, 9, 8), float64]) {
    %754 = cast(meta[relay.Constant][46] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
    %755 = reshape(%754, newshape=[14, 11, 5]) /* ty=Tensor[(14, 11, 5), float32] */;
    %756 = @func_8302(%755) /* ty=(Tensor[(14, 11, 5), float32],) */;
    %757 = @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */;
    %758 = @func_10522() /* ty=Tensor[(11, 9, 8), float64] */;
    %759 = %756.0;
    %760 = %757.0;
    (%758, %759, meta[relay.Constant][46] /* ty=Tensor[(770), float32] */, %760)
  };
  %761() /* ty=(Tensor[(11, 9, 8), float64], Tensor[(14, 11, 5), float32], Tensor[(770), float32], Tensor[(11, 9, 8), float64]) */
}

def @func_12543(%var_12541: Tensor[(3, 3, 4), float32], %var_12542: Tensor[(3, 3, 4), float32]) -> (Tensor[(3, 3, 4), float32],) {
  @func_12539(%var_12541, %var_12542) /* ty=(Tensor[(3, 3, 4), float32],) */
}

def @func_12734() -> (Tensor[(360), float32], Tensor[(10, 15, 8), int8], Tensor[(1200), int8], Tensor[(360), float32]) {
  %768 = fn () -> (Tensor[(360), float32], Tensor[(10, 15, 8), int8], Tensor[(1200), int8], Tensor[(360), float32]) {
    %762 = cast(meta[relay.Constant][47] /* ty=Tensor[(1200), int8] */, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %763 = reshape(%762, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %764 = @func_7532(%763) /* ty=(Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) */;
    %765 = @func_6307() /* ty=Tensor[(360), float32] */;
    %766 = %764.1;
    %767 = @func_8810() /* ty=Tensor[(360), float32] */;
    (%765, %766, meta[relay.Constant][47] /* ty=Tensor[(1200), int8] */, %767)
  };
  %768() /* ty=(Tensor[(360), float32], Tensor[(10, 15, 8), int8], Tensor[(1200), int8], Tensor[(360), float32]) */
}

def @func_8145() -> (Tensor[(360), float32],) {
  @func_8143() /* ty=(Tensor[(360), float32],) */
}

def @func_1984(%var_1982: Tensor[(5, 15, 5), float32]) -> Tensor[(5, 15, 5), float32] {
  @func_1981(%var_1982) /* ty=Tensor[(5, 15, 5), float32] */
}

def @func_7768(%var_7765: int32, %var_7766: Tensor[(1, 8, 11), int32], %var_7767: Tensor[(3584), float64]) -> (Tensor[(1, 8, 11), bool], Tensor[(360), float32], Tensor[(3584), float64], Tensor[(16, 16, 14), bool]) {
  @func_7763(%var_7765, %var_7766, %var_7767) /* ty=(Tensor[(1, 8, 11), bool], Tensor[(360), float32], Tensor[(3584), float64], Tensor[(16, 16, 14), bool]) */
}

def @func_8385() -> (Tensor[(16, 16, 14), float64],) {
  %771 = fn () -> (Tensor[(16, 16, 14), float64],) {
    %769 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
    %770 = %769.0;
    (%770,)
  };
  %771() /* ty=(Tensor[(16, 16, 14), float64],) */
}

def @func_6813(%var_6812: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  %780 = fn (%var_6809: Tensor[(960), int64]) -> (Tensor[(360), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
    %772 = @func_6261() /* ty=(Tensor[(360), float32],) */;
    %773 = cast(-7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %774 = cast(%var_6809, dtype="int64") /* ty=Tensor[(960), int64] */;
    %775 = reshape(%773, newshape=[]) /* ty=int64 */;
    %776 = reshape(%774, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
    %777 = @func_710(%775, %776) /* ty=(Tensor[(16, 15, 4), int64],) */;
    %778 = %772.0;
    %779 = %777.0;
    (%778, %779, -7 /* ty=int64 */, %var_6809)
  };
  %780(%var_6812) /* ty=(Tensor[(360), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */
}

def @func_10168() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(10, 1, 5), float32], Tensor[(50), float32]) {
  %789 = fn () -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(10, 1, 5), float32], Tensor[(50), float32]) {
    %781 = @func_6261() /* ty=(Tensor[(360), float32],) */;
    %782 = @func_8423() /* ty=(Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) */;
    %783 = cast(meta[relay.Constant][48] /* ty=Tensor[(50), float32] */, dtype="float32") /* ty=Tensor[(50), float32] */;
    %784 = reshape(%783, newshape=[10, 1, 5]) /* ty=Tensor[(10, 1, 5), float32] */;
    %785 = @func_7042(%784) /* ty=(Tensor[(10, 1, 5), float32],) */;
    %786 = %781.0;
    %787 = %782.0;
    %788 = %785.0;
    (%786, %787, %788, meta[relay.Constant][48] /* ty=Tensor[(50), float32] */)
  };
  %789() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(10, 1, 5), float32], Tensor[(50), float32]) */
}

def @func_6010() -> Tensor[(360), float32] {
  %791 = fn () -> Tensor[(360), float32] {
    %790 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
    %790.1
  };
  %791() /* ty=Tensor[(360), float32] */
}

def @func_8749() -> Tensor[(360), float32] {
  @func_6573() /* ty=Tensor[(360), float32] */
}

def @func_10920(%var_10919: Tensor[(5, 2, 7), float64]) -> (Tensor[(5, 2, 7), int32], Tensor[(360), float32]) {
  %803 = fn (%var_10886: Tensor[(5, 2, 7), float64]) -> (Tensor[(5, 2, 7), int32], Tensor[(360), float32]) {
    %792 = cast(%var_10886, dtype="float64") /* ty=Tensor[(5, 2, 7), float64] */;
    %793 = cosh(%792) /* ty=Tensor[(5, 2, 7), float64] */;
    %794 = cast(%793, dtype="float64") /* ty=Tensor[(5, 2, 7), float64] */;
    %795 = asin(%794) /* ty=Tensor[(5, 2, 7), float64] */;
    %796 = cast(%793, dtype="int32") /* ty=Tensor[(5, 2, 7), int32] */;
    %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
    %798 = cast(%795, dtype="int32") /* ty=Tensor[(5, 2, 7), int32] */;
    %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %800 = @func_10167() /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(10, 1, 5), float32], Tensor[(50), float32]) */;
    %801 = logical_xor(%798, %799) /* ty=Tensor[(5, 2, 7), int32] */;
    %802 = %800.0;
    (%801, %802)
  };
  %803(%var_10919) /* ty=(Tensor[(5, 2, 7), int32], Tensor[(360), float32]) */
}

def @func_11750() -> (Tensor[(16, 16, 14), float64],) {
  @func_11748() /* ty=(Tensor[(16, 16, 14), float64],) */
}

def @func_9755() -> Tensor[(360), float32] {
  @func_9753() /* ty=Tensor[(360), float32] */
}

def @func_11655(%var_11622: Tensor[(3, 3, 15), float64], %var_11634: Tensor[(375), float32], %var_11636: Tensor[(7, 10), int8]) -> (Tensor[(70), int8], Tensor[(375), float32], Tensor[(288, 1), uint16], Tensor[(7, 10), int8], Tensor[(3, 3, 15), bool], Tensor[(4, 5, 2), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(360), float32]) {
  %804 = cast(%var_11634, dtype="float32") /* ty=Tensor[(375), float32] */;
  %805 = cast(meta[relay.Constant][49] /* ty=Tensor[(288, 1), uint16] */, dtype="uint16") /* ty=Tensor[(288, 1), uint16] */;
  %806 = cast(%var_11636, dtype="int8") /* ty=Tensor[(7, 10), int8] */;
  %807 = reshape(%804, newshape=[375]) /* ty=Tensor[(375), float32] */;
  %808 = reshape(%805, newshape=[288]) /* ty=Tensor[(288), uint16] */;
  %809 = reshape(%806, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %810 = @func_10614(%807, %808, %809) /* ty=(Tensor[(360), float32], Tensor[(375), float32], Tensor[(70), int8], Tensor[(288), uint16], Tensor[(70), int8], Tensor[(5, 15, 5), uint16]) */;
  %811 = cast(%var_11622, dtype="float64") /* ty=Tensor[(3, 3, 15), float64] */;
  %812 = atan(%811) /* ty=Tensor[(3, 3, 15), float64] */;
  %813 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 3, 15), float64] */, dtype="bool") /* ty=Tensor[(3, 3, 15), bool] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="bool") /* ty=Tensor[(3, 3, 15), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %817 = cast(meta[relay.Constant][51] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %818 = cast(meta[relay.Constant][52] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %819 = reshape(%817, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float64] */;
  %820 = reshape(%818, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %821 = @func_984(%819, %820) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */;
  %822 = %810.4;
  %823 = greater(%815, %816) /* ty=Tensor[(3, 3, 15), bool] */;
  %824 = %821.0;
  %825 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%822, %var_11634, meta[relay.Constant][49] /* ty=Tensor[(288, 1), uint16] */, %var_11636, %823, %824, meta[relay.Constant][51] /* ty=Tensor[(40), float64] */, meta[relay.Constant][52] /* ty=Tensor[(960), int64] */, %825)
}

def @func_3491(%var_3452: Tensor[(2, 8, 2), float64], %var_3469: Tensor[(24), int32], %var_3470: Tensor[(384), int32]) -> (Tensor[(2, 8, 2), int8], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(2, 8, 2), bool]) {
  %826 = cast(%var_3452, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %827 = erf(%826) /* ty=Tensor[(2, 8, 2), float64] */;
  %828 = cast(%var_3452, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%827, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %832 = cast(%var_3469, dtype="int32") /* ty=Tensor[(24), int32] */;
  %833 = cast(%var_3470, dtype="int32") /* ty=Tensor[(384), int32] */;
  %834 = reshape(%832, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), int32] */;
  %835 = reshape(%833, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), int32] */;
  %836 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 8, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %837 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%827, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %840 = maximum(%830, %831) /* ty=Tensor[(2, 8, 2), int8] */;
  %841 = @func_1926(%834, %835) /* ty=Tensor[(4, 6, 16), int32] */;
  %842 = less_equal(%838, %839) /* ty=Tensor[(2, 8, 2), bool] */;
  (%840, %841, %var_3469, %var_3470, %842)
}

def @func_10623() -> Tensor[(360), float32] {
  @func_8571() /* ty=Tensor[(360), float32] */
}

def @func_3525(%var_3521: Tensor[(6, 7, 2), int16], %var_3522: Tensor[(6, 7, 2), int16], %var_3523: Tensor[(840), int8], %var_3524: Tensor[(960), int64]) -> (Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) {
  %862 = fn (%var_3503: Tensor[(6, 7, 2), int16], %var_3504: Tensor[(6, 7, 2), int16], %var_3511: Tensor[(840), int8], %var_3512: Tensor[(960), int64]) -> (Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) {
    %843 = cast(%var_3504, dtype="int16") /* ty=Tensor[(6, 7, 2), int16] */;
    %844 = shape_of(%var_3503, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_3503, dtype="int16") /* ty=Tensor[(6, 7, 2), int16] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %847 = cast(meta[relay.Constant][54] /* ty=Tensor[(70), int8] */, dtype="int8") /* ty=Tensor[(70), int8] */;
    %848 = cast(%var_3511, dtype="int8") /* ty=Tensor[(840), int8] */;
    %849 = cast(%var_3512, dtype="int64") /* ty=Tensor[(960), int64] */;
    %850 = reshape(%847, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), int8] */;
    %851 = reshape(%848, newshape=[10, 7, 12]) /* ty=Tensor[(10, 7, 12), int8] */;
    %852 = reshape(%849, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %853 = @func_1632(%850, %851, %852) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */;
    %854 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %855 = cast(%var_3512, dtype="int64") /* ty=Tensor[(960), int64] */;
    %856 = reshape(%854, newshape=[]) /* ty=int64 */;
    %857 = reshape(%855, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
    %858 = @func_710(%856, %857) /* ty=(Tensor[(16, 15, 4), int64],) */;
    %859 = maximum(%845, %846) /* ty=Tensor[(6, 7, 2), int16] */;
    %860 = %853.1;
    %861 = %858.0;
    (%859, %860, meta[relay.Constant][54] /* ty=Tensor[(70), int8] */, %var_3511, %var_3512, %861, 8 /* ty=int64 */)
  };
  %862(%var_3521, %var_3522, %var_3523, %var_3524) /* ty=(Tensor[(6, 7, 2), int16], Tensor[(40), float64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(960), int64], Tensor[(16, 15, 4), int64], int64) */
}

def @func_393(%var_391: Tensor[(4, 9, 10), float32], %var_392: Tensor[(4, 9, 10), float32]) -> (Tensor[(4, 9, 10), float64],) {
  %870 = fn (%var_350: Tensor[(4, 9, 10), float32], %var_355: Tensor[(4, 9, 10), float32]) -> (Tensor[(4, 9, 10), float64],) {
    %863 = cast(%var_350, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
    %864 = sin(%863) /* ty=Tensor[(4, 9, 10), float32] */;
    %865 = cast(%var_355, dtype="float64") /* ty=Tensor[(4, 9, 10), float64] */;
    %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
    %867 = cast(%864, dtype="float64") /* ty=Tensor[(4, 9, 10), float64] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %869 = floor_divide(%867, %868) /* ty=Tensor[(4, 9, 10), float64] */;
    (%869,)
  };
  %870(%var_391, %var_392) /* ty=(Tensor[(4, 9, 10), float64],) */
}

def @func_1270(%var_1268: Tensor[(15, 6, 16), float64]) -> (Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) {
  @func_1267(%var_1268) /* ty=(Tensor[(15, 6, 16), float64], Tensor[(15, 6, 16), float32]) */
}

def @func_6888(%var_6872: Tensor[(5, 10, 1), uint64], %var_6883: Tensor[(24), int32], %var_6884: Tensor[(384), int32]) -> (Tensor[(5, 10, 8), bool], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(360), float32]) {
  %871 = cast(%var_6872, dtype="bool") /* ty=Tensor[(5, 10, 1), bool] */;
  %872 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 10, 8), uint64] */, dtype="bool") /* ty=Tensor[(5, 10, 8), bool] */;
  %873 = cast(%var_6883, dtype="int32") /* ty=Tensor[(24), int32] */;
  %874 = cast(%var_6884, dtype="int32") /* ty=Tensor[(384), int32] */;
  %875 = reshape(%873, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), int32] */;
  %876 = reshape(%874, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), int32] */;
  %877 = not_equal(%871, %872) /* ty=Tensor[(5, 10, 8), bool] */;
  %878 = @func_1926(%875, %876) /* ty=Tensor[(4, 6, 16), int32] */;
  %879 = @func_6573() /* ty=Tensor[(360), float32] */;
  (%877, %878, %var_6883, %var_6884, %879)
}

def @func_2134(%var_2129: Tensor[(6, 7, 6), uint8], %var_2130: Tensor[(6, 7, 6), uint8], %var_2131: Tensor[(36, 10), float32], %var_2132: Tensor[(4, 112), float64], %var_2133: Tensor[(960), int64]) -> (Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) {
  %921 = fn (%var_2074: Tensor[(6, 7, 6), uint8], %var_2075: Tensor[(6, 7, 6), uint8], %var_2087: Tensor[(36, 10), float32], %var_2091: Tensor[(4, 112), float64], %var_2093: Tensor[(960), int64]) -> (Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) {
    %880 = cast(%var_2075, dtype="uint8") /* ty=Tensor[(6, 7, 6), uint8] */;
    %881 = shape_of(%var_2074, dtype="int32") /* ty=Tensor[(3), int32] */;
    %882 = cast(%var_2074, dtype="uint8") /* ty=Tensor[(6, 7, 6), uint8] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %884 = right_shift(%882, %883) /* ty=Tensor[(6, 7, 6), uint8] */;
    %885 = cast(%884, dtype="bool") /* ty=Tensor[(6, 7, 6), bool] */;
    %886 = shape_of(%var_2074, dtype="int32") /* ty=Tensor[(3), int32] */;
    %887 = cast(%var_2074, dtype="bool") /* ty=Tensor[(6, 7, 6), bool] */;
    %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %889 = cast(%var_2087, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
    %890 = cast(%var_2087, dtype="float32") /* ty=Tensor[(36, 10), float32] */;
    %891 = reshape(%889, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %892 = reshape(%890, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %893 = @func_390(%891, %892) /* ty=(Tensor[(4, 9, 10), float64],) */;
    %894 = cast(%var_2091, dtype="float64") /* ty=Tensor[(4, 112), float64] */;
    %895 = cast(meta[relay.Constant][56] /* ty=Tensor[(40), float64] */, dtype="float64") /* ty=Tensor[(40), float64] */;
    %896 = cast(%var_2093, dtype="int64") /* ty=Tensor[(960), int64] */;
    %897 = reshape(%894, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
    %898 = reshape(%895, newshape=[10, 4]) /* ty=Tensor[(10, 4), float64] */;
    %899 = reshape(%896, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %900 = @func_1847(%897, %898, %899) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(960), int64], Tensor[(10, 4), float64], Tensor[(960), int64]) */;
    %901 = %900.1;
    %902 = cast(%901, dtype="float32") /* ty=Tensor[(960), float32] */;
    %903 = cast(meta[relay.Constant][57] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %904 = reshape(%903, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
    %905 = @func_871(%904) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
    %906 = cast(meta[relay.Constant][58] /* ty=Tensor[(24), int32] */, dtype="int32") /* ty=Tensor[(24), int32] */;
    %907 = cast(meta[relay.Constant][59] /* ty=Tensor[(384), int32] */, dtype="int32") /* ty=Tensor[(384), int32] */;
    %908 = reshape(%906, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), int32] */;
    %909 = reshape(%907, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), int32] */;
    %910 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %911 = cast(%var_2093, dtype="int64") /* ty=Tensor[(960), int64] */;
    %912 = reshape(%910, newshape=[]) /* ty=int64 */;
    %913 = reshape(%911, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
    %914 = @func_710(%912, %913) /* ty=(Tensor[(16, 15, 4), int64],) */;
    %915 = not_equal(%887, %888) /* ty=Tensor[(6, 7, 6), bool] */;
    %916 = %893.0;
    %917 = log2(%902) /* ty=Tensor[(960), float32] */;
    %918 = %905.2;
    %919 = @func_1926(%908, %909) /* ty=Tensor[(4, 6, 16), int32] */;
    %920 = %914.0;
    (%915, %916, %var_2087, %var_2091, meta[relay.Constant][56] /* ty=Tensor[(40), float64] */, %var_2093, %917, %918, meta[relay.Constant][57] /* ty=Tensor[(105), float64] */, %919, meta[relay.Constant][58] /* ty=Tensor[(24), int32] */, meta[relay.Constant][59] /* ty=Tensor[(384), int32] */, %920, 4 /* ty=int64 */)
  };
  %921(%var_2129, %var_2130, %var_2131, %var_2132, %var_2133) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */
}

def @func_8751() -> Tensor[(360), float32] {
  @func_8749() /* ty=Tensor[(360), float32] */
}

def @func_9193(%var_9192: Tensor[(1200), int8]) -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1200), int8]) {
  %928 = fn (%var_9180: Tensor[(1200), int8]) -> (Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1200), int8]) {
    %922 = @func_9119() /* ty=(Tensor[(360), float32],) */;
    %923 = cast(%var_9180, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %924 = reshape(%923, newshape=[1200]) /* ty=Tensor[(1200), int8] */;
    %925 = @func_7532(%924) /* ty=(Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) */;
    %926 = %922.0;
    %927 = %925.0;
    (%926, %927, %var_9180)
  };
  %928(%var_9192) /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1200), int8]) */
}

def @func_6902() -> (Tensor[(360), float32],) {
  %931 = fn () -> (Tensor[(360), float32],) {
    %929 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
    %930 = %929.1;
    (%930,)
  };
  %931() /* ty=(Tensor[(360), float32],) */
}

def @func_10304() -> (Tensor[(360), float32], Tensor[(16, 16, 14), float64]) {
  @func_10302() /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64]) */
}

def @func_9330() -> (Tensor[(360), float32], Tensor[(11, 11, 3), float32]) {
  %936 = fn () -> (Tensor[(360), float32], Tensor[(11, 11, 3), float32]) {
    %932 = @func_8362() /* ty=(Tensor[(360), float32],) */;
    %933 = @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */;
    %934 = %932.0;
    %935 = %933.1;
    (%934, %935)
  };
  %936() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32]) */
}

def @func_12028() -> (Tensor[(360), float32],) {
  %937 = @func_8143() /* ty=(Tensor[(360), float32],) */;
  %938 = %937.0;
  (%938,)
}

def @func_7534(%var_7533: Tensor[(1200), int8]) -> (Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) {
  %947 = fn (%var_7530: Tensor[(1200), int8]) -> (Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) {
    %939 = @func_7149() /* ty=(Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(1260), float64], Tensor[(11, 9, 8), float64]) */;
    %940 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 40), int8] */, dtype="int8") /* ty=Tensor[(2, 40), int8] */;
    %941 = cast(%var_7530, dtype="int8") /* ty=Tensor[(1200), int8] */;
    %942 = reshape(%940, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), int8] */;
    %943 = reshape(%941, newshape=[10, 15, 8]) /* ty=Tensor[(10, 15, 8), int8] */;
    %944 = @func_2576(%942, %943) /* ty=(Tensor[(10, 15, 8), int8], Tensor[(10, 1, 8), float64]) */;
    %945 = %939.3;
    %946 = %944.0;
    (%945, %946, meta[relay.Constant][60] /* ty=Tensor[(2, 40), int8] */, %var_7530)
  };
  %947(%var_7533) /* ty=(Tensor[(11, 9, 8), float64], Tensor[(10, 15, 8), int8], Tensor[(2, 40), int8], Tensor[(1200), int8]) */
}

def @func_10002() -> Tensor[(360), float32] {
  %948 = fn () -> Tensor[(360), float32] {
    @func_9753() /* ty=Tensor[(360), float32] */
  };
  %948() /* ty=Tensor[(360), float32] */
}

def @func_12030() -> (Tensor[(360), float32],) {
  @func_12028() /* ty=(Tensor[(360), float32],) */
}

def @func_6843(%var_6841: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 14), bool], Tensor[(16, 16, 14), float64]) {
  @func_6840(%var_6841) /* ty=(Tensor[(16, 16, 14), bool], Tensor[(16, 16, 14), float64]) */
}

def @func_11537() -> (Tensor[(360), float32],) {
  @func_11535() /* ty=(Tensor[(360), float32],) */
}

def @func_4367(%var_4365: Tensor[(9, 10, 16), float64]) -> (Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) {
  @func_4364(%var_4365) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(9, 10, 16), float64]) */
}

def @func_9120() -> (Tensor[(360), float32],) {
  %950 = fn () -> (Tensor[(360), float32],) {
    %949 = @func_8749() /* ty=Tensor[(360), float32] */;
    (%949,)
  };
  %950() /* ty=(Tensor[(360), float32],) */
}

def @func_874(%var_872: Tensor[(1, 15, 7), float64]) -> (Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) {
  @func_871(%var_872) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */
}

def @func_10385() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %954 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %951 = @func_9647() /* ty=(Tensor[(360), float32], Tensor[(960), int64], Tensor[(176), float32]) */;
    %952 = @func_6960() /* ty=Tensor[(360), float32] */;
    %953 = %951.0;
    (%952, %953)
  };
  %954() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_12426() -> (Tensor[(360), float32],) {
  @func_12424() /* ty=(Tensor[(360), float32],) */
}

def @func_11192(%var_11188: Tensor[(325), float32], %var_11189: Tensor[(112, 4), float64], %var_11190: Tensor[(105), float64], %var_11191: Tensor[(128), int64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(448), float64], Tensor[(720), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(260), float32], Tensor[(252), uint8], Tensor[(112, 4), float64], Tensor[(105), float64], Tensor[(6, 7, 6), bool], Tensor[(128), int64], Tensor[(960), int64], Tensor[(840), int8]) {
  %990 = fn (%var_11154: Tensor[(325), float32], %var_11158: Tensor[(112, 4), float64], %var_11159: Tensor[(105), float64], %var_11165: Tensor[(128), int64]) -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(448), float64], Tensor[(720), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(260), float32], Tensor[(252), uint8], Tensor[(112, 4), float64], Tensor[(105), float64], Tensor[(6, 7, 6), bool], Tensor[(128), int64], Tensor[(960), int64], Tensor[(840), int8]) {
    %955 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
    %956 = cast(meta[relay.Constant][61] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %957 = cast(meta[relay.Constant][61] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
    %958 = cast(%var_11154, dtype="float32") /* ty=Tensor[(325), float32] */;
    %959 = cast(meta[relay.Constant][62] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %960 = %955.1;
    %961 = cast(%960, dtype="float32") /* ty=Tensor[(360), float32] */;
    %962 = cast(meta[relay.Constant][63] /* ty=Tensor[(260), float32] */, dtype="float32") /* ty=Tensor[(260), float32] */;
    %963 = cast(meta[relay.Constant][64] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %964 = cast(%var_11158, dtype="float64") /* ty=Tensor[(112, 4), float64] */;
    %965 = cast(%var_11159, dtype="float64") /* ty=Tensor[(105), float64] */;
    %966 = reshape(%956, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
    %967 = reshape(%957, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float64] */;
    %968 = reshape(%958, newshape=[65, 5]) /* ty=Tensor[(65, 5), float32] */;
    %969 = reshape(%959, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
    %970 = reshape(%961, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %971 = reshape(%962, newshape=[1, 260]) /* ty=Tensor[(1, 260), float32] */;
    %972 = reshape(%963, newshape=[252]) /* ty=Tensor[(252), uint8] */;
    %973 = reshape(%964, newshape=[448]) /* ty=Tensor[(448), float64] */;
    %974 = reshape(%965, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %975 = @func_7675(%966, %967, %968, %969, %970, %971, %972, %973, %974) /* ty=(Tensor[(9, 10, 8), float64], Tensor[(70), int8], Tensor[(65, 5), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(7, 10), int8], Tensor[(1, 260), float32], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(1, 960), int64], Tensor[(9, 10, 8), int8], Tensor[(9, 10, 8), uint8], Tensor[(360), float32], Tensor[(21, 5), float64]) */;
    %976 = cast(%var_11165, dtype="int64") /* ty=Tensor[(128), int64] */;
    %977 = cast(%var_11165, dtype="int64") /* ty=Tensor[(128), int64] */;
    %978 = cast(meta[relay.Constant][65] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
    %979 = cast(meta[relay.Constant][66] /* ty=Tensor[(840), int8] */, dtype="int8") /* ty=Tensor[(840), int8] */;
    %980 = @func_8571() /* ty=Tensor[(360), float32] */;
    %981 = cast(%980, dtype="float32") /* ty=Tensor[(360), float32] */;
    %982 = reshape(%976, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), int64] */;
    %983 = reshape(%977, newshape=[2, 8, 8]) /* ty=Tensor[(2, 8, 8), int64] */;
    %984 = reshape(%978, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %985 = reshape(%979, newshape=[840]) /* ty=Tensor[(840), int8] */;
    %986 = reshape(%981, newshape=[360]) /* ty=Tensor[(360), float32] */;
    %987 = @func_5475(%982, %983, %984, %985, %986) /* ty=(Tensor[(2, 8, 8), float32], Tensor[(960), int64], Tensor[(448), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(2, 8, 8), float64], Tensor[(840), int8], Tensor[(1, 84), int16], Tensor[(840), int8], Tensor[(6, 7, 6), bool], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(960), int64]) */;
    %988 = %975.9;
    %989 = %987.9;
    (%960, %980, %988, meta[relay.Constant][61] /* ty=Tensor[(720), float64] */, %var_11154, meta[relay.Constant][62] /* ty=Tensor[(1440), float64] */, meta[relay.Constant][63] /* ty=Tensor[(260), float32] */, meta[relay.Constant][64] /* ty=Tensor[(252), uint8] */, %var_11158, %var_11159, %989, %var_11165, meta[relay.Constant][65] /* ty=Tensor[(960), int64] */, meta[relay.Constant][66] /* ty=Tensor[(840), int8] */)
  };
  %990(%var_11188, %var_11189, %var_11190, %var_11191) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(448), float64], Tensor[(720), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(260), float32], Tensor[(252), uint8], Tensor[(112, 4), float64], Tensor[(105), float64], Tensor[(6, 7, 6), bool], Tensor[(128), int64], Tensor[(960), int64], Tensor[(840), int8]) */
}

def @func_8400() -> (Tensor[(11, 9, 8), float64],) {
  @func_8398() /* ty=(Tensor[(11, 9, 8), float64],) */
}

def @func_1637(%var_1634: Tensor[(10, 7, 1), int8], %var_1635: Tensor[(10, 7, 12), int8], %var_1636: Tensor[(960), int64]) -> (Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) {
  @func_1632(%var_1634, %var_1635, %var_1636) /* ty=(Tensor[(960), int64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), int64], Tensor[(10, 7, 12), int16]) */
}

def @func_8990() -> Tensor[(360), float32] {
  %991 = fn () -> Tensor[(360), float32] {
    @func_8571() /* ty=Tensor[(360), float32] */
  };
  %991() /* ty=Tensor[(360), float32] */
}

def @func_6077() -> (Tensor[(10), float64],) {
  %992 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %993 = %992.2;
  (%993,)
}

def @func_8143() -> (Tensor[(360), float32],) {
  %994 = @func_8023() /* ty=Tensor[(360), float32] */;
  (%994,)
}

def @func_8423() -> (Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) {
  %995 = @func_6288() /* ty=(Tensor[(360), float32],) */;
  %996 = cast(meta[relay.Constant][67] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %997 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 4), int32] */, dtype="int32") /* ty=Tensor[(6, 4), int32] */;
  %998 = reshape(%996, newshape=[32]) /* ty=Tensor[(32), float64] */;
  %999 = reshape(%997, newshape=[24]) /* ty=Tensor[(24), int32] */;
  %1000 = @func_5941(%998, %999) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(24), int32], Tensor[(384), int32]) */;
  %1001 = %995.0;
  %1002 = %1000.1;
  (%1001, %1002, meta[relay.Constant][67] /* ty=Tensor[(32), float64] */, meta[relay.Constant][68] /* ty=Tensor[(6, 4), int32] */)
}

def @func_8024() -> Tensor[(360), float32] {
  %1004 = fn () -> Tensor[(360), float32] {
    %1003 = @func_7192() /* ty=(Tensor[(360), float32], Tensor[(11, 11, 3), float32], Tensor[(105), float64]) */;
    %1003.0
  };
  %1004() /* ty=Tensor[(360), float32] */
}

def @func_7675(%var_7580: Tensor[(9, 10, 8), float64], %var_7581: Tensor[(9, 10, 8), float64], %var_7606: Tensor[(65, 5), float32], %var_7607: Tensor[(1440), float64], %var_7608: Tensor[(360), float32], %var_7610: Tensor[(1, 260), float32], %var_7625: Tensor[(252), uint8], %var_7626: Tensor[(448), float64], %var_7660: Tensor[(21, 5), float64]) -> (Tensor[(9, 10, 8), float64], Tensor[(70), int8], Tensor[(65, 5), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(7, 10), int8], Tensor[(1, 260), float32], Tensor[(16, 15, 4), int64], Tensor[(252), uint8], Tensor[(448), float64], Tensor[(1, 960), int64], Tensor[(9, 10, 8), int8], Tensor[(9, 10, 8), uint8], Tensor[(360), float32], Tensor[(21, 5), float64]) {
  %1005 = cast(%var_7581, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %1006 = shape_of(%var_7580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1007 = cast(%var_7580, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1009 = cast(%var_7606, dtype="float32") /* ty=Tensor[(65, 5), float32] */;
  %1010 = cast(%var_7607, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1011 = cast(%var_7608, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1012 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 10), int8] */, dtype="int8") /* ty=Tensor[(7, 10), int8] */;
  %1013 = cast(%var_7610, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
  %1014 = reshape(%1009, newshape=[1, 325]) /* ty=Tensor[(1, 325), float32] */;
  %1015 = reshape(%1010, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %1016 = reshape(%1011, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1017 = reshape(%1012, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %1018 = reshape(%1013, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %1019 = @func_7465(%1014, %1015, %1016, %1017, %1018) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) */;
  %1020 = cast(%var_7625, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %1021 = cast(%var_7625, dtype="uint8") /* ty=Tensor[(252), uint8] */;
  %1022 = cast(%var_7608, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1023 = cast(%var_7626, dtype="float64") /* ty=Tensor[(448), float64] */;
  %1024 = cast(meta[relay.Constant][70] /* ty=Tensor[(1, 960), int64] */, dtype="int64") /* ty=Tensor[(1, 960), int64] */;
  %1025 = reshape(%1020, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %1026 = reshape(%1021, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
  %1027 = reshape(%1022, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
  %1028 = reshape(%1023, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
  %1029 = reshape(%1024, newshape=[960]) /* ty=Tensor[(960), int64] */;
  %1030 = @func_2128(%1025, %1026, %1027, %1028, %1029) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
  %1031 = cast(%var_7580, dtype="float64") /* ty=Tensor[(9, 10, 8), float64] */;
  %1032 = sinh(%1031) /* ty=Tensor[(9, 10, 8), float64] */;
  %1033 = cast(%var_7581, dtype="int8") /* ty=Tensor[(9, 10, 8), int8] */;
  %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%1032, dtype="int8") /* ty=Tensor[(9, 10, 8), int8] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1037 = cast(%1032, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %1038 = shape_of(%var_7581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%var_7581, dtype="bool") /* ty=Tensor[(9, 10, 8), bool] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1041 = less_equal(%1039, %1040) /* ty=Tensor[(9, 10, 8), bool] */;
  %1042 = cast(%1041, dtype="uint8") /* ty=Tensor[(9, 10, 8), uint8] */;
  %1043 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%1032, dtype="uint8") /* ty=Tensor[(9, 10, 8), uint8] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1046 = cast(%var_7660, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1047 = reshape(%1046, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %1048 = @func_871(%1047) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %1049 = floor_divide(%1007, %1008) /* ty=Tensor[(9, 10, 8), float64] */;
  %1050 = %1019.6;
  %1051 = %1030.12;
  %1052 = logical_xor(%1035, %1036) /* ty=Tensor[(9, 10, 8), int8] */;
  %1053 = bitwise_or(%1044, %1045) /* ty=Tensor[(9, 10, 8), uint8] */;
  %1054 = %1048.1;
  (%1049, %1050, %var_7606, %var_7607, %var_7608, meta[relay.Constant][69] /* ty=Tensor[(7, 10), int8] */, %var_7610, %1051, %var_7625, %var_7626, meta[relay.Constant][70] /* ty=Tensor[(1, 960), int64] */, %1052, %1053, %1054, %var_7660)
}

def @func_7487() -> (Tensor[(360), float32],) {
  %1057 = fn () -> (Tensor[(360), float32],) {
    %1055 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
    %1056 = %1055.0;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(360), float32],) */
}

def @func_6319() -> Tensor[(360), float32] {
  @func_6317() /* ty=Tensor[(360), float32] */
}

def @func_11316() -> (Tensor[(10), float64], Tensor[(36, 10), float32], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64]) {
  %1071 = fn () -> (Tensor[(10), float64], Tensor[(36, 10), float32], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64]) {
    %1058 = cast(meta[relay.Constant][71] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %1059 = cast(meta[relay.Constant][71] /* ty=Tensor[(252), uint8] */, dtype="uint8") /* ty=Tensor[(252), uint8] */;
    %1060 = cast(meta[relay.Constant][72] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %1061 = cast(meta[relay.Constant][73] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1062 = cast(meta[relay.Constant][74] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
    %1063 = reshape(%1058, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
    %1064 = reshape(%1059, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), uint8] */;
    %1065 = reshape(%1060, newshape=[36, 10]) /* ty=Tensor[(36, 10), float32] */;
    %1066 = reshape(%1061, newshape=[4, 112]) /* ty=Tensor[(4, 112), float64] */;
    %1067 = reshape(%1062, newshape=[960]) /* ty=Tensor[(960), int64] */;
    %1068 = @func_2128(%1063, %1064, %1065, %1066, %1067) /* ty=(Tensor[(6, 7, 6), bool], Tensor[(4, 9, 10), float64], Tensor[(36, 10), float32], Tensor[(4, 112), float64], Tensor[(40), float64], Tensor[(960), int64], Tensor[(960), float32], Tensor[(?, 15, 7), bool], Tensor[(105), float64], Tensor[(4, 6, 16), int32], Tensor[(24), int32], Tensor[(384), int32], Tensor[(16, 15, 4), int64], int64) */;
    %1069 = @func_9912() /* ty=Tensor[(10), float64] */;
    %1070 = %1068.2;
    (%1069, %1070, meta[relay.Constant][71] /* ty=Tensor[(252), uint8] */, meta[relay.Constant][72] /* ty=Tensor[(360), float32] */, meta[relay.Constant][73] /* ty=Tensor[(448), float64] */, meta[relay.Constant][74] /* ty=Tensor[(960), int64] */)
  };
  %1071() /* ty=(Tensor[(10), float64], Tensor[(36, 10), float32], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64]) */
}

def @func_8195() -> (Tensor[(360), float32], Tensor[(360), float32]) {
  %1075 = fn () -> (Tensor[(360), float32], Tensor[(360), float32]) {
    %1072 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
    %1073 = @func_6960() /* ty=Tensor[(360), float32] */;
    %1074 = %1072.0;
    (%1073, %1074)
  };
  %1075() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */
}

def @func_6309() -> Tensor[(360), float32] {
  @func_6307() /* ty=Tensor[(360), float32] */
}

def @func_9832() -> (Tensor[(360), float32], Tensor[(360), float32], Tensor[(360), float32]) {
  %1076 = @func_7919() /* ty=(Tensor[(360), float32], Tensor[(16, 16, 14), float64]) */;
  %1077 = @func_7486() /* ty=(Tensor[(360), float32],) */;
  %1078 = %1076.0;
  %1079 = @func_6573() /* ty=Tensor[(360), float32] */;
  %1080 = %1077.0;
  (%1078, %1079, %1080)
}

def @func_2537(%var_2534: Tensor[(5, 4, 13), float32], %var_2535: Tensor[(70, 1), int8], %var_2536: Tensor[(840), int8]) -> (Tensor[(5, 4, 13), int32], Tensor[(960), int64], Tensor[(70, 1), int8], Tensor[(840), int8], Tensor[(960), int64]) {
  @func_2532(%var_2534, %var_2535, %var_2536) /* ty=(Tensor[(5, 4, 13), int32], Tensor[(960), int64], Tensor[(70, 1), int8], Tensor[(840), int8], Tensor[(960), int64]) */
}

def @func_6092() -> Tensor[(360), float32] {
  @func_6009() /* ty=Tensor[(360), float32] */
}

def @func_5995(%var_5983: Tensor[(288), uint16], %var_5985: Tensor[(105), float64]) -> (Tensor[(16, 16, 14), float64], Tensor[(1, 105), float64], Tensor[(288), uint16], Tensor[(1, 70), int8], Tensor[(105), float64], Tensor[(16, 16, 14), float64]) {
  %1081 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %1082 = cast(%var_5983, dtype="uint16") /* ty=Tensor[(288), uint16] */;
  %1083 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 70), int8] */, dtype="int8") /* ty=Tensor[(1, 70), int8] */;
  %1084 = cast(%var_5985, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1085 = reshape(%1082, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), uint16] */;
  %1086 = reshape(%1083, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %1087 = reshape(%1084, newshape=[1, 105]) /* ty=Tensor[(1, 105), float64] */;
  %1088 = @func_2240(%1085, %1086, %1087) /* ty=(Tensor[(16, 6, 3), bool], Tensor[(960), int64], Tensor[(70), int8], Tensor[(840), int8], Tensor[(120, 8), int64], Tensor[(?, 15, 7), bool], Tensor[(1, 105), float64]) */;
  %1089 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1090 = %1081.0;
  %1091 = %1088.6;
  %1092 = %1089.1;
  (%1090, %1091, %var_5983, meta[relay.Constant][75] /* ty=Tensor[(1, 70), int8] */, %var_5985, %1092)
}

def @func_7088(%var_7079: Tensor[(16, 16, 14), float64]) -> (Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) {
  %1093 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1094 = %1093.1;
  %1095 = cast(%var_7079, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1097 = cast(%1094, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1099 = cast(%1094, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %1100 = shape_of(%var_7079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%var_7079, dtype="bool") /* ty=Tensor[(16, 16, 14), bool] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1103 = power(%1097, %1098) /* ty=Tensor[(16, 16, 14), float64] */;
  %1104 = less_equal(%1101, %1102) /* ty=Tensor[(16, 16, 14), bool] */;
  (%1103, %1104)
}

def @func_9753() -> Tensor[(360), float32] {
  @func_6960() /* ty=Tensor[(360), float32] */
}

def @func_10728(%var_10666: Tensor[(325), float32], %var_10667: Tensor[(1440), float64], %var_10668: Tensor[(360), float32], %var_10669: Tensor[(70), int8], %var_10670: Tensor[(260), float32]) -> (Tensor[(792), float64], Tensor[(363), float32], Tensor[(105), float64], Tensor[(792), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(70), int8], Tensor[(260), float32], Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(11, 9, 8), float64]) {
  %1105 = @func_6615() /* ty=(Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */;
  %1106 = cast(meta[relay.Constant][76] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1107 = reshape(%1106, newshape=[1, 15, 7]) /* ty=Tensor[(1, 15, 7), float64] */;
  %1108 = @func_871(%1107) /* ty=(Tensor[(4, 9, 10), float64], Tensor[(360), float32], Tensor[(?, 15, 7), bool], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %1109 = cast(%var_10666, dtype="float32") /* ty=Tensor[(325), float32] */;
  %1110 = cast(%var_10667, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1111 = cast(%var_10668, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1112 = cast(%var_10669, dtype="int8") /* ty=Tensor[(70), int8] */;
  %1113 = cast(%var_10670, dtype="float32") /* ty=Tensor[(260), float32] */;
  %1114 = reshape(%1109, newshape=[1, 325]) /* ty=Tensor[(1, 325), float32] */;
  %1115 = reshape(%1110, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %1116 = reshape(%1111, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %1117 = reshape(%1112, newshape=[70]) /* ty=Tensor[(70), int8] */;
  %1118 = reshape(%1113, newshape=[260]) /* ty=Tensor[(260), float32] */;
  %1119 = @func_7465(%1114, %1115, %1116, %1117, %1118) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(10, 7, 12), int16], Tensor[(1, 325), float32], Tensor[(1440), float64], Tensor[(360), float32], Tensor[(448), float64], Tensor[(70), int8], Tensor[(360), float32], Tensor[(5, 4, 13), int32], Tensor[(260), float32], Tensor[(360), float32], Tensor[(11, 9, 8), float64], Tensor[(792), float64], Tensor[(11, 9, 8), float64], Tensor[(360), float32]) */;
  %1120 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1121 = @func_10384() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %1122 = @func_10239() /* ty=(Tensor[(11, 9, 8), float64],) */;
  %1123 = %1105.2;
  %1124 = %1108.4;
  %1125 = %1119.12;
  %1126 = %1120.1;
  %1127 = %1121.1;
  %1128 = %1122.0;
  (%1123, %1124, meta[relay.Constant][76] /* ty=Tensor[(105), float64] */, %1125, %var_10666, %var_10667, %var_10668, %var_10669, %var_10670, %1126, %1127, %1128)
}

def @func_2744(%var_2743: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) {
  %1135 = fn (%var_2731: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) {
    %1129 = cast(%var_2731, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
    %1130 = cast(meta[relay.Constant][77] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1131 = reshape(%1130, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
    %1132 = @func_2172(%1131) /* ty=(Tensor[(11, 9, 8), float64],) */;
    %1133 = sigmoid(%1129) /* ty=Tensor[(9, 14, 10), float64] */;
    %1134 = %1132.0;
    (%1133, %1134, meta[relay.Constant][77] /* ty=Tensor[(792), float64] */)
  };
  %1135(%var_2743) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) */
}

def @func_7272(%var_7270: Tensor[(16, 3, 12), float64]) -> (Tensor[(16, 3, 12), int16], Tensor[(16, 3, 12), float64]) {
  @func_7269(%var_7270) /* ty=(Tensor[(16, 3, 12), int16], Tensor[(16, 3, 12), float64]) */
}

def @func_11935() -> (Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), float64]) {
  %1142 = fn () -> (Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), float64]) {
    %1136 = @func_6335() /* ty=(Tensor[(16, 16, 14), float64],) */;
    %1137 = %1136.0;
    %1138 = cast(%1137, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
    %1139 = reshape(%1138, newshape=[16, 16, 14]) /* ty=Tensor[(16, 16, 14), float64] */;
    %1140 = @func_7088(%1139) /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), bool]) */;
    %1141 = %1140.0;
    (%1137, %1141)
  };
  %1142() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(16, 16, 14), float64]) */
}

def @func_987(%var_985: Tensor[(4, 5, 2), float64], %var_986: Tensor[(960), int64]) -> (Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  %1151 = fn (%var_961: Tensor[(4, 5, 2), float64], %var_966: Tensor[(960), int64]) -> (Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
    %1143 = cast(%var_961, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
    %1144 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %1145 = cast(%var_966, dtype="int64") /* ty=Tensor[(960), int64] */;
    %1146 = reshape(%1144, newshape=[]) /* ty=int64 */;
    %1147 = reshape(%1145, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
    %1148 = @func_710(%1146, %1147) /* ty=(Tensor[(16, 15, 4), int64],) */;
    %1149 = atan(%1143) /* ty=Tensor[(4, 5, 2), float64] */;
    %1150 = %1148.0;
    (%1149, %1150, 10 /* ty=int64 */, %var_966)
  };
  %1151(%var_985, %var_986) /* ty=(Tensor[(4, 5, 2), float64], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) */
}

def @func_12703() -> Tensor[(16, 16, 14), int32] {
  @func_12701() /* ty=Tensor[(16, 16, 14), int32] */
}

def @func_12358(%var_12333: Tensor[(8, 14, 13), uint64]) -> Tensor[(8, 14, 13), uint64] {
  %1152 = cast(%var_12333, dtype="uint64") /* ty=Tensor[(8, 14, 13), uint64] */;
  %1153 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(8, 14, 13), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(meta[relay.Constant][78] /* ty=Tensor[(8, 14, 13), uint64] */, dtype="uint64") /* ty=Tensor[(8, 14, 13), uint64] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%1154, %1155) /* ty=Tensor[(8, 14, 13), uint64] */
}

def @func_8920(%var_8916: Tensor[(13, 12, 12), int64], %var_8917: Tensor[(3584), float64], %var_8918: Tensor[(13, 12, 12), int64], %var_8919: Tensor[(13, 12, 12), int64]) -> (Tensor[(16, 16, 14), bool], Tensor[(3584), float64], Tensor[(13, 12, 12), bool], Tensor[(360), float32], Tensor[(13, 12, 12), uint8]) {
  @func_8914(%var_8916, %var_8917, %var_8918, %var_8919) /* ty=(Tensor[(16, 16, 14), bool], Tensor[(3584), float64], Tensor[(13, 12, 12), bool], Tensor[(360), float32], Tensor[(13, 12, 12), uint8]) */
}

def @func_6307() -> Tensor[(360), float32] {
  @func_6092() /* ty=Tensor[(360), float32] */
}

def @func_5960() -> (Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) {
  %1156 = @func_5863() /* ty=(Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) */;
  %1157 = cast(meta[relay.Constant][79] /* ty=Tensor[(10), float64] */, dtype="float64") /* ty=Tensor[(10), float64] */;
  %1158 = reshape(%1157, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float64] */;
  %1159 = @func_2480(%1158) /* ty=(Tensor[(5, 2, ?), uint64], Tensor[(360), float32], Tensor[(4, 9, 10), float32]) */;
  %1160 = %1156.1;
  %1161 = %1159.1;
  (%1160, %1161, meta[relay.Constant][79] /* ty=Tensor[(10), float64] */)
}

def @func_5962() -> (Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) {
  @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */
}

def @func_6761() -> (Tensor[(16, 16, 14), float64],) {
  @func_6759() /* ty=(Tensor[(16, 16, 14), float64],) */
}

def @func_5863() -> (Tensor[(16, 16, 14), uint16], Tensor[(16, 16, 14), float64]) {
  %1162 = cast(meta[relay.Constant][80] /* ty=Tensor[(16, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 16, 14), float32] */;
  %1163 = exp(%1162) /* ty=Tensor[(16, 16, 14), float32] */;
  %1164 = cast(%1163, dtype="uint16") /* ty=Tensor[(16, 16, 14), uint16] */;
  %1165 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(16, 16, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1166 = cast(meta[relay.Constant][80] /* ty=Tensor[(16, 16, 14), float32] */, dtype="uint16") /* ty=Tensor[(16, 16, 14), uint16] */;
  %1167 = dyn.reshape(%1164, %1165, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1168 = cast(%1163, dtype="float64") /* ty=Tensor[(16, 16, 14), float64] */;
  %1169 = left_shift(%1166, %1167) /* ty=Tensor[(16, 16, 14), uint16] */;
  %1170 = cos(%1168) /* ty=Tensor[(16, 16, 14), float64] */;
  (%1169, %1170)
}

def @func_5165(%var_5160: Tensor[(13, 5, 5), float32], %var_5161: Tensor[(1440), float64], %var_5162: Tensor[(360), float32], %var_5163: Tensor[(448), float64], %var_5164: Tensor[(70), int8]) -> (Tensor[(13, 5, 5), float32], Tensor[(4, 5, 13), bool], Tensor[(20), uint32], Tensor[(260), uint32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(4, 9, 10), float64], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64], Tensor[(10, 7, 12), int16], Tensor[(70), int8], Tensor[(840), int8]) {
  @func_5158(%var_5160, %var_5161, %var_5162, %var_5163, %var_5164) /* ty=(Tensor[(13, 5, 5), float32], Tensor[(4, 5, 13), bool], Tensor[(20), uint32], Tensor[(260), uint32], Tensor[(9, 10, 16), float64], Tensor[(1440), float64], Tensor[(4, 9, 10), float64], Tensor[(252), uint8], Tensor[(360), float32], Tensor[(448), float64], Tensor[(960), int64], Tensor[(10, 7, 12), int16], Tensor[(70), int8], Tensor[(840), int8]) */
}

def @func_6615() -> (Tensor[(10), float64], Tensor[(11, 9, 8), float64], Tensor[(792), float64]) {
  %1171 = @func_6152() /* ty=(Tensor[(360), float32], Tensor[(10), float64]) */;
  %1172 = cast(meta[relay.Constant][81] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1173 = reshape(%1172, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), float64] */;
  %1174 = @func_2172(%1173) /* ty=(Tensor[(11, 9, 8), float64],) */;
  %1175 = %1171.1;
  %1176 = %1174.0;
  (%1175, %1176, meta[relay.Constant][81] /* ty=Tensor[(792), float64] */)
}

def @func_10213(%var_10205: int64) -> (Tensor[(360), float32], Tensor[(60), float32], Tensor[(60), float32], Tensor[(16, 15, 4), int64], int64, Tensor[(960), int64]) {
  %1177 = @func_8846() /* ty=(Tensor[(10), float64], Tensor[(360), float32]) */;
  %1178 = cast(meta[relay.Constant][82] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %1179 = %1177.1;
  %1180 = cast(%1179, dtype="float32") /* ty=Tensor[(360), float32] */;
  %1181 = reshape(%1178, newshape=[60]) /* ty=Tensor[(60), float32] */;
  %1182 = reshape(%1180, newshape=[2, 180]) /* ty=Tensor[(2, 180), float32] */;
  %1183 = @func_9411(%1181, %1182) /* ty=(Tensor[(9, 10, 16), float32], Tensor[(12, 5, 1), float32], Tensor[(60), float32], Tensor[(4, 9, 10), float64], Tensor[(2, 180), float32], Tensor[(32), float64], Tensor[(10), float64]) */;
  %1184 = cast(%var_10205, dtype="int64") /* ty=int64 */;
  %1185 = cast(meta[relay.Constant][83] /* ty=Tensor[(960), int64] */, dtype="int64") /* ty=Tensor[(960), int64] */;
  %1186 = reshape(%1184, newshape=[]) /* ty=int64 */;
  %1187 = reshape(%1185, newshape=[16, 15, 4]) /* ty=Tensor[(16, 15, 4), int64] */;
  %1188 = @func_710(%1186, %1187) /* ty=(Tensor[(16, 15, 4), int64],) */;
  %1189 = %1183.2;
  %1190 = %1188.0;
  (%1179, %1189, meta[relay.Constant][82] /* ty=Tensor[(60), float32] */, %1190, %var_10205, meta[relay.Constant][83] /* ty=Tensor[(960), int64] */)
}

def @func_12701() -> Tensor[(16, 16, 14), int32] {
  %1191 = @func_10128() /* ty=(Tensor[(16, 16, 14), int32],) */;
  %1191.0
}

def @func_1926(%var_1918: Tensor[(4, 6, 1), int32], %var_1919: Tensor[(4, 6, 16), int32]) -> Tensor[(4, 6, 16), int32] {
  %1192 = cast(%var_1918, dtype="int32") /* ty=Tensor[(4, 6, 1), int32] */;
  %1193 = cast(%var_1919, dtype="int32") /* ty=Tensor[(4, 6, 16), int32] */;
  bitwise_and(%1192, %1193) /* ty=Tensor[(4, 6, 16), int32] */
}

def @func_8425() -> (Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) {
  @func_8423() /* ty=(Tensor[(360), float32], Tensor[(4, 6, 16), int32], Tensor[(32), float64], Tensor[(6, 4), int32]) */
}

def @func_6133() -> Tensor[(16, 16, 14), float64] {
  %1194 = @func_5960() /* ty=(Tensor[(16, 16, 14), float64], Tensor[(360), float32], Tensor[(10), float64]) */;
  %1194.0
}

def @func_9415(%var_9413: Tensor[(60), float32], %var_9414: Tensor[(2, 180), float32]) -> (Tensor[(9, 10, 16), float32], Tensor[(12, 5, 1), float32], Tensor[(60), float32], Tensor[(4, 9, 10), float64], Tensor[(2, 180), float32], Tensor[(32), float64], Tensor[(10), float64]) {
  @func_9411(%var_9413, %var_9414) /* ty=(Tensor[(9, 10, 16), float32], Tensor[(12, 5, 1), float32], Tensor[(60), float32], Tensor[(4, 9, 10), float64], Tensor[(2, 180), float32], Tensor[(32), float64], Tensor[(10), float64]) */
}

def @func_6135() -> Tensor[(16, 16, 14), float64] {
  @func_6133() /* ty=Tensor[(16, 16, 14), float64] */
}

def @func_12110() -> (Tensor[(360), float32],) {
  %1196 = fn () -> (Tensor[(360), float32],) {
    %1195 = @func_8989() /* ty=Tensor[(360), float32] */;
    (%1195,)
  };
  %1196() /* ty=(Tensor[(360), float32],) */
}

def @func_12424() -> (Tensor[(360), float32],) {
  %1197 = @func_8571() /* ty=Tensor[(360), float32] */;
  (%1197,)
}

def @func_12670() -> (Tensor[(16, 16, 14), float64], Tensor[(360), float32]) {
  %1198 = @func_8384() /* ty=(Tensor[(16, 16, 14), float64],) */;
  %1199 = @func_10384() /* ty=(Tensor[(360), float32], Tensor[(360), float32]) */;
  %1200 = %1198.0;
  %1201 = %1199.0;
  (%1200, %1201)
}

def @func_11232(%var_11231: Tensor[(128), int64]) -> (Tensor[(16, 16, 14), int32], Tensor[(720), float64], Tensor[(325), float32], Tensor[(448), float64], Tensor[(105), float64], Tensor[(128), int64]) {
  %1214 = fn (%var_11220: Tensor[(128), int64]) -> (Tensor[(16, 16, 14), int32], Tensor[(720), float64], Tensor[(325), float32], Tensor[(448), float64], Tensor[(105), float64], Tensor[(128), int64]) {
    %1202 = @func_10128() /* ty=(Tensor[(16, 16, 14), int32],) */;
    %1203 = cast(meta[relay.Constant][84] /* ty=Tensor[(325), float32] */, dtype="float32") /* ty=Tensor[(325), float32] */;
    %1204 = cast(meta[relay.Constant][85] /* ty=Tensor[(448), float64] */, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1205 = cast(meta[relay.Constant][86] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1206 = cast(%var_11220, dtype="int64") /* ty=Tensor[(128), int64] */;
    %1207 = reshape(%1203, newshape=[325]) /* ty=Tensor[(325), float32] */;
    %1208 = reshape(%1204, newshape=[112, 4]) /* ty=Tensor[(112, 4), float64] */;
    %1209 = reshape(%1205, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %1210 = reshape(%1206, newshape=[128]) /* ty=Tensor[(128), int64] */;
    %1211 = @func_11187(%1207, %1208, %1209, %1210) /* ty=(Tensor[(360), float32], Tensor[(360), float32], Tensor[(448), float64], Tensor[(720), float64], Tensor[(325), float32], Tensor[(1440), float64], Tensor[(260), float32], Tensor[(252), uint8], Tensor[(112, 4), float64], Tensor[(105), float64], Tensor[(6, 7, 6), bool], Tensor[(128), int64], Tensor[(960), int64], Tensor[(840), int8]) */;
    %1212 = %1202.0;
    %1213 = %1211.3;
    (%1212, %1213, meta[relay.Constant][84] /* ty=Tensor[(325), float32] */, meta[relay.Constant][85] /* ty=Tensor[(448), float64] */, meta[relay.Constant][86] /* ty=Tensor[(105), float64] */, %var_11220)
  };
  %1214(%var_11231) /* ty=(Tensor[(16, 16, 14), int32], Tensor[(720), float64], Tensor[(325), float32], Tensor[(448), float64], Tensor[(105), float64], Tensor[(128), int64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen393/build/output.py", line 3058, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:13:21] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


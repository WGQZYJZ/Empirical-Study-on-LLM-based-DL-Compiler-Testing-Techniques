import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_239 = relay.var("var_239", dtype = "float32", shape = (1, 10, 6))#candidate|239|(1, 10, 6)|var|float32
uop_240 = relay.acosh(var_239.astype('float32')) # shape=(1, 10, 6)
bop_247 = relay.add(uop_240.astype('int32'), relay.reshape(var_239.astype('int32'), relay.shape_of(uop_240))) # shape=(1, 10, 6)
uop_256 = relay.sinh(uop_240.astype('float32')) # shape=(1, 10, 6)
bop_260 = relay.right_shift(uop_256.astype('int32'), relay.reshape(bop_247.astype('int32'), relay.shape_of(uop_256))) # shape=(1, 10, 6)
bop_265 = relay.less(bop_260.astype('bool'), relay.reshape(bop_247.astype('bool'), relay.shape_of(bop_260))) # shape=(1, 10, 6)
bop_272 = relay.logical_and(bop_247.astype('bool'), relay.reshape(bop_260.astype('bool'), relay.shape_of(bop_247))) # shape=(1, 10, 6)
uop_277 = relay.sigmoid(uop_256.astype('float64')) # shape=(1, 10, 6)
uop_279 = relay.acos(uop_240.astype('float32')) # shape=(1, 10, 6)
output = relay.Tuple([bop_265,bop_272,uop_277,uop_279,])
output2 = relay.Tuple([bop_265,bop_272,uop_277,uop_279,])
func_286 = relay.Function([var_239,], output)
mod['func_286'] = func_286
mod = relay.transform.InferType()(mod)
var_287 = relay.var("var_287", dtype = "float32", shape = (1, 10, 6))#candidate|287|(1, 10, 6)|var|float32
output = func_286(var_287)
func_288 = relay.Function([var_287], output)
mutated_mod['func_288'] = func_288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_508 = relay.var("var_508", dtype = "float64", shape = (16, 7, 14))#candidate|508|(16, 7, 14)|var|float64
var_509 = relay.var("var_509", dtype = "float64", shape = (16, 7, 14))#candidate|509|(16, 7, 14)|var|float64
bop_510 = relay.maximum(var_508.astype('float64'), relay.reshape(var_509.astype('float64'), relay.shape_of(var_508))) # shape=(16, 7, 14)
bop_513 = relay.greater_equal(var_509.astype('bool'), relay.reshape(bop_510.astype('bool'), relay.shape_of(var_509))) # shape=(16, 7, 14)
func_286_call = mod.get_global_var('func_286')
func_288_call = mutated_mod.get_global_var('func_288')
const_519 = relay.const([-1.526606,-1.498205,-0.573447,1.189013,-1.681648,7.339065,-9.902576,-7.853623,6.365474,3.989952,5.870779,-0.410374,6.839371,7.408303,-1.179071,2.777499,1.338758,-2.611983,-1.713934,5.393678,-3.756956,-9.689633,1.001097,2.613604,-9.550283,6.871640,-8.543532,8.605634,6.972689,-4.870665,-8.667383,-2.622049,4.575550,4.881800,1.215820,-7.504527,-9.517159,-9.613610,-9.129334,-1.426838,4.319938,-8.521187,4.375369,3.875039,-8.568363,-7.325671,3.164978,5.929374,2.719596,-0.569473,3.890276,9.411207,0.834357,6.010721,4.773100,9.593480,-2.276246,-4.866462,4.033716,-2.899034], dtype = "float32")#candidate|519|(60,)|const|float32
call_518 = relay.TupleGetItem(func_286_call(relay.reshape(const_519.astype('float32'), [1, 10, 6])), 1)
call_520 = relay.TupleGetItem(func_288_call(relay.reshape(const_519.astype('float32'), [1, 10, 6])), 1)
output = relay.Tuple([bop_513,call_518,const_519,])
output2 = relay.Tuple([bop_513,call_520,const_519,])
func_529 = relay.Function([var_508,var_509,], output)
mod['func_529'] = func_529
mod = relay.transform.InferType()(mod)
var_530 = relay.var("var_530", dtype = "float64", shape = (16, 7, 14))#candidate|530|(16, 7, 14)|var|float64
var_531 = relay.var("var_531", dtype = "float64", shape = (16, 7, 14))#candidate|531|(16, 7, 14)|var|float64
output = func_529(var_530,var_531,)
func_532 = relay.Function([var_530,var_531,], output)
mutated_mod['func_532'] = func_532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_549 = relay.var("var_549", dtype = "bool", shape = (4, 11, 2))#candidate|549|(4, 11, 2)|var|bool
var_550 = relay.var("var_550", dtype = "bool", shape = (4, 11, 2))#candidate|550|(4, 11, 2)|var|bool
bop_551 = relay.logical_or(var_549.astype('bool'), relay.reshape(var_550.astype('bool'), relay.shape_of(var_549))) # shape=(4, 11, 2)
var_580 = relay.var("var_580", dtype = "bool", shape = (4, 11, 2))#candidate|580|(4, 11, 2)|var|bool
bop_581 = relay.power(var_550.astype('float64'), relay.reshape(var_580.astype('float64'), relay.shape_of(var_550))) # shape=(4, 11, 2)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
var_593 = relay.var("var_593", dtype = "float64", shape = (1568,))#candidate|593|(1568,)|var|float64
call_592 = relay.TupleGetItem(func_529_call(relay.reshape(var_593.astype('float64'), [16, 7, 14]), relay.reshape(var_593.astype('float64'), [16, 7, 14]), ), 0)
call_594 = relay.TupleGetItem(func_532_call(relay.reshape(var_593.astype('float64'), [16, 7, 14]), relay.reshape(var_593.astype('float64'), [16, 7, 14]), ), 0)
uop_596 = relay.exp(var_580.astype('float64')) # shape=(4, 11, 2)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
call_604 = relay.TupleGetItem(func_529_call(relay.reshape(call_592.astype('float64'), [16, 7, 14]), relay.reshape(call_592.astype('float64'), [16, 7, 14]), ), 1)
call_605 = relay.TupleGetItem(func_532_call(relay.reshape(call_592.astype('float64'), [16, 7, 14]), relay.reshape(call_592.astype('float64'), [16, 7, 14]), ), 1)
uop_617 = relay.tan(uop_596.astype('float64')) # shape=(4, 11, 2)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
call_619 = relay.TupleGetItem(func_529_call(relay.reshape(call_592.astype('float64'), [16, 7, 14]), relay.reshape(call_592.astype('float64'), [16, 7, 14]), ), 2)
call_620 = relay.TupleGetItem(func_532_call(relay.reshape(call_592.astype('float64'), [16, 7, 14]), relay.reshape(call_592.astype('float64'), [16, 7, 14]), ), 2)
output = relay.Tuple([bop_551,bop_581,call_592,var_593,call_604,uop_617,call_619,])
output2 = relay.Tuple([bop_551,bop_581,call_594,var_593,call_605,uop_617,call_620,])
func_624 = relay.Function([var_549,var_550,var_580,var_593,], output)
mod['func_624'] = func_624
mod = relay.transform.InferType()(mod)
var_625 = relay.var("var_625", dtype = "bool", shape = (4, 11, 2))#candidate|625|(4, 11, 2)|var|bool
var_626 = relay.var("var_626", dtype = "bool", shape = (4, 11, 2))#candidate|626|(4, 11, 2)|var|bool
var_627 = relay.var("var_627", dtype = "bool", shape = (4, 11, 2))#candidate|627|(4, 11, 2)|var|bool
var_628 = relay.var("var_628", dtype = "float64", shape = (1568,))#candidate|628|(1568,)|var|float64
output = func_624(var_625,var_626,var_627,var_628,)
func_629 = relay.Function([var_625,var_626,var_627,var_628,], output)
mutated_mod['func_629'] = func_629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_713 = relay.var("var_713", dtype = "float64", shape = (11, 9, 7))#candidate|713|(11, 9, 7)|var|float64
uop_714 = relay.rsqrt(var_713.astype('float64')) # shape=(11, 9, 7)
func_624_call = mod.get_global_var('func_624')
func_629_call = mutated_mod.get_global_var('func_629')
var_718 = relay.var("var_718", dtype = "bool", shape = (88,))#candidate|718|(88,)|var|bool
const_719 = relay.const([-6.265156,-6.394305,4.147939,-7.088601,7.382788,3.405400,3.814797,-4.228436,-2.779096,7.576579,4.388297,2.497479,1.960066,4.579441,6.775573,9.768260,-8.433664,-4.105306,6.163657,-7.946467,-9.382253,-4.224232,7.915018,4.419493,3.558531,-8.533352,-5.911802,7.718461,-4.378370,-6.098826,7.730228,-7.587471,6.236719,2.635021,9.108796,5.918241,5.847661,3.072660,5.012991,-1.072134,-3.082731,5.576460,0.661065,-5.885066,0.926247,3.036459,-2.939472,-4.990483,-0.495180,-7.798347,7.974544,-6.425942,5.536764,5.410354,-5.685492,3.776021,-0.688530,-1.347295,0.237185,-8.325016,3.990609,-1.143754,1.815829,-4.189315,-0.282501,4.357753,-2.727358,1.211992,9.524041,-0.281599,-5.900832,-7.213882,-5.146764,-1.620438,-6.855535,-9.259735,3.244102,8.773070,7.103575,-1.609846,5.203611,0.913808,6.146278,4.557976,2.478464,9.542027,-4.101037,4.675103,-2.036730,-6.207400,-5.481922,-2.408211,9.423538,-4.222514,8.373316,3.670512,-9.403758,0.681533,9.700978,-9.777529,-0.647211,-7.678870,-7.092753,-8.063890,-0.210321,2.059391,2.624534,-7.412770,1.889749,-1.738026,4.795939,8.427629,-4.796870,-0.983585,-8.466191,3.960378,-2.970636,7.941691,5.045100,6.928614,-1.834048,-6.064606,-9.530888,8.348193,7.351189,0.546958,9.650964,-8.929267,0.800950,1.555868,4.651303,-3.731458,-9.902309,-1.331979,8.386583,7.019850,-8.107481,-4.639847,-7.326225,0.712562,7.478749,4.027643,9.817479,-4.132665,-4.109127,-0.853983,-8.586414,8.290983,-9.928777,-2.935536,7.048172,-7.423977,8.505581,-9.328485,-0.850593,1.979151,-8.452513,-2.391602,-8.627717,-7.313316,-6.102830,4.819803,-1.149991,3.133344,-2.912362,-3.098084,-8.162650,-9.555794,5.297810,3.770358,-3.724558,1.587253,8.463462,-3.029288,7.139080,-0.005092,-6.645161,-6.772038,-7.861728,1.571380,-5.218366,-8.863214,-4.411553,-5.257900,-0.882181,4.953515,3.350569,1.984977,-8.250021,-4.481566,5.212125,3.220195,-7.731431,-9.598365,-1.450002,-2.791283,3.266432,1.174468,6.349624,-2.659507,9.795505,-6.949069,-7.579608,-3.503528,7.178490,-7.679103,7.193815,-3.093731,-2.415781,5.873700,1.785918,7.876360,-6.258645,-2.928617,-5.278391,8.928762,7.092775,-1.115853,-5.787416,-0.594623,-4.945060,-4.027248,7.989121,9.736577,4.629581,-2.817161,-3.661583,7.447491,-1.962218,-9.593517,-4.662027,-1.402409,4.938891,-3.112735,4.303864,-7.586856,3.173288,-9.824635,5.487662,-3.046964,-0.577800,9.207025,-0.240986,6.598617,9.910267,-2.993790,-2.609030,4.581486,9.173430,2.998897,-6.830266,-5.013885,-3.073995,-4.030956,2.123628,-7.296365,8.154344,-6.271177,-1.102836,-0.746437,-2.545772,-9.568152,-7.904027,-8.181635,4.432953,-7.976253,4.977014,6.897431,0.146542,-6.812959,0.650727,-3.557204,-5.770473,-0.466079,6.453442,-5.258454,1.208267,-3.926194,-7.788028,-5.016003,-4.767548,-9.927726,4.935023,3.381162,5.063871,6.744175,-4.761156,-0.560772,7.520460,9.670857,2.146150,-9.553981,-4.385350,-8.996554,2.333289,-5.106306,-7.776717,-2.924371,9.037072,-9.255044,7.249467,2.437541,-5.509347,-8.173763,-8.222576,-2.014961,-9.833645,5.163660,2.838014,8.181521,-4.483834,-2.643137,-5.199171,-9.002684,-6.708389,1.806531,4.895517,9.648906,-7.787821,6.417639,6.096833,-9.463577,-4.347013,3.382967,-3.933314,-3.911695,-3.631958,7.458704,4.285931,-2.569071,-6.187458,6.027324,-4.415441,5.180293,0.576816,-7.611650,-1.107802,-1.728372,-1.923323,-0.694161,-0.754781,5.407539,5.959684,-0.536067,-4.362735,-9.529652,-5.724623,-5.495125,-4.129321,7.932032,-1.742209,8.548151,-9.828345,2.771977,2.445963,6.916714,5.458316,-1.048434,9.609881,1.433467,-7.127156,4.108347,-8.338410,8.503593,2.553825,-3.436885,-7.468963,8.387296,7.748604,0.226384,-8.590729,-6.591039,5.165329,4.802690,6.961232,6.339628,-7.277435,-3.498984,-9.501052,-0.796354,-2.134911,-9.250806,-8.697239,-5.811637,-1.285606,-7.180601,-5.956424,-3.050215,1.861245,3.152972,3.342818,-0.861554,9.565842,-4.117455,4.274659,8.091863,5.184026,-4.593723,9.406655,0.316248,8.501215,4.314222,-0.955126,9.189011,0.261191,3.843254,3.547217,-1.385327,-8.873419,2.704386,3.144188,-7.946157,-0.061874,-4.132295,1.734748,0.332949,1.149315,-9.394784,7.040111,-6.318602,-8.109163,0.748452,1.923232,-3.167528,-5.003039,0.621445,8.205089,-3.307870,9.621556,9.437073,-7.554967,1.585010,3.097317,2.289570,4.484645,6.838372,0.810186,-0.352770,6.553088,3.905822,-8.757366,2.812370,-5.140390,8.772341,1.794239,-5.167815,5.482525,4.451333,8.700894,3.444136,-6.574097,9.980027,2.123381,0.357258,-5.864955,-0.715473,7.948636,-1.113276,7.589642,4.373765,6.440560,-0.528472,0.647172,9.376627,1.354621,-5.556559,-4.034563,1.281944,2.179684,-7.702959,0.746375,-7.794106,-7.041888,-1.976831,-5.471569,-6.474448,8.345201,-4.973889,7.168165,-2.875960,7.136721,-5.619706,-8.864621,3.126596,-7.273453,6.068147,9.141980,5.147391,9.490749,1.693949,6.810687,6.873054,7.048264,-7.692015,1.353867,0.559260,2.817835,-7.680243,4.657521,9.735072,8.540821,-9.574167,-1.604458,8.450601,5.173031,7.192420,-4.455727,-3.601297,-4.590231,-9.666959,2.432459,-0.359235,-0.567655,-0.754522,6.103222,4.716849,-3.369407,5.231078,3.177524,-9.719992,5.906111,-7.955919,-6.891693,5.453129,9.832581,4.794123,3.614855,5.536427,-4.494262,-7.664981,6.602890,2.130960,0.903546,-4.219042,2.798568,6.914060,-2.799904,-8.292116,-0.932036,7.797990,-0.074349,-2.361046,7.800561,6.538671,3.960473,1.360117,3.449362,4.053984,2.112908,-7.769093,-6.555199,4.824033,1.343407,-8.155997,-4.538877,2.303121,-6.714879,-2.028939,6.534364,2.772656,3.404745,7.219474,8.700322,5.584651,-5.624207,2.325589,-0.600361,0.640787,1.897595,9.802539,0.063616,-2.592632,8.365844,3.043589,-3.709667,4.381653,8.222995,-3.887294,6.953052,3.264553,9.215551,1.962316,-2.208163,3.555689,-8.392092,3.839016,3.405572,8.242325,-6.330624,2.528808,3.044094,5.976371,6.686421,-7.639492,6.659933,-6.341308,-4.582270,-1.585798,-5.255957,-8.781471,7.864174,9.958592,0.972131,6.459387,9.913349,-5.202208,7.300043,-4.954135,-4.323437,-9.504035,-2.547224,-4.834186,-5.148196,0.695579,5.834093,2.997066,6.231558,0.175741,9.441174,9.734155,-7.985333,1.065016,5.059840,-4.550319,-4.965452,6.697013,-9.669351,-4.349302,9.194636,0.634395,4.493824,9.171740,9.904476,-0.660322,1.587776,-7.483620,1.581613,6.061159,0.791862,-9.112694,-5.961015,-2.281676,-5.006684,5.861397,4.921717,-9.164887,1.786712,7.558298,-3.659169,6.404478,6.375722,9.044241,-1.645008,2.130492,9.087537,5.994308,-7.373536,-5.245806,-1.362507,-3.497375,-8.848696,6.546043,-6.312267,0.714477,-1.980540,-5.305314,-3.276245,-2.228812,-2.223774,-5.262544,-1.497597,-1.265168,6.611217,0.838726,-9.566781,1.802108,-1.972325,8.659685,-4.139568,6.540225,9.107532,-2.048912,-7.820243,-5.951563,5.024357,-2.916597,1.696835,-6.202093,0.080479,-3.945678,2.650672,-9.933066,-8.691138,-4.514273,-5.573043,5.635318,5.007167,2.483476,8.668490,-2.207395,-0.920299,-3.399795,7.666762,7.225813,-6.844207,7.851522,4.251945,5.467220,1.703397,-8.312878,5.354166,7.495415,-2.094768,-4.416040,2.417941,-6.171655,2.265602,9.671164,3.233404,5.503894,-2.428509,7.103700,8.640648,-9.503409,-5.257857,-7.675142,-9.608893,-2.051401,3.906607,-3.360073,6.046986,-9.502183,0.515423,-6.584252,-6.496407,-5.193688,-9.165799,9.069918,-2.546824,-8.005254,-4.859228,0.851777,-5.234384,2.611767,-7.689550,-1.761387,-4.413694,5.703170,-5.380621,-7.736254,4.808967,-7.074197,-3.391775,9.853459,5.105201,4.632820,3.218564,-4.677603,-0.790794,5.819996,-7.670548,7.560381,-4.437218,-3.858245,-7.098478,-8.039468,-9.044694,4.642255,-0.055107,2.502605,-2.011290,9.600488,6.784685,6.515850,-6.489780,2.565874,1.345221,3.562624,9.721418,-9.983265,4.000873,2.667340,4.371829,-5.282438,-7.655670,1.667283,5.570784,-2.746721,3.937872,-1.131166,-1.313531,-7.380427,-0.173237,1.123399,7.844336,1.585617,-8.975412,-1.726383,6.624047,2.277966,3.576839,-2.791075,-7.983894,1.443750,6.971118,7.604081,1.860952,6.492256,9.325974,8.040166,-7.223454,0.914153,-1.520889,4.696625,1.704419,2.876065,4.105438,2.462398,-2.704641,0.344343,-3.062691,2.428077,-0.902662,-3.778675,4.158707,0.022892,-2.649500,7.750482,-3.993063,9.389380,1.648325,-7.562733,-1.575177,-5.551117,1.378775,-4.089144,-7.234160,0.573167,-0.909430,9.211963,-6.835237,-6.286705,8.859886,8.497311,-6.981101,2.897613,8.752254,-0.931495,3.688694,-8.825274,0.246399,5.376670,-4.475058,-2.963434,-2.279906,-7.531041,-3.418373,8.600277,-8.879312,-9.717485,7.581406,6.053145,9.521434,0.343573,-1.633140,7.987665,-2.533488,-7.401300,-1.381892,-5.346615,-7.747794,2.071261,2.658360,-9.540514,1.133087,-9.929976,1.857389,3.105039,5.423617,7.759492,-8.070383,2.351222,5.770816,0.711757,1.332799,-0.922730,-3.843356,-0.022764,2.682932,-7.452743,2.671271,6.964710,-0.678113,-2.814326,2.653632,5.845610,-3.521092,7.119664,-1.248769,5.058614,-6.367683,5.895887,8.811763,-2.966781,1.795733,1.813684,5.970423,4.014537,4.971470,3.779384,2.153265,-0.950658,-5.646369,-1.466330,-2.741673,-8.314154,2.636999,-7.403494,3.299181,4.145895,7.217211,-1.734274,-4.535917,-8.614489,4.801642,-0.334792,-6.615334,-8.075957,-6.200304,-3.521107,0.260054,9.562367,-9.727146,3.461381,-0.906602,-7.939296,-3.914307,-7.835854,-6.303598,-1.430136,7.913639,8.659612,-7.047083,-8.147951,-7.185724,2.395599,4.122867,-0.420717,-7.536076,3.649928,7.188093,-1.369501,-7.314993,-1.376338,7.765295,-3.993995,1.951750,4.729932,-8.164860,7.411686,-0.353961,-6.610110,8.909757,1.762997,-7.159955,8.202006,1.818169,0.385180,-1.096630,-5.914140,9.273425,-8.638987,-2.052637,-9.826185,1.861422,8.659114,-3.705687,8.801975,7.509230,-4.639977,-6.346640,4.221172,7.704808,0.533473,-2.960518,-5.105192,9.676754,-0.469373,-2.042527,-9.870238,-4.214881,5.772301,5.487137,1.701590,0.862600,-1.227258,1.184979,2.548945,4.989168,-4.934111,3.254644,3.608682,-3.563575,-4.801952,-0.582054,-8.342130,7.284425,2.483253,7.126302,8.608141,-2.907730,-4.909432,7.718135,8.629544,-1.644367,-9.347085,-9.959474,-0.211966,3.136149,8.266912,4.277477,5.335141,1.480629,4.477462,1.972016,2.104529,7.878947,5.301897,-9.725139,6.150857,-7.714196,-3.447585,4.343511,9.559951,9.106301,-8.380469,8.652096,5.803265,-1.144440,4.673135,5.017889,-9.657168,-4.325807,8.224889,-7.643044,2.105507,-1.417929,5.370660,8.761099,9.792816,5.235084,9.066963,4.965203,0.043363,-1.492252,9.858374,6.058129,-7.119621,6.723111,-7.230851,-9.168654,-5.584847,7.058215,-2.888305,5.050956,-6.314697,7.635426,7.947007,-4.881820,-5.464336,3.679247,0.685869,7.405078,-8.081074,5.777726,-2.789458,-5.448983,5.354930,-1.053634,-4.263075,8.643219,-4.951290,2.369579,8.639652,-9.539072,-0.109632,5.355731,6.789202,2.333068,8.851243,-3.969261,-9.784093,-1.572095,7.366673,7.403822,-7.059202,-7.103825,5.408789,-4.003892,5.462943,-0.141758,-9.021187,0.895241,8.512323,9.993393,-8.977962,-4.128154,7.790908,-4.173249,-3.222261,-6.954878,-0.275110,6.399176,-0.881252,-9.002046,8.088380,6.832164,-0.889718,6.660087,9.885589,-6.186050,-4.515047,-1.223732,3.902491,-9.505554,-0.495190,2.916452,7.241820,-9.498240,-3.302505,-6.745084,-1.895480,-4.031809,-2.914331,-6.925479,-5.385039,8.626890,4.562092,-2.753199,-7.694493,-3.310769,-6.336723,2.922018,5.864211,4.953533,-6.414647,1.633986,-3.938996,6.574202,4.290233,-4.988790,-3.069905,-0.501669,-7.421736,9.090889,-8.255201,9.841749,9.556553,-5.548381,9.042092,-7.110996,5.894925,-7.419132,0.881402,5.240013,6.754154,5.832777,3.615150,7.237910,-5.697337,6.972300,4.438393,0.658033,1.725595,5.733756,-2.293394,9.410810,6.081534,2.070381,9.653548,6.408451,-4.702537,2.275129,-9.265379,6.017420,7.802050,4.014770,-6.597629,2.564678,8.641341,-6.167177,-2.014152,7.022081,1.914593,0.842043,0.300310,8.813520,8.148407,-9.693409,7.992713,-6.953930,-7.147441,4.262950,4.215726,-0.091437,2.262658,-4.893704,-2.952618,4.160638,-2.082924,6.144374,5.530136,9.219160,3.137867,3.160108,-6.675671,5.456082,9.336791,2.692156,7.038403,9.990091,-0.185925,-1.872362,-9.367861,-9.639694,-2.407925,-4.765775,-7.931633,-4.530568,3.950078,-8.760206,-5.462186,-5.320935,5.855578,-5.935863,-7.165619,6.332027,3.319831,9.213726,-2.559601,-3.252221,4.808280,-6.824857,-9.010573,7.487516,-6.732614,5.639243,3.980154,2.593329,5.357992,6.638091,1.131090,-3.902721,2.805970,-3.927187,9.231649,-1.184045,-8.653224,-7.658689,-1.652600,-9.699659,-4.527939,2.935912,-9.876492,-0.292279,-3.154428,7.805679,-8.126168,-5.276213,2.273107,8.153621,6.773884,-4.093354,3.510985,-6.243691,-2.593910,-0.612100,4.033056,6.354803,-2.534120,1.339400,1.951018,9.250570,2.615083,5.433719,-2.261688,1.166913,2.201799,8.167706,3.112907,-8.913491,2.593210,-4.462675,-1.969951,-0.134926,0.397787,3.609106,-9.409564,-6.786778,-0.797843,-7.293093,2.200668,-9.485016,5.891661,1.856407,5.392819,7.042764,-4.370985,2.808662,9.521091,-9.280968,-4.556168,8.881736,-5.694352,-6.108805,-2.828878,8.026487,-1.490077,-9.470096,-2.371060,-9.451111,3.104251,-0.082556,0.433985,-3.583248,1.721727,6.352356,-5.172369,-5.653842,5.813179,2.060098,8.022360,2.084360,-6.945684,-2.235334,0.841530,-8.336344,-9.914680,-7.276080,4.814761,-2.805053,2.623062,-0.312539,-4.219105,-0.819566,1.920714,7.626472,1.237324,-5.303420,-0.837224,-8.713752,-7.119965,-1.787576,3.264398,-2.347470,3.292315,2.460406,2.249124,-7.279418,-3.707196,4.096357,-4.999982,-6.975560,2.825855,4.895339,6.972353,7.180959,1.009756,-4.313788,-1.251035,3.839416,4.590692,0.482085,-5.374003,0.534710,-3.020058,-6.752301,6.704439,-3.911710,2.456933,1.195558,7.299662,-2.853170,-3.366490,4.094264,-6.042023,9.349251,4.127900,-2.859639,-9.081613,-4.091035,-6.655432,-1.191244,-9.090959,-9.104180,-5.831696,-4.403435,-0.098994,-6.753564,-2.288176,8.707407,-7.933580,-3.710257,4.068028,9.274673,-4.144575,5.002667,-1.510677,3.657700,-6.354974,8.816738,2.161759,9.743069,-0.404682,-5.319037,9.989667,4.062056,-8.028377,-5.589976,-8.946976,-9.446582,1.487026,6.489375,0.285242,-8.991114,-7.358367,-0.305165,-5.905523,0.779315,-0.361984,1.294685,-3.740156,0.193984,-3.798486,-6.168863,-6.350640,-9.849118,-2.416625,9.267890,-8.162676,-7.024221,7.872929,-3.215477,-7.711514,9.482281,7.836009,-4.166500,3.877670,5.300157,1.379625,1.177642,-8.427247,-8.723411,4.126092,-0.909239,4.852952,7.481134,4.782865,-5.807205,2.475449,-6.141091,-6.976074,-0.888109,8.952709,-6.741284,-2.567364,-4.507875,8.156851,9.899454,-9.619680,-1.463809,-0.479865,6.731075,6.475051,1.791751,6.089590,5.702996,8.867445,0.757725,9.835784,5.007772,1.307660,-9.352599,-2.606301,-1.794313,4.211980,7.977487,-2.121648,-6.901343,-1.173335,-7.123660,8.114292,-5.142678,-3.353858,6.233279,4.193854,4.538886,-0.210125,5.667472,0.091280,-8.935633,-2.359654,4.874941,-3.460679,-4.763813,0.341831,-0.757831,-9.158898,3.590350,-0.521835,8.840158,-0.546533,2.909540,-9.863442,0.874811,-9.496619,0.528570,7.569854,5.080039,-5.992311,4.845587,-4.889547,-1.925852,-2.846312,3.888918,9.558848,-2.925782,6.121285,-6.721656,-6.262030,-1.165066,7.208542,7.049012,-0.988611,-4.453890,-9.471392,-8.435388,5.038589,7.086788,7.793245,4.741191,4.509439,-6.522514,0.740070,8.697101,-6.150469,-1.862911,9.119203,3.658692,-3.012912,-8.916836,0.326997,2.938057,1.085205,-1.356097,-6.200987,0.476894,6.838690,-1.188926,5.597869,-9.850412,8.939876,6.427218,-2.227503,-2.558044,0.027125,2.395075,-8.644926], dtype = "float64")#candidate|719|(1568,)|const|float64
call_717 = relay.TupleGetItem(func_624_call(relay.reshape(var_718.astype('bool'), [4, 11, 2]), relay.reshape(var_718.astype('bool'), [4, 11, 2]), relay.reshape(var_718.astype('bool'), [4, 11, 2]), relay.reshape(const_719.astype('float64'), [1568,]), ), 3)
call_720 = relay.TupleGetItem(func_629_call(relay.reshape(var_718.astype('bool'), [4, 11, 2]), relay.reshape(var_718.astype('bool'), [4, 11, 2]), relay.reshape(var_718.astype('bool'), [4, 11, 2]), relay.reshape(const_719.astype('float64'), [1568,]), ), 3)
output = relay.Tuple([uop_714,call_717,var_718,const_719,])
output2 = relay.Tuple([uop_714,call_720,var_718,const_719,])
func_721 = relay.Function([var_713,var_718,], output)
mod['func_721'] = func_721
mod = relay.transform.InferType()(mod)
mutated_mod['func_721'] = func_721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_721_call = mutated_mod.get_global_var('func_721')
var_723 = relay.var("var_723", dtype = "float64", shape = (11, 9, 7))#candidate|723|(11, 9, 7)|var|float64
var_724 = relay.var("var_724", dtype = "bool", shape = (88,))#candidate|724|(88,)|var|bool
call_722 = func_721_call(var_723,var_724,)
output = call_722
func_725 = relay.Function([var_723,var_724,], output)
mutated_mod['func_725'] = func_725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_742 = relay.var("var_742", dtype = "int32", shape = (2, 8, 6))#candidate|742|(2, 8, 6)|var|int32
const_743 = relay.const([[[5,-6,7,-1,5,-1],[-8,3,-10,-6,-8,6],[5,-8,-10,2,6,-4],[-8,-9,1,-3,10,-4],[-10,1,-7,2,5,-10],[4,-10,10,5,-1,2],[2,-10,-1,5,5,9],[-3,4,1,-4,-8,7]],[[-10,-7,-7,-2,-4,3],[7,7,4,-5,-7,6],[5,-4,6,-4,-4,-7],[1,9,-4,-3,10,6],[-7,4,2,-1,10,3],[-7,-2,7,3,3,-5],[6,-9,-9,-2,-7,-8],[6,7,7,4,6,-8]]], dtype = "int32")#candidate|743|(2, 8, 6)|const|int32
bop_744 = relay.bitwise_or(var_742.astype('int32'), relay.reshape(const_743.astype('int32'), relay.shape_of(var_742))) # shape=(2, 8, 6)
output = relay.Tuple([bop_744,])
output2 = relay.Tuple([bop_744,])
func_749 = relay.Function([var_742,], output)
mod['func_749'] = func_749
mod = relay.transform.InferType()(mod)
mutated_mod['func_749'] = func_749
mutated_mod = relay.transform.InferType()(mutated_mod)
var_750 = relay.var("var_750", dtype = "int32", shape = (2, 8, 6))#candidate|750|(2, 8, 6)|var|int32
func_749_call = mutated_mod.get_global_var('func_749')
call_751 = func_749_call(var_750)
output = call_751
func_752 = relay.Function([var_750], output)
mutated_mod['func_752'] = func_752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_877 = relay.var("var_877", dtype = "bool", shape = ())#candidate|877|()|var|bool
const_878 = relay.const([[[False,True,False,True,True,True,False,True,False,False,True,True,False],[False,True,True,False,True,False,False,False,False,True,False,False,True]],[[True,False,False,True,False,False,False,True,True,False,False,True,True],[False,False,True,False,False,True,True,True,True,True,False,False,True]],[[False,True,True,False,False,False,True,False,True,True,True,False,False],[False,False,True,False,True,True,False,False,True,False,False,True,True]]], dtype = "bool")#candidate|878|(3, 2, 13)|const|bool
bop_879 = relay.logical_and(var_877.astype('bool'), const_878.astype('bool')) # shape=(3, 2, 13)
func_624_call = mod.get_global_var('func_624')
func_629_call = mutated_mod.get_global_var('func_629')
const_893 = relay.const([True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True], dtype = "bool")#candidate|893|(88,)|const|bool
const_894 = relay.const([5.142794,-8.359020,-3.057978,8.496767,-2.979246,-1.718574,-9.543170,-1.081610,6.309258,1.542198,1.409882,1.060775,2.482828,-1.992619,-5.768162,-5.622056,2.676746,-5.927527,-1.003991,4.064930,5.670940,7.233597,-2.847601,-1.027398,2.543575,8.143495,0.624851,6.093200,2.812449,6.999583,8.133656,-2.601059,-2.553581,-4.110172,-2.632050,-3.712139,1.117407,-3.074643,7.298937,-1.075846,-6.181198,4.174616,-0.788315,-0.122407,-4.563479,1.407687,6.605982,-4.018623,6.147087,-1.496343,-6.795854,7.834638,-0.120814,-4.946911,1.928910,3.871337,-3.292300,7.541434,1.923917,2.617611,-2.954379,-8.242857,-8.369072,5.791037,9.678297,8.252190,-2.066211,-1.303102,-4.655414,-1.906589,8.861245,0.573940,-6.337586,-1.324206,-8.321600,1.418589,-1.472534,0.201081,-6.605476,-7.544745,-1.605861,-3.961899,0.271660,-6.971022,7.141152,4.511432,-9.388089,-1.386156,5.153851,-3.604765,-0.638184,-5.057190,3.631414,4.147649,3.268849,-3.448822,-3.621882,-7.896439,5.005256,1.898765,-4.636669,1.942840,-4.822090,9.093271,-0.608944,3.266323,-2.397172,7.563220,8.683342,8.690516,2.683272,2.166948,-7.011669,9.083679,-2.256431,-0.749780,0.816088,5.110406,-4.840800,6.067331,-3.842267,3.152466,7.452888,3.109144,-8.174658,3.629793,-7.372434,6.926026,-8.893662,-0.735373,7.819524,3.014091,-7.266686,-9.987237,-2.113895,0.839475,3.905141,1.624474,1.541163,9.732981,3.464585,0.482494,9.393095,0.189036,4.909099,-5.340729,-1.266083,4.272794,-5.433753,9.157548,-5.583793,-3.925929,-0.996247,-1.380982,-9.580221,5.029420,-7.055108,2.368905,6.929876,6.493822,-2.406098,1.282446,-9.283043,4.660221,7.653138,1.243810,1.972150,4.185097,3.957458,4.596873,6.053815,2.340354,-7.216762,-7.925786,3.400622,-0.339431,3.550176,1.486499,8.161039,3.904366,5.029071,-6.453596,-4.931220,-4.313871,0.100409,3.306388,-3.551951,-6.235436,4.163196,-6.220274,-9.901558,-6.193494,2.125380,7.412730,-0.707722,2.018516,1.282740,-8.886638,4.383942,5.452563,-3.632731,4.865643,-3.433576,6.245621,-0.328111,-7.030012,4.832269,6.035554,-3.577393,3.521386,4.895744,5.665507,-3.461076,-9.613350,-1.420366,-7.182710,-6.327206,-5.257023,4.834728,-0.205694,7.100694,-0.106948,5.581368,6.862451,3.034103,-7.860658,8.354401,0.436156,5.892514,6.977467,-3.840255,-5.504558,-7.742138,4.495542,2.707154,6.066041,-1.747035,4.969108,2.143542,-3.359275,8.231483,8.762357,-1.665332,-2.657255,-4.448611,2.642142,0.388499,4.513670,-4.052300,3.409987,-3.089028,2.485335,-1.852432,-2.178167,9.054142,-1.837310,2.572802,-4.434108,1.051967,8.037119,-0.057673,-7.696256,3.405046,4.389403,-3.546503,7.306073,-6.951953,9.120735,7.689881,-3.347079,-0.908157,1.650524,7.829198,6.274739,-3.471148,-7.363223,-3.690037,-9.368693,9.712808,5.148129,-6.742357,-7.902296,7.603680,2.440119,-7.281336,-3.458629,8.773048,-9.435534,7.404032,1.721611,7.446124,-1.802963,-5.155949,8.860125,8.360972,7.112185,8.703230,-2.130128,0.765703,9.781744,6.142751,4.435726,8.380445,7.605510,1.601524,-1.446923,2.665765,-6.877138,9.170985,5.840218,9.414552,-0.704907,-8.875622,3.161342,-6.497234,3.934237,-7.111314,-8.595938,0.743309,-5.415378,-0.131643,6.451055,-8.854048,3.022471,5.855313,-5.734131,9.959409,1.607804,6.404797,-2.411903,4.500826,0.453723,-5.851946,4.155647,-5.510554,-5.770153,-1.800377,-7.810233,-0.121141,-2.447266,-8.792100,-1.838951,2.076924,2.289890,-9.149709,-6.109139,-1.593785,-9.035154,-5.224781,-2.017609,2.675666,1.857046,-3.157817,-4.843724,-8.951898,-1.068767,3.139361,-6.100954,-0.009441,5.856344,5.532285,-4.771510,-6.516522,-5.240826,-1.804431,5.580877,-0.867781,9.845689,-6.749136,9.710071,-5.150605,2.485909,-5.933118,-0.942846,3.216919,8.998896,5.833608,-4.136172,-0.193152,-9.093550,4.674490,9.128753,5.592680,-4.254974,-4.265458,-7.604137,4.298328,5.328134,0.429431,-4.931758,7.165563,-1.894150,4.781775,-5.822641,0.017852,-8.204127,-4.764047,-9.423016,-2.543744,8.953704,-9.985252,0.337635,2.111397,1.497274,-1.215262,-4.566619,-7.720225,2.965406,1.690222,6.229465,-0.956965,-3.270057,8.778391,-7.397595,5.201440,7.172927,4.850382,-2.798935,7.571380,-3.378704,6.579334,1.730501,5.075957,-3.357704,3.843833,0.269162,7.859614,-8.517035,4.236738,4.285958,8.662767,-6.003600,2.379506,4.357911,0.639357,9.542418,-1.639276,-7.215277,7.892779,1.611431,-4.301937,-2.956363,-0.227834,2.169680,-5.844222,-3.713778,6.985072,-8.742932,9.275588,2.122508,2.623675,-3.864077,9.299104,1.810666,4.878946,0.804354,-8.205118,4.878521,6.339575,-6.590885,6.188823,5.309723,7.720194,-8.081624,3.467966,6.209892,-6.072989,4.385690,-3.557830,-1.071514,1.935050,-9.675072,3.835678,-4.547567,-6.494613,-1.054659,1.646205,-1.374443,-4.035544,-2.093841,-9.409213,-2.031830,7.735291,-4.331651,9.482487,9.464228,7.545174,-4.367611,0.078285,8.650972,3.820990,-6.531104,8.763811,1.622404,3.827683,1.171157,-6.484598,-6.337268,2.889128,0.081568,0.927806,0.655996,-9.434556,4.967203,-5.724628,0.167469,1.512069,7.631063,-7.598244,-9.778750,-6.943076,9.915317,0.473701,-3.666983,3.526796,9.735453,-2.528423,2.803848,-7.726373,-2.322201,4.651310,-6.925229,4.214734,4.078071,4.142321,8.997925,3.211337,-8.814832,-6.154931,-9.038785,-4.065360,-0.596311,-3.066706,-9.862081,7.575184,-1.713919,-2.381610,1.490639,-9.329714,-8.532896,-9.245286,8.281123,-1.539896,-1.222117,-3.314889,-2.217616,1.500376,7.096325,-4.926893,-9.492317,-7.778478,-4.371967,-2.711999,9.306937,-7.316015,-6.710886,0.938982,9.137362,0.927735,8.670100,-8.817730,-3.104588,-9.359723,4.382927,9.078988,-1.679318,-0.558913,6.067065,-9.452789,0.698222,-3.525223,7.727875,7.027402,3.475392,4.675558,-1.800485,8.602239,6.171955,-3.958914,-7.968157,-0.316736,-7.330232,-7.552636,3.026531,-0.994414,1.018603,-6.745197,-2.450487,2.625440,-4.158414,-2.146835,-7.067219,-7.174631,-0.967826,8.192650,-2.597070,7.049963,-5.810721,-1.787543,4.849129,4.784760,4.227920,7.007351,8.616208,-8.576727,4.755412,3.628751,-4.171068,0.042335,-0.881572,9.803660,1.660670,8.099883,-7.731135,7.378208,-6.866643,2.821683,4.182797,-9.329663,8.867071,-9.464826,0.679608,5.717851,9.532845,-2.243997,4.207148,6.139500,5.364949,-6.110488,-1.977907,5.597097,-5.450132,1.382300,0.154830,9.979445,-2.065967,-6.391890,7.151152,8.728732,-8.942064,-3.893277,4.146805,-8.610842,6.611565,2.831221,4.823267,-2.538857,2.400580,4.008387,0.545826,5.642911,-4.761806,-2.129797,1.868168,5.927830,0.219049,6.458188,7.944859,1.796777,1.804762,-7.534670,3.849362,-5.085353,-4.175218,-7.374432,-3.461456,7.100292,8.634000,-7.259844,2.529870,-0.192547,-2.867869,-3.785765,-3.054419,-4.214505,-6.518654,-4.844136,3.981099,-3.284492,-0.205642,-9.912470,-0.630654,0.046467,3.406401,4.703163,5.262872,9.428695,0.421572,8.221338,-7.148131,8.563325,1.878176,-9.856583,4.036429,-3.630052,1.688563,-3.972965,6.795144,7.513933,-2.968620,8.468515,8.240179,6.350226,-0.670283,-0.090394,-0.082152,3.682014,7.463768,-6.169165,-3.467011,-4.468941,7.256498,-9.768503,-0.645234,2.612856,-9.766313,7.013873,-2.876925,-5.981910,8.547558,8.446105,2.262044,9.870426,-7.010015,7.627005,3.369278,6.491828,-5.229009,3.202048,3.567741,0.570664,6.470821,2.652268,1.225514,9.277772,-3.897831,-9.117924,5.221064,-0.700486,-6.852677,2.937056,0.637621,-6.694439,-3.346565,1.882184,4.595742,4.217567,3.977815,-0.130837,-4.530097,3.177426,-4.762713,-9.530422,-9.967726,1.892804,-7.011448,-6.898449,7.677174,-9.467323,-6.976898,-6.864988,-0.017719,-6.710303,-6.107457,0.741895,-6.116808,-6.227124,-0.413389,1.730116,2.004175,2.873650,2.044173,-9.953960,4.455710,-0.386402,-8.621718,0.760101,-8.676935,-5.975178,-4.779830,6.720469,-2.606962,9.142363,8.369758,1.421082,2.651527,-1.470027,-7.710725,-5.581312,9.373265,3.375602,6.918035,8.063108,9.832541,-0.428282,4.771489,-8.048233,9.479127,-5.419943,-0.707346,-4.539974,4.043000,-1.902009,9.835969,3.621712,2.544769,-2.451345,2.330234,-7.720214,1.767420,-8.342501,2.275985,-2.339632,-8.873557,4.266315,6.301051,-3.032215,-5.566510,-7.466811,0.738338,4.884505,9.223069,6.556057,3.983598,9.688582,9.614994,4.716091,-8.343293,1.958753,-5.984100,-3.185945,-1.603399,-9.629514,6.250105,-0.770983,-2.756079,-6.458618,3.640037,-4.519257,5.772953,4.154340,7.515008,4.749563,9.875422,-4.261489,4.689082,9.697908,-6.078992,6.393765,-6.051877,-4.539539,3.948438,-0.434296,2.729716,6.930357,-5.502237,3.437849,9.425647,-0.316057,4.549724,-7.800497,2.260629,4.569560,-8.867295,7.259382,-9.829827,6.638788,-7.246934,4.849366,8.030871,4.235871,0.896393,8.700901,3.019412,5.260243,9.339855,-1.260423,9.941943,-7.059220,-6.855289,7.381151,8.050054,-9.082830,-4.421412,4.860243,-5.449666,-4.373307,5.910018,-2.110865,2.713482,-3.067345,8.675852,8.299874,-0.796016,-6.766050,6.424492,4.127914,8.734574,6.672214,2.648060,5.197606,3.132375,-1.836529,7.641882,0.476837,-7.681661,2.453279,-1.762026,6.828750,-5.726269,0.403513,3.950452,9.316794,-9.415460,-0.925065,7.043649,1.650471,8.685839,-8.713229,-3.430929,1.159011,0.624870,6.862610,5.222232,-1.070252,-0.294853,-9.945620,-3.407256,-8.549921,-5.430402,1.454763,-2.978536,-7.799119,-9.727573,9.180366,-0.168364,7.465105,2.673265,-0.640108,1.048413,1.724638,-0.521380,3.603729,3.723870,-1.622138,3.045841,5.777505,-2.363648,5.171751,-1.390834,-9.584564,-9.798790,-6.118413,-8.164246,-5.754211,1.962845,7.103175,4.369495,5.071825,9.904397,-6.765251,3.883238,-4.568303,0.519593,-9.030466,-7.224243,7.554630,-4.922656,3.972723,-9.980544,2.436738,8.149415,2.594411,0.775710,2.952686,-3.068168,0.827250,1.283567,-5.593551,-0.115674,0.254771,6.315299,9.588781,-0.200619,-0.764305,-5.084552,5.788191,-7.519173,6.358321,6.059445,-8.910945,-0.901084,5.322930,-0.416816,6.125674,-6.981388,0.018066,4.109914,7.842024,1.875312,-6.713275,6.424953,2.398208,-2.858684,-4.964778,0.041150,-3.009162,-3.386536,-7.120387,1.986692,0.160840,-4.309587,2.940336,7.653302,2.380032,-1.772208,2.834464,8.139927,0.767884,2.313582,8.406068,9.744871,-3.498976,2.235500,-0.347346,-9.160736,-0.195656,-0.961668,-4.438177,7.506876,9.981886,9.788241,3.089802,1.336852,1.939735,-5.665492,-1.420917,-6.189378,-9.836264,3.104022,-8.458492,-1.491562,-1.764678,-2.917741,5.896331,-3.985693,8.765980,6.228113,4.362364,9.572830,5.674823,2.259040,7.790887,-7.115788,-8.907346,-0.408460,-8.207740,6.598439,-9.476181,9.072779,3.498038,-5.007535,-4.233450,-3.769281,-5.325605,-5.394944,1.458533,7.958803,9.158059,-8.722347,1.911773,-0.407767,-1.283582,-5.464115,8.592461,-1.147984,-4.879820,7.659191,-2.328899,-3.683951,1.681839,-3.797131,-1.474319,-0.758691,9.548312,5.518666,3.823066,-4.943360,-3.203172,-9.777401,1.297085,-6.734533,6.980630,-0.728998,5.375868,7.015894,7.147545,-7.063153,5.505514,9.267700,8.851286,-2.032860,-4.387674,-8.681173,4.113670,-1.832981,2.542270,-9.590587,-4.208609,-2.370190,6.075347,-8.192975,9.612349,9.913599,7.857693,-4.747104,1.332087,-3.941093,2.568391,-2.262945,9.542710,9.482901,-9.598306,-8.380057,-5.006496,-8.266030,-2.236317,-6.898146,3.863108,-0.872116,-5.196604,-3.064137,2.875220,2.662422,9.994916,-5.336945,-8.446670,-0.534376,1.809468,9.002077,1.979769,-2.423085,7.317949,-5.550751,-6.121735,7.844873,0.163792,-3.312794,-2.851619,4.672265,-0.370584,1.301150,-0.799773,7.886549,-4.128975,6.672125,-3.482971,3.959773,8.740639,6.511967,-2.548710,-8.235651,-5.520483,5.512006,9.774270,-3.639147,-1.852279,-2.157594,2.111303,-9.459250,6.604468,-5.205485,0.698522,7.186270,5.108185,-0.888057,5.657627,0.349761,-1.139335,3.678776,6.226073,0.061589,7.845437,-3.838216,8.268625,-8.018697,0.650969,-9.113717,-6.929840,3.698161,-0.908602,3.190411,-6.481061,3.404076,6.872030,-2.866828,3.615860,-8.229659,-3.461775,9.045780,-1.296227,-5.114427,-5.999015,-8.023410,-4.892018,-0.238573,-8.613730,-5.261555,-1.656828,6.658883,-6.448969,8.276719,1.795820,-7.381197,-1.819640,0.430518,9.956415,-3.744267,-6.392277,-7.500616,-0.806305,-0.311666,0.349425,-2.479090,-0.025979,8.362547,3.616620,-4.958353,3.727474,-1.896069,9.018419,-1.615906,6.270912,-7.330591,4.343245,-8.718942,-6.993545,-5.011404,-5.658282,7.302530,-4.827293,5.400611,4.393698,-1.584829,4.633922,1.189118,-2.641036,9.811179,-3.898036,-6.909994,8.516438,-1.200037,1.202927,7.601304,3.954535,-1.138638,3.050127,3.925872,-0.707411,7.316192,7.159544,-9.050506,-5.647549,2.872244,2.722954,6.400511,1.870281,-7.424672,-2.078909,-0.522707,0.964943,-3.601671,-0.012900,5.913890,2.387725,-8.846702,4.154936,0.423118,5.257514,3.390002,-7.004394,3.395069,-7.706349,-4.386671,5.322839,-5.166568,5.149120,5.632679,-7.979451,-0.757858,-6.886846,-3.180342,1.150662,4.865941,2.700386,-2.057951,2.153388,2.883486,7.103447,6.318851,-1.349769,1.202531,-3.132968,8.899621,-1.272215,-7.009009,5.430337,-2.376855,-4.021179,9.756654,-4.151708,2.690814,1.364985,2.876264,-6.809183,5.412798,-6.274717,3.416153,1.649432,-8.588459,-7.866339,-8.223483,5.989331,5.953718,1.916789,5.707843,-6.743289,5.396624,3.729048,-5.439376,4.410816,-4.893935,9.540311,-3.977771,9.168534,-1.851344,-9.263011,9.097763,7.953265,3.701689,7.220875,3.460348,-8.577374,0.976628,2.224627,3.099087,6.767512,5.928374,2.241975,7.445312,-4.992399,8.547629,0.571824,-8.303698,1.670805,7.749625,8.937618,-8.655530,4.372603,5.696583,8.509906,-5.366930,0.149917,2.187719,4.822107,8.430241,-6.186290,-0.982222,1.551670,6.723935,3.518781,1.761568,1.975857,-9.356242,3.810207,0.185462,-9.246101,1.321656,5.329250,4.374988,0.371900,-3.826121,3.133431,2.945912,-1.181709,7.880035,1.406269,-9.670501,-9.217498,-4.211862,-7.888224,-0.430120,5.530748,-8.474108,3.867413,7.343009,-5.751933,-1.474653,1.002673,-0.809582,-3.443416,8.908019,-7.976784,-4.355514,-5.692224,-1.281842,3.916357,6.633272,-6.105889,1.075162,8.161199,6.669824,2.600966,2.544119,0.452400,-3.846107,1.558239,-4.942220,1.428021,-3.365802,2.475344,-0.607876,-1.355112,2.046900,-8.874077,-7.235827,3.767222,9.722263,6.853160,2.418308,8.109854,4.388887,6.776851,-6.260003,-2.052804,-0.474168,-1.374356,-6.089336,5.521244,3.877519,0.793022,6.683175,9.176740,8.046736,-0.903482,-5.892764,-9.953419,-0.408421,8.917072,-3.914713,-1.160453,1.581299,6.091268,3.343163,0.922282,-3.561015,-6.189388,0.917463,8.899484,-5.300963,-5.340462,1.603235,-6.354679,-3.019409,-5.466795,-0.537222,-0.474442,1.539173,4.065785,-3.066131,-8.352673,8.524118,-2.337683,-2.720682,7.546132,9.471864,9.396960,-9.731702,6.021435,9.446504,6.956822,-9.175794,8.465674,-2.291554,-8.522857,0.950126,9.836999,4.895951,-7.210028,2.562084,-4.252284,9.151439,6.159558,-7.014686,-6.946246,8.250739,6.065279,2.542811,8.078977,6.720109,-3.261302,-6.749996,-7.200057,-4.837844,-5.946939,-3.141925,-9.061235,-4.819950,-6.635583,-7.465225,7.865203,-9.216322,9.815507,6.144163,0.348649,-1.663103,-7.445351,-5.872666,-9.451676,5.274211,-9.357142,-4.591105,2.374525,0.801638,2.557106,-4.147494,3.699508,6.009837,1.884763,0.722202,7.732527,-9.642644,9.354844,-4.274795,2.338363,-6.238371,-8.698711,8.189405,1.094699,0.604733,-4.668499,9.499318,-4.799474,9.641265,-3.386110,4.800939,-0.883244,0.062359,-5.314897,-3.062027,2.828805,8.234961,9.791596,1.747131,6.368562,0.074059,-0.044928,3.464049,8.787093,-7.013031,-7.891533,2.733714,-5.294890,-9.184811,3.248183,-3.311860,7.570949,-5.276030], dtype = "float64")#candidate|894|(1568,)|const|float64
call_892 = relay.TupleGetItem(func_624_call(relay.reshape(const_893.astype('bool'), [4, 11, 2]), relay.reshape(const_893.astype('bool'), [4, 11, 2]), relay.reshape(const_893.astype('bool'), [4, 11, 2]), relay.reshape(const_894.astype('float64'), [1568,]), ), 3)
call_895 = relay.TupleGetItem(func_629_call(relay.reshape(const_893.astype('bool'), [4, 11, 2]), relay.reshape(const_893.astype('bool'), [4, 11, 2]), relay.reshape(const_893.astype('bool'), [4, 11, 2]), relay.reshape(const_894.astype('float64'), [1568,]), ), 3)
var_897 = relay.var("var_897", dtype = "bool", shape = (9, 5, 16))#candidate|897|(9, 5, 16)|var|bool
bop_898 = relay.greater(var_877.astype('bool'), var_897.astype('bool')) # shape=(9, 5, 16)
var_916 = relay.var("var_916", dtype = "bool", shape = (3, 2, 13))#candidate|916|(3, 2, 13)|var|bool
bop_917 = relay.less_equal(bop_879.astype('bool'), relay.reshape(var_916.astype('bool'), relay.shape_of(bop_879))) # shape=(3, 2, 13)
func_286_call = mod.get_global_var('func_286')
func_288_call = mutated_mod.get_global_var('func_288')
var_921 = relay.var("var_921", dtype = "float32", shape = (60,))#candidate|921|(60,)|var|float32
call_920 = relay.TupleGetItem(func_286_call(relay.reshape(var_921.astype('float32'), [1, 10, 6])), 0)
call_922 = relay.TupleGetItem(func_288_call(relay.reshape(var_921.astype('float32'), [1, 10, 6])), 0)
uop_937 = relay.tan(call_920.astype('float32')) # shape=(1, 10, 6)
uop_939 = relay.tan(call_922.astype('float32')) # shape=(1, 10, 6)
output = relay.Tuple([call_892,const_893,const_894,bop_898,bop_917,var_921,uop_937,])
output2 = relay.Tuple([call_895,const_893,const_894,bop_898,bop_917,var_921,uop_939,])
func_943 = relay.Function([var_877,var_897,var_916,var_921,], output)
mod['func_943'] = func_943
mod = relay.transform.InferType()(mod)
var_944 = relay.var("var_944", dtype = "bool", shape = ())#candidate|944|()|var|bool
var_945 = relay.var("var_945", dtype = "bool", shape = (9, 5, 16))#candidate|945|(9, 5, 16)|var|bool
var_946 = relay.var("var_946", dtype = "bool", shape = (3, 2, 13))#candidate|946|(3, 2, 13)|var|bool
var_947 = relay.var("var_947", dtype = "float32", shape = (60,))#candidate|947|(60,)|var|float32
output = func_943(var_944,var_945,var_946,var_947,)
func_948 = relay.Function([var_944,var_945,var_946,var_947,], output)
mutated_mod['func_948'] = func_948
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1051 = relay.var("var_1051", dtype = "float64", shape = (8, 3, 11))#candidate|1051|(8, 3, 11)|var|float64
const_1052 = relay.const([[[-2.849611,5.449102,3.031697,-1.821694,5.102817,-5.276847,-5.641638,-4.044194,-1.003722,7.747464,-8.004637],[-7.165078,-3.485639,-0.563473,-4.960513,-6.085419,0.993277,-3.516936,9.272733,9.489202,-1.433389,-7.862976],[-1.940811,7.546958,-7.870754,-4.319278,1.704397,-8.796830,-4.678129,-5.631058,-2.699025,8.372818,-8.041260]],[[3.355988,-1.188635,7.978511,-6.255548,-7.822582,-4.715222,0.884665,-3.776944,0.348559,-9.795095,1.931463],[-4.680274,-6.747968,4.680043,-9.296054,1.450101,7.432366,-1.025194,-9.905229,-6.723185,-0.280955,0.175477],[4.860093,2.387437,8.660471,-6.106655,-5.827965,-6.690547,-2.186171,-0.032732,-7.290505,-0.434270,-7.099646]],[[-5.586852,9.598029,5.393965,6.345876,0.228988,-3.648638,3.054177,-7.068875,6.881578,9.932505,9.872288],[3.494807,-4.106871,1.185193,4.844963,-5.851151,0.548261,7.421671,9.103512,9.296579,9.913258,7.167126],[1.080905,5.955054,-6.244019,-6.672785,-5.827734,6.386603,1.351264,2.288558,-7.255066,-3.422849,2.097623]],[[-6.055652,-4.901882,2.699816,-4.678442,8.553674,-3.823932,-5.232175,2.289260,7.165928,-9.239114,-6.884850],[1.109775,-5.174472,3.033721,5.623968,-4.536543,7.454903,5.621284,2.479687,6.170221,8.753326,5.509964],[-1.515338,5.463789,-8.754940,6.853925,8.841151,-5.232638,-5.498101,6.292436,-4.692557,-5.095386,-0.907088]],[[-4.291472,8.295484,-5.280044,0.404363,-7.091518,-6.601205,1.817828,0.996730,-6.729391,-1.025828,-3.151251],[-2.969326,-8.663191,-7.548400,7.581795,6.944185,-7.209164,5.718713,0.589413,-9.793647,9.930328,7.599711],[7.608136,9.186967,-8.550941,-5.421051,-5.977035,-5.944002,1.837429,8.288687,3.005360,-1.165930,8.920280]],[[0.118919,-0.949686,-2.899083,-6.074020,5.923575,-6.987529,7.810342,-1.694780,-4.933194,5.407242,0.016390],[3.114360,7.845717,2.682160,-6.253995,1.092261,-2.581744,0.851363,9.656897,-5.055898,6.071682,9.976200],[5.499436,-5.915729,6.590954,-4.552641,-1.123892,5.281023,4.995395,7.642285,-7.145243,2.563714,-4.031541]],[[9.850623,-9.575246,-7.521417,6.137879,2.817317,3.065545,-8.805329,7.023691,-8.703788,-6.741200,4.899784],[-5.538941,3.016688,3.435660,5.774773,2.212819,-3.162793,8.478125,0.270157,-5.030794,1.678012,-5.264367],[-3.935940,3.770084,7.309075,0.161474,2.825939,4.789135,-3.048784,2.630071,-8.642067,-3.860032,-6.777872]],[[-9.910620,-7.655012,-3.147269,-8.454833,5.589253,-2.469317,6.947324,-3.172500,-8.538035,8.787675,-1.325668],[1.269326,2.188583,-2.280155,-5.554567,4.847439,-3.309904,3.471623,-9.123077,6.252853,7.297934,-0.966046],[0.762585,7.862863,-3.305786,5.641392,-5.162756,-9.650715,4.989194,4.406038,5.056536,-1.605352,7.306417]]], dtype = "float64")#candidate|1052|(8, 3, 11)|const|float64
bop_1053 = relay.floor_divide(var_1051.astype('float64'), relay.reshape(const_1052.astype('float64'), relay.shape_of(var_1051))) # shape=(8, 3, 11)
output = relay.Tuple([bop_1053,])
output2 = relay.Tuple([bop_1053,])
func_1058 = relay.Function([var_1051,], output)
mod['func_1058'] = func_1058
mod = relay.transform.InferType()(mod)
var_1059 = relay.var("var_1059", dtype = "float64", shape = (8, 3, 11))#candidate|1059|(8, 3, 11)|var|float64
output = func_1058(var_1059)
func_1060 = relay.Function([var_1059], output)
mutated_mod['func_1060'] = func_1060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1220 = relay.var("var_1220", dtype = "float64", shape = (5, 2, 2))#candidate|1220|(5, 2, 2)|var|float64
uop_1221 = relay.atanh(var_1220.astype('float64')) # shape=(5, 2, 2)
output = relay.Tuple([uop_1221,])
output2 = relay.Tuple([uop_1221,])
func_1231 = relay.Function([var_1220,], output)
mod['func_1231'] = func_1231
mod = relay.transform.InferType()(mod)
var_1232 = relay.var("var_1232", dtype = "float64", shape = (5, 2, 2))#candidate|1232|(5, 2, 2)|var|float64
output = func_1231(var_1232)
func_1233 = relay.Function([var_1232], output)
mutated_mod['func_1233'] = func_1233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1251 = relay.var("var_1251", dtype = "bool", shape = ())#candidate|1251|()|var|bool
var_1252 = relay.var("var_1252", dtype = "bool", shape = (6, 13, 15))#candidate|1252|(6, 13, 15)|var|bool
bop_1253 = relay.logical_and(var_1251.astype('bool'), var_1252.astype('bool')) # shape=(6, 13, 15)
uop_1256 = relay.log2(var_1252.astype('float32')) # shape=(6, 13, 15)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
var_1264 = relay.var("var_1264", dtype = "float64", shape = (20,))#candidate|1264|(20,)|var|float64
call_1263 = relay.TupleGetItem(func_1231_call(relay.reshape(var_1264.astype('float64'), [5, 2, 2])), 0)
call_1265 = relay.TupleGetItem(func_1233_call(relay.reshape(var_1264.astype('float64'), [5, 2, 2])), 0)
func_943_call = mod.get_global_var('func_943')
func_948_call = mutated_mod.get_global_var('func_948')
var_1268 = relay.var("var_1268", dtype = "bool", shape = (720,))#candidate|1268|(720,)|var|bool
const_1269 = relay.const([[True,False,True,False,False,True],[True,True,False,False,True,True],[False,False,True,False,True,True],[True,False,False,True,False,True],[True,True,False,True,False,False],[True,True,False,False,True,True],[True,False,False,True,True,True],[True,True,False,False,True,True],[True,True,True,True,False,True],[True,True,True,True,True,True],[True,False,False,False,False,True],[True,True,True,True,True,False],[False,False,False,False,False,True]], dtype = "bool")#candidate|1269|(13, 6)|const|bool
var_1270 = relay.var("var_1270", dtype = "float32", shape = (60,))#candidate|1270|(60,)|var|float32
call_1267 = relay.TupleGetItem(func_943_call(relay.reshape(var_1251.astype('bool'), []), relay.reshape(var_1268.astype('bool'), [9, 5, 16]), relay.reshape(const_1269.astype('bool'), [3, 2, 13]), relay.reshape(var_1270.astype('float32'), [60,]), ), 3)
call_1271 = relay.TupleGetItem(func_948_call(relay.reshape(var_1251.astype('bool'), []), relay.reshape(var_1268.astype('bool'), [9, 5, 16]), relay.reshape(const_1269.astype('bool'), [3, 2, 13]), relay.reshape(var_1270.astype('float32'), [60,]), ), 3)
bop_1272 = relay.minimum(uop_1256.astype('uint16'), var_1251.astype('uint16')) # shape=(6, 13, 15)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
call_1279 = relay.TupleGetItem(func_1231_call(relay.reshape(var_1264.astype('float64'), [5, 2, 2])), 0)
call_1280 = relay.TupleGetItem(func_1233_call(relay.reshape(var_1264.astype('float64'), [5, 2, 2])), 0)
output = relay.Tuple([bop_1253,call_1263,var_1264,call_1267,var_1268,const_1269,var_1270,bop_1272,call_1279,])
output2 = relay.Tuple([bop_1253,call_1265,var_1264,call_1271,var_1268,const_1269,var_1270,bop_1272,call_1280,])
func_1317 = relay.Function([var_1251,var_1252,var_1264,var_1268,var_1270,], output)
mod['func_1317'] = func_1317
mod = relay.transform.InferType()(mod)
var_1318 = relay.var("var_1318", dtype = "bool", shape = ())#candidate|1318|()|var|bool
var_1319 = relay.var("var_1319", dtype = "bool", shape = (6, 13, 15))#candidate|1319|(6, 13, 15)|var|bool
var_1320 = relay.var("var_1320", dtype = "float64", shape = (20,))#candidate|1320|(20,)|var|float64
var_1321 = relay.var("var_1321", dtype = "bool", shape = (720,))#candidate|1321|(720,)|var|bool
var_1322 = relay.var("var_1322", dtype = "float32", shape = (60,))#candidate|1322|(60,)|var|float32
output = func_1317(var_1318,var_1319,var_1320,var_1321,var_1322,)
func_1323 = relay.Function([var_1318,var_1319,var_1320,var_1321,var_1322,], output)
mutated_mod['func_1323'] = func_1323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1633 = relay.var("var_1633", dtype = "float64", shape = (8, 16, 5))#candidate|1633|(8, 16, 5)|var|float64
const_1634 = relay.const([[[-5.160332,-3.911828,9.367556,-3.238140,-2.047217],[-9.113307,1.378482,2.182176,-4.921930,-0.403122],[0.970157,5.370094,-7.317410,-6.764755,-1.540157],[3.843028,8.441272,6.510576,-8.834116,-2.045116],[-1.181209,4.462889,3.906612,-7.668999,9.336730],[-3.381157,4.561091,-5.942990,-4.137858,-8.197676],[-2.942056,5.005686,0.357502,-2.977462,-0.143969],[-4.998249,-5.059934,3.901510,-6.917948,7.254817],[-5.244530,-3.628610,8.158577,5.274152,-0.778938],[8.027682,-8.200075,-6.508829,1.466612,0.348897],[4.093707,-6.030015,1.630803,6.067104,7.231421],[-6.578075,-5.669069,-6.390425,4.360025,4.938338],[2.376790,8.321963,4.106362,7.060234,-7.863053],[3.015968,6.046982,8.922414,8.786637,-4.022979],[4.952918,-2.946071,-1.038157,-1.860864,-2.021281],[3.301114,-7.280614,4.288577,-2.092126,-0.952986]],[[1.485077,9.625136,6.977282,-8.328969,3.771699],[8.410029,2.917988,9.920900,-0.708163,8.734612],[3.025675,-7.255689,1.547721,-2.905502,5.280302],[5.025575,-7.480418,4.485794,8.502974,-0.224063],[-8.493997,-3.454442,5.165829,4.105719,2.287326],[-2.116614,0.223996,-6.250210,7.530450,1.369628],[4.332162,9.262524,7.975078,2.764787,-8.450986],[4.748999,0.176903,-2.649364,4.017755,1.778420],[3.905923,-4.838556,-9.293859,7.288338,1.462381],[-1.384082,9.000909,-5.231557,-3.908379,-8.264863],[7.938141,-9.786333,0.483941,8.297617,-9.530133],[6.027229,-5.823060,5.876409,-8.424090,-5.485027],[4.174276,-3.158768,6.414258,9.476147,-9.274355],[-3.695577,8.257149,-3.333047,-2.351932,-1.461041],[-1.734376,-3.881038,3.922037,-3.818093,-0.421292],[6.010751,0.301923,3.720040,-6.973481,3.349803]],[[-7.436461,-1.904455,-7.302728,-6.148793,-0.952118],[0.614869,-2.956366,3.172186,0.476521,8.556484],[6.102211,8.625950,-0.087584,5.829770,9.582528],[2.239712,-4.187911,-2.479382,-8.658541,7.382567],[9.378549,-9.950510,-2.765088,1.059427,1.106294],[-3.460545,6.227716,0.436569,-2.135419,-2.616332],[0.636901,1.440648,5.498060,-5.036769,-1.074396],[-7.536486,1.473539,3.846494,-2.855180,9.732081],[7.957100,-9.546809,-1.222216,-9.209715,-2.479753],[-3.319394,-4.929263,-9.000707,6.265082,4.101439],[-1.340237,7.905179,-8.106547,-7.564805,3.042849],[-6.250218,1.854287,1.598780,4.283039,-7.542427],[-4.712586,7.598484,-3.937643,-8.892044,9.586838],[5.463141,2.055600,9.360176,6.812691,5.794611],[1.009356,9.747340,-6.376788,-7.755942,-2.820943],[-2.857032,-4.270255,7.564022,3.518786,-6.112776]],[[5.450963,-0.342724,9.311562,2.303934,0.595498],[1.385087,-7.650326,9.222908,-7.054791,-3.310137],[-9.156247,5.145674,3.051362,6.736141,8.877228],[1.503190,7.699985,2.075863,1.969187,7.936858],[4.771395,4.750107,6.495982,0.455864,4.063743],[-6.200166,-7.236007,-1.951125,-8.912851,-0.694202],[1.360381,6.901947,4.299223,9.107335,5.010749],[-9.837111,-2.080360,-2.911723,-3.664185,0.286626],[-6.677523,-9.182818,8.493981,-9.786913,-8.859630],[2.390621,-6.650139,3.804400,-6.160169,-8.248001],[1.877497,-2.997069,-4.787305,-0.064625,-8.702584],[-6.387254,4.691664,5.415243,7.001729,3.871102],[-2.438735,-5.124351,1.754827,1.449657,-3.012877],[2.712573,-9.319832,1.164531,-0.134822,5.968961],[3.359057,7.667007,-4.964772,-0.644373,-3.507030],[-0.531365,-7.870869,3.352419,-0.181924,0.847366]],[[-4.539711,-9.107857,8.264902,-8.721203,1.105562],[-7.196160,8.672200,-1.019950,3.085852,-3.357154],[-8.843046,-2.053684,5.954259,-7.834229,-0.375441],[-3.398515,-1.038418,7.702610,6.843102,5.575421],[-1.193583,1.579951,-7.299375,3.788736,-6.107050],[4.577905,-3.108676,-9.726576,-3.236595,4.836624],[-4.127275,4.309119,9.342649,-3.874965,-7.139347],[0.709125,-8.122717,8.276624,-8.675009,-6.955708],[-5.961053,7.291221,2.512202,-2.467959,-9.195300],[6.890330,7.929095,1.750775,0.062879,9.564492],[-3.343356,-7.078434,-0.817458,3.576709,5.388683],[5.861959,2.828799,-1.354360,-6.738621,-2.558341],[8.325476,-2.252929,5.468149,0.210152,7.581965],[-6.362938,6.204175,-6.872976,-7.226868,6.468214],[5.324537,7.564460,8.992233,-7.789516,-9.194422],[9.952494,-6.057604,9.932482,8.685304,-2.664965]],[[5.458408,-8.005462,-0.857790,-4.030444,-5.730701],[-2.402674,3.115335,5.588827,0.867565,-4.117458],[-0.619371,7.022118,5.507110,-4.600157,0.612275],[-7.998267,-8.631667,-2.146324,5.321645,1.982872],[-3.630266,-7.662250,-3.086515,-4.033644,4.782213],[9.071133,-8.598127,-2.301552,9.109691,5.452485],[2.747949,-6.583530,-1.761872,-6.281511,6.307334],[-9.712563,1.059304,5.749757,-2.176298,-1.762061],[2.378422,2.936894,-9.175142,7.009934,4.082115],[2.906526,-9.376295,-0.862830,-5.282438,6.646252],[-8.313042,1.240657,-8.185331,2.295244,-6.192458],[-4.910263,-9.245674,-6.337167,0.560236,-1.094782],[-1.841406,3.260175,3.807393,8.241984,6.423294],[-4.751035,-4.187016,1.096481,-6.475096,5.592174],[-5.706641,-4.609272,-3.291684,-7.904719,3.030141],[-6.906633,-5.363181,-8.011798,5.878019,2.233402]],[[-6.851552,-9.677403,1.386946,5.394683,0.293719],[-6.109115,-6.488095,-7.604376,5.273755,-3.316516],[2.531357,-4.499088,1.285374,-8.308834,9.684295],[7.788986,3.982219,-4.589683,6.292557,-1.438986],[5.262658,4.805413,-9.021561,-8.027745,-3.118978],[-2.789677,2.206474,8.579448,4.783013,9.113784],[1.494583,9.594129,-9.791264,2.102143,7.248203],[-3.554796,-9.496823,6.676932,6.722329,4.921692],[-4.764967,-0.172860,-0.415606,-8.922503,6.798692],[-5.116751,-1.974417,3.341313,-8.919637,9.757444],[-4.480332,-2.586498,0.107311,8.386120,4.506925],[-4.842146,-1.902293,9.018164,-1.097452,2.113833],[8.993102,-1.262679,7.775496,-4.502648,-5.720445],[3.334486,-0.578194,2.009829,6.755921,-8.288718],[2.708451,9.891401,2.308274,4.097876,-5.404828],[9.809202,-0.871500,-7.918817,5.364144,6.087327]],[[-2.615351,0.653214,-0.117044,-7.187439,4.882019],[-5.442342,9.475602,1.553202,-3.973427,-9.746806],[2.972487,-8.531161,5.472815,8.514791,-5.299114],[-7.791244,5.004278,3.626341,-8.496175,-8.188995],[-4.580915,4.413882,-1.520777,2.010199,0.727470],[3.876812,8.661055,-9.453689,-5.115842,-8.110422],[8.669878,1.547823,-7.140896,-5.842997,-1.214460],[-7.814935,-6.666424,-5.090129,-4.927316,8.331396],[6.535311,-6.860047,9.535052,8.237923,-5.786627],[-7.595790,-2.858516,3.409792,-8.196030,-6.303602],[-6.111772,9.920940,-2.934693,0.903882,5.944755],[-8.539206,6.298801,-7.141445,7.876325,4.490869],[2.243428,8.220013,4.508397,-7.669591,0.154670],[1.064583,1.829776,-8.125587,-5.931645,7.536143],[-7.848092,5.354934,-6.489880,-2.889632,3.049959],[-0.409827,9.899427,8.344813,-8.142929,-3.427453]]], dtype = "float64")#candidate|1634|(8, 16, 5)|const|float64
bop_1635 = relay.floor_divide(var_1633.astype('float64'), relay.reshape(const_1634.astype('float64'), relay.shape_of(var_1633))) # shape=(8, 16, 5)
output = bop_1635
output2 = bop_1635
func_1638 = relay.Function([var_1633,], output)
mod['func_1638'] = func_1638
mod = relay.transform.InferType()(mod)
mutated_mod['func_1638'] = func_1638
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1639 = relay.var("var_1639", dtype = "float64", shape = (8, 16, 5))#candidate|1639|(8, 16, 5)|var|float64
func_1638_call = mutated_mod.get_global_var('func_1638')
call_1640 = func_1638_call(var_1639)
output = call_1640
func_1641 = relay.Function([var_1639], output)
mutated_mod['func_1641'] = func_1641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1685 = relay.var("var_1685", dtype = "float32", shape = (14, 16, 2))#candidate|1685|(14, 16, 2)|var|float32
uop_1686 = relay.cos(var_1685.astype('float32')) # shape=(14, 16, 2)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
const_1689 = relay.const([7.286327,5.408264,-9.583532,-7.103366,-2.655453,-2.222766,3.299387,-1.110918,-8.066315,3.175286,0.054835,8.242140,3.775996,8.705711,-3.626976,-6.695315,6.303384,-5.769052,3.081178,-1.088813], dtype = "float64")#candidate|1689|(20,)|const|float64
call_1688 = relay.TupleGetItem(func_1231_call(relay.reshape(const_1689.astype('float64'), [5, 2, 2])), 0)
call_1690 = relay.TupleGetItem(func_1233_call(relay.reshape(const_1689.astype('float64'), [5, 2, 2])), 0)
output = relay.Tuple([uop_1686,call_1688,const_1689,])
output2 = relay.Tuple([uop_1686,call_1690,const_1689,])
func_1702 = relay.Function([var_1685,], output)
mod['func_1702'] = func_1702
mod = relay.transform.InferType()(mod)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1703 = relay.var("var_1703", dtype = "float32", shape = (14, 16, 2))#candidate|1703|(14, 16, 2)|var|float32
func_1702_call = mutated_mod.get_global_var('func_1702')
call_1704 = func_1702_call(var_1703)
output = call_1704
func_1705 = relay.Function([var_1703], output)
mutated_mod['func_1705'] = func_1705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1828 = relay.var("var_1828", dtype = "int8", shape = (9, 2, 10))#candidate|1828|(9, 2, 10)|var|int8
var_1829 = relay.var("var_1829", dtype = "int8", shape = (9, 2, 10))#candidate|1829|(9, 2, 10)|var|int8
bop_1830 = relay.equal(var_1828.astype('bool'), relay.reshape(var_1829.astype('bool'), relay.shape_of(var_1828))) # shape=(9, 2, 10)
func_624_call = mod.get_global_var('func_624')
func_629_call = mutated_mod.get_global_var('func_629')
const_1841 = relay.const([True,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True], dtype = "bool")#candidate|1841|(88,)|const|bool
const_1842 = relay.const([-3.025531,-5.708489,-0.859083,-4.100622,-7.002268,-1.379473,7.112490,2.836871,6.435822,-7.943169,-8.520138,-7.416441,2.180574,-9.712798,9.181334,0.507788,6.433411,2.211413,-3.759014,-3.827887,8.894174,3.644327,-2.984467,-1.165892,5.662768,5.704789,0.031623,-2.367183,9.979716,6.503991,6.985612,-0.177776,8.901114,-5.510898,8.730060,-9.773487,-8.827596,2.672978,-9.842329,-6.324831,-2.966408,1.833475,-7.283161,0.671958,-8.045361,-3.534291,2.570801,-9.892972,-9.223849,-6.916902,1.415908,-7.831580,3.439960,-8.394702,1.806800,9.261115,-5.194115,-2.628302,-4.126373,-4.162558,-9.264571,9.877977,-4.280236,-8.303766,-7.868253,-7.620223,0.384080,3.396658,6.190517,-2.468391,0.429190,-6.827898,-0.939230,-8.420591,-6.903713,7.791181,5.973304,-1.703711,-0.922182,3.528300,-5.246664,-6.268065,-7.896222,-9.573905,-3.231562,2.311604,-8.270809,3.682747,-5.789169,5.680834,9.628662,7.375741,9.815097,-6.586268,8.300170,3.553284,8.718649,5.249284,3.947558,0.686881,2.034597,4.915697,0.209881,-0.310184,-1.670034,-6.316845,9.471299,7.820195,-2.473574,-7.818695,0.475038,1.356538,-6.299689,-2.830852,-0.657042,8.890074,-4.943484,5.485531,8.220324,2.034948,0.239468,0.144997,-7.403211,-3.034604,-5.870021,-7.767976,-7.776352,4.600338,-1.939410,-2.016854,3.972512,-3.905358,5.886113,3.276907,-5.395521,-4.192075,8.178777,-8.454998,-6.260652,-7.079965,6.838223,-6.699638,-7.778582,-5.004431,-3.147760,1.491954,-8.585379,2.188322,3.791154,3.904021,-3.017551,7.358743,2.072554,2.608939,-9.237292,8.256485,-8.198443,6.177398,0.374915,2.297312,1.571201,5.099932,9.799974,4.394589,-4.682318,-1.094789,-1.792953,-8.775110,7.429943,-6.531073,5.280553,8.586796,1.099398,-6.201310,4.562981,-0.959498,-3.998178,-5.733896,6.094675,-8.207736,-3.259151,-1.833272,-4.440320,4.535488,-0.483897,-1.211661,7.698744,3.074230,-3.980276,6.794804,3.388195,-0.908341,9.230137,4.909080,-5.853691,-9.460976,-6.566648,-2.639676,7.096252,-1.398656,9.217905,2.568018,2.392319,9.984835,-8.794652,5.003801,9.850116,0.364857,-1.725206,9.050453,-5.242847,-1.671261,-0.248016,-3.671116,-9.668576,0.483722,6.284591,-1.672574,6.590040,-8.884495,-9.271876,5.527237,-0.605204,-7.150812,-9.248688,4.955673,-6.684330,8.736916,-8.726032,-2.980718,5.944028,-9.580928,6.814967,6.626359,6.300906,-5.472795,1.512302,7.442873,4.723996,-0.994940,8.982986,-7.791697,3.648709,-2.782550,8.166746,-3.173093,-1.551459,0.519787,2.964609,-2.609826,2.673315,-7.418453,-0.591509,-7.445505,-8.646705,4.474013,-0.246397,4.398557,-6.361801,-6.118279,-3.748483,-4.332743,3.927128,-2.286176,-6.626420,6.008838,-0.176529,-8.259038,5.195815,-6.991508,7.447641,1.868354,8.376259,-8.237413,-3.352003,-0.930267,3.889726,3.886470,-5.249791,-2.075018,-6.456499,-5.437203,9.111315,-7.854639,4.834534,-9.454453,-3.150385,1.947657,-4.551506,2.013260,-6.414482,-1.933229,-5.507422,-2.863445,5.940757,0.123848,3.217912,-1.981572,-4.603261,7.423876,9.930852,3.111665,-0.330283,-5.226788,-7.682118,6.453759,2.197119,-2.539678,-4.765016,-2.527766,1.393917,2.192375,-8.745391,-4.348677,-5.134129,-4.406386,8.282619,-6.791700,-7.582387,9.546345,-3.949955,8.030107,-6.797957,-8.971529,8.909450,-8.348294,-4.278074,8.484524,-4.093694,-8.350121,2.237692,-8.894259,-9.656328,-6.366848,7.952322,2.357344,3.016837,6.219940,-3.953915,-7.919898,1.058028,6.629842,-9.157247,-6.974903,-6.136748,-5.895656,6.530370,-1.793017,2.166559,3.181773,-2.439882,-1.871289,2.555674,2.887821,4.671888,1.991231,9.829669,7.469846,2.969079,-8.863411,-9.660470,-3.669007,6.622132,9.732050,6.771077,-0.756112,3.825529,5.289685,-0.924557,-8.741666,-1.989375,-1.938255,-8.477266,-3.735830,0.350973,9.909442,0.460296,-7.237389,5.700191,5.355155,-5.992648,-2.406811,-8.481965,-3.600927,1.638840,3.397973,4.562945,2.571242,9.307447,9.216308,-1.294359,-4.720209,-6.973043,-7.881451,-1.033922,4.996651,5.951052,-0.279833,3.550828,7.670747,4.162569,3.344123,-8.522788,6.012437,-8.785189,5.617833,4.323637,-2.590963,-0.010493,2.461933,-5.756700,4.105621,9.433477,7.473159,-1.478093,7.882385,9.100914,-4.242701,1.035530,7.018897,6.078807,-2.682010,-2.557760,-3.129747,7.159688,2.816412,-3.500225,-4.480378,-9.309544,4.974222,-5.491656,5.470252,5.730288,5.289338,5.652407,-8.140962,6.737465,3.039534,8.133121,-2.134117,-7.441682,-1.785621,-9.749802,-9.890943,-2.727314,-2.072900,-1.993047,3.676206,5.548080,-6.499454,1.689433,9.420920,3.171644,8.291722,9.855240,3.177401,9.255146,-1.540412,-3.442916,6.178015,-6.233334,4.830698,5.720569,-6.700954,-6.414213,6.792831,8.094113,-3.681147,7.359343,1.746129,-1.796246,-2.199691,-0.226562,1.095591,2.447963,-2.163043,-4.880097,-4.149590,-4.240237,6.944478,5.256038,-3.161478,4.579328,6.615109,-1.590022,8.096487,-7.151339,6.020937,0.332395,0.132321,9.969202,-9.407832,-9.446907,0.667772,-6.610278,1.193752,8.462971,-6.348326,-2.205214,7.091348,1.568184,9.342153,4.213748,-6.263517,-1.989922,8.509915,0.062102,5.552963,5.308711,-9.142427,2.147099,7.346425,-8.005602,-7.700904,-5.693814,1.667853,-3.596106,6.874403,7.398175,-7.669166,7.634465,0.346127,-5.031158,-5.307576,8.937623,5.555545,-1.815682,0.603308,-3.491560,-5.641373,-6.513458,-3.111806,-6.167332,-5.094514,-8.694442,0.136726,-9.657594,-4.973266,-8.366616,-9.518336,-5.079649,-0.900192,2.364622,2.009988,2.165315,-9.361104,2.636164,5.277919,-5.647406,-2.347456,-2.533822,-8.189503,-5.465847,3.119740,-0.905668,6.489410,7.957964,4.082206,0.907168,3.281324,-6.117232,-2.702417,-6.628103,-5.883995,6.591184,0.937159,-4.892866,7.113275,0.843852,3.810506,-5.532425,-6.275736,5.144909,-1.753639,-6.981039,4.662085,2.357117,-2.629364,5.609947,-5.174292,4.795925,9.475940,-7.812306,7.272923,0.276284,4.925961,0.592233,-9.472765,4.011026,8.981088,-8.482982,6.011266,1.237950,7.215013,-7.156250,2.025857,-8.368459,0.518915,1.530157,-7.286466,-8.760742,1.868791,9.623096,-9.992974,-5.519967,-9.535023,-9.026962,3.636864,8.942358,3.267059,-4.299873,-1.968273,0.694054,7.089065,-3.271426,0.543096,7.972107,-8.741127,-7.802725,-8.388587,-4.210446,7.368437,-0.611619,-2.676173,-9.042382,1.410720,7.399406,4.050045,7.275398,5.419252,-4.795252,-6.901675,2.445394,-9.420876,1.729170,3.427501,6.104728,7.104887,0.906019,7.604517,6.099312,-5.518221,-5.094770,2.362090,0.347574,1.275460,4.353198,2.494258,-3.105868,6.395864,-9.998347,-7.590080,8.726808,5.742176,1.507008,-1.981942,6.198971,1.683642,-5.427367,-5.339299,-3.725351,3.394366,9.598682,-8.367203,-4.471387,-6.110635,-4.890934,-1.193789,-6.259113,-1.844274,4.691143,-7.126065,-9.368860,-9.320685,-0.600071,-9.271953,8.244381,-2.498490,-7.516806,-4.530763,-5.197167,-8.370231,5.048022,0.850864,-2.997100,-7.817840,-0.972060,6.425739,-2.881893,-7.988744,-5.302091,6.387835,-0.069141,-5.263804,6.108251,-7.839226,8.772526,-1.776695,8.964941,-9.777823,-2.901271,3.557181,6.872240,6.960631,1.069682,-4.873706,-9.187143,1.621511,-5.773787,8.520585,-4.585340,7.912304,-8.390909,5.738131,9.915204,-2.937584,-1.337802,7.076499,-1.010611,3.100040,-6.750354,0.409704,-8.700054,4.609100,-8.249524,-2.849504,-2.273302,4.290891,8.757885,8.347744,-6.727846,-1.932294,6.315846,5.640248,-5.842775,6.649948,-6.431104,4.167143,8.828294,5.818373,-1.252394,6.996784,-8.317082,8.721437,8.177196,-3.702992,-3.062561,-0.745270,-3.997726,0.336165,-8.922137,1.958276,2.579982,8.820712,-6.810873,6.964693,-7.752859,7.041190,6.419902,9.506073,0.726367,-3.206474,-4.538136,-7.969423,-7.770193,-2.762711,-6.433275,-7.902476,-8.254337,5.485816,-3.851719,4.192754,2.898630,0.040893,-7.690290,7.811239,4.184762,3.070526,-0.411098,-7.279784,-1.016217,2.100664,2.267565,-5.786238,-4.099550,-1.874428,-5.620990,4.432047,-2.469944,-4.297686,6.954400,8.451209,-2.305049,6.686249,-2.634251,6.314269,-5.648999,0.989056,-4.852001,7.599066,3.500876,-5.204103,-5.900774,5.846846,-4.439414,5.342997,0.553969,-4.084116,2.241690,-3.937139,-6.171688,-4.233349,9.192442,-0.982860,-7.381672,-3.608265,4.854544,3.338161,-6.629127,-4.914550,7.067644,8.050248,-9.722508,-7.267099,8.616588,6.242510,-4.652103,-9.764171,-8.295837,-5.384310,-9.718169,-9.036241,0.003050,9.960747,9.104716,-6.620897,7.711384,9.494069,-2.153529,-8.004286,6.775366,0.807374,9.899283,7.410167,-3.212393,-0.576460,-8.949114,-6.804097,4.788570,0.189823,1.910321,3.650890,2.361548,0.663671,-4.041645,2.830346,8.152768,2.211939,-1.499572,-2.763556,-7.533224,-3.144034,-0.216652,-5.992040,-4.752736,-8.147593,-4.915474,9.790278,-1.197309,1.938229,-9.777261,-8.922908,1.129478,-9.943204,-4.697211,-0.725170,-5.816392,1.336432,8.776116,-5.377866,-4.979313,9.669773,-2.611318,-6.200453,1.094896,3.714014,9.578683,-4.852200,1.547461,-2.250246,2.136755,4.377616,1.584951,-2.517940,-4.956001,7.458430,2.926002,8.061007,9.634661,5.528928,2.341509,-2.711321,-4.670288,2.079378,4.422372,-5.240666,-0.822876,-7.508755,-3.215132,-8.524656,7.243022,5.616675,9.540204,-0.788390,2.965228,2.451850,-6.079106,9.450978,-7.998402,3.611451,-6.120003,4.911133,7.609382,8.400388,-1.412742,-3.719233,9.414440,5.957949,3.030776,1.722736,7.899056,5.114366,-2.604306,-0.008126,-7.955864,-2.441805,6.334583,6.730878,-5.960906,3.034035,2.374777,-1.700900,7.305211,4.326044,-0.990849,6.865584,4.661629,1.768222,2.935283,5.475654,9.798865,8.745220,0.521115,5.426947,3.546531,-0.582555,4.014888,3.454515,-8.972792,2.535592,5.833512,-0.521428,0.332837,-4.190700,-2.145283,-0.398965,5.870536,-8.928411,2.423916,-7.433785,-2.325332,5.933875,-0.506777,7.756614,5.735557,0.945487,1.109849,7.566687,5.339109,-8.828148,5.972697,-4.703282,-9.730313,9.719244,-8.222213,-5.425952,7.025529,-9.670799,-4.591179,-7.804341,-6.503272,-4.755994,-1.024561,4.201524,8.051802,5.920575,-6.929363,1.021758,-7.624303,-7.206088,1.051918,-5.160192,-2.605116,-6.260879,-3.276356,-0.548428,-1.438411,-9.370509,5.809554,-5.105267,7.209796,5.234983,1.663837,-2.248536,-0.855137,6.000155,2.964945,-0.768269,-2.734808,-3.755993,8.686242,-4.282637,9.718399,-8.883586,-1.504984,2.680452,-5.549634,8.503153,-8.919670,-5.778225,7.905450,-0.830342,3.903171,-4.795469,0.823060,-7.721757,-5.012778,-5.430776,8.888965,-9.736918,5.756920,-3.992779,-0.970621,-9.193127,0.849212,6.940688,-0.895215,-5.462301,-4.747709,9.280991,7.996820,5.275759,-6.006845,-7.679286,-8.028949,9.833643,-7.964103,-9.333570,-9.460443,9.735306,0.004133,-6.171810,-2.445641,4.057039,4.831983,-2.004117,-5.609696,-8.976295,9.742854,-5.523513,8.689738,-0.154883,7.964138,5.168071,9.540519,-6.436915,8.673453,-3.288480,7.131697,0.203085,-7.091009,6.050295,7.389026,-8.791718,-1.537495,-6.505509,-7.311048,-2.436239,6.897846,4.849366,-1.026638,9.959342,-0.774158,-1.695055,0.981282,4.511395,6.130129,-0.651207,-3.314197,-7.648138,-9.101929,6.779971,3.744884,-4.319576,2.224652,8.822641,1.286523,3.270425,-2.197200,6.818090,2.870786,1.358037,-2.328321,3.588392,-0.522778,9.426866,9.457516,-1.686625,-0.310569,8.326714,-4.677719,-6.488179,-7.361937,-5.507063,2.081084,-6.659274,-4.701391,8.851820,-0.226759,5.736856,-2.541661,3.587800,6.804564,-9.733056,-0.687497,7.813386,-2.782571,6.221705,-2.911543,1.387237,3.512144,-0.394602,-6.696517,-9.000939,8.097730,0.639203,3.606118,1.014486,-0.271598,-4.129302,3.075963,-5.913140,2.577884,-9.820500,6.821263,2.632719,-6.372382,-0.462732,-8.056069,5.408915,-2.481610,1.882707,3.796847,7.949822,5.959948,-5.850569,1.210033,-3.504915,-0.511519,-2.464091,5.170088,5.480910,-9.017832,-4.583879,-8.518439,-1.284738,-0.030356,-5.753480,-7.659869,-0.635638,-2.963907,-9.949636,1.544288,-8.094437,-7.560711,5.472331,3.693036,1.854508,-7.199257,-8.922949,6.586255,6.051017,-6.295781,1.870140,1.802223,-1.288618,-1.222593,-8.698182,-6.213616,-4.347905,8.364362,-4.687801,-6.484648,-0.116696,8.260125,8.152164,0.690823,-7.616610,4.368506,-3.369498,9.033110,-8.420086,-1.900891,5.989661,4.182939,1.889878,9.122228,0.575159,8.865890,-6.544185,-4.691166,3.092401,4.632783,-8.994870,7.774565,6.748714,8.384456,-3.039184,-0.866632,-4.146098,2.097621,8.189236,2.330681,-8.647782,-4.130814,3.570996,6.477547,7.744437,0.045989,3.121887,-9.782690,6.363578,-9.863923,6.017120,-6.469443,-8.501672,1.658118,-3.868677,7.580614,2.315791,-6.427813,-3.205169,1.645633,-8.151590,2.667559,9.079985,-2.509130,-5.897080,6.323339,-1.174429,6.004388,0.889224,-0.446933,-9.206088,6.027118,4.413164,-6.482547,4.308765,7.734001,-5.978833,6.904651,5.523174,5.297117,-3.910413,1.646300,-6.985524,3.993036,-4.263720,8.246058,0.475715,-5.190738,-5.657274,6.842644,9.019444,8.349994,7.885388,2.950696,5.650238,-5.242595,9.199547,-6.941256,2.604775,-9.099697,7.271116,-1.608731,-1.605118,9.426244,3.816774,-3.284508,-1.584055,4.391102,-6.514811,-5.268400,4.701228,4.815410,-5.846367,-9.730348,0.287826,4.227231,-7.172232,-5.047907,0.109813,-3.173966,-4.168626,5.265842,-1.519239,-2.679807,5.181552,-7.521839,-9.641354,-3.381292,8.479991,-8.443845,9.690403,1.554881,9.698288,-9.566932,-2.883843,9.454043,2.662585,3.470851,0.923753,-5.985829,-9.948456,2.719720,-8.223170,0.016339,-7.288644,-8.238753,-6.731924,-8.804761,3.901491,-0.914035,3.758735,-1.958328,-4.017292,-5.952698,-8.466083,-9.037613,-1.376140,3.969649,5.781173,-6.493497,-9.643798,0.550396,3.055995,-7.312692,-5.324208,-6.689001,-5.145897,-7.774861,-2.948580,6.101348,7.113747,5.096144,2.243128,-7.798798,4.698055,4.798123,-7.789720,-6.113424,-9.008637,-8.729978,7.326331,-2.316033,-0.474546,-0.387488,2.863062,1.679295,-2.652876,-2.602314,9.418567,-2.999985,-6.193326,-0.924684,9.711077,-7.669763,7.119814,-8.048009,3.221153,-8.152090,-1.331655,-2.850443,-0.802888,-3.188395,-0.167738,0.162485,-6.244074,-2.513499,5.802335,5.526491,-7.837065,-5.101733,-8.384124,-8.238111,3.861535,5.909380,-9.277905,5.438247,5.901262,2.325905,9.422232,3.246182,-2.821187,-1.407378,-0.655132,-2.032827,1.258870,-5.617211,-7.613297,5.620828,-1.655498,7.242849,-5.809505,2.887869,-6.270666,9.397348,0.007866,6.264326,-2.363949,1.692675,1.812895,0.192403,-9.697996,8.521848,2.372277,-0.118577,4.212703,-5.691512,5.927463,-1.781237,-1.334342,9.862643,-6.757242,6.375698,-2.883099,-7.435644,4.344559,-1.656113,2.401950,-0.049280,-4.477759,-3.194986,-2.652225,7.128258,8.190972,0.530652,9.022437,5.816073,-4.704543,-8.201631,-3.748075,-7.387384,5.880532,2.118281,-8.393036,6.083678,7.478350,9.041107,-9.182994,5.934189,-3.863488,4.669489,3.322150,7.506424,0.655684,-7.485424,-1.969396,9.209401,2.273809,9.014251,-7.051965,-6.390728,-3.741095,5.449915,-5.106949,-9.576248,-4.139510,-9.927052,1.398394,1.543307,2.318577,-0.559200,-0.994952,3.589486,-1.821396,-2.858776,0.408430,-6.197550,-4.154751,-4.275441,-2.881633,2.683445,-1.082183,-0.096762,4.328564,7.163583,6.116664,0.859088,1.269312,8.607685,6.786309,7.229830,-0.731546,-1.430918,0.777458,1.864149,-4.650631,-2.952301,-0.193581,-8.316665,-7.552922,4.473554,5.590737,-2.587301,0.679331,-4.808066,4.203596,-0.947138,-7.459190,-6.231068,5.168861,5.895171,-1.926711,8.684773,1.183965,-2.163130,8.823947,6.114457,-2.827934,0.078031,-0.796129,-1.602643,5.954422,1.424975,-4.158079,-9.832006,-5.016324,1.857663,2.248503,2.443559,-7.620660,0.947986,4.736967,-4.022197,-0.588658,-5.246190,5.784747,-9.308720,8.281513,-6.321733,8.682545,1.215070,0.831944,-4.409590,1.728037,7.971537,2.505541], dtype = "float64")#candidate|1842|(1568,)|const|float64
call_1840 = relay.TupleGetItem(func_624_call(relay.reshape(const_1841.astype('bool'), [4, 11, 2]), relay.reshape(const_1841.astype('bool'), [4, 11, 2]), relay.reshape(const_1841.astype('bool'), [4, 11, 2]), relay.reshape(const_1842.astype('float64'), [1568,]), ), 6)
call_1843 = relay.TupleGetItem(func_629_call(relay.reshape(const_1841.astype('bool'), [4, 11, 2]), relay.reshape(const_1841.astype('bool'), [4, 11, 2]), relay.reshape(const_1841.astype('bool'), [4, 11, 2]), relay.reshape(const_1842.astype('float64'), [1568,]), ), 6)
output = relay.Tuple([bop_1830,call_1840,const_1841,const_1842,])
output2 = relay.Tuple([bop_1830,call_1843,const_1841,const_1842,])
func_1876 = relay.Function([var_1828,var_1829,], output)
mod['func_1876'] = func_1876
mod = relay.transform.InferType()(mod)
mutated_mod['func_1876'] = func_1876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1876_call = mutated_mod.get_global_var('func_1876')
var_1878 = relay.var("var_1878", dtype = "int8", shape = (9, 2, 10))#candidate|1878|(9, 2, 10)|var|int8
var_1879 = relay.var("var_1879", dtype = "int8", shape = (9, 2, 10))#candidate|1879|(9, 2, 10)|var|int8
call_1877 = func_1876_call(var_1878,var_1879,)
output = call_1877
func_1880 = relay.Function([var_1878,var_1879,], output)
mutated_mod['func_1880'] = func_1880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2081 = relay.var("var_2081", dtype = "float64", shape = (12, 11, 6))#candidate|2081|(12, 11, 6)|var|float64
uop_2082 = relay.atanh(var_2081.astype('float64')) # shape=(12, 11, 6)
func_1058_call = mod.get_global_var('func_1058')
func_1060_call = mutated_mod.get_global_var('func_1060')
const_2087 = relay.const([6.557355,-8.684742,-8.900706,7.700313,-5.753394,9.415796,7.497105,-3.101190,-6.905079,9.853098,2.745082,-8.733377,0.949737,-5.572469,4.727468,3.763178,5.970589,9.536838,-3.561617,6.787017,-8.431917,-3.756451,6.907348,5.603121,-6.076914,7.740190,6.168713,-0.882491,7.332025,8.373495,0.341494,4.950374,-7.630873,-1.858525,-3.797934,5.484785,-7.455674,-3.511746,9.896667,-8.500934,-7.695788,8.876829,2.447791,-9.208408,3.909675,7.108194,-7.760483,9.735469,9.626545,3.516271,0.773021,4.701595,-7.305028,5.098110,5.108759,7.352752,9.735664,9.206838,5.733341,-3.398940,4.372327,9.300986,-3.579178,-8.288855,-3.020964,5.803818,2.097029,3.201286,-1.408405,9.625333,-5.871069,7.030666,5.182526,-6.237388,-3.783191,5.470303,-5.746852,6.614316,-3.308347,6.371013,-8.419283,-9.338842,2.714885,1.312095,9.045752,9.786509,-9.337460,1.212771,4.443720,-3.612396,-4.511325,0.770339,-6.905580,-9.558865,-5.269945,9.754993,-0.384279,-5.593280,2.354463,-2.277894,-7.452412,2.202430,-7.923411,1.028852,-8.299305,-4.074894,3.834790,-8.761260,-1.121451,-3.413272,-6.772786,4.732244,-6.748375,-3.396017,-2.708930,-4.765619,-1.169542,4.091331,-8.731733,-9.479603,-6.556153,-6.032393,-8.093148,4.323147,8.209800,5.904244,9.920778,-2.573301,6.650844,8.640032,2.117342,-7.340824,3.757837,4.671595,-0.470380,7.197626,-1.505403,1.814464,-4.291672,0.780076,-6.003250,6.477829,-9.617878,9.646689,-6.009164,3.986081,-5.573789,1.691079,3.927685,-1.705831,-8.058616,-4.848752,9.706521,2.901862,-1.785228,6.602407,7.834509,-0.187702,-6.710876,9.345270,-6.505600,7.293455,2.333220,0.215859,2.222129,-4.936924,7.072817,-6.254339,-1.182010,-1.538474,-3.772631,-6.807432,-8.353917,8.723022,-1.373460,0.262400,1.652796,-0.718911,4.281670,6.252436,9.570018,-2.774558,-5.212900,7.778947,-7.878433,8.458105,1.845056,-3.073253,-4.032577,-7.442872,3.291401,-9.728959,-1.447152,1.207709,-5.856788,-4.046290,-7.489374,-3.925918,3.289341,-0.645580,9.881912,0.579729,0.437525,-4.353591,4.159369,-4.885994,-9.838064,-4.754322,9.737016,-0.072997,-6.409362,2.078695,4.838911,-5.401715,9.493605,-6.309179,-5.050309,6.099680,6.415874,-3.649582,8.265661,4.926916,0.445230,-7.218548,4.398093,-9.382402,-7.322659,0.428094,5.367076,-5.592687,-8.538220,6.350689,-9.342484,-1.328558,-7.864421,4.576754,8.673471,7.792201,-4.119203,-5.992647,-9.239822,7.920778,-1.873658,-5.368458,-5.135409,5.454945,8.621140,-4.710731,7.714672,8.917405,7.008163,2.904902,-2.596550,9.035876,1.675182,-4.709420,-3.800256,-6.744962,-8.302928,-1.291667,7.163223,9.987416,-7.041811,4.591925], dtype = "float64")#candidate|2087|(264,)|const|float64
call_2086 = relay.TupleGetItem(func_1058_call(relay.reshape(const_2087.astype('float64'), [8, 3, 11])), 0)
call_2088 = relay.TupleGetItem(func_1060_call(relay.reshape(const_2087.astype('float64'), [8, 3, 11])), 0)
var_2089 = relay.var("var_2089", dtype = "float64", shape = (12, 11, 6))#candidate|2089|(12, 11, 6)|var|float64
bop_2090 = relay.minimum(uop_2082.astype('float64'), relay.reshape(var_2089.astype('float64'), relay.shape_of(uop_2082))) # shape=(12, 11, 6)
output = relay.Tuple([call_2086,const_2087,bop_2090,])
output2 = relay.Tuple([call_2088,const_2087,bop_2090,])
func_2096 = relay.Function([var_2081,var_2089,], output)
mod['func_2096'] = func_2096
mod = relay.transform.InferType()(mod)
var_2097 = relay.var("var_2097", dtype = "float64", shape = (12, 11, 6))#candidate|2097|(12, 11, 6)|var|float64
var_2098 = relay.var("var_2098", dtype = "float64", shape = (12, 11, 6))#candidate|2098|(12, 11, 6)|var|float64
output = func_2096(var_2097,var_2098,)
func_2099 = relay.Function([var_2097,var_2098,], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2215 = relay.const([[[2,3,6],[-8,9,-7],[2,10,6],[-7,1,-1],[10,-3,-7],[-10,-4,1],[-9,4,10],[-9,-3,-4]],[[4,10,-5],[-6,8,-7],[-2,8,-10],[-5,9,-8],[-1,3,4],[3,-9,5],[5,-8,1],[-10,2,10]],[[-8,-10,-4],[-7,-5,-1],[8,-7,8],[-10,5,5],[-5,10,2],[9,5,-8],[10,-6,-6],[4,-10,10]],[[4,8,-1],[-7,8,2],[-9,2,10],[5,-5,-5],[-9,-4,1],[-6,5,-4],[8,3,-1],[8,5,4]],[[-1,-7,3],[7,2,-10],[5,-6,1],[-9,3,7],[-6,-2,8],[-8,8,-5],[-9,2,2],[-4,9,1]],[[2,-10,-9],[-9,-3,-8],[8,10,-1],[-6,5,-2],[9,8,-6],[7,-7,2],[-6,-5,-1],[-2,6,4]],[[4,10,9],[8,7,-5],[5,2,-1],[-9,5,-5],[-6,-5,8],[-2,3,-4],[3,10,8],[-5,-7,6]],[[-9,-4,9],[-1,8,-7],[-9,-1,-10],[-3,-6,3],[8,6,2],[5,7,8],[-3,-2,6],[9,10,-8]],[[-2,-3,5],[2,-3,1],[2,-9,-7],[8,-7,-3],[10,8,2],[10,8,2],[-9,-7,5],[-10,-7,-8]],[[5,6,-6],[4,-9,-8],[10,-4,-3],[-10,-3,7],[-8,-6,7],[1,10,3],[-4,-4,1],[5,9,-10]],[[8,-7,8],[10,2,-2],[10,10,-1],[-7,-1,-10],[-2,6,6],[6,-5,-8],[6,10,4],[4,7,5]],[[8,-5,-3],[-3,-1,6],[2,-5,4],[1,-9,-7],[-7,8,-6],[2,-5,3],[1,2,-5],[-1,-10,-6]]], dtype = "int16")#candidate|2215|(12, 8, 3)|const|int16
var_2216 = relay.var("var_2216", dtype = "int16", shape = (12, 8, 3))#candidate|2216|(12, 8, 3)|var|int16
bop_2217 = relay.add(const_2215.astype('int16'), relay.reshape(var_2216.astype('int16'), relay.shape_of(const_2215))) # shape=(12, 8, 3)
output = bop_2217
output2 = bop_2217
func_2221 = relay.Function([var_2216,], output)
mod['func_2221'] = func_2221
mod = relay.transform.InferType()(mod)
var_2222 = relay.var("var_2222", dtype = "int16", shape = (12, 8, 3))#candidate|2222|(12, 8, 3)|var|int16
output = func_2221(var_2222)
func_2223 = relay.Function([var_2222], output)
mutated_mod['func_2223'] = func_2223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2504 = relay.var("var_2504", dtype = "float64", shape = (10, 7, 13))#candidate|2504|(10, 7, 13)|var|float64
uop_2505 = relay.log2(var_2504.astype('float64')) # shape=(10, 7, 13)
uop_2508 = relay.rsqrt(uop_2505.astype('float64')) # shape=(10, 7, 13)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_2516 = relay.var("var_2516", dtype = "float64", shape = (792,))#candidate|2516|(792,)|var|float64
call_2515 = relay.TupleGetItem(func_2096_call(relay.reshape(var_2516.astype('float64'), [12, 11, 6]), relay.reshape(var_2516.astype('float64'), [12, 11, 6]), ), 0)
call_2517 = relay.TupleGetItem(func_2099_call(relay.reshape(var_2516.astype('float64'), [12, 11, 6]), relay.reshape(var_2516.astype('float64'), [12, 11, 6]), ), 0)
func_943_call = mod.get_global_var('func_943')
func_948_call = mutated_mod.get_global_var('func_948')
var_2525 = relay.var("var_2525", dtype = "bool", shape = ())#candidate|2525|()|var|bool
const_2526 = relay.const([[True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True],[False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,False],[False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True],[True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True],[False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False],[False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True],[False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False],[False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True],[True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False],[True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,True],[False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True],[True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True]], dtype = "bool")#candidate|2526|(12, 60)|const|bool
const_2527 = relay.const([True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True], dtype = "bool")#candidate|2527|(78,)|const|bool
const_2528 = relay.const([[-3.430699],[2.447421],[8.422686],[7.450651],[-6.530624],[-2.386813],[-1.285162],[2.210415],[2.441676],[-0.774145],[-8.870469],[5.054564],[-3.124543],[-2.887201],[0.575242],[-2.702589],[0.214653],[7.015095],[2.811409],[-4.888157],[5.219116],[-0.803501],[-0.147940],[9.693502],[-5.558604],[-7.601673],[-9.462655],[2.845424],[8.060221],[0.036027],[2.978732],[-4.311986],[9.246802],[4.043031],[-3.289344],[-2.514549],[-0.770646],[1.864621],[-0.770578],[-7.962556],[4.302547],[-2.327106],[-1.361655],[-2.524350],[7.287371],[-6.880252],[-1.195462],[-6.879152],[-5.963975],[-6.315591],[2.432602],[1.114148],[6.848301],[-3.043409],[4.841578],[-0.300146],[5.794772],[-8.418191],[5.093180],[9.623579]], dtype = "float32")#candidate|2528|(60, 1)|const|float32
call_2524 = relay.TupleGetItem(func_943_call(relay.reshape(var_2525.astype('bool'), []), relay.reshape(const_2526.astype('bool'), [9, 5, 16]), relay.reshape(const_2527.astype('bool'), [3, 2, 13]), relay.reshape(const_2528.astype('float32'), [60,]), ), 0)
call_2529 = relay.TupleGetItem(func_948_call(relay.reshape(var_2525.astype('bool'), []), relay.reshape(const_2526.astype('bool'), [9, 5, 16]), relay.reshape(const_2527.astype('bool'), [3, 2, 13]), relay.reshape(const_2528.astype('float32'), [60,]), ), 0)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
var_2536 = relay.var("var_2536", dtype = "float64", shape = (640,))#candidate|2536|(640,)|var|float64
call_2535 = func_1638_call(relay.reshape(var_2536.astype('float64'), [8, 16, 5]))
call_2537 = func_1638_call(relay.reshape(var_2536.astype('float64'), [8, 16, 5]))
uop_2548 = relay.sinh(uop_2508.astype('float64')) # shape=(10, 7, 13)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_2551 = func_1638_call(relay.reshape(call_2535.astype('float64'), [8, 16, 5]))
call_2552 = func_1638_call(relay.reshape(call_2535.astype('float64'), [8, 16, 5]))
func_286_call = mod.get_global_var('func_286')
func_288_call = mutated_mod.get_global_var('func_288')
call_2557 = relay.TupleGetItem(func_286_call(relay.reshape(const_2528.astype('float32'), [1, 10, 6])), 3)
call_2558 = relay.TupleGetItem(func_288_call(relay.reshape(const_2528.astype('float32'), [1, 10, 6])), 3)
output = relay.Tuple([call_2515,var_2516,call_2524,var_2525,const_2526,const_2527,const_2528,call_2535,var_2536,uop_2548,call_2551,call_2557,])
output2 = relay.Tuple([call_2517,var_2516,call_2529,var_2525,const_2526,const_2527,const_2528,call_2537,var_2536,uop_2548,call_2552,call_2558,])
func_2561 = relay.Function([var_2504,var_2516,var_2525,var_2536,], output)
mod['func_2561'] = func_2561
mod = relay.transform.InferType()(mod)
mutated_mod['func_2561'] = func_2561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2561_call = mutated_mod.get_global_var('func_2561')
var_2563 = relay.var("var_2563", dtype = "float64", shape = (10, 7, 13))#candidate|2563|(10, 7, 13)|var|float64
var_2564 = relay.var("var_2564", dtype = "float64", shape = (792,))#candidate|2564|(792,)|var|float64
var_2565 = relay.var("var_2565", dtype = "bool", shape = ())#candidate|2565|()|var|bool
var_2566 = relay.var("var_2566", dtype = "float64", shape = (640,))#candidate|2566|(640,)|var|float64
call_2562 = func_2561_call(var_2563,var_2564,var_2565,var_2566,)
output = call_2562
func_2567 = relay.Function([var_2563,var_2564,var_2565,var_2566,], output)
mutated_mod['func_2567'] = func_2567
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2631 = relay.const([[[-9.586349,-8.499969,-4.314514],[-5.400457,-8.185531,-8.576427],[-3.973714,0.462520,5.698906],[-4.239023,5.163894,5.291140],[8.067781,0.043283,-9.632031],[0.666204,6.034646,-0.171061],[0.226188,4.891635,-7.638047],[-0.837263,-1.200468,9.275432],[-2.276923,5.957692,-4.407031],[5.481988,-4.528540,-5.095047],[-8.830892,7.098752,-5.672010],[6.294568,6.339551,6.828404],[-7.885946,-7.187730,-9.692991]],[[-3.476130,-4.072965,-3.617613],[-3.067032,-5.898716,-3.514751],[4.859413,1.977514,-5.335967],[-2.938467,5.281998,7.625000],[5.327163,-6.188368,-7.928302],[2.383977,9.189566,-4.497268],[-2.482379,-4.259285,7.138789],[-8.129245,9.388462,-7.240202],[9.198179,5.286894,-1.893994],[4.291562,-0.058011,3.076900],[-3.183686,2.072171,-6.211124],[4.620014,7.912190,-3.239838],[-6.258323,8.725201,-8.858797]],[[-6.513748,8.822306,-5.276756],[-5.810260,4.821384,-5.138684],[1.545687,-9.211234,-0.967218],[-3.856079,3.535085,1.315372],[4.251145,-7.355489,8.389120],[-2.070128,-1.308648,3.646945],[2.025370,2.977623,-0.071296],[9.871091,-6.514292,2.421778],[3.932738,9.244421,5.779439],[-8.126637,-7.349897,7.599233],[3.591648,0.360332,6.759434],[-2.139603,-7.379301,-6.851246],[5.173346,-0.423599,5.076258]],[[8.321023,-0.710020,0.129170],[4.456731,-1.792914,5.573696],[-1.585362,4.420007,-6.833474],[-8.509491,9.384631,-8.907628],[-4.000614,4.233798,-2.460586],[-0.673512,2.576943,-0.535817],[-3.626706,-0.826289,0.594209],[-4.070735,-1.363719,-4.597535],[4.569791,-7.264620,8.518565],[-2.185859,-6.833258,0.439278],[-1.289682,-6.744483,-6.535551],[-1.464839,9.736087,4.523573],[-7.738156,-2.875805,5.329349]],[[-9.116687,4.496558,7.726267],[4.941109,-2.579353,4.522107],[-3.042061,4.943676,-9.296491],[8.819142,-3.128722,9.077822],[-2.606881,-1.216389,2.587874],[2.159703,-0.436807,-3.091041],[5.325663,1.492137,9.185737],[7.197552,-3.040437,5.163001],[-8.198188,9.131534,9.643368],[-1.181907,1.779327,-5.912973],[-7.807776,-8.313899,-5.567596],[-0.582261,-8.178806,-8.307880],[2.644509,-4.485304,-8.780531]],[[-0.877517,-3.227521,-3.663908],[-5.110086,2.495927,1.684002],[-5.541091,2.432060,-9.738442],[4.783195,-5.038205,-7.056716],[-7.990130,-6.136705,1.837834],[-4.338055,-7.958315,1.504468],[-7.416355,5.417947,4.595504],[3.341691,7.839185,-8.807539],[-7.470018,-2.453942,-7.165446],[1.496304,-9.447595,5.856605],[4.643095,0.162045,-1.103283],[-5.999096,3.309635,8.027474],[-2.449883,-9.949751,8.732929]]], dtype = "float32")#candidate|2631|(6, 13, 3)|const|float32
uop_2632 = relay.log10(const_2631.astype('float32')) # shape=(6, 13, 3)
output = relay.Tuple([uop_2632,])
output2 = relay.Tuple([uop_2632,])
func_2634 = relay.Function([], output)
mod['func_2634'] = func_2634
mod = relay.transform.InferType()(mod)
output = func_2634()
func_2635 = relay.Function([], output)
mutated_mod['func_2635'] = func_2635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2658 = relay.TupleGetItem(func_2634_call(), 0)
call_2659 = relay.TupleGetItem(func_2635_call(), 0)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2667 = relay.TupleGetItem(func_2634_call(), 0)
call_2668 = relay.TupleGetItem(func_2635_call(), 0)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2671 = relay.TupleGetItem(func_2634_call(), 0)
call_2672 = relay.TupleGetItem(func_2635_call(), 0)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
const_2680 = relay.const([[9.911125],[9.433062],[-6.611394],[-2.217705],[-2.871037],[4.007548],[2.817649],[7.001883],[9.986123],[-9.202169],[8.398976],[1.061922],[-6.495456],[-7.706895],[1.472911],[0.561245],[-2.538871],[-1.431142],[-9.024790],[5.275868],[-3.159468],[2.989549],[-0.145519],[7.374673],[5.398120],[3.660109],[-2.696527],[-5.774360],[9.517438],[2.394419],[9.626372],[6.049050],[2.480127],[6.827272],[-2.727355],[5.336530],[7.715952],[-2.457007],[1.844942],[2.241953],[9.106386],[7.705636],[7.516178],[-7.873141],[-8.343518],[-9.470451],[-6.766060],[0.766077],[3.858473],[-6.678887],[-1.797920],[6.347040],[-0.240431],[9.620494],[6.532567],[-2.493776],[-4.888873],[0.346001],[5.588507],[-4.177487],[2.726605],[6.827054],[3.460916],[-4.028621],[9.065270],[-8.333460],[-7.124183],[5.257681],[-1.597990],[-0.100839],[-7.603949],[-9.511603],[7.517090],[-6.672238],[-2.668032],[-7.030047],[2.210925],[4.648436],[5.836533],[-7.446640],[-0.342805],[-3.070408],[-9.040090],[4.753816],[-1.954048],[-0.962256],[-6.404799],[6.806029],[-7.805587],[-1.432081],[6.531159],[1.695694],[0.679360],[4.639927],[-6.833461],[9.231997],[-1.636156],[0.284143],[-9.324205],[9.745126],[-9.221188],[8.008424],[0.012024],[-9.475547],[-2.599289],[-2.830015],[-8.455220],[6.439323],[-0.982055],[-0.845216],[-3.692361],[-6.931748],[1.312163],[5.676485],[-3.964909],[-0.408453],[-4.471080],[-3.389884],[2.502683],[-7.664453],[6.764314],[3.296757],[-7.122065],[3.804156],[8.574001],[9.871046],[-0.061553],[-4.039347],[2.100737],[6.297187],[8.028106],[-8.017634],[3.331912],[3.357202],[-9.614353],[-1.353306],[-1.936269],[8.804795],[-5.800196],[9.833139],[-0.251653],[7.651398],[-9.974692],[-0.550841],[0.226147],[-6.139608],[6.750462],[9.787007],[6.753907],[4.601224],[-4.393615],[2.784238],[5.762203],[4.530730],[-0.301568],[7.040934],[5.636562],[0.281810],[1.847026],[4.329299],[0.654110],[9.156371],[-4.550617],[2.277644],[9.291493],[0.752752],[-3.632883],[-9.936678],[8.991956],[-7.748702],[-4.601634],[-4.458098],[-6.001201],[-7.835340],[4.480629],[5.803703],[4.848316],[-1.311412],[8.030862],[9.777230],[-5.147062],[-4.842832],[2.062718],[4.592296],[-9.991114],[-8.517814],[1.080312],[-5.050594],[-4.791179],[6.073322],[-9.682939],[-5.330736],[8.089147],[0.964018],[-8.949078],[6.784178],[-0.115946],[-8.717603],[-7.089236],[-5.741707],[3.697968],[-8.561560],[-8.061689],[-1.942943],[4.364195],[-6.229180],[-6.469428],[9.627715],[3.636264],[-5.170260],[1.700377],[0.468419],[2.167924],[3.461962],[7.644970],[-5.795531],[5.071056],[8.975162],[0.809719],[-0.815294],[-2.781284],[-8.998904],[-9.627935],[-6.150219],[4.378076],[3.622843],[8.792128],[-6.278743],[-6.182371],[-5.064224],[4.195254],[-2.496001],[0.693540],[-0.047460],[-7.238222],[3.045572],[-7.149680],[4.466582],[9.417273],[-0.055448],[7.811689],[5.683052],[-4.632511],[6.258353],[-7.517684],[-8.269830],[5.254725],[-6.310236],[8.852937],[4.580422],[0.240351],[-7.553616],[6.287372],[-8.676100],[1.131822],[3.790870],[5.762546],[5.335555],[-8.693085],[-0.088615],[5.133895],[-8.463221],[-1.045231],[0.853292],[-6.008129],[4.536821],[-3.552774],[5.208818],[4.971398],[-1.729881],[-1.781000],[9.973725],[9.216965],[-1.685541],[-2.925146],[-0.747334],[5.302747],[-6.989558],[2.345636],[4.127039],[-5.552451],[4.061157],[-5.670431],[-5.823393],[3.801418],[1.486518],[-9.854125],[9.142353],[7.129961],[3.047050],[-0.985926],[7.582081],[1.645252],[9.096949],[-5.346846],[-1.373719],[4.822982],[0.881701],[-8.486129],[-2.465222],[-8.647807],[6.034638],[-6.652545],[-0.002236],[-4.102384],[4.087027],[3.912208],[5.244303],[-6.286130],[8.605077],[5.163750],[-0.170864],[-0.579271],[2.230720],[2.621744],[-9.968947],[9.714058],[8.468061],[-8.849827],[5.525627],[5.266453],[0.575633],[-3.591160],[2.111266],[-5.509372],[8.598987],[-7.165718],[-9.915850],[9.226080],[6.813526],[4.018722],[-5.532135],[-3.390269],[4.012008],[-3.548229],[1.752286],[4.334643],[-9.013265],[5.701535],[1.435518],[4.558678],[-0.944538],[-7.672457],[-4.761682],[-1.561828],[-0.187716],[6.671875],[-3.056707],[-9.683061],[-3.693060],[-3.278721],[6.612786],[-9.666933],[8.654472],[6.193443],[4.265328],[4.792907],[4.384659],[7.840193],[0.987752],[5.140957],[5.993088],[7.030488],[-3.709323],[0.274397],[-8.595508],[2.116156],[-0.421739],[2.736804],[7.978703],[-5.191155],[4.184079],[-4.440277],[6.862762],[-4.466114],[0.304623],[-9.452909],[-4.875439],[-2.088479],[-9.620575],[6.116555],[-9.576160],[-6.449832],[8.543410],[-5.233180],[-6.903361],[9.626884],[4.286278],[-6.178306],[7.476088],[7.922808],[6.797722],[-8.560868],[7.786583],[-2.631939],[-5.008954],[-6.918739],[-2.606467],[8.598468],[5.752084],[4.066937],[-1.908139],[7.406168],[-6.439810],[-2.419823],[0.715555],[2.696371],[-5.810330],[-1.303395],[-5.445663],[8.435204],[1.010979],[8.120090],[-3.407817],[8.389752],[6.846462],[9.780593],[4.329011],[0.405851],[7.944276],[-8.060758],[2.544359],[9.903439],[5.909268],[-5.737543],[-5.454538],[-4.965400],[0.744291],[-6.084298],[7.041088],[4.088603],[-7.464792],[-5.587727],[-3.850295],[5.380804],[-0.755267],[-1.772763],[9.083413],[7.784190],[8.206116],[3.892598],[3.842052],[2.802670],[6.327250],[-8.956024],[5.121278],[4.206685],[-7.059769],[-5.064736],[5.771500],[-6.360112],[9.554283],[-5.912591],[-4.753411],[9.953870],[5.885648],[-5.007626],[-0.872484],[4.192385],[5.917249],[-3.954701],[-9.246115],[-6.576468],[-8.782079],[1.776434],[-7.237612],[4.698448],[-3.913610],[1.264815],[1.354878],[-1.383885],[2.645964],[5.396640],[4.959753],[7.179091],[-0.285066],[5.830854],[-1.195807],[0.274299],[-5.603924],[-9.658529],[4.602976],[-7.436248],[8.642497],[-3.803684],[-8.049156],[0.035249],[3.830048],[-6.421900],[-8.584438],[3.281711],[7.890125],[1.642327],[-6.395119],[-8.550082],[5.300631],[-9.572812],[-0.566298],[-0.362913],[-5.170671],[-3.864587],[2.310386],[-1.786866],[-9.946336],[1.648912],[-5.190600],[5.337602],[-0.667044],[3.770951],[-6.314293],[0.904221],[7.400152],[-6.372744],[2.919550],[0.743494],[7.433563],[-4.704567],[-0.363996],[-1.953850],[0.746235],[1.637091],[-8.239702],[-0.462783],[9.955637],[-7.572807],[1.123022],[3.787427],[5.372163],[4.922100],[-4.421917],[-9.935976],[-0.387495],[-5.753475],[8.163190],[-9.739408],[1.546306],[-7.409601],[-8.133752],[-1.108744],[6.035363],[2.223297],[-1.858677],[5.997076],[-8.500682],[-2.095743],[1.917974],[3.972425],[-5.954743],[-4.314362],[-0.830851],[-3.983753],[-8.979070],[8.587703],[7.478851],[-9.758347],[-9.392986],[-6.903754],[-7.362237],[-6.501937],[-7.598289],[9.249867],[9.531365],[9.013956],[7.779200],[6.887554],[-2.074766],[8.566499],[2.496040],[-2.816030],[-9.252034],[2.292089],[-2.113167],[6.249070],[5.815866],[-1.294227],[1.337474],[5.385627],[-6.358105],[-7.760976],[8.883794],[1.836756],[8.891415],[-9.316234],[9.440846],[-2.274657],[-7.295169],[2.961293],[9.203622],[4.253130],[-1.926539],[-3.059164],[-7.825501],[7.573752],[-1.379297],[-0.576149],[8.331018],[-9.494627],[-8.677360],[0.927304],[5.668565],[3.302723],[8.541598],[-5.437037],[2.863094],[2.024680],[8.158390],[6.509282],[-5.279146],[-7.435861],[-2.015498],[-2.298438],[-2.430243],[5.596330],[2.744306],[0.614518],[-9.096756],[-6.745030],[2.537891],[-9.296227],[3.180690],[-8.047582],[9.963588],[-2.838537],[-5.196436],[-6.414915],[7.235362],[2.582205],[3.500603],[-8.890581],[8.749057],[4.400740],[-6.513218],[-4.693124],[2.419828],[-1.341948],[-7.299177],[9.558660],[2.023673],[5.675662],[4.821543],[-3.118814],[-2.824782],[-1.251322],[-0.364326],[3.376592],[-1.903679],[7.748900],[-9.672652],[-3.262286],[-9.880331],[-8.604985],[-3.820912],[-2.645546],[7.679825],[7.775157],[-0.377271],[1.579897],[9.311697],[-9.651396],[-1.204946],[-3.996932],[6.010519],[6.427673],[8.182232],[2.079164],[5.085812],[-3.232019],[5.751776],[3.063871],[4.213349],[9.562827],[-9.099921],[-9.359191],[4.451824],[-7.309009],[-6.565670],[-2.135074],[-8.329515],[-8.601329],[-2.512033],[-4.764337],[1.119927],[1.696422],[0.362769],[-4.760903],[8.452850],[-6.925859],[-8.929959],[-3.144040],[-6.235837],[-4.742347],[0.293703],[-0.520041],[-8.760667],[1.227284],[-7.102993],[-6.407590],[-0.835433],[-6.975125],[-5.142903],[-9.488275],[4.418829],[-0.330998],[-2.257872],[6.621334],[7.538127],[8.079051],[-6.676931],[-4.478251],[-3.952736],[4.375095],[2.010162],[6.197088],[2.037218],[-6.851329],[-3.715244],[-3.101329],[9.747183],[3.100635],[7.164293],[-1.424026],[-5.373457],[0.419515],[3.844323],[-3.912531],[3.262852],[-4.171595],[7.365810],[-4.004494],[-3.531345],[6.374084],[-9.218507],[-0.871558],[-9.101987],[0.282377],[-2.496263],[-9.269789],[2.713652],[6.247360],[8.738519],[2.763060],[-8.741142],[-5.480338],[7.850593],[-0.018737],[1.093135],[-2.339743],[4.250842],[1.322776],[-7.450991],[7.359547],[2.968721],[-8.600136],[5.182624],[4.316262],[2.471961],[5.167599],[0.356522],[7.289082],[9.570746],[-5.477197],[5.426033],[-1.231935],[9.872327],[-3.391976],[-0.817750],[-4.952725],[8.972136],[-2.811046],[-8.958138],[-7.851679],[-5.909133],[9.927314],[6.014689],[-8.790934],[6.295580],[1.444941],[8.106151],[9.841934],[9.339029],[3.898472],[-7.363653],[4.790176],[-5.829348],[-1.892328],[-7.443823],[-2.924232],[5.814655],[-4.122135],[-2.166690],[2.129969],[5.015319],[3.947366],[-5.665132],[6.380168],[-4.503628],[7.482795],[-7.601000],[3.285803],[-6.006738],[9.125402],[-2.418570],[-7.242049],[-0.432887],[-8.703544],[5.028382],[-1.192787],[-0.116882],[-0.138003],[-5.113457],[-5.778943],[-4.165065],[7.929511],[0.048943],[1.896007],[8.393621],[-1.241966],[-6.494213],[7.080019],[0.680575],[2.403217],[3.832614],[1.279589],[5.682358],[-3.969307],[7.564241],[5.199370],[-1.225890],[-2.092361],[0.069720],[5.123432],[-1.721043],[-8.313747],[-6.990481],[2.089824],[1.236786],[0.121667],[-5.519745],[-6.198999],[-2.530472],[-2.339630],[8.624731],[6.156585],[-7.370240],[2.353727],[8.780815],[-7.064874],[-0.812855],[-8.987046],[-5.910156],[-9.661298],[-4.487585],[-6.825873],[-6.396456],[4.130030],[5.622234],[-1.800066],[7.616971],[-9.114848],[8.328260],[3.331130],[3.060660],[6.260946],[-7.349148],[-8.985085],[8.185309],[-8.952839],[-5.947883],[5.353972],[7.321814],[1.902017],[-6.410759],[6.970277],[0.371314],[3.153744],[-8.413530],[1.526122],[5.762421],[2.186985],[-8.928095],[-6.345329],[9.058069],[-1.527042],[-7.054638],[-7.225916],[-2.451719],[-9.071890],[-1.644664],[-0.784608],[-2.602209],[-4.101062],[-7.337009],[-4.771823],[-5.910325],[7.544508],[5.806500],[0.847231],[-4.868112],[5.056048],[0.506639],[-0.395028],[9.836313],[-3.853106],[-5.952975],[-7.630910],[-1.744921],[6.983415],[-1.998226],[-9.370252],[-0.616103],[-7.812997],[-9.151747],[-5.174220],[2.887650],[5.310800],[9.682682],[-6.992015],[-4.210011],[-1.943492],[8.743538],[9.142023],[-5.468559],[-9.494711],[-7.174328],[4.610205],[-6.470860],[3.187976],[8.968194],[9.638077],[1.955261],[5.710543],[-7.980624],[3.112817],[-2.724127],[6.721695],[-3.794266],[-8.711404],[-4.878355],[-2.169514],[5.829492],[0.507803],[3.214113],[-5.575920],[-1.770477],[4.813799],[-0.323738],[-0.008191],[-2.964775],[-9.330133],[-2.315018],[-5.132844],[-6.116115],[5.274093],[7.921612],[-3.437679],[8.816916],[-5.614123],[-7.968625],[-3.376256],[-3.333368],[-7.610958],[-7.608261],[2.264620],[-9.554884],[-0.018962],[9.128989],[-8.322252],[1.679559],[-3.186591],[6.360340],[2.554990],[-1.929412],[7.718116],[9.527110],[5.866083],[7.083252],[-1.556704],[7.825464],[-0.078609],[0.673840],[-8.232209],[1.545076],[3.033066],[-1.486472],[8.211433],[-7.318718],[-9.977528],[-2.744214],[3.737162],[1.595861],[4.587260],[-8.823679],[1.646658],[3.538099],[6.853088],[-9.448061],[9.842297],[-8.087283],[-9.052659],[9.957113],[-0.481186],[-0.149388],[-6.667371],[-7.813355],[-7.117027],[4.038981],[-6.760275],[-7.608168],[7.216903],[0.090711],[-2.630493],[-4.424490],[3.289440],[-3.940737],[4.830618],[7.664391],[5.636345],[-2.910168],[-1.735119],[9.358941],[6.253520],[-3.468233],[-8.295490],[0.082267],[-8.601562],[6.759414],[-9.320704],[5.519822],[-6.786499],[3.138822],[8.662567],[-3.075691],[-0.352502],[-5.569648],[0.120698],[-7.318666],[-6.887686],[3.422433],[6.337510],[-8.861733],[3.318702],[-2.449495],[2.313388],[-4.032118],[-1.833257],[4.330552],[-5.226521],[-1.162056],[1.494723],[-0.596019],[3.405700],[4.745678],[0.092109],[-3.217189],[3.648442],[2.445403],[-1.209600],[-6.582617],[6.385069],[-0.283305],[-1.727333],[6.055484],[4.781188],[8.322792],[-5.412836],[5.099490],[-2.347634],[-6.239263],[9.299558],[-4.644388],[3.300146],[-0.762345],[-9.389743],[-4.025107],[2.230948],[3.397416],[-1.597331],[-0.781045],[-3.522976],[-1.173676],[4.197697],[-9.828071],[-4.500527],[-4.310733],[-0.348588],[-4.415839],[-2.293865],[6.596515],[5.933027],[-9.230671],[-0.060989],[-9.857432],[-3.487706],[-9.072709],[9.158771],[4.960883],[3.837314],[-1.723071],[-6.080282],[4.706625],[-7.388375],[5.446828],[-5.013286],[6.026019],[-8.912191],[-6.251120],[6.349423],[9.937682],[-5.235815],[-6.052395],[9.385452],[-2.456135],[-2.235541],[-6.347835],[7.010382],[7.332495],[-6.620153],[-2.423135],[3.851967],[-9.278193],[6.343433],[1.888474],[-5.477718],[-6.689522],[-7.402284],[-2.720865],[3.167092],[-0.327463],[1.614751],[-8.822039],[3.577196],[-5.570451],[-7.763764],[-4.665613],[-0.240573],[4.988033],[-6.449952],[-9.422086],[-2.214168],[0.505607],[-6.254552],[-6.600742],[-5.452711],[0.998126],[2.130784],[8.110736],[5.223479],[-4.676098],[-0.437907],[3.913553],[-3.478942],[6.570224],[7.453649],[3.115979],[-7.824853],[7.681016],[-1.269529],[-5.594779],[-5.842224],[-2.352768],[-1.383489],[-8.096143],[-7.669863],[6.686391],[-7.713478],[9.499775],[-0.434150],[8.872944],[8.113547],[2.500371],[7.833610],[-7.239488],[-9.705036],[-8.125477],[-9.490009],[-9.021374],[-8.601096],[-5.868074],[-2.330025],[-0.027623],[-0.783327],[2.153903],[-4.262233],[3.780595],[5.742603],[6.772431],[7.715802],[-4.743709],[0.333122],[-3.445812],[6.341902],[-2.980829],[-0.853221],[-0.564805],[-9.544282],[1.364480],[8.296297],[4.974450],[4.908305],[9.482150],[3.462282],[3.186191],[-3.435565],[-6.349184],[-6.214897],[3.235208],[-3.284764],[-0.688376],[-6.969451],[3.728777],[6.708525],[0.676534],[9.562374],[-6.758313],[5.547479],[1.963148],[-8.901382],[5.309994],[-4.229019],[-7.566712],[1.217150],[-5.708181],[7.541979],[-9.197254],[-9.406600],[1.518037],[-4.947236],[-8.606200],[4.495104],[-3.820867],[-1.464034],[-5.748068],[-0.629331],[9.285845],[5.641664],[1.434392],[6.668754],[-3.913433],[-7.805304],[-7.535070],[-7.737069],[-3.552977],[-3.469535],[-4.352111],[5.182102],[1.092132],[-4.071235],[4.952035],[6.913750],[2.017369],[-7.545165],[9.243047],[8.994578],[9.999601],[-4.956442],[-3.014110],[4.670788],[7.076953],[9.486176],[6.642123],[-9.119126],[-9.525163],[-8.376007],[1.815022],[-9.785030],[6.564516],[-5.917513],[-3.330764],[-2.919985],[6.409895],[0.009890],[-2.258703],[6.648919],[-2.316996],[6.624435],[9.763286],[-4.206903],[7.529726],[2.967412],[4.088970],[8.850528],[0.406554],[6.336828],[8.410079],[0.696332],[7.368967],[-6.788617],[4.525119],[6.406771],[-2.956117],[8.116499],[9.356752],[8.490050],[7.954780],[2.477153],[-8.295141],[9.766137],[-6.009417],[5.185877],[-2.424775],[0.385783],[9.349088],[3.177624],[4.791103],[3.101945],[-4.439536],[0.529390],[-9.020521],[-9.342216],[-9.582892],[-4.574373],[-0.733401],[-9.801730],[4.603016],[7.238209],[-0.511734],[9.681069],[-2.594459],[-9.422911],[7.707469],[-2.174880],[-0.556241],[3.908383],[-8.339402],[-0.084137],[-8.418497],[-1.498404],[-2.646240],[5.076478],[-7.773750],[-5.970896],[7.271598],[4.919345],[-8.544621],[6.953191],[8.407211],[8.649669],[-4.864078],[-1.796951],[-6.128505],[0.791263],[-6.790598],[-3.743084],[-0.882890],[-8.609680],[-0.585790],[9.465303],[-2.228086],[6.444105],[-6.839479],[-4.342406],[-5.331563],[7.032901],[7.932110],[-4.501750],[4.743593],[-2.256547],[5.810641],[-3.000838],[-0.404826],[-9.138246],[8.929462],[7.775548],[-4.478471],[4.320992],[3.300135],[-5.153992],[1.528680],[-8.316195],[-1.696701],[6.478289],[-0.824470],[4.188813],[-4.141004],[1.266385],[-4.358431],[9.843010],[1.446085],[5.805759],[6.643802],[-8.892207],[-3.641531],[0.131073],[6.116300],[-7.852570],[-2.678367],[2.376887],[1.452198],[-0.347105],[-5.380731],[5.096433],[6.651974],[7.705061],[7.984391],[5.750599],[7.316048],[2.976691],[-4.303493],[6.588053],[7.716928],[4.327527],[8.395718],[-7.677612],[2.519925],[-5.995259],[0.720925],[-4.685925],[-6.811873],[4.394160],[-4.414153],[2.907615],[8.543520],[-7.782516],[7.124538],[7.848823],[0.799125],[-6.737108],[7.493058],[-9.609197],[3.762745],[-9.339555],[-1.159642],[7.367991],[-8.772627],[-4.658684],[8.204113],[-5.105491],[-9.426300],[4.392542],[1.787398],[-4.173514],[8.176312],[8.329409],[-2.430292],[-5.247436],[2.155047],[-7.274421],[3.491869],[-2.253690],[-1.388024],[8.459010],[-4.562753],[-6.583834],[-0.035260],[-1.899910],[-7.007319],[-0.529572],[8.418338],[-9.015158],[8.130776],[1.606189],[-6.184691],[-1.092366],[-6.323935],[6.421876],[4.810491],[-2.660204],[3.482348],[6.720693],[-3.069200],[7.977370],[-7.292542],[6.553693],[2.025826],[0.013791],[-8.783092],[1.878245],[-5.144736],[-8.667322],[0.021804],[-9.468701],[-2.227903],[-9.105864],[5.813202],[4.188531],[-2.846828],[0.411632],[7.670594],[-3.457340],[-3.949966],[2.931877],[1.114319],[9.518971],[0.783185],[-7.317586],[-9.965235],[0.052733],[2.380408],[-4.227236],[4.337388],[7.831386],[-3.799174],[1.600594],[5.252630],[-4.697589],[5.908609],[-2.995007],[1.423507],[0.611259],[4.624240],[9.241814],[-2.965261],[4.590718],[-0.154557],[-3.338312],[8.956808],[5.459207],[-1.233689],[9.682330],[2.273252],[-1.908844],[-2.430467],[1.035718],[-9.504059],[-8.477038],[-9.420704],[4.456957],[-5.249407],[-5.693740],[-1.470964],[5.581579],[-2.048838],[2.984175],[2.342861],[-2.943847],[7.724540],[9.710553],[1.334720],[0.505169],[4.253771],[-4.613382],[0.825578],[-9.224498],[-7.404184],[-7.471468],[-9.484970],[-3.234521],[2.014807],[7.562253],[8.737268],[4.152093],[-7.961626],[-2.903853],[8.894803],[-0.033751],[6.627369],[-3.706547],[-6.395041],[-7.260813],[2.439767],[-7.444247],[-6.523851],[4.145643],[-4.139319],[-3.975998],[-0.731438],[-0.397144],[0.945685],[8.455172],[-1.849689],[6.350425],[-3.678267],[-9.772369],[4.962824],[2.134099],[-9.042084],[-1.607268],[-3.226617]], dtype = "float64")#candidate|2680|(1568, 1)|const|float64
call_2679 = relay.TupleGetItem(func_529_call(relay.reshape(const_2680.astype('float64'), [16, 7, 14]), relay.reshape(const_2680.astype('float64'), [16, 7, 14]), ), 2)
call_2681 = relay.TupleGetItem(func_532_call(relay.reshape(const_2680.astype('float64'), [16, 7, 14]), relay.reshape(const_2680.astype('float64'), [16, 7, 14]), ), 2)
uop_2687 = relay.tan(call_2667.astype('float32')) # shape=(6, 13, 3)
uop_2689 = relay.tan(call_2668.astype('float32')) # shape=(6, 13, 3)
output = relay.Tuple([call_2658,call_2671,call_2679,const_2680,uop_2687,])
output2 = relay.Tuple([call_2659,call_2672,call_2681,const_2680,uop_2689,])
func_2695 = relay.Function([], output)
mod['func_2695'] = func_2695
mod = relay.transform.InferType()(mod)
mutated_mod['func_2695'] = func_2695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mutated_mod.get_global_var('func_2695')
call_2696 = func_2695_call()
output = call_2696
func_2697 = relay.Function([], output)
mutated_mod['func_2697'] = func_2697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2799 = relay.TupleGetItem(func_2634_call(), 0)
call_2800 = relay.TupleGetItem(func_2635_call(), 0)
var_2804 = relay.var("var_2804", dtype = "float32", shape = (6, 13, 3))#candidate|2804|(6, 13, 3)|var|float32
bop_2805 = relay.bitwise_xor(call_2799.astype('int32'), relay.reshape(var_2804.astype('int32'), relay.shape_of(call_2799))) # shape=(6, 13, 3)
bop_2808 = relay.bitwise_xor(call_2800.astype('int32'), relay.reshape(var_2804.astype('int32'), relay.shape_of(call_2800))) # shape=(6, 13, 3)
output = bop_2805
output2 = bop_2808
func_2809 = relay.Function([var_2804,], output)
mod['func_2809'] = func_2809
mod = relay.transform.InferType()(mod)
mutated_mod['func_2809'] = func_2809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2810 = relay.var("var_2810", dtype = "float32", shape = (6, 13, 3))#candidate|2810|(6, 13, 3)|var|float32
func_2809_call = mutated_mod.get_global_var('func_2809')
call_2811 = func_2809_call(var_2810)
output = call_2811
func_2812 = relay.Function([var_2810], output)
mutated_mod['func_2812'] = func_2812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_2831 = relay.TupleGetItem(func_2695_call(), 0)
call_2832 = relay.TupleGetItem(func_2697_call(), 0)
output = relay.Tuple([call_2831,])
output2 = relay.Tuple([call_2832,])
func_2841 = relay.Function([], output)
mod['func_2841'] = func_2841
mod = relay.transform.InferType()(mod)
output = func_2841()
func_2842 = relay.Function([], output)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2841_call = mod.get_global_var('func_2841')
func_2842_call = mutated_mod.get_global_var('func_2842')
call_2869 = relay.TupleGetItem(func_2841_call(), 0)
call_2870 = relay.TupleGetItem(func_2842_call(), 0)
output = call_2869
output2 = call_2870
func_2873 = relay.Function([], output)
mod['func_2873'] = func_2873
mod = relay.transform.InferType()(mod)
output = func_2873()
func_2874 = relay.Function([], output)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2890 = relay.TupleGetItem(func_2634_call(), 0)
call_2891 = relay.TupleGetItem(func_2635_call(), 0)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
const_2913 = relay.const([-7.711815,-0.026358,-5.451033,3.896260,2.130369,-4.350564,-3.061516,-0.006640,3.017562,-5.551530,-2.690334,-5.949495,7.835322,-7.071888,8.316370,4.672349,-3.420396,4.588841,8.364521,7.752005,-0.098257,0.948453,-6.690737,4.431491,5.090239,7.056754,0.376631,-2.289366,-7.496059,-7.839826,-6.312440,-9.293885,4.119929,3.208661,-9.460001,2.560972,9.415834,0.291541,-3.113206,5.055417,-0.034766,5.718857,-7.248531,-8.577696,0.857618,3.206203,-7.357836,-1.957000,0.325594,2.667312,-3.017774,-8.219048,0.743471,-3.752169,-6.082296,7.594919,-4.627254,-7.507279,-8.659091,2.707770,7.648333,3.368662,-4.951667,5.288215,-3.128396,3.483226,5.787210,-9.355777,8.080370,4.869247,-6.201050,-3.668766,9.526151,8.503678,8.179588,8.887226,7.263102,4.939347,-7.388536,4.588941,8.915632,-7.566880,-7.224966,4.654207,8.589944,0.226731,4.799011,-4.143222,6.178204,4.571521,-7.471417,9.153224,7.601855,-7.201720,-2.677894,-8.648683,-7.419570,-8.274910,1.101930,0.976165,-2.727025,-7.964446,-7.761255,4.019867,7.841805,4.652789,6.589803,2.900424,1.098131,1.000111,-1.982115,6.869844,-7.099915,9.530311,4.963696,-2.676876,-8.927750,7.880492,2.117363,-7.374310,9.270694,-6.142368,-1.326731,-1.782158,8.281663,2.550556,4.148987,6.997377,5.155986,-2.070476,5.036838,-8.006211,1.338083,-5.675989,-6.360105,3.630476,-7.664714,7.722337,-8.567068,-1.382066,9.833858,6.195476,-9.303573,-0.840161,9.347007,-7.350498,0.936954,-0.215207,6.653887,7.999668,4.377424,2.454463,-0.425123,0.277572,-5.203546,6.149158,9.301171,1.511877,6.750997,0.630905,-2.865682,1.882104,8.858592,-7.289168,-9.251365,-8.128608,6.757438,-8.480463,-7.353823,-6.156136,9.634819,-6.262830,-9.369368,4.745667,2.671642,-4.829017,-5.677603,5.238111,-9.083455,-8.001315,7.535779,-6.587359,4.005994,8.397996,-6.534160,-6.882953,1.368644,8.821099,-6.267552,9.710980,2.576411,9.822112,5.272995,9.525896,1.184614,-1.311183,8.294320,2.604413,7.406258,-6.305636,-3.370205,-8.440244,-5.983464,3.904304,-8.679756,-1.495280,-1.788942,4.959679,9.571297,0.991602,2.881175,1.860833,3.763493,7.995165,4.492830,-0.214755,-9.241660,7.883981,-5.848905,-5.587723,4.017419,6.799022,-6.576844,9.167650,3.525537,-0.712050,5.368984,8.158818,-0.712939,0.886209,1.770492,3.915420,-2.230291,-3.753315,7.009618,5.891988,9.142521,3.383464,-1.680474,3.183926,9.615451,-1.347383,-9.551908,0.943639,-6.828996,-7.698468,8.382422,3.634897,9.946954,-2.544877,-2.388791,7.528606,-7.164638,-9.246223,-6.533420,0.026452,3.558121,-0.018722,2.279482,0.916622,-4.032197,6.509195,7.249403,-5.963538,-3.504565,-6.197619,-5.014305,0.832732,-4.974649,9.873088,6.418443,-8.836660,-1.772767,-7.636922,6.489749,2.282757,-2.640611,7.789077,-9.823340,-3.968238,-0.648638,6.399869,-5.942734,-2.370139,-2.588098,1.320839,-8.551553,4.625123,-2.871254,-6.271423,3.630502,-4.438289,1.795346,2.708675,2.663073,-2.318781,-0.032167,-1.537412,-8.520020,2.303474,3.528379,7.904391,3.572451,-8.122493,-9.213940,9.128886,1.346427,7.872357,6.335604,-1.083531,-7.001367,-5.536076,-3.728581,-8.265736,5.738859,-2.312419,-6.682432,-8.987987,-6.065989,-1.311509,-1.535298,-3.064941,1.169215,-0.439577,-5.016105,9.416238,8.945680,-2.286872,-9.177771,0.958344,-3.780355,-9.192202,5.330414,-7.449231,-7.699766,-4.243983,-1.168884,-5.502685,3.077689,-1.571700,9.649691,-4.736669,-0.731083,-3.399302,4.426556,-5.855970,4.767856,1.499814,-2.059568,-6.392877,-9.766391,7.842991,9.735925,-8.790556,-9.712648,8.413536,-5.496292,-7.345003,-9.336092,8.350196,-7.951509,8.582648,7.037190,-3.803446,0.968603,-2.671327,-3.704787,-2.577400,6.212211,-3.544851,-1.892323,4.686086,0.072672,2.365791,-9.473870,-0.156775,-3.183833,0.715142,-5.838176,4.058328,-4.025635,7.917635,3.397078,7.892621,-4.994758,-9.582070,4.313596,6.067065,-0.882633,-2.958610,2.238510,7.338182,-3.613613,4.006890,8.442640,-7.365371,-4.906202,-6.033384,-7.525728,-9.158576,7.238299,8.040234,-5.883694,3.156832,6.953062,-7.841380,-1.386550,-2.114957,-4.025191,1.027040,0.119620,8.348794,4.191855,8.476357,1.286459,-7.734635,4.374767,5.342948,-4.458459,-0.553431,-7.720714,1.638531,-1.972777,-8.878827,1.215402,-3.243251,7.810849,8.996686,4.839772,-9.161503,-0.049758,6.200567,-9.737395,-5.671580,-0.767924,-1.567758,1.599748,5.543116,-5.089415,-5.032770,-4.845546,-8.156837,-3.770291,-0.985786,-9.780912,4.292790,-0.763784,-3.380439,4.625665,1.387701,0.011677,9.116902,9.904263,6.010343,-5.880233,-5.371328,-5.111068,-3.283399,-0.820279,2.960608,-3.913091,3.683780,9.395106,1.059595,-1.153818,-1.696319,9.978849,-7.040908,3.926042,-5.219413,1.673794,-2.243766,3.725677,7.366958,1.471140,-4.287143,1.200923,-0.463300,-9.204662,7.474479,0.899137,-8.534547,7.119973,7.627470,-5.121615,-5.941805,-0.459289,-3.833228,-5.441208,3.468302,-8.424101,2.612177,-7.445193,-5.183870,6.233647,1.686041,-4.637669,5.004245,8.736649,-4.433249,-6.053192,6.537887,5.298037,-5.034478,5.828013,8.383248,-5.777084,2.180147,6.223875,5.627846,-0.009538,9.860186,-9.581605,-8.533617,3.900559,-0.779867,-5.210255,8.566220,7.592716,3.692316,3.006404,-6.787992,8.963379,-3.228933,4.522058,8.350194,6.550882,-6.055441,-5.902701,4.796131,1.301945,7.734524,3.186752,5.457151,6.775810,-7.911844,-7.238787,-2.452323,-9.112627,-4.378986,-1.835684,1.728473,-5.780552,6.341110,3.425797,-8.459909,-8.322087,-5.643997,-5.231047,-5.477829,-6.481163,2.082502,0.675023,-9.109420,-3.034854,-5.105960,-5.376999,-2.172641,7.218968,1.511796,-7.561928,-5.432463,-7.770215,0.571996,-7.146614,-2.556536,-9.525348,9.732559,0.775843,5.084135,-3.854368,-4.054531,-4.771790,9.747353,-4.627101,-2.211948,5.976349,-2.152353,4.313692,-9.329324,7.200733,-2.649097,-7.133949,-9.256103,3.872760,-7.902715,8.215746,-9.851151,0.086195,7.391363,9.811314,0.353712,-9.779785,-0.315978,1.702488,-1.868374,1.856178,-5.142944,-8.300601,0.603116,-6.076927,-9.779348,-8.061792,2.884114,-6.748859,3.420407,-6.028182,-8.527328,-9.347643,-7.231752,-9.259938,3.072011,0.639328,8.830171,-8.377176,0.446525,-6.532544,-7.114675,2.143294,2.223294,-3.368010,5.987057,1.536743,-7.740580,-3.771378,3.138439,9.420102,-6.190528,-2.668831,-8.075536,-4.067297,1.266919,2.900825,4.523422,-1.027806,9.040409,0.392825,4.709809,-2.494065,5.720430], dtype = "float64")#candidate|2913|(640,)|const|float64
call_2912 = func_1638_call(relay.reshape(const_2913.astype('float64'), [8, 16, 5]))
call_2914 = func_1638_call(relay.reshape(const_2913.astype('float64'), [8, 16, 5]))
var_2916 = relay.var("var_2916", dtype = "float32", shape = (6, 13, 3))#candidate|2916|(6, 13, 3)|var|float32
bop_2917 = relay.floor_mod(call_2890.astype('float64'), relay.reshape(var_2916.astype('float64'), relay.shape_of(call_2890))) # shape=(6, 13, 3)
bop_2920 = relay.floor_mod(call_2891.astype('float64'), relay.reshape(var_2916.astype('float64'), relay.shape_of(call_2891))) # shape=(6, 13, 3)
uop_2951 = relay.log(call_2890.astype('float64')) # shape=(6, 13, 3)
uop_2953 = relay.log(call_2891.astype('float64')) # shape=(6, 13, 3)
bop_2959 = relay.bitwise_and(uop_2951.astype('int8'), relay.reshape(var_2916.astype('int8'), relay.shape_of(uop_2951))) # shape=(6, 13, 3)
bop_2962 = relay.bitwise_and(uop_2953.astype('int8'), relay.reshape(var_2916.astype('int8'), relay.shape_of(uop_2953))) # shape=(6, 13, 3)
output = relay.Tuple([call_2912,const_2913,bop_2917,bop_2959,])
output2 = relay.Tuple([call_2914,const_2913,bop_2920,bop_2962,])
func_2967 = relay.Function([var_2916,], output)
mod['func_2967'] = func_2967
mod = relay.transform.InferType()(mod)
var_2968 = relay.var("var_2968", dtype = "float32", shape = (6, 13, 3))#candidate|2968|(6, 13, 3)|var|float32
output = func_2967(var_2968)
func_2969 = relay.Function([var_2968], output)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2971 = relay.TupleGetItem(func_2634_call(), 0)
call_2972 = relay.TupleGetItem(func_2635_call(), 0)
uop_2977 = relay.acos(call_2971.astype('float32')) # shape=(6, 13, 3)
uop_2979 = relay.acos(call_2972.astype('float32')) # shape=(6, 13, 3)
output = uop_2977
output2 = uop_2979
func_2981 = relay.Function([], output)
mod['func_2981'] = func_2981
mod = relay.transform.InferType()(mod)
output = func_2981()
func_2982 = relay.Function([], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2873_call = mod.get_global_var('func_2873')
func_2874_call = mutated_mod.get_global_var('func_2874')
call_3010 = func_2873_call()
call_3011 = func_2873_call()
output = call_3010
output2 = call_3011
func_3012 = relay.Function([], output)
mod['func_3012'] = func_3012
mod = relay.transform.InferType()(mod)
output = func_3012()
func_3013 = relay.Function([], output)
mutated_mod['func_3013'] = func_3013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3053 = relay.var("var_3053", dtype = "float64", shape = (14, 12))#candidate|3053|(14, 12)|var|float64
uop_3054 = relay.acosh(var_3053.astype('float64')) # shape=(14, 12)
func_1317_call = mod.get_global_var('func_1317')
func_1323_call = mutated_mod.get_global_var('func_1323')
var_3083 = relay.var("var_3083", dtype = "bool", shape = ())#candidate|3083|()|var|bool
const_3084 = relay.const([[True,False,False],[False,False,True],[True,True,False],[True,True,True],[True,True,True],[True,False,True],[True,False,True],[True,True,True],[True,True,False],[False,True,False],[True,True,False],[True,True,True],[False,False,False],[False,True,True],[True,False,False],[False,True,False],[True,False,False],[False,False,True],[True,True,True],[False,False,False],[False,True,True],[False,False,False],[True,False,False],[True,False,True],[False,True,False],[False,True,True],[False,True,False],[True,True,False],[False,True,True],[True,True,True],[False,True,False],[True,True,False],[False,True,False],[False,False,False],[False,True,True],[False,True,True],[True,False,False],[True,True,True],[True,True,False],[True,True,True],[False,True,False],[True,False,False],[True,False,True],[False,True,True],[False,True,False],[False,True,False],[True,False,False],[True,False,True],[False,True,False],[True,False,True],[False,True,False],[True,False,True],[True,True,True],[False,True,False],[True,False,True],[False,False,False],[False,True,True],[False,False,True],[True,False,False],[True,True,True],[True,False,False],[True,True,False],[False,False,True],[False,False,True],[False,True,True],[False,True,True],[False,True,False],[True,True,False],[False,False,False],[True,False,False],[False,True,False],[False,False,True],[False,True,True],[True,True,True],[False,True,False],[True,True,False],[False,False,True],[False,True,True],[False,False,True],[True,True,True],[True,True,False],[True,True,True],[False,True,False],[True,False,True],[False,True,False],[False,False,False],[False,True,False],[False,True,True],[True,False,True],[False,True,False],[False,False,True],[False,True,False],[True,True,True],[True,False,False],[False,False,True],[True,False,True],[True,True,False],[True,True,False],[False,False,False],[False,False,True],[False,False,True],[False,True,False],[False,False,True],[False,False,True],[False,False,True],[True,True,True],[False,False,False],[True,True,True],[True,False,True],[True,False,False],[False,False,False],[True,False,True],[True,True,False],[False,True,False],[True,True,False],[False,False,False],[True,False,False],[False,True,False],[True,False,False],[True,True,False],[True,True,False],[True,False,True],[True,True,False],[True,True,True],[True,False,False],[True,False,False],[True,False,False],[False,False,False],[False,True,False],[False,False,False],[False,True,True],[False,True,False],[True,False,True],[True,True,True],[False,False,True],[False,True,False],[False,True,False],[True,True,False],[True,True,True],[True,True,False],[True,True,True],[True,True,False],[True,True,False],[False,False,True],[True,True,True],[True,True,True],[True,False,False],[True,True,True],[True,False,False],[False,True,True],[False,True,False],[False,False,True],[False,True,False],[True,True,True],[False,True,False],[False,False,True],[True,True,True],[True,False,False],[False,True,False],[False,True,False],[True,False,True],[True,False,True],[False,False,False],[True,True,True],[False,False,False],[False,False,False],[True,True,True],[True,False,True],[True,False,False],[False,False,False],[False,True,False],[True,False,False],[False,False,False],[False,True,False],[True,True,False],[False,True,False],[False,True,True],[False,False,True],[True,True,True],[False,True,True],[False,True,False],[False,False,False],[False,False,False],[False,False,False],[False,False,True],[False,False,True],[False,False,False],[True,False,False],[False,False,True],[True,False,True],[False,False,False],[False,False,True],[False,False,True],[True,False,False],[True,True,False],[False,True,False],[True,False,False],[True,True,True],[True,False,True],[True,True,True],[False,False,True],[False,False,True],[True,True,True],[True,False,True],[True,True,False],[True,True,False],[True,True,False],[True,False,True],[False,False,True],[True,True,True],[False,True,True],[True,True,True],[False,True,False],[True,False,False],[True,True,True],[True,False,True],[True,True,False],[True,False,False],[True,True,False],[False,False,True],[True,True,False],[False,False,False],[False,True,True],[False,False,True],[True,True,False],[False,True,False],[True,False,True],[True,False,True],[False,True,False],[False,True,True],[False,True,False],[False,True,False],[False,True,True],[True,False,False],[False,True,True],[False,True,False],[False,True,True],[True,False,True],[True,False,False],[True,True,True],[False,True,False],[False,True,False],[True,False,True],[False,True,True],[False,False,False],[False,False,False],[False,True,True],[True,False,True],[False,True,False],[False,True,True],[False,True,False],[False,False,True],[False,True,True],[False,True,True],[True,False,True],[False,False,True],[False,False,False],[True,False,True],[False,False,False],[False,True,True],[True,True,True],[True,True,True],[True,False,False],[False,False,True],[True,True,True],[False,True,True],[False,True,False],[False,False,False],[True,True,False],[False,True,True],[True,True,False],[False,False,False],[True,True,False],[True,False,False],[True,True,True],[False,False,True],[False,False,False],[False,False,True],[False,False,False],[False,False,True],[False,True,False],[False,False,True],[False,True,False],[False,True,False],[False,False,False],[False,False,False],[True,False,False],[True,False,False],[False,False,False],[False,True,False],[False,True,False],[False,True,False],[True,False,True],[False,False,False],[False,True,False],[False,True,True],[False,False,True],[False,True,False],[True,False,False],[True,False,True],[False,False,False],[False,True,False],[False,False,False],[True,False,False],[False,True,True],[False,True,False],[True,False,False],[True,False,False],[True,True,False],[True,True,False],[True,True,True],[True,True,False],[True,True,False],[True,False,True],[False,False,False],[True,True,True],[False,False,True],[False,True,False],[False,False,True],[False,False,False],[True,True,True],[False,False,False],[False,False,True],[False,True,False],[True,True,False],[True,True,True],[True,True,False],[False,True,True],[False,False,False],[False,False,False],[False,True,True],[False,True,True],[False,True,True],[False,False,True],[False,True,False],[False,True,True],[False,False,False],[False,False,False],[True,True,False],[True,True,False],[True,True,False],[False,True,True],[False,False,True],[True,False,True],[False,False,False],[True,False,True],[False,False,True],[True,False,False],[True,False,True],[True,True,False],[True,True,True],[True,True,True],[True,True,True],[False,True,True],[True,True,True],[True,False,True],[True,True,False],[False,False,False],[False,True,False],[True,False,False],[True,True,True],[True,True,False],[False,False,False],[True,False,True],[False,True,False],[True,False,True],[False,True,False],[False,False,False],[True,False,True],[True,False,True],[True,True,False],[False,False,True],[True,False,True],[True,True,True],[False,True,False],[False,False,True],[True,True,False],[True,True,False],[True,False,True],[False,False,True],[True,True,False],[False,False,True],[True,True,True],[True,False,True],[False,False,False],[True,False,True],[False,False,False],[False,True,True],[True,True,False],[False,True,False]], dtype = "bool")#candidate|3084|(390, 3)|const|bool
var_3085 = relay.var("var_3085", dtype = "float64", shape = (20, 1))#candidate|3085|(20, 1)|var|float64
var_3086 = relay.var("var_3086", dtype = "bool", shape = (720,))#candidate|3086|(720,)|var|bool
var_3087 = relay.var("var_3087", dtype = "float32", shape = (60,))#candidate|3087|(60,)|var|float32
call_3082 = relay.TupleGetItem(func_1317_call(relay.reshape(var_3083.astype('bool'), []), relay.reshape(const_3084.astype('bool'), [6, 13, 15]), relay.reshape(var_3085.astype('float64'), [20,]), relay.reshape(var_3086.astype('bool'), [720,]), relay.reshape(var_3087.astype('float32'), [60,]), ), 0)
call_3088 = relay.TupleGetItem(func_1323_call(relay.reshape(var_3083.astype('bool'), []), relay.reshape(const_3084.astype('bool'), [6, 13, 15]), relay.reshape(var_3085.astype('float64'), [20,]), relay.reshape(var_3086.astype('bool'), [720,]), relay.reshape(var_3087.astype('float32'), [60,]), ), 0)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_3089 = relay.TupleGetItem(func_2634_call(), 0)
call_3090 = relay.TupleGetItem(func_2635_call(), 0)
output = relay.Tuple([uop_3054,call_3082,var_3083,const_3084,var_3085,var_3086,var_3087,call_3089,])
output2 = relay.Tuple([uop_3054,call_3088,var_3083,const_3084,var_3085,var_3086,var_3087,call_3090,])
func_3112 = relay.Function([var_3053,var_3083,var_3085,var_3086,var_3087,], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
var_3113 = relay.var("var_3113", dtype = "float64", shape = (14, 12))#candidate|3113|(14, 12)|var|float64
var_3114 = relay.var("var_3114", dtype = "bool", shape = ())#candidate|3114|()|var|bool
var_3115 = relay.var("var_3115", dtype = "float64", shape = (20, 1))#candidate|3115|(20, 1)|var|float64
var_3116 = relay.var("var_3116", dtype = "bool", shape = (720,))#candidate|3116|(720,)|var|bool
var_3117 = relay.var("var_3117", dtype = "float32", shape = (60,))#candidate|3117|(60,)|var|float32
output = func_3112(var_3113,var_3114,var_3115,var_3116,var_3117,)
func_3118 = relay.Function([var_3113,var_3114,var_3115,var_3116,var_3117,], output)
mutated_mod['func_3118'] = func_3118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3133 = func_2981_call()
call_3134 = func_2981_call()
output = relay.Tuple([call_3133,])
output2 = relay.Tuple([call_3134,])
func_3137 = relay.Function([], output)
mod['func_3137'] = func_3137
mod = relay.transform.InferType()(mod)
mutated_mod['func_3137'] = func_3137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3137_call = mutated_mod.get_global_var('func_3137')
call_3138 = func_3137_call()
output = call_3138
func_3139 = relay.Function([], output)
mutated_mod['func_3139'] = func_3139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2841_call = mod.get_global_var('func_2841')
func_2842_call = mutated_mod.get_global_var('func_2842')
call_3192 = relay.TupleGetItem(func_2841_call(), 0)
call_3193 = relay.TupleGetItem(func_2842_call(), 0)
func_2221_call = mod.get_global_var('func_2221')
func_2223_call = mutated_mod.get_global_var('func_2223')
const_3220 = relay.const([2,-3,9,-2,-5,7,9,5,-7,-3,5,-2,10,-2,-1,-10,8,-3,-3,9,8,-7,-9,8,-9,10,-10,-2,4,-9,4,9,5,1,9,-7,-6,-1,-7,3,-1,1,5,-2,-9,5,10,-7,6,-2,10,9,4,-2,-2,-6,-8,-4,2,4,-7,-7,3,-4,2,5,5,-7,-7,-9,-4,9,2,6,9,5,9,5,-8,2,-4,3,2,-10,8,5,4,5,7,-10,-1,4,-9,-3,-9,8,-3,-7,-8,1,6,-10,-2,-4,6,7,3,9,-4,10,9,-9,6,9,-2,-1,-6,7,-8,7,9,5,-7,3,-9,5,8,2,9,-9,2,1,5,-8,-1,8,10,9,8,-9,4,4,-9,7,10,10,7,1,-9,4,-5,9,6,3,1,-2,7,8,-4,3,-10,5,-6,9,5,-5,-8,6,-6,9,-2,-4,-8,-4,-9,8,1,9,2,-3,5,-9,-4,-8,-3,-10,9,5,-8,10,7,-9,1,-6,-9,-2,-8,-7,4,-5,-2,6,-8,-9,-10,-6,-8,5,-4,-2,1,5,-5,-2,-8,7,-1,-3,4,7,-2,-10,7,-10,10,4,-6,-1,-3,-1,1,3,1,-10,10,10,10,10,9,10,4,9,5,2,-4,-1,10,-4,1,-7,-3,3,-9,3,-5,-5,7,8,5,-1,10,1,-7,-1,1,9,5,9,7,1,-3,10,2,1,7,-4,4,-8,-10,-1,-1,7,4,-1,8,-4,8,-10], dtype = "int16")#candidate|3220|(288,)|const|int16
call_3219 = func_2221_call(relay.reshape(const_3220.astype('int16'), [12, 8, 3]))
call_3221 = func_2221_call(relay.reshape(const_3220.astype('int16'), [12, 8, 3]))
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_3225 = relay.TupleGetItem(func_2695_call(), 3)
call_3226 = relay.TupleGetItem(func_2697_call(), 3)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
call_3230 = relay.TupleGetItem(func_529_call(relay.reshape(call_3225.astype('float64'), [16, 7, 14]), relay.reshape(call_3225.astype('float64'), [16, 7, 14]), ), 0)
call_3231 = relay.TupleGetItem(func_532_call(relay.reshape(call_3225.astype('float64'), [16, 7, 14]), relay.reshape(call_3225.astype('float64'), [16, 7, 14]), ), 0)
func_1317_call = mod.get_global_var('func_1317')
func_1323_call = mutated_mod.get_global_var('func_1323')
var_3241 = relay.var("var_3241", dtype = "bool", shape = ())#candidate|3241|()|var|bool
const_3242 = relay.const([False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True], dtype = "bool")#candidate|3242|(1170,)|const|bool
const_3243 = relay.const([4.139155,-4.519413,-8.489946,9.405381,-5.011546,-4.458902,3.158381,-3.514754,1.464822,9.359626,4.956899,-1.788362,-4.986015,2.087732,-0.462738,-2.269343,3.452556,-0.734815,9.406706,8.352920], dtype = "float64")#candidate|3243|(20,)|const|float64
var_3244 = relay.var("var_3244", dtype = "bool", shape = (1, 720))#candidate|3244|(1, 720)|var|bool
var_3245 = relay.var("var_3245", dtype = "float32", shape = (15, 4))#candidate|3245|(15, 4)|var|float32
call_3240 = relay.TupleGetItem(func_1317_call(relay.reshape(var_3241.astype('bool'), []), relay.reshape(const_3242.astype('bool'), [6, 13, 15]), relay.reshape(const_3243.astype('float64'), [20,]), relay.reshape(var_3244.astype('bool'), [720,]), relay.reshape(var_3245.astype('float32'), [60,]), ), 2)
call_3246 = relay.TupleGetItem(func_1323_call(relay.reshape(var_3241.astype('bool'), []), relay.reshape(const_3242.astype('bool'), [6, 13, 15]), relay.reshape(const_3243.astype('float64'), [20,]), relay.reshape(var_3244.astype('bool'), [720,]), relay.reshape(var_3245.astype('float32'), [60,]), ), 2)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
call_3275 = relay.TupleGetItem(func_529_call(relay.reshape(call_3230.astype('float64'), [16, 7, 14]), relay.reshape(call_3225.astype('float64'), [16, 7, 14]), ), 1)
call_3276 = relay.TupleGetItem(func_532_call(relay.reshape(call_3230.astype('float64'), [16, 7, 14]), relay.reshape(call_3225.astype('float64'), [16, 7, 14]), ), 1)
uop_3282 = relay.atan(call_3225.astype('float32')) # shape=(1568, 1)
uop_3284 = relay.atan(call_3226.astype('float32')) # shape=(1568, 1)
output = relay.Tuple([call_3192,call_3219,const_3220,call_3230,call_3240,var_3241,const_3242,const_3243,var_3244,var_3245,call_3275,uop_3282,])
output2 = relay.Tuple([call_3193,call_3221,const_3220,call_3231,call_3246,var_3241,const_3242,const_3243,var_3244,var_3245,call_3276,uop_3284,])
func_3288 = relay.Function([var_3241,var_3244,var_3245,], output)
mod['func_3288'] = func_3288
mod = relay.transform.InferType()(mod)
mutated_mod['func_3288'] = func_3288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3288_call = mutated_mod.get_global_var('func_3288')
var_3290 = relay.var("var_3290", dtype = "bool", shape = ())#candidate|3290|()|var|bool
var_3291 = relay.var("var_3291", dtype = "bool", shape = (1, 720))#candidate|3291|(1, 720)|var|bool
var_3292 = relay.var("var_3292", dtype = "float32", shape = (15, 4))#candidate|3292|(15, 4)|var|float32
call_3289 = func_3288_call(var_3290,var_3291,var_3292,)
output = call_3289
func_3293 = relay.Function([var_3290,var_3291,var_3292,], output)
mutated_mod['func_3293'] = func_3293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3137_call = mod.get_global_var('func_3137')
func_3139_call = mutated_mod.get_global_var('func_3139')
call_3308 = relay.TupleGetItem(func_3137_call(), 0)
call_3309 = relay.TupleGetItem(func_3139_call(), 0)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_3316 = relay.TupleGetItem(func_2695_call(), 1)
call_3317 = relay.TupleGetItem(func_2697_call(), 1)
output = relay.Tuple([call_3308,call_3316,])
output2 = relay.Tuple([call_3309,call_3317,])
func_3322 = relay.Function([], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
output = func_3322()
func_3323 = relay.Function([], output)
mutated_mod['func_3323'] = func_3323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3358 = func_2981_call()
call_3359 = func_2981_call()
uop_3360 = relay.rsqrt(call_3358.astype('float32')) # shape=(6, 13, 3)
uop_3362 = relay.rsqrt(call_3359.astype('float32')) # shape=(6, 13, 3)
var_3363 = relay.var("var_3363", dtype = "float32", shape = (6, 13, 3))#candidate|3363|(6, 13, 3)|var|float32
bop_3364 = relay.right_shift(uop_3360.astype('uint8'), relay.reshape(var_3363.astype('uint8'), relay.shape_of(uop_3360))) # shape=(6, 13, 3)
bop_3367 = relay.right_shift(uop_3362.astype('uint8'), relay.reshape(var_3363.astype('uint8'), relay.shape_of(uop_3362))) # shape=(6, 13, 3)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3371 = func_2981_call()
call_3372 = func_2981_call()
output = relay.Tuple([bop_3364,call_3371,])
output2 = relay.Tuple([bop_3367,call_3372,])
func_3377 = relay.Function([var_3363,], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3378 = relay.var("var_3378", dtype = "float32", shape = (6, 13, 3))#candidate|3378|(6, 13, 3)|var|float32
func_3377_call = mutated_mod.get_global_var('func_3377')
call_3379 = func_3377_call(var_3378)
output = call_3379
func_3380 = relay.Function([var_3378], output)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_3456 = relay.TupleGetItem(func_2634_call(), 0)
call_3457 = relay.TupleGetItem(func_2635_call(), 0)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_3467 = relay.TupleGetItem(func_3322_call(), 1)
call_3468 = relay.TupleGetItem(func_3323_call(), 1)
output = relay.Tuple([call_3456,call_3467,])
output2 = relay.Tuple([call_3457,call_3468,])
func_3469 = relay.Function([], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3470 = func_3469_call()
output = call_3470
func_3471 = relay.Function([], output)
mutated_mod['func_3471'] = func_3471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_3482 = relay.TupleGetItem(func_2634_call(), 0)
call_3483 = relay.TupleGetItem(func_2635_call(), 0)
uop_3484 = relay.erf(call_3482.astype('float64')) # shape=(6, 13, 3)
uop_3486 = relay.erf(call_3483.astype('float64')) # shape=(6, 13, 3)
func_624_call = mod.get_global_var('func_624')
func_629_call = mutated_mod.get_global_var('func_629')
const_3496 = relay.const([False,True,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True], dtype = "bool")#candidate|3496|(88,)|const|bool
var_3497 = relay.var("var_3497", dtype = "float64", shape = (1568,))#candidate|3497|(1568,)|var|float64
call_3495 = relay.TupleGetItem(func_624_call(relay.reshape(const_3496.astype('bool'), [4, 11, 2]), relay.reshape(const_3496.astype('bool'), [4, 11, 2]), relay.reshape(const_3496.astype('bool'), [4, 11, 2]), relay.reshape(var_3497.astype('float64'), [1568,]), ), 4)
call_3498 = relay.TupleGetItem(func_629_call(relay.reshape(const_3496.astype('bool'), [4, 11, 2]), relay.reshape(const_3496.astype('bool'), [4, 11, 2]), relay.reshape(const_3496.astype('bool'), [4, 11, 2]), relay.reshape(var_3497.astype('float64'), [1568,]), ), 4)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
call_3511 = relay.TupleGetItem(func_529_call(relay.reshape(var_3497.astype('float64'), [16, 7, 14]), relay.reshape(var_3497.astype('float64'), [16, 7, 14]), ), 0)
call_3512 = relay.TupleGetItem(func_532_call(relay.reshape(var_3497.astype('float64'), [16, 7, 14]), relay.reshape(var_3497.astype('float64'), [16, 7, 14]), ), 0)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_3518 = relay.TupleGetItem(func_2695_call(), 4)
call_3519 = relay.TupleGetItem(func_2697_call(), 4)
var_3523 = relay.var("var_3523", dtype = "float64", shape = (6, 13, 3))#candidate|3523|(6, 13, 3)|var|float64
bop_3524 = relay.mod(uop_3484.astype('float64'), relay.reshape(var_3523.astype('float64'), relay.shape_of(uop_3484))) # shape=(6, 13, 3)
bop_3527 = relay.mod(uop_3486.astype('float64'), relay.reshape(var_3523.astype('float64'), relay.shape_of(uop_3486))) # shape=(6, 13, 3)
output = relay.Tuple([call_3495,const_3496,var_3497,call_3511,call_3518,bop_3524,])
output2 = relay.Tuple([call_3498,const_3496,var_3497,call_3512,call_3519,bop_3527,])
func_3536 = relay.Function([var_3497,var_3523,], output)
mod['func_3536'] = func_3536
mod = relay.transform.InferType()(mod)
mutated_mod['func_3536'] = func_3536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3536_call = mutated_mod.get_global_var('func_3536')
var_3538 = relay.var("var_3538", dtype = "float64", shape = (1568,))#candidate|3538|(1568,)|var|float64
var_3539 = relay.var("var_3539", dtype = "float64", shape = (6, 13, 3))#candidate|3539|(6, 13, 3)|var|float64
call_3537 = func_3536_call(var_3538,var_3539,)
output = call_3537
func_3540 = relay.Function([var_3538,var_3539,], output)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_3552 = relay.TupleGetItem(func_3322_call(), 1)
call_3553 = relay.TupleGetItem(func_3323_call(), 1)
func_286_call = mod.get_global_var('func_286')
func_288_call = mutated_mod.get_global_var('func_288')
var_3571 = relay.var("var_3571", dtype = "float32", shape = (1, 60))#candidate|3571|(1, 60)|var|float32
call_3570 = relay.TupleGetItem(func_286_call(relay.reshape(var_3571.astype('float32'), [1, 10, 6])), 0)
call_3572 = relay.TupleGetItem(func_288_call(relay.reshape(var_3571.astype('float32'), [1, 10, 6])), 0)
output = relay.Tuple([call_3552,call_3570,var_3571,])
output2 = relay.Tuple([call_3553,call_3572,var_3571,])
func_3575 = relay.Function([var_3571,], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
var_3576 = relay.var("var_3576", dtype = "float32", shape = (1, 60))#candidate|3576|(1, 60)|var|float32
output = func_3575(var_3576)
func_3577 = relay.Function([var_3576], output)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_3595 = func_2981_call()
call_3596 = func_2981_call()
var_3607 = relay.var("var_3607", dtype = "float32", shape = (6, 13, 3))#candidate|3607|(6, 13, 3)|var|float32
bop_3608 = relay.logical_and(call_3595.astype('bool'), relay.reshape(var_3607.astype('bool'), relay.shape_of(call_3595))) # shape=(6, 13, 3)
bop_3611 = relay.logical_and(call_3596.astype('bool'), relay.reshape(var_3607.astype('bool'), relay.shape_of(call_3596))) # shape=(6, 13, 3)
func_624_call = mod.get_global_var('func_624')
func_629_call = mutated_mod.get_global_var('func_629')
const_3615 = relay.const([False,False,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,False], dtype = "bool")#candidate|3615|(88,)|const|bool
const_3616 = relay.const([-9.671343,2.668179,-8.031828,4.562584,-5.231478,2.920011,-5.347703,-7.056968,-6.414557,9.314985,-8.102807,8.152569,4.315754,7.846798,7.348344,8.699253,-9.508971,-4.320367,-8.955419,-7.777259,-8.229025,5.719253,-7.728263,-7.457268,6.926739,-2.760200,3.944441,-2.148525,-3.316939,5.446818,-5.905905,7.052015,-6.265916,2.891536,-0.063685,9.824042,4.955063,5.124660,9.978035,-8.707096,9.750852,-1.912221,-3.507878,6.609649,-4.309412,2.393486,8.273232,-3.445483,-0.138898,7.453012,3.356193,-8.193173,5.680665,-5.360459,9.574168,3.290549,2.863852,7.023933,-3.885562,-4.111824,-0.149545,6.864280,8.049084,6.036049,1.765008,-4.999463,4.716136,2.139593,-2.672611,0.059117,6.010747,-9.227847,5.503367,-0.470236,-6.700298,-4.192301,-7.720122,-5.868834,0.026513,-4.948226,-5.313398,-2.521253,8.872957,-0.961789,0.135702,8.629515,-7.634420,-8.749988,-2.495586,1.052611,8.746176,1.018606,3.899216,9.316566,6.863387,6.385174,-1.882812,0.878268,-0.452076,9.467746,-7.115742,-5.955795,-5.651058,-5.628265,1.569697,3.167374,4.564137,3.638422,4.379790,-2.109858,-3.581216,-6.458285,0.178540,-6.265314,-3.334475,8.102689,-7.062774,1.281962,-6.491999,9.548268,-0.418093,8.019310,9.000966,-8.516622,3.862733,2.724725,5.435857,0.058720,-5.310681,-5.989504,8.559083,9.509694,5.781025,9.936806,-1.971133,0.608327,7.592610,-2.080184,0.308812,8.415009,5.840808,-0.740584,3.597227,7.630561,6.613325,-6.638012,-6.466183,8.349583,-4.423852,4.097445,8.894720,9.396507,5.440323,-3.487797,8.657667,-1.849873,-4.159157,9.020069,-4.953535,5.720977,-5.470403,-4.924169,5.293837,-7.649513,-5.419366,-4.819518,-6.070101,4.279095,-3.642991,1.854687,1.757566,-2.342989,-9.670372,8.479051,4.928087,1.925172,-0.581593,-1.699756,2.084676,-6.841955,-1.642840,2.804467,-7.730198,0.366577,-7.491564,-2.020131,-2.266777,-1.403341,-3.753818,6.809482,-2.770918,8.244085,-0.688638,9.827771,-0.119997,-7.300038,-2.431619,-5.128007,-0.411674,0.376462,-6.514463,-6.489783,2.912221,9.535071,1.053808,9.462177,5.694182,-8.552746,-3.340653,8.854072,3.010022,3.025929,-5.319426,3.447127,9.939023,5.423503,-1.916312,-9.837547,-2.363733,-6.408443,-7.437031,-7.088099,-8.284308,-5.464071,-2.650095,-0.787133,7.283858,9.841299,7.774346,-7.466246,-1.526360,-5.007428,7.797698,-7.464832,-8.156212,6.371390,-1.011552,7.629293,7.979928,4.027811,7.340570,5.530976,7.795951,-2.697193,8.246146,-9.065848,2.322416,9.177687,0.697553,-2.745749,-0.940353,7.757013,2.959779,5.146785,-7.391757,-6.426629,-2.720665,-0.848973,5.278105,-0.845211,6.451632,-2.973405,7.875478,0.784017,2.032006,4.902110,-8.321719,-8.117962,9.801994,-9.713406,-7.484276,5.863551,-6.025505,-9.905290,9.411568,7.999075,0.250074,3.873848,9.354405,-0.981625,-9.712814,-2.355005,-4.166569,8.692424,-5.092812,9.370393,-9.752515,-5.125590,-8.201839,-4.460801,6.644357,-3.589331,1.955869,-6.438010,-8.275810,7.938463,-3.919146,8.947315,-7.228879,-0.738454,-5.408567,8.367801,-9.013451,-6.609873,6.967710,-8.662614,-5.312410,9.030096,-6.698197,-5.079484,-3.363839,-1.560070,1.126436,2.739418,-4.739218,-3.667184,6.953672,5.459639,8.546690,-2.811019,0.267421,-8.574210,8.019926,9.996696,6.084182,1.467666,-7.134650,-0.500082,4.627084,0.672992,6.468145,8.808521,-5.364781,-3.105386,-2.527801,-8.583343,-4.875336,4.735080,-0.225419,3.861078,-6.046763,-3.050830,-8.465936,-1.141381,-6.385400,4.938623,7.937529,6.919472,-1.626770,-8.619446,-5.030417,-7.455214,3.950116,8.011734,-1.024446,4.164527,3.238061,6.151988,-7.562240,2.615936,-6.189466,-6.783283,7.964134,2.817490,5.499296,-7.881909,-5.895896,-2.313231,-2.075350,1.077921,1.607450,8.176223,-7.280869,-5.485925,-4.047826,-7.997611,1.888998,3.154107,-7.478443,-6.677649,-6.673710,5.364336,4.861404,-7.229538,5.541546,-4.652501,-2.934998,3.290696,0.277607,3.825189,-6.530678,-8.453716,-6.437749,-9.390923,-4.667740,-2.353935,-5.214636,2.813550,-8.608915,5.845023,5.739865,-8.712521,-4.234229,6.874574,9.551711,1.525520,-9.762051,3.367501,4.687169,6.251755,-6.259557,-0.764494,0.622880,-2.452207,2.794438,-3.374843,-0.903376,-2.642312,-5.336641,-3.806015,-9.211481,9.447043,9.143143,6.298676,8.950229,-4.610782,8.999436,-8.455566,-8.566705,-0.556586,-7.238932,-5.835104,2.032543,8.653383,-6.452826,6.114178,-1.621994,4.472167,-4.247141,-7.784272,8.755246,3.287052,-7.978719,-6.978460,1.383060,-7.936648,5.524326,-5.517520,-6.849532,-3.806625,9.741269,1.044298,6.849781,5.650328,-6.083349,1.746326,-8.347207,-7.121969,-8.012909,7.679725,4.310016,4.614038,-0.192960,8.589765,-7.064319,-5.216405,4.360751,9.102256,-8.864960,-6.737931,-9.894960,3.646266,5.329196,0.404083,-0.018721,8.654855,5.590420,-8.522275,-1.363495,-4.762418,7.369474,-5.160408,-6.218295,7.524543,-0.548502,2.383599,3.347300,2.457936,-9.276727,-6.337725,9.949901,-5.402968,8.014438,-3.199029,-3.227703,-6.631333,2.597009,8.567603,-2.115984,9.773372,-6.492964,2.162878,8.720027,-3.913820,-4.187982,-2.764404,-5.252069,-4.425043,2.300498,3.676004,7.359914,8.036923,-1.516140,-3.215911,-0.593096,0.682119,9.818595,-0.040352,3.227748,-8.875775,-6.729259,9.646675,-3.384847,-2.027886,9.014698,4.389003,2.765017,3.092710,9.179349,-0.086156,0.914643,6.762693,-4.220462,7.601091,-7.903678,6.741156,-7.958516,-3.272932,-3.771298,-2.324372,-1.436084,-4.038135,7.672090,-6.797109,-4.275530,-2.055683,-8.352145,-6.556313,0.909870,7.825037,4.269536,-5.155341,8.877450,-1.707083,3.811868,5.351711,3.757155,6.714016,-1.119457,5.452663,-8.677443,-5.022090,0.039300,-8.047394,7.402538,4.248548,-3.239123,-8.244369,-6.140623,-6.968035,-2.614435,0.063813,3.559214,-6.562264,-7.114991,-4.372395,3.316541,-2.964044,3.629377,5.626814,-5.276067,-2.703463,3.011732,-4.584063,2.120956,8.650966,2.655002,5.372363,-4.203235,-2.046564,-3.905817,9.422682,2.011530,-2.007096,-0.722298,3.569665,-8.944737,-0.187287,7.203894,7.482946,2.012755,-8.025787,-3.674542,8.726700,1.711510,7.844682,8.717043,1.016280,-6.284988,4.349884,1.438838,7.220699,-1.892514,9.253128,6.884410,7.071399,-1.534007,0.413122,2.054410,3.421038,-3.360464,-9.998318,1.142902,-7.361884,-8.172862,6.325148,6.734318,1.482857,-3.760498,1.931198,-4.006912,-5.328973,-7.978458,7.836174,-6.958610,-7.506647,8.025250,-2.440242,-9.186267,7.204075,4.970934,-0.306056,8.972918,-2.205437,2.016457,5.426734,-1.513295,-6.381144,4.299646,9.589170,-0.026060,-0.897593,-6.080439,-3.303523,-1.804047,5.618701,-7.422856,-0.316490,-0.968077,9.088544,-4.677441,2.437382,-4.604669,0.200923,6.316016,-4.083921,-1.171328,7.956420,0.451746,3.031054,0.633648,7.048183,-6.832458,-1.671459,9.524888,-3.917472,-2.536563,-1.473967,1.416336,0.929481,-4.222214,-2.644237,-8.166931,-8.443851,-6.526544,5.295870,-0.128971,4.243271,-7.351300,2.277025,-9.650645,5.502243,3.133241,9.070577,2.495690,5.792891,-2.821063,-1.034997,-4.238171,7.222475,-4.720819,-5.440683,5.593070,-3.738760,2.792308,6.356885,7.516149,7.954466,4.444142,-4.418742,1.499477,-7.266939,9.022713,-5.614030,3.432592,-1.648903,1.489374,7.747537,8.970893,-3.586789,2.709509,-9.388097,3.769198,-1.597554,-9.698012,2.249017,-5.473701,-5.543084,8.442341,0.420436,-5.764770,-4.730320,6.589837,-0.225190,0.686501,7.771128,0.345334,-8.975700,6.300110,9.640783,3.221449,3.675054,-8.492974,9.319065,6.395334,3.392466,9.731747,2.064076,5.293211,7.252700,-0.699336,7.717864,-5.990415,-0.639076,-5.010176,0.160501,8.595330,-8.759501,-3.016080,0.495628,-1.988394,2.905903,-9.382059,-4.132787,7.672497,5.448736,2.190296,2.938964,-7.137850,2.575243,6.254029,-8.995110,-2.402320,-7.899820,-7.154016,-9.922905,-0.155308,-3.867915,-8.171703,-1.854493,-5.017794,8.598184,7.883925,5.015003,9.670730,-9.884688,-5.196218,6.323595,5.244483,7.144832,6.276782,4.789298,-9.711636,-9.957875,-2.403914,-6.455141,-0.653767,-6.997228,-1.526141,7.666563,4.254286,-1.267021,-1.756325,-4.467244,0.001776,-8.112978,5.124860,4.279382,6.955052,-7.941796,-4.871601,8.382963,-6.090513,-2.630024,9.689804,-5.002091,-0.297505,-9.972898,-1.151071,-3.163653,3.558671,-4.100141,-3.488414,-2.364269,-0.499439,-0.314147,6.305941,1.420275,9.750887,-7.937427,-2.300142,1.436688,3.206249,8.906584,-0.010952,9.601315,-8.777316,-4.580369,7.145587,3.142522,9.529474,7.291433,4.374017,6.012702,-8.817263,2.424891,-9.450827,6.807673,6.456813,-2.789967,3.736954,6.303600,2.064150,-2.555350,-8.171090,-3.189324,4.316692,-6.874195,5.952161,-8.695044,9.615264,-6.838178,-3.610214,7.829543,-2.375625,-2.177956,6.040469,-9.043821,2.339072,-4.292065,-6.539515,-5.193491,-1.624832,-0.858565,-4.248296,0.942100,-2.593957,3.253215,-9.956093,-4.089029,-4.502708,-1.879926,-2.237427,1.205032,6.348506,8.038806,-9.152977,-3.938550,-4.313059,-2.280449,3.423219,-8.542382,8.908834,-5.183802,-2.693471,6.847060,6.696631,5.331148,-4.737215,-5.371764,-1.148753,9.166087,7.830538,4.638974,-4.270192,-4.483617,2.134382,0.386781,-3.577344,-9.534252,0.804497,-9.526415,1.999961,-3.604370,-2.489151,-6.094343,1.703470,7.546997,8.943041,-1.149146,8.220180,5.756187,-8.544210,9.920431,-0.080093,3.072259,0.005380,5.028405,8.295762,-7.241560,-5.107493,-1.297571,-8.009530,-5.060970,-3.269967,8.547103,3.872414,2.639210,-2.488307,-3.896311,-9.523381,-0.507598,9.841943,1.430036,1.079271,-9.974106,-1.513691,0.429674,3.761643,-0.867107,8.608556,7.024488,-5.540022,-7.309515,3.256361,4.655360,-1.616152,-0.611309,9.967912,7.045918,2.905411,-5.811145,-1.884535,9.545232,3.565183,-6.398887,1.007245,4.203525,-9.955083,-5.718908,2.538837,7.644440,7.351734,7.497635,6.791217,-3.239435,3.889917,-2.430958,-7.434801,3.784751,6.328074,-3.369566,2.106406,-7.746375,8.457347,0.893385,9.003150,6.192117,-7.294725,4.090859,0.908878,7.622524,0.328198,-9.801662,0.319933,6.668662,5.589995,9.828536,-5.882397,-8.027909,2.680330,-5.073069,3.544592,3.248032,-5.546267,9.697144,-7.329652,-2.483712,6.178284,-2.802731,-7.834964,6.946364,5.392620,-5.367806,3.825941,-7.638305,6.251586,3.555240,-1.581968,-6.213286,2.738776,-9.293236,-0.153496,4.520537,1.614743,-1.401795,-1.783468,-9.026429,2.491464,0.750700,2.579976,5.116176,-4.615945,1.308783,0.498567,6.524837,-9.229977,4.804331,6.033721,-6.309071,-8.703018,-1.864450,-9.863267,-1.372430,-8.656522,-3.686248,8.843037,-1.652237,-5.890792,-3.095390,7.444349,3.743837,4.858551,1.784556,1.279076,-6.595905,-7.300934,-0.980475,7.969454,-8.854281,-0.037389,5.182782,-2.242780,3.927913,-5.723117,5.354824,-8.903613,2.613743,5.174404,-6.490849,-4.614315,-0.427054,8.800765,2.012317,5.621516,-9.216794,9.729115,-9.507183,0.549427,-3.058934,3.500298,-7.253669,-8.441788,-9.752693,-4.046377,0.807257,2.875055,8.345581,-1.789278,2.151870,3.917050,-7.624911,4.578868,-8.821873,-9.587576,-9.303889,-0.515067,9.528232,-2.368543,-7.721841,-1.870230,9.785907,2.641177,9.369957,-6.410945,-2.107367,-1.405638,-1.407991,8.494250,5.825576,7.547163,6.187273,-7.898617,0.029156,-4.757201,1.393781,6.963624,-9.857993,2.263308,-9.353204,-7.261077,9.572250,9.038659,1.198541,2.364993,4.694863,-8.151778,-5.768206,3.439208,-5.609485,-8.888162,3.968933,-7.191989,-3.029574,5.588259,3.154904,6.388363,-8.702222,-3.443310,2.911082,-4.446738,2.120403,-7.871826,1.767647,3.291556,3.866051,1.795351,0.327896,1.562004,-2.958842,-6.890532,-9.434986,-0.187036,9.050716,-4.440627,-6.493650,4.307978,-8.010178,-3.796078,5.909389,1.057866,9.838119,5.027434,-8.894927,-5.715593,7.104404,0.367841,9.557029,8.028056,-4.682410,2.980193,-7.686110,-2.426344,-5.929827,9.014832,-5.901081,8.547954,4.825155,-2.462025,3.733079,-5.360383,-0.308342,-0.856593,-3.894137,-7.562413,-1.436122,1.776075,-2.194794,5.723924,-1.414225,-1.631384,9.582338,-3.446543,9.683509,-8.600581,-5.318016,7.361338,-0.120909,-0.942378,6.321291,-7.096516,-0.255915,5.727781,9.501285,-4.802721,2.855924,3.369369,-1.719306,9.175728,-4.768811,-0.337169,0.380317,8.741403,5.460234,-0.434340,-9.137297,-9.426540,-4.897932,3.100685,-0.230496,-8.528662,8.703112,-9.649459,1.135060,1.259226,-2.765362,-8.468467,0.948501,5.024832,5.373283,-1.128659,-8.003845,3.372763,-7.782375,5.576043,-2.523043,-7.867810,3.036310,9.101478,-0.662330,-6.001011,-1.126555,-0.579258,0.189754,-0.457800,1.527409,-8.410701,-9.955525,6.106546,7.244515,1.425977,-5.953101,1.029413,9.998575,-0.660468,5.485823,-7.131535,-9.226746,8.324358,-9.853051,-9.013952,-4.653167,-3.596504,-2.771059,4.486102,-4.013532,4.388445,-1.685954,-4.406204,5.525669,-5.688251,4.356010,-0.205560,0.835314,1.117163,-9.789289,-1.371246,7.051507,3.755640,-6.769735,3.561670,1.241168,2.371292,9.131250,2.021368,-7.796355,7.851024,-6.943890,9.935418,3.123486,-8.085049,3.746882,9.476392,8.275761,-9.625183,1.732108,-3.708973,1.752698,3.623270,3.314035,7.903087,-1.006496,5.929857,7.581778,-4.366528,-1.432881,-5.517831,0.079589,-8.400020,-7.492939,-3.245290,-6.594939,-3.852557,-5.110189,-1.323280,0.388012,-4.739925,-7.913421,-9.498587,-8.394815,-5.867578,4.752172,-0.798381,-5.392072,1.006485,-1.622667,5.587003,-9.842380,-3.660685,1.382452,-9.171397,-1.260784,-4.625883,3.830886,-1.574942,3.620228,-6.182391,2.969743,-2.920013,7.405659,-3.068494,3.752681,-5.614671,-7.318922,7.532061,6.971928,-1.744398,-8.863710,-0.937585,7.793029,6.457571,1.778810,-2.962697,2.859165,0.816110,-9.688344,-4.334788,0.426288,-2.021271,7.843744,5.175774,0.558986,-6.816472,-6.955962,3.302581,-6.086584,-2.734047,-4.141786,-5.869528,0.792637,-6.961141,-2.071635,-4.692728,0.817206,1.019254,-8.816102,7.301425,-3.290321,2.912776,-0.118124,-4.040558,1.329348,3.121541,8.615234,8.229273,7.666206,0.314347,-1.382195,3.099939,-7.396095,-3.711755,7.893260,-0.080927,-7.157918,-1.383694,0.621007,0.399088,9.817220,-6.186044,-6.807959,-6.223493,-2.020331,8.168465,7.868446,-7.341190,8.326006,-5.164910,2.597115,-1.200372,-3.826869,-7.285299,-7.838382,-2.559859,-8.917479,-1.632437,8.031466,-7.534161,-5.261364,-0.330644,-0.510860,6.380357,-0.682104,-5.226057,1.786220,0.134868,0.491338,3.573133,8.718276,-2.930488,-3.438649,-3.315572,5.730476,9.836626,2.349736,9.478532,7.993756,9.552127,-2.268707,7.391970,8.064218,9.380269,-5.262416,-2.808970,-5.440838,-0.659638,1.931733,-2.510556,1.561910,3.300063,-4.209846,7.619176,6.934930,7.507170,-1.340734,8.716660,6.930596,2.623366,5.958308,1.128485,-3.285562,9.307525,-4.828973,-2.296990,6.088754,-3.780429,-2.699289,4.828301,7.645727,3.349905,6.443915,9.974518,2.910784,6.727899,-4.637811,-8.046414,-3.868063,-1.058612,-4.787201,-8.880227,-7.301810,6.945611,-7.736523,1.497194,1.695986,-3.200269,5.433761,1.034781,-5.628833,-5.247848,0.923431,1.843813,-1.626781,-3.902141,-5.912936,-9.002957,-2.780748,0.772536,8.713171,-3.927605,9.509156,9.394588,-3.906537,1.687781,5.826561,2.696957,-5.113191,-8.763098,-2.185822,6.280422,-1.495189,-8.288473,9.091089,3.780822,-2.933371,8.419052,-0.102529,-6.193199,9.486409,3.580021,0.917506,7.231483,3.647345,-9.614959,3.287360,-1.858295,-0.761896,-4.348096,-9.275409,-3.711001,1.935291,-2.894364,-8.625881,-8.586349,-1.640241,0.706187,-7.418713,-3.769665,-5.206654,6.369774,-5.370565,0.942172,-8.283292,7.022681,-0.502101,7.487553,5.699499,0.696464,1.903552,-1.742946,-9.080927,6.868898,-8.992935,-2.348211,1.321605,-2.893797,-6.947470,-6.236739,1.960325,3.661444,3.529499,5.802299,5.897935,-0.720444,-1.229329,-2.194538,-2.348288,8.126460,9.508463], dtype = "float64")#candidate|3616|(1568,)|const|float64
call_3614 = relay.TupleGetItem(func_624_call(relay.reshape(const_3615.astype('bool'), [4, 11, 2]), relay.reshape(const_3615.astype('bool'), [4, 11, 2]), relay.reshape(const_3615.astype('bool'), [4, 11, 2]), relay.reshape(const_3616.astype('float64'), [1568,]), ), 1)
call_3617 = relay.TupleGetItem(func_629_call(relay.reshape(const_3615.astype('bool'), [4, 11, 2]), relay.reshape(const_3615.astype('bool'), [4, 11, 2]), relay.reshape(const_3615.astype('bool'), [4, 11, 2]), relay.reshape(const_3616.astype('float64'), [1568,]), ), 1)
func_1638_call = mod.get_global_var('func_1638')
func_1641_call = mutated_mod.get_global_var('func_1641')
var_3634 = relay.var("var_3634", dtype = "float64", shape = (640,))#candidate|3634|(640,)|var|float64
call_3633 = func_1638_call(relay.reshape(var_3634.astype('float64'), [8, 16, 5]))
call_3635 = func_1638_call(relay.reshape(var_3634.astype('float64'), [8, 16, 5]))
const_3659 = relay.const([[[False,True,False],[True,True,True],[False,True,False],[True,True,False],[True,True,True],[True,False,True],[True,False,False],[True,True,True],[False,False,False],[False,False,True],[False,False,False],[False,False,True],[True,False,True]],[[False,True,False],[False,False,True],[True,True,True],[False,True,False],[False,False,True],[True,False,True],[False,False,True],[True,True,False],[True,True,False],[True,True,False],[False,True,True],[False,True,True],[True,True,False]],[[True,True,True],[True,False,True],[False,True,False],[True,True,False],[False,False,True],[False,False,True],[False,True,False],[False,True,True],[True,True,False],[False,False,True],[True,True,True],[False,False,True],[False,False,False]],[[False,True,False],[False,False,False],[False,False,False],[True,True,True],[True,True,False],[False,True,True],[False,True,False],[False,False,True],[True,True,False],[False,True,False],[False,True,False],[False,True,False],[True,True,False]],[[True,False,True],[True,True,True],[True,True,False],[True,False,True],[True,False,False],[False,True,True],[False,True,False],[True,True,True],[True,False,False],[True,True,False],[True,False,False],[True,True,False],[False,True,True]],[[False,False,True],[True,True,True],[True,True,False],[False,False,True],[False,True,True],[True,False,True],[False,True,False],[False,False,False],[False,True,False],[False,True,True],[False,True,True],[True,True,False],[True,False,True]]], dtype = "bool")#candidate|3659|(6, 13, 3)|const|bool
bop_3660 = relay.floor_divide(bop_3608.astype('float32'), relay.reshape(const_3659.astype('float32'), relay.shape_of(bop_3608))) # shape=(6, 13, 3)
bop_3663 = relay.floor_divide(bop_3611.astype('float32'), relay.reshape(const_3659.astype('float32'), relay.shape_of(bop_3611))) # shape=(6, 13, 3)
var_3677 = relay.var("var_3677", dtype = "float64", shape = (1568,))#candidate|3677|(1568,)|var|float64
bop_3678 = relay.logical_and(const_3616.astype('bool'), relay.reshape(var_3677.astype('bool'), relay.shape_of(const_3616))) # shape=(1568,)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
const_3690 = relay.const([-6.183305,0.357147,-1.891733,9.665688,-4.102683,3.995581,-1.784934,-1.459492,-0.832842,0.636125,2.321238,-0.853898,-7.193035,-5.312635,5.370283,-0.384561,-2.803292,-7.759821,4.173125,8.256218], dtype = "float64")#candidate|3690|(20,)|const|float64
call_3689 = relay.TupleGetItem(func_1231_call(relay.reshape(const_3690.astype('float64'), [5, 2, 2])), 0)
call_3691 = relay.TupleGetItem(func_1233_call(relay.reshape(const_3690.astype('float64'), [5, 2, 2])), 0)
func_2873_call = mod.get_global_var('func_2873')
func_2874_call = mutated_mod.get_global_var('func_2874')
call_3693 = func_2873_call()
call_3694 = func_2873_call()
bop_3700 = relay.equal(call_3693.astype('bool'), relay.reshape(bop_3608.astype('bool'), relay.shape_of(call_3693))) # shape=(6, 13, 3)
bop_3703 = relay.equal(call_3694.astype('bool'), relay.reshape(bop_3611.astype('bool'), relay.shape_of(call_3694))) # shape=(6, 13, 3)
output = relay.Tuple([call_3614,const_3615,call_3633,var_3634,bop_3660,bop_3678,call_3689,const_3690,bop_3700,])
output2 = relay.Tuple([call_3617,const_3615,call_3635,var_3634,bop_3663,bop_3678,call_3691,const_3690,bop_3703,])
func_3713 = relay.Function([var_3607,var_3634,var_3677,], output)
mod['func_3713'] = func_3713
mod = relay.transform.InferType()(mod)
mutated_mod['func_3713'] = func_3713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3713_call = mutated_mod.get_global_var('func_3713')
var_3715 = relay.var("var_3715", dtype = "float32", shape = (6, 13, 3))#candidate|3715|(6, 13, 3)|var|float32
var_3716 = relay.var("var_3716", dtype = "float64", shape = (640,))#candidate|3716|(640,)|var|float64
var_3717 = relay.var("var_3717", dtype = "float64", shape = (1568,))#candidate|3717|(1568,)|var|float64
call_3714 = func_3713_call(var_3715,var_3716,var_3717,)
output = call_3714
func_3718 = relay.Function([var_3715,var_3716,var_3717,], output)
mutated_mod['func_3718'] = func_3718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_3740 = relay.TupleGetItem(func_3322_call(), 1)
call_3741 = relay.TupleGetItem(func_3323_call(), 1)
func_749_call = mod.get_global_var('func_749')
func_752_call = mutated_mod.get_global_var('func_752')
var_3743 = relay.var("var_3743", dtype = "int32", shape = (4, 24))#candidate|3743|(4, 24)|var|int32
call_3742 = relay.TupleGetItem(func_749_call(relay.reshape(var_3743.astype('int32'), [2, 8, 6])), 0)
call_3744 = relay.TupleGetItem(func_752_call(relay.reshape(var_3743.astype('int32'), [2, 8, 6])), 0)
func_721_call = mod.get_global_var('func_721')
func_725_call = mutated_mod.get_global_var('func_725')
const_3758 = relay.const([3.921423,-6.168970,-9.175029,-8.165647,-0.521183,1.731496,7.751305,-7.849839,3.849773,2.549783,-7.672890,-8.954085,9.043561,-2.080694,4.526271,4.326379,6.557422,-7.982500,6.076050,-4.149826,-2.117242,-1.710259,-9.364784,-4.937469,8.813221,3.704886,-8.652683,-0.880333,7.368201,-3.462061,-4.265109,6.908300,-8.058590,-0.351704,6.226650,5.198099,-5.810181,9.993162,-2.186412,-6.420896,-6.632709,-5.471504,3.512133,-2.701526,8.267329,7.263740,-4.235704,3.900844,-8.073939,-6.982794,-0.745362,0.047891,6.562250,2.434347,2.809925,-3.079386,-6.677028,-4.071449,9.895089,-8.962429,-4.763921,3.184205,1.161757,7.708494,-7.657237,4.058393,6.393184,1.570895,1.862920,3.452170,-9.685116,-4.597333,-2.265735,-7.503202,7.976553,-2.223162,-2.437125,7.104682,-8.282252,-6.795931,-0.045947,-7.321990,-7.001915,3.975061,-3.117577,-6.463191,-7.414275,0.422352,-0.983460,-0.055290,0.551711,6.511878,-7.504121,4.913414,4.709348,5.132219,1.733642,9.998039,2.341170,4.279545,5.947705,-3.369881,1.970176,-2.765916,2.389942,0.623096,1.795229,8.183339,7.885902,7.747380,-7.479330,0.052180,-0.848877,2.745760,3.785282,1.154492,5.176234,-1.848800,-2.193647,-8.480553,8.178257,-3.099075,-3.688198,2.438242,-1.833970,-1.748548,2.543382,-2.078777,-7.795964,-6.295896,-3.186449,9.989997,5.589495,-9.396256,-3.638714,-0.893549,8.131569,5.008044,-1.208070,6.539095,9.231059,1.009015,8.791168,-6.425847,4.537230,4.403555,-0.949225,1.056614,-5.776055,3.262494,-1.770121,7.018697,-5.478368,3.485976,5.865370,7.070088,-2.795515,6.659946,-0.617606,-9.360611,-5.590183,-4.138427,-4.575119,0.901060,2.114409,3.279982,-5.044987,7.770775,9.330390,9.017712,-4.615955,0.060842,8.506640,-6.352718,-0.030468,3.804839,0.130055,-4.974681,-3.764671,-3.791986,-4.924729,3.408065,-9.001335,-3.205060,-9.817131,-2.322100,-6.382492,6.493453,1.066599,-1.535640,-5.579662,-6.582417,2.152180,5.303844,-6.473014,7.174862,-5.849968,1.539959,-8.458678,-8.154834,0.012517,6.061769,1.557047,3.412312,-5.397654,-4.512510,-5.050328,-9.742801,2.993765,7.019973,-0.750015,8.763639,2.681621,5.871381,-9.706119,-9.345269,7.149757,2.853756,5.741582,4.435257,-3.718761,-3.806163,-6.029707,-7.783869,9.805197,-4.597310,9.788200,-2.261223,-7.701833,-3.493014,9.701551,9.978857,-7.957121,9.675863,7.459325,0.016888,1.504353,-0.582430,3.192529,7.789667,-8.201562,-9.613725,3.196611,0.819445,-8.959319,-5.973658,-0.970905,-2.790996,2.573285,-1.469481,-2.715453,-6.008311,-7.877604,-1.334942,-6.771218,-6.972393,8.365197,-3.782258,6.320706,-7.084623,9.872244,9.048259,-3.870394,-7.965564,-1.798650,0.727786,-0.693816,-9.360328,-8.406610,-2.221695,-5.977654,-4.396783,5.840757,3.438582,-7.300205,9.389006,-7.020426,0.292559,-4.689438,-9.620595,6.147587,-1.622036,-3.293332,-0.223094,3.873743,3.405118,2.691020,2.072907,-9.973364,5.971015,-8.094133,-3.519747,2.051087,-2.569382,6.347081,-7.879817,-7.835015,-6.420815,6.344896,8.005245,-0.713897,2.646436,-5.613421,-5.105717,6.480562,2.044998,-4.973140,-5.357405,-8.325671,-3.793839,-1.745128,-1.789373,7.257053,9.064317,9.741363,3.493731,0.808265,5.106692,0.148694,-0.370431,5.978879,-4.491542,8.327128,5.831975,9.419808,4.946194,1.063868,-4.978014,-6.478130,3.685969,1.011255,8.875948,1.754562,-9.185887,5.528561,7.463500,6.371401,-8.209711,3.011835,-0.405856,8.144981,-8.412322,4.040637,0.464508,-6.226937,1.019357,3.562291,-0.812750,1.849217,5.950454,4.486641,0.300878,2.443296,7.196939,4.269385,7.541311,1.255026,2.082629,1.436498,-8.540237,-6.819938,3.152162,9.893964,-3.067659,-7.789463,5.965588,1.849305,-1.340107,-1.968966,5.340509,2.826751,4.185255,-9.161322,1.477793,1.933906,4.626894,9.714504,-4.095641,-7.033128,4.531157,-9.020703,-0.665366,8.289719,-3.699875,-5.088015,-1.767197,3.462806,-2.724800,-0.422496,7.929617,6.487295,4.124005,0.416684,1.613336,4.014785,-3.930120,7.644354,5.212028,-4.980024,7.230703,9.803941,-1.292205,5.177466,-2.738028,1.666606,5.448461,-3.390963,7.177394,-9.823533,3.257571,-0.595690,-7.014616,-5.782503,-1.882460,1.752092,6.559043,7.318700,4.607764,-8.333741,8.437550,3.893026,-0.024857,6.313914,0.215641,8.805123,6.139617,0.844734,9.713709,3.129256,-2.808371,7.589756,0.291268,4.709131,4.920683,-4.819138,0.513869,-0.886499,2.856135,-4.785174,4.055407,9.758067,0.231816,-5.311704,-8.412779,-4.580236,3.181747,-4.089250,1.701431,9.162065,1.413586,5.912816,-5.856776,6.377954,3.150848,-8.242976,3.821990,-6.986675,-8.653669,6.444857,-8.421789,7.146390,-8.193650,2.654323,-8.367070,-4.856276,-4.810687,-7.515430,1.271420,1.620815,7.321891,-7.235019,5.538553,0.884231,2.654663,2.497666,6.843312,6.095611,-4.680152,7.994243,-9.893433,2.573345,4.925431,4.517652,1.280062,1.466990,-6.376827,3.531359,-7.228621,-7.202103,9.931141,-6.903165,-3.339272,-2.321433,-0.175360,8.229983,-2.380874,4.536339,8.736730,-5.596679,4.203118,3.965838,6.469368,-7.281115,-4.626956,-2.720078,-6.334785,-1.342359,-0.355703,3.401135,-5.772468,7.721233,4.909062,-3.226017,6.816937,1.913330,-7.926980,8.710126,8.114426,-3.408230,-2.996057,-0.880498,1.963467,0.159361,6.864890,-4.141243,-4.112209,-2.835696,-5.782285,-2.283271,-0.632095,5.708627,-0.179244,-6.311000,-6.020697,1.371190,9.320957,8.150629,-9.900871,7.156706,8.997603,5.627181,8.307808,-3.615178,-8.181317,-4.158643,-2.863543,-5.641559,-8.910212,6.174219,4.345797,2.164560,-5.942621,0.721414,1.164900,-1.004822,-1.696293,-8.711294,-7.986639,6.155892,8.971324,7.868468,8.824233,0.207975,-3.633015,-6.593798,4.299262,9.872179,-3.259226,2.752218,3.458866,6.370402,5.774565,7.964829,-2.955162,3.045029,-9.181205,1.267648,-5.320897,0.520227,7.630031,-3.041410,4.371127,-2.671677,-0.919820,-5.303159,-5.482090,8.293007,8.297550,6.556934,6.415816,-1.751938,1.938186,-3.858535,-4.260458,-5.186674,2.828704,-6.117725,-8.548889,5.090511,-1.275003,-4.438050,4.350937,3.566038,7.146663,-4.615718,3.340537,-7.971789,-8.481410,-4.799140,1.267441,0.164493,8.595796,8.193905,-5.723343,-2.327094,-4.362430,6.755560,-5.749213,3.393248,7.990249,-4.049840,-7.827125,2.459766,3.824227,2.853195,7.069457,-1.495787,-8.058021,-0.373537,-1.946487,-6.968078,-8.562354,-8.709566,-0.232572,-9.253558,5.296194,-1.087731,4.242507,-4.677915,6.593503,2.830967,-8.394101,0.242147,-9.654273,-6.284150,-4.677802,5.567474,-9.774360,8.018795,7.664547,8.504407,-4.803174,-8.662291,2.804109,3.536634,-3.097598,7.939951,-8.536939,-1.097407,7.630827,7.047795,1.574955,-1.795476,-5.163354,-0.197204,9.321545,-7.249374,9.164071,5.440373,9.556021,5.657401,-9.984879,3.475401,8.392695,9.115580,-4.988717,-2.164892,8.828536,5.307025,-2.122034,-4.435052,0.381451,8.819339,3.606722,-3.761466,5.144144,8.081384,-2.980248,-4.732613,-5.283458,-6.231835,-6.747684,-4.307617], dtype = "float64")#candidate|3758|(693,)|const|float64
const_3759 = relay.const([False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True], dtype = "bool")#candidate|3759|(88,)|const|bool
call_3757 = relay.TupleGetItem(func_721_call(relay.reshape(const_3758.astype('float64'), [11, 9, 7]), relay.reshape(const_3759.astype('bool'), [88,]), ), 0)
call_3760 = relay.TupleGetItem(func_725_call(relay.reshape(const_3758.astype('float64'), [11, 9, 7]), relay.reshape(const_3759.astype('bool'), [88,]), ), 0)
func_2221_call = mod.get_global_var('func_2221')
func_2223_call = mutated_mod.get_global_var('func_2223')
const_3762 = relay.const([-3,2,5,-4,-1,-7,6,2,-4,-5,-6,-7,1,-9,10,9,-6,-9,-5,1,9,2,-3,-3,1,6,-8,-4,1,-5,-3,6,-5,2,8,-9,3,-2,6,-5,-3,2,-4,-10,2,-7,10,-4,-8,7,2,-5,-7,-1,-2,10,7,-7,-2,7,-2,7,-10,9,9,-6,-1,-6,-7,3,-5,-7,9,-3,-10,-3,7,-6,-2,4,2,4,2,4,-7,3,2,-4,3,-9,10,-7,3,3,-8,-9,-9,-6,3,2,-8,3,4,-8,5,-10,-9,-1,10,-10,-2,-1,-1,4,8,5,-3,-4,6,-4,1,-7,2,-5,-1,-5,5,4,4,2,-5,7,-7,-5,-5,3,6,8,-7,4,-9,1,-6,10,4,-1,-10,7,9,8,4,10,1,-9,1,6,-2,-4,5,-8,5,-8,-8,-2,-8,1,-4,-1,8,-5,3,1,-2,4,8,-4,3,-7,8,8,-2,7,9,-2,10,-8,-1,-8,5,-10,-8,-7,8,-2,5,-4,10,-2,-1,-7,-4,-4,5,9,8,4,-6,8,7,2,-1,-1,-8,-1,-9,-2,5,-9,-1,-2,-10,6,-1,9,4,2,-8,6,7,-8,6,-1,-7,-1,1,-7,4,-4,-8,3,-4,5,7,9,9,-2,5,-5,-4,-1,2,3,-1,-8,-9,1,5,5,-7,8,10,-2,3,-9,4,1,8,-1,-10,10,-10,-5,6,9,-4,1,8,1,1,-8,10,2,-1,10,1,-3,10,-8], dtype = "int16")#candidate|3762|(288,)|const|int16
call_3761 = func_2221_call(relay.reshape(const_3762.astype('int16'), [12, 8, 3]))
call_3763 = func_2221_call(relay.reshape(const_3762.astype('int16'), [12, 8, 3]))
output = relay.Tuple([call_3740,call_3742,var_3743,call_3757,const_3758,const_3759,call_3761,const_3762,])
output2 = relay.Tuple([call_3741,call_3744,var_3743,call_3760,const_3758,const_3759,call_3763,const_3762,])
func_3764 = relay.Function([var_3743,], output)
mod['func_3764'] = func_3764
mod = relay.transform.InferType()(mod)
var_3765 = relay.var("var_3765", dtype = "int32", shape = (4, 24))#candidate|3765|(4, 24)|var|int32
output = func_3764(var_3765)
func_3766 = relay.Function([var_3765], output)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_3854 = relay.TupleGetItem(func_3322_call(), 0)
call_3855 = relay.TupleGetItem(func_3323_call(), 0)
func_1876_call = mod.get_global_var('func_1876')
func_1880_call = mutated_mod.get_global_var('func_1880')
var_3857 = relay.var("var_3857", dtype = "int8", shape = (180,))#candidate|3857|(180,)|var|int8
call_3856 = relay.TupleGetItem(func_1876_call(relay.reshape(var_3857.astype('int8'), [9, 2, 10]), relay.reshape(var_3857.astype('int8'), [9, 2, 10]), ), 1)
call_3858 = relay.TupleGetItem(func_1880_call(relay.reshape(var_3857.astype('int8'), [9, 2, 10]), relay.reshape(var_3857.astype('int8'), [9, 2, 10]), ), 1)
func_3713_call = mod.get_global_var('func_3713')
func_3718_call = mutated_mod.get_global_var('func_3718')
var_3880 = relay.var("var_3880", dtype = "float64", shape = (1, 640))#candidate|3880|(1, 640)|var|float64
var_3881 = relay.var("var_3881", dtype = "float64", shape = (1568,))#candidate|3881|(1568,)|var|float64
call_3879 = relay.TupleGetItem(func_3713_call(relay.reshape(call_3854.astype('float32'), [6, 13, 3]), relay.reshape(var_3880.astype('float64'), [640,]), relay.reshape(var_3881.astype('float64'), [1568,]), ), 8)
call_3882 = relay.TupleGetItem(func_3718_call(relay.reshape(call_3854.astype('float32'), [6, 13, 3]), relay.reshape(var_3880.astype('float64'), [640,]), relay.reshape(var_3881.astype('float64'), [1568,]), ), 8)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
call_3901 = relay.TupleGetItem(func_529_call(relay.reshape(var_3881.astype('float64'), [16, 7, 14]), relay.reshape(var_3881.astype('float64'), [16, 7, 14]), ), 2)
call_3902 = relay.TupleGetItem(func_532_call(relay.reshape(var_3881.astype('float64'), [16, 7, 14]), relay.reshape(var_3881.astype('float64'), [16, 7, 14]), ), 2)
func_3288_call = mod.get_global_var('func_3288')
func_3293_call = mutated_mod.get_global_var('func_3293')
var_3907 = relay.var("var_3907", dtype = "bool", shape = ())#candidate|3907|()|var|bool
var_3908 = relay.var("var_3908", dtype = "bool", shape = (12, 60))#candidate|3908|(12, 60)|var|bool
call_3906 = relay.TupleGetItem(func_3288_call(relay.reshape(var_3907.astype('bool'), []), relay.reshape(var_3908.astype('bool'), [1, 720]), relay.reshape(call_3856.astype('float32'), [15, 4]), ), 10)
call_3909 = relay.TupleGetItem(func_3293_call(relay.reshape(var_3907.astype('bool'), []), relay.reshape(var_3908.astype('bool'), [1, 720]), relay.reshape(call_3856.astype('float32'), [15, 4]), ), 10)
output = relay.Tuple([call_3854,call_3856,var_3857,call_3879,var_3880,var_3881,call_3901,call_3906,var_3907,var_3908,])
output2 = relay.Tuple([call_3855,call_3858,var_3857,call_3882,var_3880,var_3881,call_3902,call_3909,var_3907,var_3908,])
func_3910 = relay.Function([var_3857,var_3880,var_3881,var_3907,var_3908,], output)
mod['func_3910'] = func_3910
mod = relay.transform.InferType()(mod)
var_3911 = relay.var("var_3911", dtype = "int8", shape = (180,))#candidate|3911|(180,)|var|int8
var_3912 = relay.var("var_3912", dtype = "float64", shape = (1, 640))#candidate|3912|(1, 640)|var|float64
var_3913 = relay.var("var_3913", dtype = "float64", shape = (1568,))#candidate|3913|(1568,)|var|float64
var_3914 = relay.var("var_3914", dtype = "bool", shape = ())#candidate|3914|()|var|bool
var_3915 = relay.var("var_3915", dtype = "bool", shape = (12, 60))#candidate|3915|(12, 60)|var|bool
output = func_3910(var_3911,var_3912,var_3913,var_3914,var_3915,)
func_3916 = relay.Function([var_3911,var_3912,var_3913,var_3914,var_3915,], output)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2841_call = mod.get_global_var('func_2841')
func_2842_call = mutated_mod.get_global_var('func_2842')
call_3937 = relay.TupleGetItem(func_2841_call(), 0)
call_3938 = relay.TupleGetItem(func_2842_call(), 0)
output = relay.Tuple([call_3937,])
output2 = relay.Tuple([call_3938,])
func_3939 = relay.Function([], output)
mod['func_3939'] = func_3939
mod = relay.transform.InferType()(mod)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3939_call = mutated_mod.get_global_var('func_3939')
call_3940 = func_3939_call()
output = call_3940
func_3941 = relay.Function([], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_3949 = relay.TupleGetItem(func_2634_call(), 0)
call_3950 = relay.TupleGetItem(func_2635_call(), 0)
output = relay.Tuple([call_3949,])
output2 = relay.Tuple([call_3950,])
func_3968 = relay.Function([], output)
mod['func_3968'] = func_3968
mod = relay.transform.InferType()(mod)
mutated_mod['func_3968'] = func_3968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3968_call = mutated_mod.get_global_var('func_3968')
call_3969 = func_3968_call()
output = call_3969
func_3970 = relay.Function([], output)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4029 = relay.var("var_4029", dtype = "float32", shape = (2, 12, 8))#candidate|4029|(2, 12, 8)|var|float32
uop_4030 = relay.atan(var_4029.astype('float32')) # shape=(2, 12, 8)
func_3288_call = mod.get_global_var('func_3288')
func_3293_call = mutated_mod.get_global_var('func_3293')
var_4033 = relay.var("var_4033", dtype = "bool", shape = ())#candidate|4033|()|var|bool
const_4034 = relay.const([False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False], dtype = "bool")#candidate|4034|(720,)|const|bool
var_4035 = relay.var("var_4035", dtype = "float32", shape = (60,))#candidate|4035|(60,)|var|float32
call_4032 = relay.TupleGetItem(func_3288_call(relay.reshape(var_4033.astype('bool'), []), relay.reshape(const_4034.astype('bool'), [1, 720]), relay.reshape(var_4035.astype('float32'), [15, 4]), ), 10)
call_4036 = relay.TupleGetItem(func_3293_call(relay.reshape(var_4033.astype('bool'), []), relay.reshape(const_4034.astype('bool'), [1, 720]), relay.reshape(var_4035.astype('float32'), [15, 4]), ), 10)
const_4049 = relay.const([[[-4.236515,9.173962,-3.473448,-0.237182,-0.985104,9.119514,-2.190803,-3.283758],[-2.519799,-0.964667,3.720414,1.039431,8.926175,-7.605188,4.696772,0.584767],[-0.914081,-8.655555,-8.988271,-7.303876,7.663580,-4.872543,6.595860,-3.162876],[9.779692,3.479596,4.403168,2.196708,-9.824088,-5.200717,3.207166,9.823674],[-5.477131,-1.678104,-8.872789,5.748859,-3.812362,3.572183,1.538120,7.935199],[9.145765,7.846947,0.331825,2.705661,-0.853799,2.070799,5.653284,9.304353],[-2.923882,8.074921,-8.960083,7.030448,-7.413407,5.003165,-1.747754,-4.713830],[9.144878,-5.699345,-9.862063,-9.142296,1.541908,-0.761035,-4.334280,-5.443887],[3.483720,7.540277,1.612655,-1.795746,-6.989362,3.490215,9.537112,-4.666743],[2.064893,9.425974,-3.710930,9.478013,-5.354597,-7.072300,5.477072,2.819238],[-4.226523,1.551005,0.983616,5.483418,5.093860,2.598482,-0.961111,1.777120],[-8.813810,5.274653,-5.375750,0.746043,-4.652051,7.021017,-1.537641,-5.745127]],[[4.645971,-9.499829,-4.444871,-3.775929,-0.775026,-9.579693,5.735361,4.381870],[-5.848292,-8.008133,4.615485,8.214230,-8.178325,9.188573,-7.337119,5.564922],[4.171601,-4.297968,-1.574229,4.081282,-6.376929,7.792651,7.666870,-2.703061],[-3.641796,-0.289401,-1.076341,3.382055,-4.105127,3.702094,4.629534,4.311412],[4.986101,-8.997616,-4.948932,-8.172806,5.619808,8.114083,-3.607124,-3.318669],[-5.516350,-0.600032,8.984266,8.246763,9.390796,-4.713464,-2.073067,0.294112],[6.348959,1.940257,-4.797003,1.319904,8.409365,-3.500101,-2.811966,-2.922784],[-2.628599,4.188260,7.182780,6.149187,0.224690,5.829664,0.540226,9.302831],[-0.992890,9.553666,3.190345,-9.561337,9.920542,-4.333344,8.093353,-6.284255],[-6.825957,9.225997,3.479199,-6.238661,-8.870633,-9.206987,-2.337395,3.674462],[-9.221654,7.103764,7.146875,-6.170194,9.797241,-5.624686,-8.751418,-1.262193],[-7.575984,-2.877838,-3.158877,-9.450701,-3.631611,3.908665,1.116034,6.609143]]], dtype = "float32")#candidate|4049|(2, 12, 8)|const|float32
bop_4050 = relay.equal(uop_4030.astype('bool'), relay.reshape(const_4049.astype('bool'), relay.shape_of(uop_4030))) # shape=(2, 12, 8)
func_3968_call = mod.get_global_var('func_3968')
func_3970_call = mutated_mod.get_global_var('func_3970')
call_4055 = relay.TupleGetItem(func_3968_call(), 0)
call_4056 = relay.TupleGetItem(func_3970_call(), 0)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
var_4058 = relay.var("var_4058", dtype = "int32", shape = (96, 1))#candidate|4058|(96, 1)|var|int32
call_4057 = relay.TupleGetItem(func_3764_call(relay.reshape(var_4058.astype('int32'), [4, 24])), 7)
call_4059 = relay.TupleGetItem(func_3766_call(relay.reshape(var_4058.astype('int32'), [4, 24])), 7)
bop_4082 = relay.bitwise_xor(bop_4050.astype('int16'), relay.reshape(var_4029.astype('int16'), relay.shape_of(bop_4050))) # shape=(2, 12, 8)
uop_4085 = relay.rsqrt(bop_4050.astype('float32')) # shape=(2, 12, 8)
func_3137_call = mod.get_global_var('func_3137')
func_3139_call = mutated_mod.get_global_var('func_3139')
call_4093 = relay.TupleGetItem(func_3137_call(), 0)
call_4094 = relay.TupleGetItem(func_3139_call(), 0)
func_3112_call = mod.get_global_var('func_3112')
func_3118_call = mutated_mod.get_global_var('func_3118')
const_4098 = relay.const([4.999182,7.755102,-0.881514,-3.992167,8.655059,-4.072496,8.611101,4.216580,9.573065,7.907007,-2.009224,-9.215356,-5.522306,-1.523717,1.998098,-6.768015,-1.805325,6.745235,-3.445626,4.531539,-1.188597,9.514097,-5.683479,-5.052478,-2.839686,8.290522,1.824683,-7.046285,-7.697015,3.153513,-0.267338,-2.340490,8.929792,6.454829,9.160674,9.230532,-1.741129,7.831703,-7.491423,6.528447,-5.659910,0.352707,-1.635463,0.275846,-7.820480,-3.503805,-4.380219,3.530963,-2.043607,0.472646,-1.766104,-4.993098,9.199929,3.950015,1.119056,6.495297,-5.624958,3.081293,-8.664205,4.940418,4.122199,5.187474,-7.144363,-6.902626,9.257269,-5.177982,-4.472216,4.273925,-7.831446,8.471077,5.844884,4.129415,4.701635,-8.941335,0.221797,8.900217,7.586240,-5.794694,9.139237,7.009473,2.926419,-4.992660,-6.566473,0.844017,8.205301,-1.296626,0.465668,-8.818402,0.340388,-1.511926,-6.191434,2.169077,-2.420035,4.379724,-7.068846,0.271437,-3.087599,-3.161343,2.795689,1.435531,-1.404474,2.619016,-6.938151,7.697448,-0.446003,-6.465368,6.636095,-2.588513,-9.141114,5.306141,-4.146037,-1.140364,5.164777,1.940977,-0.655025,0.452491,0.350118,7.886969,-5.923579,9.784376,-6.470923,6.973754,6.531537,-7.377106,3.255423,6.147983,-6.631808,-4.712126,-5.798310,-5.072108,-5.159404,4.809684,-2.544718,3.303071,3.926397,6.861958,9.818006,3.124788,-8.969828,-6.011591,-3.617987,-0.170051,2.679103,-8.738658,-4.800814,-0.338916,-9.653065,-6.766390,-6.742674,5.951094,-0.611684,-5.085359,4.327077,9.407391,7.087276,5.838571,4.465042,-2.986967,-8.591354,-4.286989,6.171305,4.286738,-6.343605,-6.761647,-4.629293,2.043402,-3.357978,-6.010707], dtype = "float64")#candidate|4098|(168,)|const|float64
const_4099 = relay.const([-0.131823,-6.921376,5.485201,1.584284,-9.897649,-6.081641,-4.680288,2.860541,-7.405048,-7.697536,2.213359,4.190280,-0.562455,5.610800,8.283220,-0.193266,6.056545,-1.616050,1.866145,-7.498043], dtype = "float64")#candidate|4099|(20,)|const|float64
call_4097 = relay.TupleGetItem(func_3112_call(relay.reshape(const_4098.astype('float64'), [14, 12]), relay.reshape(var_4033.astype('bool'), []), relay.reshape(const_4099.astype('float64'), [20, 1]), relay.reshape(const_4034.astype('bool'), [720,]), relay.reshape(call_4032.astype('float32'), [60,]), ), 4)
call_4100 = relay.TupleGetItem(func_3118_call(relay.reshape(const_4098.astype('float64'), [14, 12]), relay.reshape(var_4033.astype('bool'), []), relay.reshape(const_4099.astype('float64'), [20, 1]), relay.reshape(const_4034.astype('bool'), [720,]), relay.reshape(call_4032.astype('float32'), [60,]), ), 4)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
call_4115 = relay.TupleGetItem(func_3575_call(relay.reshape(call_4032.astype('float32'), [1, 60])), 0)
call_4116 = relay.TupleGetItem(func_3577_call(relay.reshape(call_4032.astype('float32'), [1, 60])), 0)
func_286_call = mod.get_global_var('func_286')
func_288_call = mutated_mod.get_global_var('func_288')
call_4131 = relay.TupleGetItem(func_286_call(relay.reshape(var_4035.astype('float32'), [1, 10, 6])), 3)
call_4132 = relay.TupleGetItem(func_288_call(relay.reshape(var_4035.astype('float32'), [1, 10, 6])), 3)
output = relay.Tuple([call_4032,var_4033,const_4034,var_4035,call_4055,call_4057,var_4058,bop_4082,uop_4085,call_4093,call_4097,const_4098,const_4099,call_4115,call_4131,])
output2 = relay.Tuple([call_4036,var_4033,const_4034,var_4035,call_4056,call_4059,var_4058,bop_4082,uop_4085,call_4094,call_4100,const_4098,const_4099,call_4116,call_4132,])
func_4134 = relay.Function([var_4029,var_4033,var_4035,var_4058,], output)
mod['func_4134'] = func_4134
mod = relay.transform.InferType()(mod)
var_4135 = relay.var("var_4135", dtype = "float32", shape = (2, 12, 8))#candidate|4135|(2, 12, 8)|var|float32
var_4136 = relay.var("var_4136", dtype = "bool", shape = ())#candidate|4136|()|var|bool
var_4137 = relay.var("var_4137", dtype = "float32", shape = (60,))#candidate|4137|(60,)|var|float32
var_4138 = relay.var("var_4138", dtype = "int32", shape = (96, 1))#candidate|4138|(96, 1)|var|int32
output = func_4134(var_4135,var_4136,var_4137,var_4138,)
func_4139 = relay.Function([var_4135,var_4136,var_4137,var_4138,], output)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_4164 = relay.TupleGetItem(func_2634_call(), 0)
call_4165 = relay.TupleGetItem(func_2635_call(), 0)
func_3377_call = mod.get_global_var('func_3377')
func_3380_call = mutated_mod.get_global_var('func_3380')
call_4166 = relay.TupleGetItem(func_3377_call(relay.reshape(call_4164.astype('float32'), [6, 13, 3])), 0)
call_4167 = relay.TupleGetItem(func_3380_call(relay.reshape(call_4164.astype('float32'), [6, 13, 3])), 0)
func_2221_call = mod.get_global_var('func_2221')
func_2223_call = mutated_mod.get_global_var('func_2223')
var_4171 = relay.var("var_4171", dtype = "int16", shape = (288,))#candidate|4171|(288,)|var|int16
call_4170 = func_2221_call(relay.reshape(var_4171.astype('int16'), [12, 8, 3]))
call_4172 = func_2221_call(relay.reshape(var_4171.astype('int16'), [12, 8, 3]))
output = relay.Tuple([call_4164,call_4166,call_4170,var_4171,])
output2 = relay.Tuple([call_4165,call_4167,call_4172,var_4171,])
func_4179 = relay.Function([var_4171,], output)
mod['func_4179'] = func_4179
mod = relay.transform.InferType()(mod)
var_4180 = relay.var("var_4180", dtype = "int16", shape = (288,))#candidate|4180|(288,)|var|int16
output = func_4179(var_4180)
func_4181 = relay.Function([var_4180], output)
mutated_mod['func_4181'] = func_4181
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4204 = relay.var("var_4204", dtype = "float64", shape = (10, 7, 16))#candidate|4204|(10, 7, 16)|var|float64
uop_4205 = relay.acos(var_4204.astype('float64')) # shape=(10, 7, 16)
func_749_call = mod.get_global_var('func_749')
func_752_call = mutated_mod.get_global_var('func_752')
const_4215 = relay.const([-4,6,10,6,2,-8,1,7,-7,-4,4,-6,7,10,-10,7,5,-2,5,-6,-8,-1,-8,-2,-3,-9,2,-3,-3,-2,-2,-4,2,2,4,4,4,-10,4,-9,-6,6,-8,-6,4,3,-7,-4,5,-6,-4,10,6,2,1,10,4,5,7,-2,-1,6,3,9,-6,8,7,-9,7,-6,-5,-6,-4,-10,4,1,-8,-5,7,-3,-1,2,-9,3,-4,-4,5,7,-1,-8,10,2,6,-1,3,7], dtype = "int32")#candidate|4215|(96,)|const|int32
call_4214 = relay.TupleGetItem(func_749_call(relay.reshape(const_4215.astype('int32'), [2, 8, 6])), 0)
call_4216 = relay.TupleGetItem(func_752_call(relay.reshape(const_4215.astype('int32'), [2, 8, 6])), 0)
uop_4221 = relay.sigmoid(const_4215.astype('float64')) # shape=(96,)
uop_4227 = relay.sinh(uop_4205.astype('float64')) # shape=(10, 7, 16)
func_721_call = mod.get_global_var('func_721')
func_725_call = mutated_mod.get_global_var('func_725')
const_4240 = relay.const([-8.009860,-2.389823,4.245263,-7.627118,6.738765,-2.106644,-4.443419,9.528250,-8.871981,-1.297848,-8.831669,-4.596835,7.042262,-1.827581,0.168265,-5.896417,2.746230,2.002469,-1.279928,0.323674,-6.592411,-7.739540,5.240389,6.852788,7.478130,6.740317,-2.903213,-0.063469,-5.496156,-2.362505,-9.217910,6.584054,-8.203203,-6.191199,-7.384589,-7.270164,-7.117310,6.309195,-1.864369,9.789185,-5.396990,0.042317,-2.156125,-5.748895,-7.877968,-3.180100,6.419584,-1.128898,-0.399960,1.510406,-4.839186,7.848361,-3.198353,-0.472888,-5.974972,-4.053744,2.806179,5.261594,2.038144,-4.310367,-4.655827,-6.098673,-8.849088,3.313169,-1.519945,-5.727862,-6.611792,0.446253,-2.324135,3.827100,2.399294,-0.662644,1.514255,9.020410,5.458580,-4.277807,-3.189994,-6.587734,3.750207,-9.268701,-2.303259,-3.226636,-4.259370,4.157975,-6.069521,0.674574,9.142607,-9.173565,3.009132,0.570818,2.335149,4.443252,5.260783,-4.341191,0.201781,-2.956371,9.750684,7.049401,-9.899318,9.981623,8.702532,-8.738485,-9.334055,-1.812652,-6.214403,-2.875480,9.800545,-7.759322,9.070547,-2.775764,2.215059,-1.217395,7.146452,-8.088492,9.963394,-3.475751,1.820007,0.750832,5.518889,3.367667,7.888692,0.625077,5.578796,4.580195,1.008304,-8.291240,-2.300987,9.135751,-4.149311,9.599800,3.524983,-4.071056,8.303367,-1.927851,9.259673,-0.724088,-7.142267,-2.675844,1.463588,-8.939189,8.667325,3.494619,-9.226793,2.265378,7.955655,-8.637469,2.298023,8.344653,-6.113490,8.924322,9.718099,-8.695408,-9.551193,-6.823600,0.938482,-8.283744,8.309648,-1.461531,-7.151433,-8.024061,0.945774,7.128511,0.264792,5.185085,-7.460399,-7.245171,-3.290477,6.616058,3.468042,6.559359,1.109754,0.840906,6.375593,-6.113137,1.165211,4.105708,7.597995,7.236378,0.617474,-7.377136,-6.952856,-7.651144,2.207924,3.153745,7.849095,9.581899,-9.969395,2.065956,8.772201,3.321052,-2.914563,1.693154,7.969360,-2.383615,4.338196,6.569918,6.522105,-8.744637,3.721487,8.953776,-7.836406,7.066356,4.911997,1.789447,-9.100387,-4.634412,0.928220,-7.773246,-4.715655,-9.132548,5.829479,7.995221,6.994002,-4.584376,8.141538,5.609716,-3.292157,-9.995376,7.369535,-7.797225,6.404153,-6.831702,-6.006339,7.692752,9.355321,-8.217586,6.353373,-0.793437,-5.106055,-2.277731,-5.227371,0.169767,-3.462262,8.790496,2.437253,-3.562433,-5.759842,-6.027442,9.214766,4.523084,2.289524,-0.632004,-7.109206,2.069569,6.674491,-1.632312,9.530101,-3.293181,-5.757233,3.227046,-1.005221,-7.354168,-7.636564,2.706178,-4.155790,-1.948672,2.591295,1.989325,9.940908,-3.206354,-4.201234,9.219527,-3.314562,0.048117,3.070264,2.169235,-0.488331,-4.553637,-2.347451,3.476679,-3.110500,-7.210743,-8.109278,7.559304,-6.578293,-8.880961,0.552084,-8.360971,9.450290,-8.281164,-9.736073,-7.579638,3.554549,0.124476,9.938753,-7.300535,-8.563510,0.552105,-6.338400,5.663553,-4.587917,4.345594,8.937629,8.312705,-2.637074,5.370357,0.073484,1.624433,-0.963653,-9.829238,7.999855,8.731003,7.457537,-7.900233,-0.632491,-3.033177,8.008905,-6.695980,6.697529,-4.651933,7.128125,-9.032236,0.683855,5.154663,-5.227448,0.876314,-8.011288,-1.399866,3.249616,-9.899612,-7.710987,-8.566058,-9.787170,-1.724514,7.631052,2.504218,-3.274239,3.628963,-4.429181,4.606104,2.428249,-6.317321,4.284675,6.429465,-6.056145,-6.054202,1.555291,-5.295883,0.003157,9.703358,5.287042,5.732699,8.179682,-4.431196,4.422123,-1.200349,-4.056560,2.842158,5.970809,5.013334,-9.312840,-3.394752,-6.390018,3.850439,8.152184,-9.512553,-6.791800,-3.780601,5.360021,0.480448,-9.229619,1.262022,-1.358829,0.121189,3.475528,7.549388,-2.597002,9.737576,3.154687,3.728375,-4.083908,1.512272,9.652218,-9.756629,-4.817362,-6.966493,2.121444,-9.387405,-6.503798,-8.938378,-3.146881,1.522610,3.998034,9.774911,1.894208,-4.010276,9.734508,-6.226536,0.635378,9.542795,-5.535014,6.723582,3.677003,-5.202126,9.660048,5.340903,-8.127292,-3.826552,-9.448760,-3.249156,-6.709608,1.847518,0.105199,4.212557,-9.736491,-9.673575,-8.346375,-3.332712,2.667445,2.699180,0.853235,-7.899072,4.820620,-7.077229,6.246326,9.405274,3.349132,7.494861,6.298443,6.445187,9.183642,-5.336094,2.071092,1.972042,6.818849,8.947642,7.929043,8.047587,2.079089,-6.918737,-6.125339,-4.048795,-9.805875,-7.407036,-5.327676,5.629881,-8.343156,8.232820,9.670659,-8.510119,5.622126,1.487732,-1.735481,8.547950,-4.369696,-7.863660,-7.465422,-2.008653,-7.032449,-3.699449,4.737936,-2.538760,4.240891,6.083198,-0.710490,-6.401065,-2.594071,-1.061580,-5.477906,-9.245696,-1.553375,4.973972,0.234059,4.975882,5.372832,3.768427,-5.099437,-9.702049,7.963836,-8.492456,2.970535,-3.974818,-9.544792,-3.708154,-1.728810,-4.088949,7.983011,1.714868,1.973508,-8.770628,-4.035901,3.118637,2.038732,0.053214,-4.129989,-3.291014,-2.364214,8.195210,-8.817550,2.604565,-6.664302,7.064779,3.740512,-0.691734,7.977463,2.657340,-7.171875,-1.878453,-3.939627,6.038635,6.035304,4.024402,-0.107694,3.841629,-5.965678,9.641872,-9.534036,9.052493,-7.276925,-6.589612,-3.902246,3.119722,4.436187,5.623790,4.738306,-0.020736,-1.673599,-5.489990,-6.929184,3.927889,-1.940198,1.448335,3.394640,7.274598,-0.249488,-4.323243,0.047792,-6.640486,2.937308,7.677279,-3.237221,-1.502772,1.559006,7.023143,-9.140809,-5.738792,7.194765,5.488416,-1.816014,-6.744559,-7.963403,-9.805978,4.048939,-8.908280,-9.149766,2.777200,5.399681,8.896587,1.867020,-8.626939,-4.674641,-3.440805,-3.883789,-0.246254,-5.443591,-6.652286,2.949908,9.287228,3.693647,-9.413767,9.339864,-6.270677,5.594675,0.466271,-8.673138,-4.342527,-6.179998,-4.868564,-2.852272,-1.293442,-5.311263,2.965028,6.306590,-2.045337,0.838331,-7.734752,-2.839488,7.851519,-9.998631,-0.369583,5.491660,7.631349,-5.756174,-6.555182,0.939415,3.051029,8.465884,7.406096,4.071264,9.968428,-7.935370,3.758815,-9.430754,-1.910157,2.515235,6.661137,0.719284,2.377583,7.635688,-9.710128,-9.564088,-2.602819,7.743348,-4.829210,5.904165,0.978026,2.392709,-4.385235,4.419499,-0.100424,-2.478481,7.625743,1.518043,1.449750,2.419274,8.899605,1.883552,9.209954,8.145684,-7.945677,-6.375434,3.258653,-6.880709,0.215647,-0.043775,8.483042,-2.054891,2.674958,2.816581,-4.310900,-9.909599,-3.241164,7.519531,-3.484960,6.095885,6.042042,-4.505584,7.708756,-2.954637,5.150344,-6.084437,1.756800,2.599035,-2.286810,8.950539,6.898604,-1.263567,-3.688834,-8.001935,0.293762,8.966652,3.446429,8.914458,-2.035008,3.588607,-2.485156,-2.988178,-2.289213,-1.893137,-0.258306,7.041041,-8.303825,4.157504,3.997405,8.696544,7.626759,9.153909,6.192593,4.032248,2.270295,2.195998,1.689683,7.630597,7.416030,-3.352826,-7.212203,-2.456990,-1.417306,8.635417,3.578207,-5.150909,2.449905,1.232496,-0.418422,-4.888893,1.366759,4.936386,-4.869599,0.545872,6.789282,8.926395,6.023341,-1.974139], dtype = "float64")#candidate|4240|(693,)|const|float64
var_4241 = relay.var("var_4241", dtype = "bool", shape = (88,))#candidate|4241|(88,)|var|bool
call_4239 = relay.TupleGetItem(func_721_call(relay.reshape(const_4240.astype('float64'), [11, 9, 7]), relay.reshape(var_4241.astype('bool'), [88,]), ), 2)
call_4242 = relay.TupleGetItem(func_725_call(relay.reshape(const_4240.astype('float64'), [11, 9, 7]), relay.reshape(var_4241.astype('bool'), [88,]), ), 2)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_4261 = relay.TupleGetItem(func_3322_call(), 0)
call_4262 = relay.TupleGetItem(func_3323_call(), 0)
bop_4296 = relay.bitwise_or(uop_4227.astype('uint64'), relay.reshape(var_4204.astype('uint64'), relay.shape_of(uop_4227))) # shape=(10, 7, 16)
output = relay.Tuple([call_4214,uop_4221,call_4239,const_4240,var_4241,call_4261,bop_4296,])
output2 = relay.Tuple([call_4216,uop_4221,call_4242,const_4240,var_4241,call_4262,bop_4296,])
func_4313 = relay.Function([var_4204,var_4241,], output)
mod['func_4313'] = func_4313
mod = relay.transform.InferType()(mod)
mutated_mod['func_4313'] = func_4313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4313_call = mutated_mod.get_global_var('func_4313')
var_4315 = relay.var("var_4315", dtype = "float64", shape = (10, 7, 16))#candidate|4315|(10, 7, 16)|var|float64
var_4316 = relay.var("var_4316", dtype = "bool", shape = (88,))#candidate|4316|(88,)|var|bool
call_4314 = func_4313_call(var_4315,var_4316,)
output = call_4314
func_4317 = relay.Function([var_4315,var_4316,], output)
mutated_mod['func_4317'] = func_4317
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4326 = relay.var("var_4326", dtype = "int8", shape = (9, 10, 16))#candidate|4326|(9, 10, 16)|var|int8
var_4327 = relay.var("var_4327", dtype = "int8", shape = (9, 10, 16))#candidate|4327|(9, 10, 16)|var|int8
bop_4328 = relay.minimum(var_4326.astype('int8'), relay.reshape(var_4327.astype('int8'), relay.shape_of(var_4326))) # shape=(9, 10, 16)
output = bop_4328
output2 = bop_4328
func_4334 = relay.Function([var_4326,var_4327,], output)
mod['func_4334'] = func_4334
mod = relay.transform.InferType()(mod)
mutated_mod['func_4334'] = func_4334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mutated_mod.get_global_var('func_4334')
var_4336 = relay.var("var_4336", dtype = "int8", shape = (9, 10, 16))#candidate|4336|(9, 10, 16)|var|int8
var_4337 = relay.var("var_4337", dtype = "int8", shape = (9, 10, 16))#candidate|4337|(9, 10, 16)|var|int8
call_4335 = func_4334_call(var_4336,var_4337,)
output = call_4335
func_4338 = relay.Function([var_4336,var_4337,], output)
mutated_mod['func_4338'] = func_4338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4356 = relay.var("var_4356", dtype = "int32", shape = (13, 6, 12))#candidate|4356|(13, 6, 12)|var|int32
var_4357 = relay.var("var_4357", dtype = "int32", shape = (13, 6, 12))#candidate|4357|(13, 6, 12)|var|int32
bop_4358 = relay.equal(var_4356.astype('bool'), relay.reshape(var_4357.astype('bool'), relay.shape_of(var_4356))) # shape=(13, 6, 12)
func_4179_call = mod.get_global_var('func_4179')
func_4181_call = mutated_mod.get_global_var('func_4181')
var_4369 = relay.var("var_4369", dtype = "int16", shape = (288,))#candidate|4369|(288,)|var|int16
call_4368 = relay.TupleGetItem(func_4179_call(relay.reshape(var_4369.astype('int16'), [288,])), 1)
call_4370 = relay.TupleGetItem(func_4181_call(relay.reshape(var_4369.astype('int16'), [288,])), 1)
output = relay.Tuple([bop_4358,call_4368,var_4369,])
output2 = relay.Tuple([bop_4358,call_4370,var_4369,])
func_4373 = relay.Function([var_4356,var_4357,var_4369,], output)
mod['func_4373'] = func_4373
mod = relay.transform.InferType()(mod)
mutated_mod['func_4373'] = func_4373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4373_call = mutated_mod.get_global_var('func_4373')
var_4375 = relay.var("var_4375", dtype = "int32", shape = (13, 6, 12))#candidate|4375|(13, 6, 12)|var|int32
var_4376 = relay.var("var_4376", dtype = "int32", shape = (13, 6, 12))#candidate|4376|(13, 6, 12)|var|int32
var_4377 = relay.var("var_4377", dtype = "int16", shape = (288,))#candidate|4377|(288,)|var|int16
call_4374 = func_4373_call(var_4375,var_4376,var_4377,)
output = call_4374
func_4378 = relay.Function([var_4375,var_4376,var_4377,], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3939_call = mod.get_global_var('func_3939')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4395 = relay.TupleGetItem(func_3939_call(), 0)
call_4396 = relay.TupleGetItem(func_3941_call(), 0)
var_4408 = relay.var("var_4408", dtype = "float32", shape = (6, 13, 3))#candidate|4408|(6, 13, 3)|var|float32
bop_4409 = relay.logical_xor(call_4395.astype('int16'), relay.reshape(var_4408.astype('int16'), relay.shape_of(call_4395))) # shape=(6, 13, 3)
bop_4412 = relay.logical_xor(call_4396.astype('int16'), relay.reshape(var_4408.astype('int16'), relay.shape_of(call_4396))) # shape=(6, 13, 3)
func_1058_call = mod.get_global_var('func_1058')
func_1060_call = mutated_mod.get_global_var('func_1060')
const_4417 = relay.const([-8.307474,-6.018796,1.520212,3.421825,3.434551,-1.781503,-4.080344,6.371267,-0.185833,7.407682,-1.382228,1.616849,-1.385689,-8.784253,-4.193303,5.373838,-5.679428,2.951182,2.947845,-9.902139,-5.618907,-9.045149,9.984060,9.922232,8.331151,0.117223,1.935476,-7.168760,-7.402402,6.277635,-3.479751,3.709266,-6.420110,2.773006,-5.073212,-6.559809,-5.790328,7.997877,9.799523,1.420318,2.388713,-0.107337,-4.844885,-2.727125,-3.098352,5.686446,-1.485206,5.189981,7.497098,-4.332090,-7.424944,-1.245711,6.003193,-8.938275,6.806562,1.254356,-7.829725,0.760254,-5.846204,-9.904410,8.812785,-0.697721,-0.177893,7.671028,-9.989754,7.500292,-1.066507,8.220811,6.869126,-3.367589,-2.121020,9.525842,-8.503916,5.050198,2.642168,7.171228,1.101204,-0.960573,4.789115,1.619632,-4.823749,2.424513,-0.249409,-5.472344,-2.376117,-9.798413,2.693116,-2.506288,-8.557809,-7.012681,6.580754,4.599477,0.289611,-1.429381,5.855001,-5.208851,5.631742,-1.664665,9.380337,3.768035,-6.556079,-9.699365,-6.508371,9.932573,-9.923428,-8.627700,5.532652,-2.294208,3.416051,5.942681,-9.335644,-9.292662,9.545757,8.910734,-3.702495,0.841566,7.394787,-7.517976,-6.764705,-4.920206,3.927377,-8.671641,-4.439180,-5.462565,9.032824,-7.578121,4.132892,5.490268,-0.557644,8.067574,-8.809863,9.095892,-4.051484,4.783338,0.718655,4.176215,-2.299052,7.663598,-5.142727,-2.263041,2.474711,1.781462,-1.077436,-1.110968,-2.889592,1.581559,-5.825450,-3.127219,-7.692090,0.670280,3.094761,-2.220811,-0.287530,9.984482,3.521763,-3.521718,-9.299023,-3.276094,4.441106,4.966364,-0.653944,-1.697577,5.770009,-7.805879,-4.584816,1.486268,-7.020866,6.576083,6.570810,-6.275603,-9.230093,-6.282599,-2.019235,5.384971,4.196614,7.404219,0.052058,-4.726606,-7.748865,-7.368631,-4.755141,7.046480,-0.328662,3.629997,8.088734,-3.669142,-6.985608,-9.440931,2.211075,-1.270114,9.439457,9.160099,7.815263,4.975978,-2.739901,-4.104866,-1.987994,6.006037,-4.291486,-8.007423,-9.079321,-4.176967,4.640739,-2.355433,-1.693203,1.849492,-6.138976,0.277473,-5.338375,-0.365121,-4.788809,3.744933,-8.213986,0.533131,3.230129,-3.393215,9.701430,4.285491,9.254308,2.484159,-0.300674,9.483539,8.124796,2.744402,-6.952806,-0.948609,-3.038782,3.669514,1.826525,-8.017898,-0.039714,-9.844434,7.898084,0.061378,4.958735,-2.165033,7.745409,9.404069,-8.393200,3.669442,-8.027359,-6.487203,8.573255,7.113390,-7.730559,-7.204353,-3.086999,-0.383862,-0.827751,-8.463836,5.234048,8.057947,8.847881,1.494672,8.959840,-8.346949,3.423860,7.296616,-0.637657,1.086565,-7.405985,7.319830,-6.198283,-8.926789], dtype = "float64")#candidate|4417|(264,)|const|float64
call_4416 = relay.TupleGetItem(func_1058_call(relay.reshape(const_4417.astype('float64'), [8, 3, 11])), 0)
call_4418 = relay.TupleGetItem(func_1060_call(relay.reshape(const_4417.astype('float64'), [8, 3, 11])), 0)
func_4334_call = mod.get_global_var('func_4334')
func_4338_call = mutated_mod.get_global_var('func_4338')
var_4424 = relay.var("var_4424", dtype = "int8", shape = (1440,))#candidate|4424|(1440,)|var|int8
call_4423 = func_4334_call(relay.reshape(var_4424.astype('int8'), [9, 10, 16]), relay.reshape(var_4424.astype('int8'), [9, 10, 16]), )
call_4425 = func_4334_call(relay.reshape(var_4424.astype('int8'), [9, 10, 16]), relay.reshape(var_4424.astype('int8'), [9, 10, 16]), )
func_749_call = mod.get_global_var('func_749')
func_752_call = mutated_mod.get_global_var('func_752')
var_4427 = relay.var("var_4427", dtype = "int32", shape = (2, 48))#candidate|4427|(2, 48)|var|int32
call_4426 = relay.TupleGetItem(func_749_call(relay.reshape(var_4427.astype('int32'), [2, 8, 6])), 0)
call_4428 = relay.TupleGetItem(func_752_call(relay.reshape(var_4427.astype('int32'), [2, 8, 6])), 0)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_4434 = relay.TupleGetItem(func_2695_call(), 4)
call_4435 = relay.TupleGetItem(func_2697_call(), 4)
output = relay.Tuple([bop_4409,call_4416,const_4417,call_4423,var_4424,call_4426,var_4427,call_4434,])
output2 = relay.Tuple([bop_4412,call_4418,const_4417,call_4425,var_4424,call_4428,var_4427,call_4435,])
func_4461 = relay.Function([var_4408,var_4424,var_4427,], output)
mod['func_4461'] = func_4461
mod = relay.transform.InferType()(mod)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4461_call = mutated_mod.get_global_var('func_4461')
var_4463 = relay.var("var_4463", dtype = "float32", shape = (6, 13, 3))#candidate|4463|(6, 13, 3)|var|float32
var_4464 = relay.var("var_4464", dtype = "int8", shape = (1440,))#candidate|4464|(1440,)|var|int8
var_4465 = relay.var("var_4465", dtype = "int32", shape = (2, 48))#candidate|4465|(2, 48)|var|int32
call_4462 = func_4461_call(var_4463,var_4464,var_4465,)
output = call_4462
func_4466 = relay.Function([var_4463,var_4464,var_4465,], output)
mutated_mod['func_4466'] = func_4466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3137_call = mod.get_global_var('func_3137')
func_3139_call = mutated_mod.get_global_var('func_3139')
call_4476 = relay.TupleGetItem(func_3137_call(), 0)
call_4477 = relay.TupleGetItem(func_3139_call(), 0)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_4490 = relay.TupleGetItem(func_3322_call(), 0)
call_4491 = relay.TupleGetItem(func_3323_call(), 0)
func_721_call = mod.get_global_var('func_721')
func_725_call = mutated_mod.get_global_var('func_725')
var_4493 = relay.var("var_4493", dtype = "float64", shape = (693,))#candidate|4493|(693,)|var|float64
var_4494 = relay.var("var_4494", dtype = "bool", shape = (88,))#candidate|4494|(88,)|var|bool
call_4492 = relay.TupleGetItem(func_721_call(relay.reshape(var_4493.astype('float64'), [11, 9, 7]), relay.reshape(var_4494.astype('bool'), [88,]), ), 1)
call_4495 = relay.TupleGetItem(func_725_call(relay.reshape(var_4493.astype('float64'), [11, 9, 7]), relay.reshape(var_4494.astype('bool'), [88,]), ), 1)
var_4501 = relay.var("var_4501", dtype = "float64", shape = (1568,))#candidate|4501|(1568,)|var|float64
bop_4502 = relay.maximum(call_4492.astype('float64'), relay.reshape(var_4501.astype('float64'), relay.shape_of(call_4492))) # shape=(1568,)
bop_4505 = relay.maximum(call_4495.astype('float64'), relay.reshape(var_4501.astype('float64'), relay.shape_of(call_4495))) # shape=(1568,)
bop_4508 = relay.greater_equal(call_4476.astype('bool'), relay.reshape(call_4490.astype('bool'), relay.shape_of(call_4476))) # shape=(6, 13, 3)
bop_4511 = relay.greater_equal(call_4477.astype('bool'), relay.reshape(call_4491.astype('bool'), relay.shape_of(call_4477))) # shape=(6, 13, 3)
func_4334_call = mod.get_global_var('func_4334')
func_4338_call = mutated_mod.get_global_var('func_4338')
var_4515 = relay.var("var_4515", dtype = "int8", shape = (360, 4))#candidate|4515|(360, 4)|var|int8
call_4514 = func_4334_call(relay.reshape(var_4515.astype('int8'), [9, 10, 16]), relay.reshape(var_4515.astype('int8'), [9, 10, 16]), )
call_4516 = func_4334_call(relay.reshape(var_4515.astype('int8'), [9, 10, 16]), relay.reshape(var_4515.astype('int8'), [9, 10, 16]), )
func_2967_call = mod.get_global_var('func_2967')
func_2969_call = mutated_mod.get_global_var('func_2969')
call_4524 = relay.TupleGetItem(func_2967_call(relay.reshape(bop_4508.astype('float32'), [6, 13, 3])), 2)
call_4525 = relay.TupleGetItem(func_2969_call(relay.reshape(bop_4508.astype('float32'), [6, 13, 3])), 2)
output = relay.Tuple([var_4493,var_4494,bop_4502,bop_4508,call_4514,var_4515,call_4524,])
output2 = relay.Tuple([var_4493,var_4494,bop_4505,bop_4511,call_4516,var_4515,call_4525,])
func_4542 = relay.Function([var_4493,var_4494,var_4501,var_4515,], output)
mod['func_4542'] = func_4542
mod = relay.transform.InferType()(mod)
var_4543 = relay.var("var_4543", dtype = "float64", shape = (693,))#candidate|4543|(693,)|var|float64
var_4544 = relay.var("var_4544", dtype = "bool", shape = (88,))#candidate|4544|(88,)|var|bool
var_4545 = relay.var("var_4545", dtype = "float64", shape = (1568,))#candidate|4545|(1568,)|var|float64
var_4546 = relay.var("var_4546", dtype = "int8", shape = (360, 4))#candidate|4546|(360, 4)|var|int8
output = func_4542(var_4543,var_4544,var_4545,var_4546,)
func_4547 = relay.Function([var_4543,var_4544,var_4545,var_4546,], output)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4580 = relay.var("var_4580", dtype = "float64", shape = (4, 8, 5))#candidate|4580|(4, 8, 5)|var|float64
uop_4581 = relay.atanh(var_4580.astype('float64')) # shape=(4, 8, 5)
func_749_call = mod.get_global_var('func_749')
func_752_call = mutated_mod.get_global_var('func_752')
const_4598 = relay.const([-6,9,10,-5,-7,-4,-6,8,-5,-5,5,1,6,5,10,10,-8,9,2,9,-4,4,3,9,4,-6,1,4,1,-7,-5,6,5,5,1,7,-6,-7,-3,-1,-8,10,6,-7,3,-5,1,4,-9,3,3,-5,-3,10,-9,-4,9,8,-8,-10,7,9,-9,3,-2,-9,-8,-3,-9,8,-5,-4,-8,10,5,7,5,1,-1,-5,-3,-7,9,2,3,3,-4,-2,7,-8,-2,-6,5,5,2,-8], dtype = "int32")#candidate|4598|(96,)|const|int32
call_4597 = relay.TupleGetItem(func_749_call(relay.reshape(const_4598.astype('int32'), [2, 8, 6])), 0)
call_4599 = relay.TupleGetItem(func_752_call(relay.reshape(const_4598.astype('int32'), [2, 8, 6])), 0)
output = relay.Tuple([uop_4581,call_4597,const_4598,])
output2 = relay.Tuple([uop_4581,call_4599,const_4598,])
func_4602 = relay.Function([var_4580,], output)
mod['func_4602'] = func_4602
mod = relay.transform.InferType()(mod)
var_4603 = relay.var("var_4603", dtype = "float64", shape = (4, 8, 5))#candidate|4603|(4, 8, 5)|var|float64
output = func_4602(var_4603)
func_4604 = relay.Function([var_4603], output)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4620 = relay.var("var_4620", dtype = "float32", shape = (7, 10, 10))#candidate|4620|(7, 10, 10)|var|float32
uop_4621 = relay.sqrt(var_4620.astype('float32')) # shape=(7, 10, 10)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
var_4626 = relay.var("var_4626", dtype = "float32", shape = (60,))#candidate|4626|(60,)|var|float32
call_4625 = relay.TupleGetItem(func_3575_call(relay.reshape(var_4626.astype('float32'), [1, 60])), 1)
call_4627 = relay.TupleGetItem(func_3577_call(relay.reshape(var_4626.astype('float32'), [1, 60])), 1)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_4637 = func_2981_call()
call_4638 = func_2981_call()
output = relay.Tuple([uop_4621,call_4625,var_4626,call_4637,])
output2 = relay.Tuple([uop_4621,call_4627,var_4626,call_4638,])
func_4639 = relay.Function([var_4620,var_4626,], output)
mod['func_4639'] = func_4639
mod = relay.transform.InferType()(mod)
mutated_mod['func_4639'] = func_4639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4639_call = mutated_mod.get_global_var('func_4639')
var_4641 = relay.var("var_4641", dtype = "float32", shape = (7, 10, 10))#candidate|4641|(7, 10, 10)|var|float32
var_4642 = relay.var("var_4642", dtype = "float32", shape = (60,))#candidate|4642|(60,)|var|float32
call_4640 = func_4639_call(var_4641,var_4642,)
output = call_4640
func_4643 = relay.Function([var_4641,var_4642,], output)
mutated_mod['func_4643'] = func_4643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_4670 = relay.TupleGetItem(func_3322_call(), 0)
call_4671 = relay.TupleGetItem(func_3323_call(), 0)
var_4687 = relay.var("var_4687", dtype = "float32", shape = (6, 13, 3))#candidate|4687|(6, 13, 3)|var|float32
bop_4688 = relay.less(call_4670.astype('bool'), relay.reshape(var_4687.astype('bool'), relay.shape_of(call_4670))) # shape=(6, 13, 3)
bop_4691 = relay.less(call_4671.astype('bool'), relay.reshape(var_4687.astype('bool'), relay.shape_of(call_4671))) # shape=(6, 13, 3)
uop_4692 = relay.sigmoid(call_4670.astype('float64')) # shape=(6, 13, 3)
uop_4694 = relay.sigmoid(call_4671.astype('float64')) # shape=(6, 13, 3)
uop_4695 = relay.atan(uop_4692.astype('float64')) # shape=(6, 13, 3)
uop_4697 = relay.atan(uop_4694.astype('float64')) # shape=(6, 13, 3)
output = relay.Tuple([bop_4688,uop_4695,])
output2 = relay.Tuple([bop_4691,uop_4697,])
func_4698 = relay.Function([var_4687,], output)
mod['func_4698'] = func_4698
mod = relay.transform.InferType()(mod)
mutated_mod['func_4698'] = func_4698
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4699 = relay.var("var_4699", dtype = "float32", shape = (6, 13, 3))#candidate|4699|(6, 13, 3)|var|float32
func_4698_call = mutated_mod.get_global_var('func_4698')
call_4700 = func_4698_call(var_4699)
output = call_4700
func_4701 = relay.Function([var_4699], output)
mutated_mod['func_4701'] = func_4701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_4705 = relay.TupleGetItem(func_3322_call(), 1)
call_4706 = relay.TupleGetItem(func_3323_call(), 1)
output = call_4705
output2 = call_4706
func_4712 = relay.Function([], output)
mod['func_4712'] = func_4712
mod = relay.transform.InferType()(mod)
output = func_4712()
func_4713 = relay.Function([], output)
mutated_mod['func_4713'] = func_4713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_4731 = relay.TupleGetItem(func_2695_call(), 0)
call_4732 = relay.TupleGetItem(func_2697_call(), 0)
var_4735 = relay.var("var_4735", dtype = "float32", shape = (6, 13, 3))#candidate|4735|(6, 13, 3)|var|float32
bop_4736 = relay.not_equal(call_4731.astype('bool'), relay.reshape(var_4735.astype('bool'), relay.shape_of(call_4731))) # shape=(6, 13, 3)
bop_4739 = relay.not_equal(call_4732.astype('bool'), relay.reshape(var_4735.astype('bool'), relay.shape_of(call_4732))) # shape=(6, 13, 3)
output = bop_4736
output2 = bop_4739
func_4741 = relay.Function([var_4735,], output)
mod['func_4741'] = func_4741
mod = relay.transform.InferType()(mod)
mutated_mod['func_4741'] = func_4741
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4742 = relay.var("var_4742", dtype = "float32", shape = (6, 13, 3))#candidate|4742|(6, 13, 3)|var|float32
func_4741_call = mutated_mod.get_global_var('func_4741')
call_4743 = func_4741_call(var_4742)
output = call_4743
func_4744 = relay.Function([var_4742], output)
mutated_mod['func_4744'] = func_4744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_4787 = func_3012_call()
call_4788 = func_3012_call()
uop_4839 = relay.cos(call_4787.astype('float64')) # shape=(6, 13, 3)
uop_4841 = relay.cos(call_4788.astype('float64')) # shape=(6, 13, 3)
func_286_call = mod.get_global_var('func_286')
func_288_call = mutated_mod.get_global_var('func_288')
const_4843 = relay.const([[5.344781,-4.121816,1.905526,-1.992802],[8.303966,-2.506083,-5.170780,-6.161963],[7.414347,2.147280,4.922016,5.046903],[9.353363,4.070222,-6.048273,4.772228],[6.130523,-4.684334,5.389505,-2.537846],[-6.307431,8.207490,-1.468146,4.532037],[2.459418,-4.510564,9.569752,-7.639345],[-9.103461,9.065240,-2.507023,-7.719715],[-4.987773,9.906219,-6.346094,-0.121578],[-5.263045,9.489719,4.871680,-1.218963],[6.575796,3.550139,-0.118287,-9.317601],[3.161837,-6.047910,-1.926131,-1.033432],[1.913936,-4.330957,1.108375,-5.036009],[-0.415983,4.842385,-7.317062,-1.998856],[-7.292227,-8.059798,4.742396,2.408055]], dtype = "float32")#candidate|4843|(15, 4)|const|float32
call_4842 = relay.TupleGetItem(func_286_call(relay.reshape(const_4843.astype('float32'), [1, 10, 6])), 1)
call_4844 = relay.TupleGetItem(func_288_call(relay.reshape(const_4843.astype('float32'), [1, 10, 6])), 1)
uop_4849 = relay.sin(uop_4839.astype('float32')) # shape=(6, 13, 3)
uop_4851 = relay.sin(uop_4841.astype('float32')) # shape=(6, 13, 3)
output = relay.Tuple([call_4842,const_4843,uop_4849,])
output2 = relay.Tuple([call_4844,const_4843,uop_4851,])
func_4862 = relay.Function([], output)
mod['func_4862'] = func_4862
mod = relay.transform.InferType()(mod)
mutated_mod['func_4862'] = func_4862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4862_call = mutated_mod.get_global_var('func_4862')
call_4863 = func_4862_call()
output = call_4863
func_4864 = relay.Function([], output)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_4868 = func_3012_call()
call_4869 = func_3012_call()
uop_4878 = relay.asin(call_4868.astype('float64')) # shape=(6, 13, 3)
uop_4880 = relay.asin(call_4869.astype('float64')) # shape=(6, 13, 3)
output = relay.Tuple([uop_4878,])
output2 = relay.Tuple([uop_4880,])
func_4891 = relay.Function([], output)
mod['func_4891'] = func_4891
mod = relay.transform.InferType()(mod)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mutated_mod.get_global_var('func_4891')
call_4892 = func_4891_call()
output = call_4892
func_4893 = relay.Function([], output)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2634_call = mod.get_global_var('func_2634')
func_2635_call = mutated_mod.get_global_var('func_2635')
call_4916 = relay.TupleGetItem(func_2634_call(), 0)
call_4917 = relay.TupleGetItem(func_2635_call(), 0)
var_4923 = relay.var("var_4923", dtype = "float32", shape = (6, 13, 3))#candidate|4923|(6, 13, 3)|var|float32
bop_4924 = relay.multiply(call_4916.astype('float32'), relay.reshape(var_4923.astype('float32'), relay.shape_of(call_4916))) # shape=(6, 13, 3)
bop_4927 = relay.multiply(call_4917.astype('float32'), relay.reshape(var_4923.astype('float32'), relay.shape_of(call_4917))) # shape=(6, 13, 3)
output = bop_4924
output2 = bop_4927
func_4929 = relay.Function([var_4923,], output)
mod['func_4929'] = func_4929
mod = relay.transform.InferType()(mod)
mutated_mod['func_4929'] = func_4929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4930 = relay.var("var_4930", dtype = "float32", shape = (6, 13, 3))#candidate|4930|(6, 13, 3)|var|float32
func_4929_call = mutated_mod.get_global_var('func_4929')
call_4931 = func_4929_call(var_4930)
output = call_4931
func_4932 = relay.Function([var_4930], output)
mutated_mod['func_4932'] = func_4932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_4954 = relay.TupleGetItem(func_2695_call(), 4)
call_4955 = relay.TupleGetItem(func_2697_call(), 4)
output = relay.Tuple([call_4954,])
output2 = relay.Tuple([call_4955,])
func_4961 = relay.Function([], output)
mod['func_4961'] = func_4961
mod = relay.transform.InferType()(mod)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4961_call = mutated_mod.get_global_var('func_4961')
call_4962 = func_4961_call()
output = call_4962
func_4963 = relay.Function([], output)
mutated_mod['func_4963'] = func_4963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2873_call = mod.get_global_var('func_2873')
func_2874_call = mutated_mod.get_global_var('func_2874')
call_4978 = func_2873_call()
call_4979 = func_2873_call()
func_4961_call = mod.get_global_var('func_4961')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_5005 = relay.TupleGetItem(func_4961_call(), 0)
call_5006 = relay.TupleGetItem(func_4963_call(), 0)
bop_5013 = relay.left_shift(call_5005.astype('int8'), relay.reshape(call_4978.astype('int8'), relay.shape_of(call_5005))) # shape=(6, 13, 3)
bop_5016 = relay.left_shift(call_5006.astype('int8'), relay.reshape(call_4979.astype('int8'), relay.shape_of(call_5006))) # shape=(6, 13, 3)
uop_5018 = relay.sqrt(call_4978.astype('float64')) # shape=(6, 13, 3)
uop_5020 = relay.sqrt(call_4979.astype('float64')) # shape=(6, 13, 3)
uop_5035 = relay.atanh(call_5005.astype('float64')) # shape=(6, 13, 3)
uop_5037 = relay.atanh(call_5006.astype('float64')) # shape=(6, 13, 3)
output = relay.Tuple([bop_5013,uop_5018,uop_5035,])
output2 = relay.Tuple([bop_5016,uop_5020,uop_5037,])
func_5039 = relay.Function([], output)
mod['func_5039'] = func_5039
mod = relay.transform.InferType()(mod)
mutated_mod['func_5039'] = func_5039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5040 = func_5039_call()
output = call_5040
func_5041 = relay.Function([], output)
mutated_mod['func_5041'] = func_5041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5064 = relay.var("var_5064", dtype = "float32", shape = (16, 3, 5))#candidate|5064|(16, 3, 5)|var|float32
uop_5065 = relay.log2(var_5064.astype('float32')) # shape=(16, 3, 5)
output = uop_5065
output2 = uop_5065
func_5076 = relay.Function([var_5064,], output)
mod['func_5076'] = func_5076
mod = relay.transform.InferType()(mod)
var_5077 = relay.var("var_5077", dtype = "float32", shape = (16, 3, 5))#candidate|5077|(16, 3, 5)|var|float32
output = func_5076(var_5077)
func_5078 = relay.Function([var_5077], output)
mutated_mod['func_5078'] = func_5078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_5124 = relay.TupleGetItem(func_2695_call(), 4)
call_5125 = relay.TupleGetItem(func_2697_call(), 4)
output = relay.Tuple([call_5124,])
output2 = relay.Tuple([call_5125,])
func_5129 = relay.Function([], output)
mod['func_5129'] = func_5129
mod = relay.transform.InferType()(mod)
output = func_5129()
func_5130 = relay.Function([], output)
mutated_mod['func_5130'] = func_5130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mod.get_global_var('func_3469')
func_3471_call = mutated_mod.get_global_var('func_3471')
call_5144 = relay.TupleGetItem(func_3469_call(), 0)
call_5145 = relay.TupleGetItem(func_3471_call(), 0)
const_5146 = relay.const([[[7.097270,-4.609484,-8.313180],[-8.747135,6.833281,5.772009],[-8.719558,-3.492907,-8.698887],[9.412747,-0.841416,-1.334508],[-7.968097,-7.958870,-3.655449],[9.970186,-0.959345,-2.713553],[2.747749,0.905039,-3.314642],[-2.996197,4.137399,7.447934],[-2.005499,4.079183,-7.865792],[-3.398283,1.880784,-2.353877],[-8.454781,7.102566,8.455237],[-5.571258,-1.778652,0.898751],[-6.031108,4.977671,-5.122306]],[[2.217908,-0.264055,3.472445],[-9.754315,6.030582,9.144130],[8.199859,1.669237,-3.572282],[-8.852945,9.628682,5.809886],[-0.935108,8.072153,9.645864],[-0.156334,-9.192868,2.329676],[-1.556773,-2.548269,8.337334],[1.177172,9.736021,5.378334],[8.951331,-8.259149,-7.956328],[6.016943,6.260106,1.385923],[-1.874043,7.566116,-2.749352],[7.572494,-8.652331,-2.960261],[3.318099,4.102166,-8.552797]],[[-6.678048,-2.894620,7.707087],[-6.702865,1.710733,9.724877],[1.626013,7.182505,-0.984370],[6.268076,-5.300472,1.523780],[-6.434308,-7.117012,-9.081822],[-5.001176,-7.728161,0.774913],[-8.427947,-6.885662,-6.407586],[-5.067885,3.786202,-2.885631],[3.799018,8.393153,-5.221344],[-1.611971,0.862686,-8.298580],[8.498510,3.485414,1.582487],[5.171504,-8.875150,-6.611949],[6.760736,-9.661580,-2.489748]],[[5.490805,5.377611,0.004221],[5.782562,-4.822873,-0.756270],[-5.969210,9.043991,7.875083],[5.378941,-5.254588,-7.586842],[-7.146757,7.054422,-2.839018],[8.591405,9.883730,7.375021],[-0.625362,-1.694152,3.371474],[0.050375,9.133570,2.077616],[-7.960805,0.325090,5.104184],[4.228931,-0.136499,-7.784711],[-3.176460,-8.185068,-4.648200],[-9.037318,-6.408628,7.210677],[0.700661,-7.512544,-4.129666]],[[2.752308,-6.254400,8.943391],[-2.539505,3.518880,-2.918858],[8.308062,3.527181,-4.307639],[8.190270,8.068273,-0.531676],[-2.859367,7.237729,-8.774448],[-5.262578,-9.924135,-8.555293],[-6.662844,-3.187199,4.277573],[-4.159081,0.185173,-8.828896],[7.490075,-3.306420,-5.912968],[-3.578124,-4.384714,5.571806],[0.932935,-1.457391,-9.468223],[2.377490,7.819032,-6.687103],[-7.824282,-7.623505,-4.128625]],[[-5.622584,-4.525588,-7.288106],[9.262024,0.270875,2.910150],[-6.258135,7.013410,-4.477775],[0.890896,-6.423277,-6.373216],[-9.394835,2.354161,-2.615901],[1.946416,-2.821382,-1.634810],[-4.994541,1.334824,0.758195],[-8.437433,2.493509,2.332529],[6.060256,1.699840,7.405851],[-6.147554,5.427277,-0.630978],[-4.694808,-7.173615,-5.667661],[5.295306,-6.999825,-5.552648],[1.937139,4.034170,-9.801310]]], dtype = "float32")#candidate|5146|(6, 13, 3)|const|float32
bop_5147 = relay.subtract(call_5144.astype('uint8'), relay.reshape(const_5146.astype('uint8'), relay.shape_of(call_5144))) # shape=(6, 13, 3)
bop_5150 = relay.subtract(call_5145.astype('uint8'), relay.reshape(const_5146.astype('uint8'), relay.shape_of(call_5145))) # shape=(6, 13, 3)
func_4542_call = mod.get_global_var('func_4542')
func_4547_call = mutated_mod.get_global_var('func_4547')
var_5157 = relay.var("var_5157", dtype = "float64", shape = (693,))#candidate|5157|(693,)|var|float64
var_5158 = relay.var("var_5158", dtype = "bool", shape = (88, 1))#candidate|5158|(88, 1)|var|bool
const_5159 = relay.const([[1.614072,-4.532288],[-5.998643,8.800175],[1.469329,-9.692943],[0.220167,-2.988416],[4.196823,8.391489],[-5.003578,-3.147266],[6.706224,0.364198],[2.171105,3.246331],[8.173169,0.739557],[-5.098806,1.651002],[-2.118326,6.661547],[-9.560942,9.973255],[4.798125,2.648016],[-9.069147,-5.458640],[1.774099,9.458369],[-3.318755,-8.538044],[-8.115758,4.276350],[-5.837601,4.301808],[2.301396,-5.444338],[-4.121613,2.843751],[-5.357682,5.194688],[-7.276629,-1.950897],[1.136851,-2.626974],[7.420196,2.812003],[-3.274440,-4.563005],[-1.962746,6.564715],[-8.032995,3.383121],[4.413469,-3.997886],[-3.745668,-9.075715],[7.342255,-7.987094],[6.638015,6.308657],[0.487794,-8.870984],[5.754328,-9.383203],[-7.211136,7.494192],[8.396930,-4.324426],[3.355744,-7.978074],[-4.507566,-2.342533],[-6.117701,8.474655],[4.408719,-0.527487],[3.918657,-4.499365],[3.749237,-2.380741],[-9.993033,6.188925],[5.283302,-9.441458],[-4.988717,-8.795507],[-8.778541,1.524709],[9.138140,-3.120593],[7.569810,-1.321851],[3.147377,5.250931],[8.310889,7.619598],[-7.590464,-0.218491],[-8.911913,-0.908089],[1.904992,1.758850],[-8.308031,-5.537308],[8.472490,-8.223768],[4.839714,-6.040802],[-7.690447,-0.611524],[8.785483,0.263713],[-6.066930,8.385920],[3.992550,1.169439],[-8.310486,-6.597857],[8.005100,5.561213],[3.468495,1.786264],[-8.502014,4.014411],[-1.886941,-2.831803],[4.111165,8.131223],[6.013278,-7.276297],[-2.089017,-3.274737],[2.571708,8.909826],[9.664417,9.105509],[4.239938,-9.085272],[-8.949455,-4.669220],[5.286312,7.399647],[-8.430597,-5.927020],[8.458508,-7.542706],[-8.506873,9.478699],[2.731590,0.103220],[1.134464,4.604126],[6.223889,-4.984066],[-0.581694,-9.941480],[9.744028,-4.725641],[-0.457669,-0.643715],[-4.095923,-8.965419],[7.541748,-0.350054],[-1.556322,0.066704],[-9.991105,-5.168432],[-2.646887,-3.008719],[0.184157,-8.871886],[-9.903030,9.920716],[6.597292,-1.050250],[-2.406537,9.098093],[-5.460270,8.679671],[4.902905,-0.594702],[1.716481,1.383284],[8.045682,-5.825731],[6.448449,-6.636171],[-5.719457,-8.682111],[0.954480,9.203324],[3.390820,5.735697],[-7.607630,6.090998],[2.534941,9.897400],[-3.919663,1.892533],[-9.839597,7.010479],[-8.128544,3.245236],[8.369599,8.687444],[0.031548,-6.082578],[0.724530,-4.555722],[-7.619689,2.851514],[-7.171688,0.736628],[3.265174,-0.706618],[-8.474397,0.558142],[0.165302,6.686371],[8.854732,9.919127],[0.178012,3.726734],[6.810337,-3.908099],[4.206237,-6.902194],[5.023782,5.128801],[-3.071853,-1.306285],[5.757859,3.773788],[4.808141,2.481015],[9.511419,9.181473],[-3.997906,8.916491],[-4.521053,-4.411488],[4.102296,7.040264],[-2.486079,-1.696509],[3.437510,1.132015],[-0.491236,0.409534],[-8.093932,-9.128826],[-3.919872,-7.031601],[9.361396,-4.623191],[-9.502259,9.784174],[3.656030,-0.923864],[8.972093,-1.999606],[1.509114,9.846201],[2.115700,6.621859],[4.617587,5.756437],[5.692414,3.017846],[-6.550031,8.589949],[-5.748364,-7.436816],[8.436882,8.552114],[8.879917,4.216690],[8.268167,3.758407],[-1.940754,-0.488800],[-8.558250,4.475738],[-8.739284,-1.967508],[-8.764322,3.045990],[8.393875,5.030716],[-1.541678,5.574620],[-9.721307,-1.946661],[-0.403861,-8.346481],[5.652504,-4.964976],[8.586283,8.174231],[-0.391534,-7.753776],[1.926345,2.257790],[0.189156,-3.715980],[1.832434,-9.967786],[-4.240452,-4.595102],[-0.912197,3.216340],[0.447816,8.514915],[7.522720,-2.831215],[6.442800,4.787941],[-4.181826,0.001953],[4.079124,9.035728],[5.990070,-4.876359],[3.209227,-4.879761],[-8.650367,9.921335],[-2.245030,-1.169781],[1.286046,4.304862],[8.298413,-7.883732],[-2.160976,3.022254],[5.993123,-4.005392],[-4.955381,-3.304530],[9.743203,6.587320],[6.822930,-5.163207],[-4.489834,7.434073],[4.347014,-9.865780],[2.790951,5.181315],[-8.526354,6.027314],[2.541249,-9.091628],[5.118334,7.563014],[-6.763803,-1.925151],[4.800670,5.127799],[0.428708,-3.727584],[3.780186,5.169182],[4.667942,-1.217288],[4.262990,2.611861],[-2.920666,8.986977],[-6.541564,-8.806856],[6.035601,-2.772831],[2.926141,-7.156375],[4.371506,-6.985410],[0.452357,9.379618],[-7.193794,-7.145407],[-0.830171,-3.930475],[-9.275788,-4.206908],[0.620754,9.065405],[6.615312,9.989784],[6.504995,0.346149],[-2.782646,4.304514],[0.615011,-9.834709],[3.981036,7.465336],[-2.296608,-3.988150],[5.901603,-9.955226],[5.973583,-8.240260],[5.993577,-4.615208],[1.639555,3.501779],[0.765916,-0.676167],[-7.286185,-4.199970],[7.410494,6.860156],[0.339826,-1.227355],[-0.888131,1.625329],[-6.607469,-3.591988],[-6.337470,-0.797282],[-9.198519,3.801587],[6.805296,-4.795024],[2.064102,3.830992],[-5.096109,-3.923841],[-2.475777,0.925511],[8.263909,-9.648748],[-0.464712,-1.003236],[5.336292,-1.625780],[-9.485848,2.389069],[2.333206,9.899581],[-0.108728,-9.658981],[8.293457,9.652119],[3.515776,-2.874794],[8.156973,4.410311],[6.699287,-4.784371],[-3.529667,-6.455672],[4.493637,-6.583378],[4.886748,6.753606],[-4.211160,5.598418],[-3.398633,2.740967],[7.592963,1.936991],[3.329654,-8.337661],[-2.404989,2.994028],[3.187865,2.300269],[-5.695809,-4.844244],[-6.423690,5.933969],[5.812023,-6.063077],[3.139899,8.302783],[-9.176761,-3.260491],[5.530171,-8.745188],[6.428947,7.624893],[-4.403422,3.666493],[-2.765021,-1.966352],[4.707763,-2.719422],[-7.646718,6.637878],[-1.348610,-0.324511],[2.347498,-6.656005],[8.709678,-1.640956],[9.016554,-3.079085],[-4.299799,-7.696697],[4.748220,6.416346],[-0.356083,1.986833],[9.913541,7.280946],[7.637236,-9.355210],[-8.394991,-7.743425],[3.882386,-8.792500],[-3.219186,-6.775372],[4.903343,3.608152],[-8.058434,4.341068],[-4.109994,4.405659],[6.795424,-1.183195],[7.403059,4.480611],[6.593971,6.799910],[-3.582723,8.067182],[-6.578447,-5.621185],[-0.646576,-1.803270],[-0.369515,-8.274902],[-6.494827,-3.510702],[-2.261157,3.254016],[9.169285,2.665304],[-3.787357,-7.489269],[-9.846828,5.544009],[8.877835,-9.091812],[7.535873,-3.188287],[3.323320,2.816182],[9.120378,1.570873],[-4.812068,2.419468],[-3.821754,-5.311738],[8.862412,9.009813],[3.900039,1.846553],[-3.088752,-9.190502],[-6.340373,-2.499232],[8.274501,-5.203549],[0.700513,-3.213059],[-3.779115,-5.002638],[-7.024937,0.225911],[2.267028,-4.552005],[6.677706,5.290758],[6.082456,4.046332],[9.053703,9.798373],[8.086034,7.820247],[-7.021914,-5.250802],[5.035710,1.470523],[-9.223999,1.438225],[7.216439,-0.691387],[0.155108,1.571894],[3.045543,9.859141],[-2.993587,-8.052942],[-1.057032,-3.336498],[3.559956,7.472425],[8.426672,0.179189],[4.157065,5.994902],[-1.289672,1.154805],[-5.924678,-0.607290],[8.878335,-0.619933],[9.167916,-4.062905],[-9.518846,-5.667173],[8.460754,-8.397274],[-2.515409,-8.726783],[-6.166093,-2.315860],[0.830379,3.530865],[-2.305004,-2.657942],[5.114959,4.624724],[4.819323,-7.343078],[8.710706,9.715438],[-7.574869,5.696569],[7.366241,-0.538763],[-0.016017,-5.324213],[-9.057709,2.128080],[-4.168221,-3.948176],[-2.910900,-4.245739],[6.571998,5.284450],[7.961007,-4.903967],[-5.510164,-2.518439],[0.392383,0.840233],[0.770359,-6.017523],[0.246323,6.610451],[7.487637,4.304001],[7.834025,8.015617],[-6.543803,0.071046],[7.949181,8.185062],[-1.941133,-3.165941],[-7.976378,3.627687],[1.472929,3.354553],[1.809024,-6.568236],[0.883189,-6.326864],[6.371821,0.760427],[-7.148879,5.775321],[-9.583285,5.345872],[-4.833441,2.492154],[5.944493,2.740965],[-1.575393,-3.509330],[6.812960,-9.174933],[-3.467026,4.313783],[-7.384151,-0.247481],[-4.484835,-7.810743],[-8.157096,9.440647],[5.682434,-0.300316],[7.262265,-7.451666],[-1.483947,1.817875],[4.614023,-4.807957],[-8.510676,-9.800416],[7.645536,9.276107],[-9.584454,-1.119580],[9.699146,-1.904988],[-4.512840,4.148636],[-8.591786,6.921809],[-1.139300,-3.928953],[-5.255901,-7.180630],[-5.062223,8.800299],[8.650499,8.769300],[7.593689,-8.222194],[6.259751,9.382019],[4.146850,9.661576],[-9.001215,4.852743],[9.155772,4.690811],[-8.374997,-7.951877],[-7.622342,-1.430700],[-1.350459,8.121300],[-4.178110,-0.538155],[-8.372701,2.891124],[8.376680,0.378956],[-7.742516,-9.347646],[-2.160860,0.509267],[0.966960,-2.784600],[-8.177349,6.560040],[-2.945404,-9.575495],[8.722721,1.786833],[-1.824576,8.593233],[3.725361,-4.320820],[1.816652,-6.886457],[-5.793451,3.784526],[9.274702,0.384663],[-6.003633,6.980012],[1.293806,7.823697],[-4.127704,2.678155],[-0.980496,-3.060865],[1.670404,6.397028],[-5.191467,7.407217],[6.851313,-9.568588],[-1.706133,-7.508915],[5.992714,7.195130],[4.625740,6.056065],[6.767645,6.735396],[8.197091,-8.983340],[-2.437187,-3.511571],[2.133459,6.797600],[-2.677129,9.404210],[2.374897,9.828601],[6.236094,0.018664],[-2.723291,4.163153],[6.368503,0.933158],[-5.678758,-7.594202],[3.601620,1.180463],[-6.229767,1.350325],[2.173823,4.475610],[0.679475,8.435177],[2.327871,0.956685],[7.324241,-5.754084],[8.312780,7.853179],[9.104420,-3.116286],[-8.424940,1.394201],[-2.715677,9.352503],[6.219173,-8.664663],[-7.160675,-5.600378],[6.095135,2.975662],[-9.744103,6.310903],[3.596893,5.405760],[-7.891061,7.771785],[-5.074416,1.809220],[4.874152,-4.839977],[1.664414,8.098310],[-0.455737,-8.242874],[-1.538865,-9.416131],[4.147512,-8.618509],[-6.763123,2.567950],[-9.015734,-7.753678],[0.286087,9.375832],[-3.804992,2.300183],[1.585142,8.171003],[-9.202661,0.777788],[1.987860,9.488798],[7.460857,3.603317],[-3.865729,7.985749],[0.911963,0.890500],[4.214429,-4.638634],[-7.432281,-4.495898],[-6.853880,1.726845],[8.981986,3.984747],[-8.850143,1.531837],[4.245775,1.143857],[9.711808,-4.664797],[-3.565718,9.509346],[-0.158462,-4.899604],[9.265417,-0.215983],[-3.743296,1.456655],[-9.888335,7.638718],[7.283220,7.028803],[2.158463,-9.145215],[1.396643,-3.300483],[-5.439780,1.932247],[8.326999,8.386467],[-4.505573,-1.278122],[1.133481,-4.594537],[2.055746,-5.512089],[-5.911106,8.169145],[4.543627,-8.228094],[-8.626951,-0.023829],[-7.785518,1.315481],[3.500856,8.308328],[7.938888,5.372434],[6.504515,-8.638001],[5.357998,1.904850],[-2.583975,8.270196],[2.190766,-6.075372],[-3.616991,-7.366068],[2.400117,-1.204459],[2.745729,-9.171977],[-9.805398,9.490938],[-9.205763,-8.623585],[9.738232,4.884139],[-0.107021,2.022195],[4.423526,3.282792],[-1.607630,-8.191276],[4.682511,8.286912],[-8.557501,5.827971],[4.795955,-8.329525],[1.716271,9.110583],[1.760058,-5.798188],[0.421126,6.890348],[-8.533323,3.512254],[-1.940105,-8.464154],[-4.915263,-3.696860],[9.297855,4.699616],[6.308304,-0.447601],[-1.346589,8.015493],[1.566638,5.752950],[6.477479,7.700024],[7.150011,-4.502319],[-9.426301,-2.764136],[-0.600982,-2.337774],[-8.707857,-9.578047],[6.249948,-1.659174],[-3.507697,0.555508],[-2.632930,8.775997],[1.375752,3.299880],[1.408100,5.175496],[-8.706192,-7.521276],[-6.308471,-4.163820],[7.824933,-4.920484],[-2.096565,-2.374828],[-6.120684,-5.778756],[5.669355,-4.932728],[-5.941139,1.675813],[-1.935489,5.657616],[-0.524826,2.092559],[-2.186825,-6.898015],[5.905980,7.786720],[0.560458,-1.950766],[6.320846,-5.715349],[-0.234970,-5.670788],[-9.365870,-6.521057],[-3.437133,3.889696],[-5.541276,9.550070],[5.259410,-3.260726],[8.693087,-2.412160],[4.878397,-7.419017],[3.237335,1.892976],[-5.433115,-4.453161],[-3.603254,7.859609],[-5.645931,6.132464],[1.848984,-2.313759],[-2.261299,0.622034],[-2.175931,8.981841],[4.456232,-9.532683],[-6.134002,-6.672909],[0.315463,-9.663881],[-7.548899,-7.415097],[-8.440235,2.629087],[6.420740,-7.268273],[-3.671839,0.864730],[0.137958,-8.282706],[-4.107219,4.594707],[3.343379,8.292548],[-8.140595,-9.804792],[9.468313,-9.839624],[-8.807109,-4.550191],[1.825040,-0.645894],[-3.052611,-5.398542],[-2.483292,-8.834694],[3.900672,6.469724],[-9.530094,-2.468472],[-7.064221,1.315546],[0.527819,-7.790962],[7.613312,0.419612],[0.188252,-4.311394],[4.223601,-5.964926],[9.760991,0.349717],[-7.356740,9.308469],[2.952442,-7.940647],[-5.354337,-4.997899],[5.856289,-9.979538],[7.313882,6.913558],[4.000745,-0.816813],[-0.849770,-9.130477],[-8.340633,-3.464005],[-4.696498,3.496583],[3.993847,-8.570485],[4.309490,-4.306011],[6.487838,1.190035],[-0.666745,3.868555],[-7.081986,6.256697],[-7.453325,-8.704444],[4.478043,-6.272855],[2.058421,8.509684],[8.894727,-0.035290],[-9.460127,6.050952],[7.777388,-0.439815],[5.340724,9.234038],[-8.924520,-9.440280],[-4.072935,5.548803],[1.017720,-5.240062],[9.121081,-7.486803],[1.574700,8.651855],[9.884501,4.428233],[7.638285,-4.734626],[8.941943,-0.607190],[-0.713581,1.224754],[4.716779,-1.149889],[-5.099073,3.787477],[5.144655,-3.777075],[9.798838,-7.581040],[-3.269671,2.855788],[-5.135156,-4.480244],[-7.933878,3.096386],[8.877652,3.368445],[1.276549,6.780322],[-0.683860,1.548560],[-1.865634,-6.000238],[3.003148,-0.444054],[-0.006653,4.874193],[-8.565096,4.737701],[-4.872822,3.505841],[9.367660,-1.115278],[2.317798,-1.770694],[3.255807,3.174485],[0.766531,7.196148],[-7.509075,-1.914358],[6.514556,5.623688],[6.439214,-5.229495],[5.695063,2.862389],[9.197671,1.883282],[6.885356,-6.705714],[1.092681,8.900288],[-8.485156,8.435302],[-6.877730,6.912780],[1.637068,8.637046],[1.471452,-9.201295],[-1.153943,8.430820],[-1.728075,-9.160092],[-9.345243,-8.271409],[-4.569873,-7.552153],[-2.931289,3.360183],[1.612986,-7.197767],[-1.583880,1.829598],[-9.402071,-4.947464],[3.033343,-6.998362],[0.766019,-0.957230],[2.470498,2.752540],[-2.049005,-0.692633],[-2.504628,8.513465],[9.271862,-3.780183],[-6.818168,2.489129],[-8.761317,7.078636],[-3.930767,5.134013],[-5.368014,9.583110],[-6.945677,7.206871],[4.282700,6.594889],[8.140071,9.925672],[-7.718627,-8.992674],[-3.235721,7.613919],[-9.966726,-6.713858],[-2.190288,-3.766777],[9.179046,2.345483],[-4.634781,-8.407662],[-0.160923,2.792026],[8.789599,-1.345466],[6.622700,-2.328194],[6.843454,-1.524036],[-6.914990,-3.062190],[-3.042773,9.967612],[-8.824229,4.317743],[2.981708,-2.185065],[1.398546,4.683871],[5.150407,-5.390238],[1.676594,-6.876037],[8.436600,-1.281230],[6.589377,-4.733966],[5.143803,-3.261638],[-7.075053,-8.244556],[8.766125,-7.757796],[2.561320,3.874132],[9.239139,3.535011],[-8.741561,8.889584],[-3.380514,4.802989],[-2.915923,7.399642],[8.764285,-4.638181],[6.784499,2.550267],[6.546869,1.466762],[-8.149978,0.255174],[-3.386382,-3.359980],[-0.674841,-2.676850],[4.474694,0.455444],[-5.721453,4.755094],[-1.512728,4.607336],[-2.499082,-1.023016],[-2.562222,-7.581033],[6.301850,9.611982],[-4.803872,-7.487201],[2.240270,2.407958],[5.941033,0.447617],[4.961628,6.985393],[-8.383299,1.994788],[-6.917442,-6.152189],[7.824051,7.531304],[3.127547,1.321591],[-6.538725,-8.016997],[-0.922223,-6.135852],[-6.467400,0.902542],[-7.965385,9.563641],[-9.161733,3.762898],[0.432417,7.619072],[0.130526,0.504740],[7.383777,-4.543523],[-8.879734,-2.298122],[8.443222,-9.316993],[-6.057362,5.953296],[5.953025,5.491701],[-9.681181,-3.772576],[-2.122691,-6.884906],[-7.499390,-0.582703],[-7.188109,1.733392],[-1.793365,-9.847938],[-3.712416,0.819732],[-9.152110,2.610632],[-2.451904,8.842253],[5.730008,-5.363066],[-9.596254,1.097234],[-4.965503,-1.113610],[9.895988,2.924063],[7.233845,1.407377],[0.757452,-3.480373],[1.643375,7.851993],[-2.851565,-7.672436],[-6.533100,-5.751688],[-6.589541,2.418932],[8.013274,4.212578],[4.585651,-3.742294],[-4.982458,-4.460013],[5.660585,-8.579455],[-1.360152,-9.546899],[-2.711808,-7.266740],[9.454096,3.348586],[1.846919,-6.121522],[7.452373,0.501972],[-2.428651,0.699230],[5.225380,-7.702052],[9.961493,2.413396],[-8.292004,-1.998410],[3.310943,7.178469],[6.062317,-8.588754],[7.223532,-8.362060],[-6.416195,7.224915],[9.513700,-5.749851],[-6.784340,9.982587],[4.634054,1.866785],[-5.121082,-1.934636],[6.515758,-6.732028],[1.756451,8.195983],[7.315130,5.194445],[3.710673,1.663919],[7.178199,6.408485],[-0.482407,3.945460],[7.646955,-6.809113],[4.732470,0.691219],[-9.891615,5.881728],[-2.253477,6.718462],[-7.766165,-9.556395],[4.044289,0.007056],[7.504288,8.077957],[8.381041,0.833219],[3.995975,9.526129],[-8.024013,8.837235],[-5.127611,-0.096057],[9.039874,0.920009],[-7.990898,5.407161],[6.334397,9.854241],[6.147407,-6.289285],[5.858398,-2.541005],[0.598752,7.348178],[-9.631930,7.608802],[-2.974442,-5.837377],[1.388080,4.499698],[9.910004,8.639297],[6.209989,8.695017],[0.407027,-9.824041],[4.119072,-7.857955],[-0.552697,-8.106892],[-6.020367,6.684463],[-1.787362,3.211848],[1.137279,9.239688],[3.601250,0.312205],[3.702670,-1.067203],[0.911593,-2.329573],[1.638687,0.229655],[-8.283457,-2.602355],[0.957938,3.219137],[1.365622,2.550143],[-4.130264,8.471731],[-3.258484,-0.796259],[2.610109,-6.659403],[1.887790,2.274604],[0.016045,-7.060290],[0.522144,8.351168],[7.005650,-8.047238],[5.245500,6.873635],[-5.929851,5.701222],[-2.571265,5.512617],[-0.765288,-6.740303],[-4.587104,-7.469630],[-9.036601,6.492734],[-7.388188,8.634209]], dtype = "float64")#candidate|5159|(784, 2)|const|float64
var_5160 = relay.var("var_5160", dtype = "int8", shape = (180, 8))#candidate|5160|(180, 8)|var|int8
call_5156 = relay.TupleGetItem(func_4542_call(relay.reshape(var_5157.astype('float64'), [693,]), relay.reshape(var_5158.astype('bool'), [88,]), relay.reshape(const_5159.astype('float64'), [1568,]), relay.reshape(var_5160.astype('int8'), [360, 4]), ), 2)
call_5161 = relay.TupleGetItem(func_4547_call(relay.reshape(var_5157.astype('float64'), [693,]), relay.reshape(var_5158.astype('bool'), [88,]), relay.reshape(const_5159.astype('float64'), [1568,]), relay.reshape(var_5160.astype('int8'), [360, 4]), ), 2)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_5162 = relay.TupleGetItem(func_2695_call(), 4)
call_5163 = relay.TupleGetItem(func_2697_call(), 4)
output = relay.Tuple([bop_5147,call_5156,var_5157,var_5158,const_5159,var_5160,call_5162,])
output2 = relay.Tuple([bop_5150,call_5161,var_5157,var_5158,const_5159,var_5160,call_5163,])
func_5164 = relay.Function([var_5157,var_5158,var_5160,], output)
mod['func_5164'] = func_5164
mod = relay.transform.InferType()(mod)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5164_call = mutated_mod.get_global_var('func_5164')
var_5166 = relay.var("var_5166", dtype = "float64", shape = (693,))#candidate|5166|(693,)|var|float64
var_5167 = relay.var("var_5167", dtype = "bool", shape = (88, 1))#candidate|5167|(88, 1)|var|bool
var_5168 = relay.var("var_5168", dtype = "int8", shape = (180, 8))#candidate|5168|(180, 8)|var|int8
call_5165 = func_5164_call(var_5166,var_5167,var_5168,)
output = call_5165
func_5169 = relay.Function([var_5166,var_5167,var_5168,], output)
mutated_mod['func_5169'] = func_5169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4961_call = mod.get_global_var('func_4961')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_5221 = relay.TupleGetItem(func_4961_call(), 0)
call_5222 = relay.TupleGetItem(func_4963_call(), 0)
output = relay.Tuple([call_5221,])
output2 = relay.Tuple([call_5222,])
func_5247 = relay.Function([], output)
mod['func_5247'] = func_5247
mod = relay.transform.InferType()(mod)
output = func_5247()
func_5248 = relay.Function([], output)
mutated_mod['func_5248'] = func_5248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3968_call = mod.get_global_var('func_3968')
func_3970_call = mutated_mod.get_global_var('func_3970')
call_5345 = relay.TupleGetItem(func_3968_call(), 0)
call_5346 = relay.TupleGetItem(func_3970_call(), 0)
uop_5347 = relay.acosh(call_5345.astype('float32')) # shape=(6, 13, 3)
uop_5349 = relay.acosh(call_5346.astype('float32')) # shape=(6, 13, 3)
output = uop_5347
output2 = uop_5349
func_5350 = relay.Function([], output)
mod['func_5350'] = func_5350
mod = relay.transform.InferType()(mod)
mutated_mod['func_5350'] = func_5350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5350_call = mutated_mod.get_global_var('func_5350')
call_5351 = func_5350_call()
output = call_5351
func_5352 = relay.Function([], output)
mutated_mod['func_5352'] = func_5352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3012_call = mod.get_global_var('func_3012')
func_3013_call = mutated_mod.get_global_var('func_3013')
call_5375 = func_3012_call()
call_5376 = func_3012_call()
var_5399 = relay.var("var_5399", dtype = "float32", shape = (6, 13, 3))#candidate|5399|(6, 13, 3)|var|float32
bop_5400 = relay.power(call_5375.astype('float64'), relay.reshape(var_5399.astype('float64'), relay.shape_of(call_5375))) # shape=(6, 13, 3)
bop_5403 = relay.power(call_5376.astype('float64'), relay.reshape(var_5399.astype('float64'), relay.shape_of(call_5376))) # shape=(6, 13, 3)
func_3536_call = mod.get_global_var('func_3536')
func_3540_call = mutated_mod.get_global_var('func_3540')
var_5409 = relay.var("var_5409", dtype = "float64", shape = (1568,))#candidate|5409|(1568,)|var|float64
call_5408 = relay.TupleGetItem(func_3536_call(relay.reshape(var_5409.astype('float64'), [1568,]), relay.reshape(bop_5400.astype('float64'), [6, 13, 3]), ), 4)
call_5410 = relay.TupleGetItem(func_3540_call(relay.reshape(var_5409.astype('float64'), [1568,]), relay.reshape(bop_5400.astype('float64'), [6, 13, 3]), ), 4)
func_2561_call = mod.get_global_var('func_2561')
func_2567_call = mutated_mod.get_global_var('func_2567')
const_5412 = relay.const([5.139122,4.153611,1.034767,-6.933497,-8.396652,2.363337,2.705532,-7.193693,-3.027834,-8.843243,1.110688,3.291081,6.973241,8.674811,-1.404587,0.539609,6.923876,-8.636199,7.185941,-3.488678,4.263983,-1.853928,-6.261823,-9.061652,-9.336402,-7.869518,-2.061882,1.907513,-6.932465,8.294728,-4.560995,-7.072483,9.734462,9.943106,7.547279,-6.405199,8.556904,-8.789802,-2.598105,-4.385114,4.422643,-0.482957,0.169957,8.504759,-2.263887,-4.189191,5.405691,-5.842066,6.566361,0.016845,9.119693,-7.678788,2.027649,2.843602,1.658121,-3.294074,-1.214022,2.305842,-9.269649,2.353094,2.575052,-5.305472,-9.713431,7.255307,-0.999571,-9.548854,8.143078,-8.978962,9.321722,-2.609732,-5.735125,7.319722,9.011064,-3.349321,2.795154,-6.834894,5.939277,-7.528160,-3.423514,6.537942,-9.169093,-4.085356,-4.000387,-5.437735,-3.072963,9.147645,-5.339346,7.400781,8.780062,1.029392,9.314706,8.001628,-9.185030,-1.008944,3.559499,5.520105,-9.081746,1.584696,2.786859,-9.109527,-9.068295,-3.311796,2.419403,-6.756151,1.052182,6.325939,-5.906942,5.945227,-9.154773,5.640765,7.202255,-9.573240,-3.146654,9.947877,5.773418,-6.267080,7.744136,-0.803045,-7.764642,9.076056,5.719860,6.141935,0.882093,-4.086081,-9.965856,4.059028,7.888850,1.598839,-8.113453,9.337103,8.577566,3.978338,-9.093214,3.993471,8.456644,-2.894244,1.847048,-4.086078,-2.984904,7.119951,-6.535861,-0.247033,-7.207308,3.696459,-9.537543,-4.709999,-3.514614,-0.151661,-2.137534,-8.747109,-1.809181,-9.741894,-2.020043,-9.413263,2.141814,0.538417,8.765576,9.238541,-9.160330,-7.495109,8.387767,-3.959201,-1.775102,-6.418597,-6.419379,-0.389539,9.806126,-5.266055,8.094055,-2.048841,-2.949839,-9.937854,-4.627031,1.320342,0.607420,4.950902,5.858098,-4.953555,8.631345,-9.307280,9.115952,-6.006153,4.150174,-6.731823,-6.756648,6.272803,9.673602,-5.298476,-1.460874,-3.159938,8.223407,-0.459720,5.532433,-6.573621,-7.115684,-0.131582,-7.036277,-1.133489,2.479262,-9.163733,-5.097377,5.464009,-1.617044,7.520747,4.880018,-8.092835,8.444256,8.762967,6.439896,2.315363,-0.804222,-4.755687,0.408992,-5.618690,7.766063,-6.498735,2.989745,1.548687,9.717960,-0.512378,-4.750261,8.486072,3.268809,-5.001640,-0.343456,-2.664291,0.739627,3.089387,-7.364437,-3.256003,6.126466,4.921074,-2.404733,-3.023375,2.482761,-7.061906,8.412907,9.248967,7.741964,2.369510,-0.208014,-9.692752,-7.752313,-1.087828,-6.294342,8.181859,6.100323,-5.849300,8.640932,0.037934,5.798895,5.978899,7.451247,2.619281,-6.452455,-3.623191,6.885148,6.392024,8.175967,-2.302104,-7.584218,2.802148,-7.474835,5.357898,-5.919141,-6.824978,-5.773154,-1.454409,-8.853012,-2.137055,-2.953136,8.608356,-6.814653,-2.249272,-1.160317,3.986641,-2.475503,-2.307286,-9.391579,-8.195924,-3.654116,-0.265486,-6.335360,-3.712812,-0.084355,-6.917661,-7.980066,-9.581974,-8.236124,-4.743756,0.960965,8.379982,-9.187222,-9.889797,3.396970,4.632704,8.752366,-7.847051,-6.257326,7.997484,-9.988438,3.777523,6.430292,1.792016,-2.444228,7.700935,8.657661,0.171255,-6.461526,-8.361935,2.160525,-5.339264,6.464428,-2.113890,8.429457,-9.034884,4.148375,-5.232916,-0.176253,-7.193138,7.111415,-0.218814,-5.778368,-9.404338,-2.755553,-6.296320,-0.191135,-9.316770,-2.713676,0.766048,-6.161575,0.675332,-1.803351,8.414822,0.163816,9.886600,9.797467,8.467966,-0.090664,-1.716535,-2.362408,-8.668357,0.084247,-2.968322,9.832390,-8.694997,7.060793,-4.143120,7.890747,-0.248213,3.967237,-9.622831,-6.620560,1.290966,5.279033,3.932992,-7.073554,2.536680,-5.813809,6.065786,6.318919,-1.499350,3.528658,-3.730646,-0.943786,9.023890,6.253325,-0.437819,9.504857,-4.631185,6.145891,-0.265019,8.273715,-7.702552,7.981847,9.417203,4.619549,-8.304966,-9.437310,8.273582,1.559823,3.936523,-8.679784,-1.873671,9.784868,1.548229,-6.767615,-0.424882,1.336816,-1.965143,3.431135,1.070259,4.229514,6.445259,3.102615,-9.990624,-2.428019,9.134592,6.892383,-4.752389,-8.579467,2.960455,-7.477207,-6.865580,-8.562541,-5.238725,-5.479772,-8.743708,9.333244,-9.951296,6.348107,-4.738176,-5.799034,-5.808625,1.092784,-6.480692,-9.787233,4.224245,9.814401,-4.824372,-2.119394,3.010188,6.172761,-4.310275,-8.635639,3.078413,1.037102,6.408985,8.637515,5.666058,-5.906935,-3.559884,4.251661,6.215503,2.341834,1.336431,2.350706,-6.638693,-2.404333,8.326249,0.107055,-2.912920,-1.743185,-8.188733,-8.458316,7.352898,8.258974,8.573006,0.644913,-5.135515,7.620182,-0.628113,-1.631570,9.533507,1.175181,6.146160,3.966060,7.930024,9.620369,4.057244,3.688907,1.800752,-2.577716,1.831459,0.314792,-4.941369,6.901097,7.137822,8.972929,3.283665,-4.722408,-8.787801,-2.430576,7.898631,9.934465,1.106074,2.327739,-0.118554,-9.736265,3.048036,6.761184,-2.715235,-9.148901,-6.930800,-8.976359,-4.639735,2.571865,-1.793074,-6.873955,1.096532,-2.505703,-4.764831,8.768078,1.644830,1.758252,-1.662406,-8.916677,5.751492,-1.645666,-6.448913,3.549560,9.781503,4.203014,0.100072,-7.648745,-2.131433,3.151202,-6.227306,8.694568,-2.689009,6.739996,2.249470,6.447808,-2.871200,-9.024635,-2.127154,-2.274901,-7.115936,3.710812,1.269869,5.248257,-6.737313,2.070862,4.348662,-2.721705,7.376180,-8.799345,6.228403,2.602762,-1.765698,2.046966,-7.987863,-6.127028,2.582454,-4.973703,5.414138,-6.872701,-1.576628,7.040705,-0.096971,-1.146848,8.537314,-0.078761,-8.238457,-3.998800,-8.201982,-2.156257,5.032587,4.284227,-7.050850,-1.957834,7.302877,-0.844080,-9.771911,-8.228929,1.817557,-5.863347,2.111241,-4.450259,-4.576375,-5.263832,-9.442010,1.498240,-6.819621,-1.699525,-9.867263,-5.503193,-7.491847,-0.746094,-3.020677,9.983826,0.146399,-5.458225,5.087665,-2.438688,-1.575570,-6.827001,4.898948,-8.505820,-0.620406,9.728338,2.175807,3.883463,-9.825973,-8.935193,-8.855697,-1.344089,2.305296,-6.415422,5.129990,1.603827,-0.691640,-6.706535,9.502197,8.845037,-3.208561,2.605033,-7.135458,6.219345,-0.746478,-5.923950,7.704383,-2.439346,7.202847,6.091266,9.935872,-0.764984,-1.463413,-1.727305,-9.575983,-6.902983,-4.775179,-8.616577,-9.737251,3.938675,-7.624623,4.541374,-5.695524,-4.738193,-0.830848,4.158703,-4.690310,5.220401,-5.651141,8.679664,2.722759,5.242754,0.905133,5.144059,2.544774,-6.663470,-5.899666,-5.603743,6.599921,-9.709704,-9.484234,4.504114,-4.013756,-4.734841,-1.523969,0.820871,5.427283,2.104013,-3.718904,-9.498650,1.197327,9.847850,-3.794595,2.958043,6.785298,3.904958,4.310291,-6.946448,-1.496327,-8.238440,-8.094615,-0.724546,0.946449,-3.379255,-3.246218,0.493733,2.509205,4.519033,-7.934475,3.419747,9.042847,-0.293651,-8.942552,-0.683014,3.640730,1.370966,-8.024280,3.047720,-9.149773,8.297748,-8.777225,-7.716699,-9.061956,2.803989,-0.007965,-1.656477,5.567105,-4.916446,3.242003,-9.350786,-3.948872,2.869245,-9.582226,-0.960012,-3.827242,0.907437,-4.970888,3.175513,-3.830871,-4.693683,2.106018,-2.566184,8.792866,-5.829550,0.495988,3.869869,8.302401,-2.893413,6.552457,-2.334428,-7.932104,-1.602663,7.697880,0.617656,-4.768336,7.827762,-8.482925,-7.576418,-6.343270,7.018222,-4.947123,8.345644,7.403720,3.570456,-7.352984,-8.167305,3.773005,-4.329117,-3.483645,-7.175389,6.148526,8.535967,0.101942,6.651384,-6.414638,3.877862,8.862013,-2.549214,-2.546373,3.625980,0.625939,-4.503238,-8.314041,-4.753672,-1.607703,0.363286,-2.549553,-8.112908,-8.768266,0.546020,-7.335680,6.816293,-9.720233,-0.539212,6.970748,8.970248,8.692667,-7.406965,-6.723428,8.371023,9.816182,-4.657044,8.128920,-9.843741,-8.180622,-6.606167,-8.772847,-5.453443,-2.257267,-9.519432,-9.808055,-4.819503,8.124929,9.248772,3.956881,-1.883126,7.461374,-7.975166,6.200501,8.754333,8.679825,-0.336534,0.140652,-9.549525,8.289561,-0.450658,-4.068511,-4.493189,0.161192,-1.345108,-1.302656,7.167538,9.871009,-5.399780,-8.078783,2.190533,1.018469,-9.711712,-2.392283,-9.814381,5.031596,-5.734315,-2.310575,0.135588,-8.415155,-9.033908,-5.555171,3.211079,-3.068393,5.178440,7.092977,-2.012307,-4.957256,8.102988,4.980743,8.619865,-1.848166,-1.820583,-0.348682,-0.637677,8.650107,9.913535,6.602251,-7.250506,-3.047044,-8.978676,-3.829512,-0.626794,7.102919,0.728400,-4.814769,9.956037,-7.915399,8.142959,8.061213,-5.060252,-1.267083,8.445722,-9.949917,3.615393,4.848625,-7.608702,-4.248104,-7.027589,-6.046371,-0.548873,-9.605737,-7.140063,-8.590934,9.420007,7.257487,-9.425401,9.203980,1.103953,8.555653,-5.331783,8.234999,-3.964957,-8.611288,6.929808,0.730643,4.805522,-5.065033,-0.658414,3.607852,-6.958885,2.884796,-2.939620,-1.836918,-2.267432,8.911357,-5.595408,7.720419,-4.655173,-2.309936,1.288775,-2.834454,1.895216,-3.999563,5.254196,-3.486626,-5.687180,-9.476438,-2.558018,0.446263,1.073031,-9.381621,9.123194,-4.949800,4.767466,7.165637,-4.009257,9.535828,-3.798047,-6.826450,8.209778,-7.979455,-2.846039,-1.736411,2.485956,-4.105980,-6.090044,0.298121,-1.340587,-4.011708,-9.340613,-2.612183,0.255802,-4.114811,3.752045,0.671404,0.409303,3.950228,-2.246749,5.682459], dtype = "float64")#candidate|5412|(910,)|const|float64
const_5413 = relay.const([-8.884313,5.678018,-9.740449,-4.659377,9.244464,8.682797,-0.280939,6.605684,-2.204661,-6.625901,-7.670529,-9.344458,4.873910,-4.381225,3.113346,1.674849,-1.922530,-3.671976,-7.466640,1.365264,-5.273709,-9.157394,5.050451,-7.695439,-8.773484,4.256279,-7.001429,8.242080,7.454225,-3.584431,0.869993,-0.505499,-4.369588,-0.660305,0.937052,0.187968,-3.535488,-1.215868,0.460573,-6.216877,4.332708,-5.337387,1.944028,-9.084744,8.909617,6.612142,-8.673213,5.147991,-6.890961,9.757929,0.375272,3.932538,-6.149674,8.997047,3.966992,3.199701,-0.421207,-2.449971,8.762945,-7.589645,-6.229164,7.235464,-7.235109,6.253576,-9.128764,-8.159904,1.001282,-4.970360,-7.256242,0.366622,5.200817,-8.116547,-3.012404,4.959579,1.363542,1.043814,9.358255,-6.435483,5.991591,-4.729821,-0.292763,3.057190,6.360072,5.998064,-7.874218,0.784359,7.414134,6.943280,-6.260350,-2.191587,-5.875028,7.254438,-1.068417,5.877946,-3.106159,-3.833379,8.058728,-3.100743,4.707284,-6.707826,6.186066,0.055375,8.170270,-7.762043,9.551186,-1.567724,-0.185994,1.881014,2.831733,-0.668383,-7.672106,4.272881,4.492796,-6.846750,0.258636,-1.943796,-3.395776,-7.426216,-2.465193,-0.749892,7.868886,9.954914,-0.436326,-0.588864,-3.590193,3.820825,1.788941,-9.676075,7.837024,8.178364,8.235499,1.826867,9.990296,3.088848,-8.149224,9.478596,-5.857958,-4.291632,5.285279,9.307337,1.811819,7.476579,8.257437,2.901980,-1.970363,8.421435,-4.657757,-8.450209,-3.694828,1.901678,9.983654,-6.471479,-1.178995,-7.126354,-0.402608,6.347768,9.503482,-3.620817,-2.109198,2.009639,6.551982,-5.234068,2.881247,5.510245,-3.443328,-7.823220,-6.228906,-8.822848,3.657304,-1.216517,-6.703730,-0.478469,-9.746738,-8.967810,-3.503796,-2.343314,-5.363032,-9.200659,5.929612,-8.583972,-2.423245,4.031100,5.304668,2.643039,-5.091036,-6.020013,5.300108,-8.027772,-5.963971,-6.310386,-4.214832,-0.340518,4.980990,-1.562095,-0.022006,4.011496,-3.535473,8.042308,-4.763979,-1.310165,8.078516,5.696056,4.353378,-8.458339,-2.725708,1.986296,6.520294,0.750394,-3.466550,0.336005,-1.235885,3.068746,5.075943,0.576666,-0.347713,7.684270,-2.924935,-1.329605,-2.261398,3.186029,-8.421539,-0.405943,-9.830655,-5.688370,7.501329,-7.141273,-1.646590,-9.212033,-1.781473,0.541635,-4.933039,-5.852488,8.003572,-2.327625,-6.552583,-4.172867,-3.146920,-5.405409,6.905832,0.051922,3.304851,-0.718570,-5.903750,7.377565,-3.609000,3.069365,9.229545,-2.237110,-2.844031,8.905336,-0.427366,3.405469,-8.204979,-0.226143,6.170870,-1.595754,6.965061,-4.618630,-1.202694,-9.934922,9.284368,8.438195,-9.635284,0.160793,-0.190807,0.138840,5.613349,-8.506356,-8.736298,4.862402,-0.878050,-9.532399,-3.837931,0.660201,8.424395,-4.615114,6.060210,8.396304,0.310947,3.755883,4.567199,-0.498632,2.830453,-1.060848,6.633595,0.951007,-6.974910,6.686087,9.914331,8.876705,9.450988,1.406564,6.737943,-9.635367,6.419997,-3.944050,-6.850458,3.698149,8.662953,6.536344,9.589800,5.188915,8.151419,8.686553,5.785646,6.687474,-5.639323,-2.434372,4.530552,-4.647802,-9.553859,-5.437340,5.629743,-3.973360,8.187180,-3.078979,5.120481,-7.292124,-6.089463,8.003886,-2.142647,-8.902314,8.524031,-5.327837,8.899561,9.277320,-1.229548,-0.781252,-7.385697,-3.588003,9.162474,-8.320879,-0.869525,3.597061,-2.803162,9.655390,1.024038,3.763118,-8.639048,7.900466,-2.205373,8.129551,-4.728221,7.981781,-8.083155,5.169902,-7.541425,-9.834692,-2.010088,5.620598,-5.309904,-6.282292,0.381297,-6.179812,4.275187,9.837744,5.961123,-9.783486,2.593241,-1.070935,-6.407660,5.413270,3.718581,9.419179,5.009938,9.285548,6.879524,5.962861,9.939072,-0.052686,6.528761,4.056529,-2.119471,5.953145,4.480227,-5.396173,7.822366,-7.323222,7.129446,-0.925490,-0.892871,0.021645,2.584887,-5.452766,-1.623912,-3.991893,5.822787,-0.094852,2.314913,0.405580,4.646309,-5.394524,1.055249,-2.773076,1.679830,3.037093,-8.489494,7.832662,4.662559,-1.501867,1.607389,3.144969,-8.320968,-5.348919,4.620392,-7.909547,5.471768,7.936647,5.142106,-7.053121,6.480979,7.443216,-1.937867,8.163659,-7.838250,3.515902,-2.147538,-5.580506,0.133952,1.476503,-0.711761,4.002472,-8.237269,-6.590356,-8.942923,-7.136803,-2.023800,6.300708,3.504825,-2.687848,3.963227,9.033897,4.579200,-1.655586,-9.316628,6.581928,-2.703129,0.092683,-1.519787,-6.851645,-6.232743,-0.541357,-0.464701,4.955440,-4.550695,-6.253007,5.497927,-1.487963,9.270309,8.776967,-1.181482,5.707093,-9.251294,3.564102,-2.969767,4.100393,5.705966,-2.558816,-6.333524,6.818953,9.538261,-0.503757,1.764741,0.025521,1.802469,-5.781188,-1.384784,-1.904800,-7.235363,3.071106,-4.723587,8.481285,-3.724582,7.597355,9.977010,7.204248,-3.729060,-4.429473,-8.621340,6.771719,-8.683782,7.757340,6.931921,2.746809,-0.323107,-4.505397,-9.113611,-3.605826,2.883297,4.338762,-1.576121,-9.242362,-9.106117,-9.712261,-2.499470,-7.690034,3.126451,0.146627,-7.576373,5.172115,5.944241,8.433029,9.390977,-4.360059,0.527535,-5.594306,4.072952,7.269095,7.430303,-9.538020,4.111737,-9.288327,1.298800,1.852468,6.020180,-2.209776,-9.630340,-6.207647,3.469841,3.925976,-6.806486,-1.110178,-6.226091,0.967561,4.190451,0.384205,-5.833813,6.456340,-1.929022,9.184683,9.310700,-2.254980,8.867931,-8.208277,-4.913262,-7.730674,1.597424,-0.857905,-4.070721,0.755913,8.465264,-9.153349,-0.159079,5.045755,-1.255122,-9.565368,-7.556324,6.525172,9.911722,-1.093626,9.087571,-9.541674,4.755212,-8.618735,-0.085716,2.436896,1.680250,-8.664387,-8.820070,-3.376262,-1.723996,-3.765939,4.205462,8.151293,9.117605,-6.799266,-3.405711,2.748277,0.998785,4.402313,4.990986,-9.639265,-8.373692,1.645354,-1.273144,5.000030,-1.810298,-5.664354,1.540268,9.910156,6.138733,-1.151684,-3.278311,-8.305277,3.561541,-7.564287,-3.072302,1.361439,3.767844,3.623601,-0.655162,-9.535654,7.657963,1.652482,-6.116801,5.102958,-3.538288,2.864745,-8.906193,7.650373,7.335568,-3.547429,-8.282289,-1.240973,-6.609155,1.136751,-0.748503,-4.978866,-1.409439,5.606894,-7.051859,7.778339,-0.786079,7.356073,-4.318254,-9.334905,-6.825901,5.954858,1.189719,-1.203042,-6.824892,-1.750624,-7.070975,-9.810883,-7.164156,9.860611,-9.660075,-4.719874,-5.395504,5.178450,-4.315887,-1.354684,1.764704,6.614976,-6.219006,-5.105045,6.474958,0.134340,9.218675,2.207643,6.114122,-8.406569,0.298618,-2.056517,3.105198,-7.854371,-5.014481,-4.565812,-9.513737,-9.737849,-8.045963,6.320846,6.861117,1.899128,-5.932658,9.651955,6.162106,-0.973071,-5.401950,-7.388281,-4.926556,8.080212,-3.334425,-6.317767,5.891377,9.174311,-5.904142,1.556270,4.150437,-8.901185,5.505077,-6.412708,-2.365717,1.421526,0.652057,-8.859673,-3.750659,-5.856297,0.773133,-7.251564,1.210719,-8.875931,-7.277400,-6.813956,-7.319488,-6.298999,-2.239836,0.951021,4.583120,9.410585,-5.159478,-6.383195,0.648988,6.502407,-4.684130,2.402550,1.093169,0.090101,9.102309,-4.908590,-8.425417,-3.393518,4.074906,2.745465,-1.612975,1.073376,-8.283079,-8.204684,8.596241,7.153069,7.925581,5.845675,-1.050658,-5.594184,-7.894631,-0.111537,8.093938,7.669652,-2.445247,1.672471,9.353608,9.606205,3.817919,7.128829,-4.729497,-8.771666,9.398250,-7.898995,-1.337144,-8.384303,2.085341,5.008396,6.245597,2.255237,-6.293548,-9.312863,-4.503649,7.925872,1.977529,-3.329949,3.810611,6.118499,-1.694489,6.822188,4.732356,-0.022781,-1.261977,1.049703,-9.255404,6.783670,-6.488264,2.845554,6.734864,-8.197786,0.168975,-1.073760,4.654744,-0.625464,-3.112689,-3.902247,7.840438,-6.198844,-0.266904,1.511838,3.364153,9.527785,-5.462620,-4.570521,-1.864455,4.248818,7.556529,-2.591032,2.709129,-7.699170,-1.271730,8.848022,8.551237,5.004156,-4.176057,6.537626,0.730421,1.308261,5.701502,-1.214492,-9.479902,4.565542,9.271896,-6.273747,-3.825851,-9.525586,4.092161,-4.216563], dtype = "float64")#candidate|5413|(792,)|const|float64
var_5414 = relay.var("var_5414", dtype = "bool", shape = ())#candidate|5414|()|var|bool
var_5415 = relay.var("var_5415", dtype = "float64", shape = (320, 2))#candidate|5415|(320, 2)|var|float64
call_5411 = relay.TupleGetItem(func_2561_call(relay.reshape(const_5412.astype('float64'), [10, 7, 13]), relay.reshape(const_5413.astype('float64'), [792,]), relay.reshape(var_5414.astype('bool'), []), relay.reshape(var_5415.astype('float64'), [640,]), ), 2)
call_5416 = relay.TupleGetItem(func_2567_call(relay.reshape(const_5412.astype('float64'), [10, 7, 13]), relay.reshape(const_5413.astype('float64'), [792,]), relay.reshape(var_5414.astype('bool'), []), relay.reshape(var_5415.astype('float64'), [640,]), ), 2)
func_2561_call = mod.get_global_var('func_2561')
func_2567_call = mutated_mod.get_global_var('func_2567')
call_5420 = relay.TupleGetItem(func_2561_call(relay.reshape(const_5412.astype('float64'), [10, 7, 13]), relay.reshape(const_5413.astype('float64'), [792,]), relay.reshape(var_5414.astype('bool'), []), relay.reshape(var_5415.astype('float64'), [640,]), ), 3)
call_5421 = relay.TupleGetItem(func_2567_call(relay.reshape(const_5412.astype('float64'), [10, 7, 13]), relay.reshape(const_5413.astype('float64'), [792,]), relay.reshape(var_5414.astype('bool'), []), relay.reshape(var_5415.astype('float64'), [640,]), ), 3)
func_3288_call = mod.get_global_var('func_3288')
func_3293_call = mutated_mod.get_global_var('func_3293')
const_5426 = relay.const([True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True], dtype = "bool")#candidate|5426|(720,)|const|bool
const_5427 = relay.const([[-6.675156,-4.655878],[-1.908396,5.189716],[-3.080491,7.783473],[-2.285419,-5.334315],[-7.995861,4.736975],[4.892082,3.048363],[-7.982237,6.908701],[-2.058310,-5.723007],[-9.934363,6.199543],[6.782814,4.694632],[-1.984443,3.535617],[8.290185,4.313579],[-6.221998,-5.776372],[4.515704,1.965591],[-9.581443,-1.391743],[9.152201,9.496075],[9.838807,-4.333709],[9.151374,-6.863617],[-4.124083,-6.098411],[8.769676,0.104516],[-5.915115,8.945397],[-1.624743,-2.554110],[-1.980432,7.807211],[7.363228,0.347069],[-0.775316,-2.948804],[-6.786036,1.027521],[-5.712337,-0.466754],[-9.625531,9.810568],[-9.153713,-6.549430],[0.423096,9.256387]], dtype = "float32")#candidate|5427|(30, 2)|const|float32
call_5425 = relay.TupleGetItem(func_3288_call(relay.reshape(var_5414.astype('bool'), []), relay.reshape(const_5426.astype('bool'), [1, 720]), relay.reshape(const_5427.astype('float32'), [15, 4]), ), 7)
call_5428 = relay.TupleGetItem(func_3293_call(relay.reshape(var_5414.astype('bool'), []), relay.reshape(const_5426.astype('bool'), [1, 720]), relay.reshape(const_5427.astype('float32'), [15, 4]), ), 7)
func_3575_call = mod.get_global_var('func_3575')
func_3577_call = mutated_mod.get_global_var('func_3577')
call_5441 = relay.TupleGetItem(func_3575_call(relay.reshape(const_5427.astype('float32'), [1, 60])), 2)
call_5442 = relay.TupleGetItem(func_3577_call(relay.reshape(const_5427.astype('float32'), [1, 60])), 2)
func_4712_call = mod.get_global_var('func_4712')
func_4713_call = mutated_mod.get_global_var('func_4713')
call_5446 = func_4712_call()
call_5447 = func_4712_call()
output = relay.Tuple([bop_5400,call_5408,var_5409,call_5411,const_5412,const_5413,var_5414,var_5415,call_5420,call_5425,const_5426,const_5427,call_5441,call_5446,])
output2 = relay.Tuple([bop_5403,call_5410,var_5409,call_5416,const_5412,const_5413,var_5414,var_5415,call_5421,call_5428,const_5426,const_5427,call_5442,call_5447,])
func_5451 = relay.Function([var_5399,var_5409,var_5414,var_5415,], output)
mod['func_5451'] = func_5451
mod = relay.transform.InferType()(mod)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5451_call = mutated_mod.get_global_var('func_5451')
var_5453 = relay.var("var_5453", dtype = "float32", shape = (6, 13, 3))#candidate|5453|(6, 13, 3)|var|float32
var_5454 = relay.var("var_5454", dtype = "float64", shape = (1568,))#candidate|5454|(1568,)|var|float64
var_5455 = relay.var("var_5455", dtype = "bool", shape = ())#candidate|5455|()|var|bool
var_5456 = relay.var("var_5456", dtype = "float64", shape = (320, 2))#candidate|5456|(320, 2)|var|float64
call_5452 = func_5451_call(var_5453,var_5454,var_5455,var_5456,)
output = call_5452
func_5457 = relay.Function([var_5453,var_5454,var_5455,var_5456,], output)
mutated_mod['func_5457'] = func_5457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3968_call = mod.get_global_var('func_3968')
func_3970_call = mutated_mod.get_global_var('func_3970')
call_5489 = relay.TupleGetItem(func_3968_call(), 0)
call_5490 = relay.TupleGetItem(func_3970_call(), 0)
output = call_5489
output2 = call_5490
func_5508 = relay.Function([], output)
mod['func_5508'] = func_5508
mod = relay.transform.InferType()(mod)
mutated_mod['func_5508'] = func_5508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5508_call = mutated_mod.get_global_var('func_5508')
call_5509 = func_5508_call()
output = call_5509
func_5510 = relay.Function([], output)
mutated_mod['func_5510'] = func_5510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_5557 = func_2981_call()
call_5558 = func_2981_call()
output = call_5557
output2 = call_5558
func_5565 = relay.Function([], output)
mod['func_5565'] = func_5565
mod = relay.transform.InferType()(mod)
mutated_mod['func_5565'] = func_5565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5565_call = mutated_mod.get_global_var('func_5565')
call_5566 = func_5565_call()
output = call_5566
func_5567 = relay.Function([], output)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5584 = relay.var("var_5584", dtype = "float32", shape = (5, 7, 16))#candidate|5584|(5, 7, 16)|var|float32
uop_5585 = relay.atanh(var_5584.astype('float32')) # shape=(5, 7, 16)
var_5588 = relay.var("var_5588", dtype = "float32", shape = (5, 7, 16))#candidate|5588|(5, 7, 16)|var|float32
bop_5589 = relay.maximum(uop_5585.astype('int64'), relay.reshape(var_5588.astype('int64'), relay.shape_of(uop_5585))) # shape=(5, 7, 16)
func_2967_call = mod.get_global_var('func_2967')
func_2969_call = mutated_mod.get_global_var('func_2969')
var_5594 = relay.var("var_5594", dtype = "float32", shape = (234,))#candidate|5594|(234,)|var|float32
call_5593 = relay.TupleGetItem(func_2967_call(relay.reshape(var_5594.astype('float32'), [6, 13, 3])), 3)
call_5595 = relay.TupleGetItem(func_2969_call(relay.reshape(var_5594.astype('float32'), [6, 13, 3])), 3)
output = relay.Tuple([bop_5589,call_5593,var_5594,])
output2 = relay.Tuple([bop_5589,call_5595,var_5594,])
func_5597 = relay.Function([var_5584,var_5588,var_5594,], output)
mod['func_5597'] = func_5597
mod = relay.transform.InferType()(mod)
var_5598 = relay.var("var_5598", dtype = "float32", shape = (5, 7, 16))#candidate|5598|(5, 7, 16)|var|float32
var_5599 = relay.var("var_5599", dtype = "float32", shape = (5, 7, 16))#candidate|5599|(5, 7, 16)|var|float32
var_5600 = relay.var("var_5600", dtype = "float32", shape = (234,))#candidate|5600|(234,)|var|float32
output = func_5597(var_5598,var_5599,var_5600,)
func_5601 = relay.Function([var_5598,var_5599,var_5600,], output)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3939_call = mod.get_global_var('func_3939')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_5717 = relay.TupleGetItem(func_3939_call(), 0)
call_5718 = relay.TupleGetItem(func_3941_call(), 0)
func_4179_call = mod.get_global_var('func_4179')
func_4181_call = mutated_mod.get_global_var('func_4181')
var_5723 = relay.var("var_5723", dtype = "int16", shape = (8, 36))#candidate|5723|(8, 36)|var|int16
call_5722 = relay.TupleGetItem(func_4179_call(relay.reshape(var_5723.astype('int16'), [288,])), 2)
call_5724 = relay.TupleGetItem(func_4181_call(relay.reshape(var_5723.astype('int16'), [288,])), 2)
bop_5730 = relay.power(call_5722.astype('float64'), relay.reshape(var_5723.astype('float64'), relay.shape_of(call_5722))) # shape=(12, 8, 3)
bop_5733 = relay.power(call_5724.astype('float64'), relay.reshape(var_5723.astype('float64'), relay.shape_of(call_5724))) # shape=(12, 8, 3)
output = relay.Tuple([call_5717,bop_5730,])
output2 = relay.Tuple([call_5718,bop_5733,])
func_5744 = relay.Function([var_5723,], output)
mod['func_5744'] = func_5744
mod = relay.transform.InferType()(mod)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5745 = relay.var("var_5745", dtype = "int16", shape = (8, 36))#candidate|5745|(8, 36)|var|int16
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5746 = func_5744_call(var_5745)
output = call_5746
func_5747 = relay.Function([var_5745], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5789 = relay.var("var_5789", dtype = "float32", shape = (5, 10, 13))#candidate|5789|(5, 10, 13)|var|float32
uop_5790 = relay.sqrt(var_5789.astype('float32')) # shape=(5, 10, 13)
output = uop_5790
output2 = uop_5790
func_5794 = relay.Function([var_5789,], output)
mod['func_5794'] = func_5794
mod = relay.transform.InferType()(mod)
var_5795 = relay.var("var_5795", dtype = "float32", shape = (5, 10, 13))#candidate|5795|(5, 10, 13)|var|float32
output = func_5794(var_5795)
func_5796 = relay.Function([var_5795], output)
mutated_mod['func_5796'] = func_5796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5039_call = mod.get_global_var('func_5039')
func_5041_call = mutated_mod.get_global_var('func_5041')
call_5846 = relay.TupleGetItem(func_5039_call(), 2)
call_5847 = relay.TupleGetItem(func_5041_call(), 2)
output = relay.Tuple([call_5846,])
output2 = relay.Tuple([call_5847,])
func_5855 = relay.Function([], output)
mod['func_5855'] = func_5855
mod = relay.transform.InferType()(mod)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5855_call = mutated_mod.get_global_var('func_5855')
call_5856 = func_5855_call()
output = call_5856
func_5857 = relay.Function([], output)
mutated_mod['func_5857'] = func_5857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5898 = relay.var("var_5898", dtype = "float64", shape = ())#candidate|5898|()|var|float64
var_5899 = relay.var("var_5899", dtype = "float64", shape = (11, 8, 2))#candidate|5899|(11, 8, 2)|var|float64
bop_5900 = relay.power(var_5898.astype('float64'), var_5899.astype('float64')) # shape=(11, 8, 2)
func_5855_call = mod.get_global_var('func_5855')
func_5857_call = mutated_mod.get_global_var('func_5857')
call_5923 = relay.TupleGetItem(func_5855_call(), 0)
call_5924 = relay.TupleGetItem(func_5857_call(), 0)
func_4961_call = mod.get_global_var('func_4961')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_5934 = relay.TupleGetItem(func_4961_call(), 0)
call_5935 = relay.TupleGetItem(func_4963_call(), 0)
output = relay.Tuple([bop_5900,call_5923,call_5934,])
output2 = relay.Tuple([bop_5900,call_5924,call_5935,])
func_5939 = relay.Function([var_5898,var_5899,], output)
mod['func_5939'] = func_5939
mod = relay.transform.InferType()(mod)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5939_call = mutated_mod.get_global_var('func_5939')
var_5941 = relay.var("var_5941", dtype = "float64", shape = ())#candidate|5941|()|var|float64
var_5942 = relay.var("var_5942", dtype = "float64", shape = (11, 8, 2))#candidate|5942|(11, 8, 2)|var|float64
call_5940 = func_5939_call(var_5941,var_5942,)
output = call_5940
func_5943 = relay.Function([var_5941,var_5942,], output)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4862_call = mod.get_global_var('func_4862')
func_4864_call = mutated_mod.get_global_var('func_4864')
call_5945 = relay.TupleGetItem(func_4862_call(), 0)
call_5946 = relay.TupleGetItem(func_4864_call(), 0)
output = call_5945
output2 = call_5946
func_5970 = relay.Function([], output)
mod['func_5970'] = func_5970
mod = relay.transform.InferType()(mod)
mutated_mod['func_5970'] = func_5970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mutated_mod.get_global_var('func_5970')
call_5971 = func_5970_call()
output = call_5971
func_5972 = relay.Function([], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5508_call = mod.get_global_var('func_5508')
func_5510_call = mutated_mod.get_global_var('func_5510')
call_6009 = func_5508_call()
call_6010 = func_5508_call()
output = call_6009
output2 = call_6010
func_6029 = relay.Function([], output)
mod['func_6029'] = func_6029
mod = relay.transform.InferType()(mod)
mutated_mod['func_6029'] = func_6029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6029_call = mutated_mod.get_global_var('func_6029')
call_6030 = func_6029_call()
output = call_6030
func_6031 = relay.Function([], output)
mutated_mod['func_6031'] = func_6031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6065 = relay.var("var_6065", dtype = "float64", shape = (16, 12, 16))#candidate|6065|(16, 12, 16)|var|float64
uop_6066 = relay.sqrt(var_6065.astype('float64')) # shape=(16, 12, 16)
func_529_call = mod.get_global_var('func_529')
func_532_call = mutated_mod.get_global_var('func_532')
var_6072 = relay.var("var_6072", dtype = "float64", shape = (1568,))#candidate|6072|(1568,)|var|float64
call_6071 = relay.TupleGetItem(func_529_call(relay.reshape(var_6072.astype('float64'), [16, 7, 14]), relay.reshape(var_6072.astype('float64'), [16, 7, 14]), ), 2)
call_6073 = relay.TupleGetItem(func_532_call(relay.reshape(var_6072.astype('float64'), [16, 7, 14]), relay.reshape(var_6072.astype('float64'), [16, 7, 14]), ), 2)
const_6092 = relay.const([[[-2.708831,3.408626,1.969492,1.237310,-5.358414,-8.563473,-0.249045,-4.744746,9.953835,-5.052065,-8.548554,-1.102198,-6.673426,8.250122,-4.469620,-7.309331],[-6.275917,3.326683,-1.164867,9.391887,3.635266,-2.866654,0.855015,6.577343,2.616984,-6.626840,5.861349,-4.290234,-7.438332,2.660140,-7.278755,1.157486],[1.912828,-0.725835,8.325374,-0.696423,-7.068502,6.204630,5.960319,-4.868102,-9.008949,-3.453204,2.670740,3.002738,-6.161281,-9.197707,-8.887810,2.710258],[-7.183196,0.301059,1.037510,-6.071951,-6.682287,2.447597,-6.223263,-9.557970,4.682830,7.260963,4.557309,-6.948265,0.938469,4.737637,-2.527603,5.863596],[-4.497630,-4.584126,9.912366,1.192166,-3.771879,7.016989,-9.513325,0.528383,0.214182,-8.386455,3.007354,-2.492586,-0.100700,-2.412901,2.615871,6.828575],[-5.637590,0.475513,7.606210,-4.331301,-0.521555,-4.846630,8.970289,-5.098957,-7.437116,-0.700791,4.565328,-6.836817,-0.152531,-5.539085,4.024043,3.062281],[9.108970,5.810711,-1.470607,4.276309,6.317371,6.885575,4.843458,8.808626,0.874465,-8.772095,2.466245,-2.030186,5.997636,2.512886,-9.309167,3.734321],[3.705676,-8.792996,-6.949244,-7.319081,-1.755778,-4.376862,8.427914,4.062737,5.872363,6.642107,9.229140,-5.440849,-5.764829,3.644152,8.414330,7.824107],[0.891378,-2.017634,4.567511,0.397477,-0.663081,6.240302,-9.078465,-7.270412,-4.915113,-0.716607,3.085852,3.844762,-4.833183,7.482170,3.134994,-4.138454],[-7.477545,-0.021511,-8.196178,4.988644,1.529486,-6.114301,-3.931588,-2.696232,5.171772,-6.329432,2.982643,-5.175988,-5.886709,5.644934,-1.566383,-2.180459],[-2.593618,-2.721542,-7.524668,-2.684784,8.705362,2.968607,2.533598,-7.678221,-5.324689,-5.809639,-2.969255,4.537445,-6.523603,-6.725717,1.650480,9.337953],[7.172196,-0.516706,-8.967540,-9.890479,7.385502,4.882833,8.041056,8.472297,-6.512124,6.841757,3.106427,1.466363,-1.714206,-9.828161,-7.182367,8.094978]],[[-3.212158,9.292784,-2.637396,-8.344131,-1.439040,0.472103,9.097769,6.102739,-1.442456,9.986958,-6.992637,8.153776,-0.403476,-5.724302,6.270347,0.353961],[5.087905,-7.820917,-7.087661,1.137871,-6.576821,-8.424201,-4.715610,0.798504,-3.566240,-7.789378,7.197771,3.220342,0.978787,-5.226880,-9.037853,-8.280594],[7.233520,1.009803,9.992352,-7.821727,4.735943,-4.257298,-6.980388,-7.190335,-7.643675,5.782714,-4.529692,1.448716,-4.510053,5.339207,5.805812,-0.422703],[-4.564163,-9.588536,0.983550,-7.784249,8.926904,-8.774172,-9.850930,7.457349,0.375579,3.569362,6.866062,0.690222,-0.086114,-6.144607,0.174632,-7.933704],[9.190927,9.836031,9.817843,3.709346,-2.110792,4.899977,1.818019,0.817310,0.037195,-6.708964,-8.586937,4.339409,-9.751291,-4.474631,-7.798818,-7.467572],[-3.217558,-7.484935,3.629072,-4.842157,7.644097,-5.026163,-4.233431,7.530260,-6.752326,0.408531,-5.687941,-4.918693,-1.957597,-6.081119,9.979897,-2.302818],[-4.927424,-6.031397,1.965282,-3.448172,-7.111102,4.904174,-0.186639,-0.500555,-0.374506,3.877040,-3.493951,-3.833169,8.428395,-5.737772,4.171641,-2.237787],[0.302573,8.544823,0.333035,-0.323755,-9.183303,6.792512,-8.275816,-7.434979,4.805549,9.030573,5.063645,-6.659215,-3.625016,8.328292,-8.544905,-2.731473],[-4.118891,-5.110056,7.717695,4.999188,-8.976066,-8.374027,3.310716,1.046042,3.701523,-0.893248,-6.282426,0.033933,1.737911,-0.402201,-4.797283,-0.288366],[-5.983681,-0.483549,5.173778,-7.013925,-5.977295,-0.428726,9.606781,-7.506249,1.433696,7.127155,-2.651657,-7.090426,0.916903,4.768088,2.483049,9.699685],[-3.388145,1.661628,8.218640,4.240987,4.876583,5.379206,0.108401,0.997093,5.691659,5.877827,4.145538,5.365931,-3.063886,-6.871822,-6.076480,-8.116786],[2.794764,-3.260714,5.206183,5.275382,-0.353863,2.795804,-7.163056,-6.672847,7.369667,6.026951,3.479308,9.417636,0.792448,-3.162117,6.123547,-5.637302]],[[-9.176443,-4.205112,-0.157503,-7.818305,-4.222028,5.699265,-3.598129,-4.404962,4.315599,-9.130769,9.670170,-7.079891,0.406262,-2.166297,5.969272,-4.144842],[-6.785353,8.345420,-4.026823,4.954572,3.593206,0.113642,-5.225607,1.878891,-9.209522,-8.559809,-8.649452,-5.909532,2.271878,-2.345767,-0.534906,1.638375],[3.601232,7.783518,-6.406939,6.825869,4.377486,-4.181258,-7.657939,1.647379,1.506524,-2.176214,6.810356,-6.377712,-3.921374,1.332504,3.370023,9.506052],[-4.493092,-9.513662,6.640961,-8.852287,-1.407950,-3.186541,5.679566,0.207296,2.495461,-1.933214,2.403689,-1.653071,0.354847,-8.466524,-6.933968,-0.487524],[-1.042948,6.492460,-5.775103,4.164737,-2.797013,6.090780,5.642994,1.332142,2.473059,5.507515,-8.430764,-7.630662,-5.900922,-1.919102,-0.631230,1.205818],[4.080175,-7.932943,-5.366599,-8.475811,9.600255,-3.189781,4.346279,3.343212,8.195503,0.367759,-4.524136,-3.690143,-6.871922,6.950087,9.376507,1.424023],[-0.779660,-0.944645,0.032898,4.936822,-8.198517,-6.624112,9.401478,-0.994977,-4.913718,-3.861893,5.067254,8.702173,6.022038,-6.431873,3.061011,5.730594],[9.646904,1.300834,3.941117,6.210234,-8.611861,5.641369,-9.184417,9.707744,4.417480,0.700811,-1.124356,-6.036324,-9.253514,-6.030475,-6.330909,4.651497],[8.604775,5.350716,3.993404,-6.066359,-4.958749,-7.097621,-1.701420,4.887649,2.562686,-5.124422,-9.950593,-3.278971,-2.650929,-2.878065,-6.417522,-7.295542],[-0.753853,-6.835476,6.884497,-1.903209,-5.243552,-1.282148,-3.399639,-3.097126,-8.964210,2.471191,9.213322,5.477408,-7.037833,5.835331,2.262554,-3.405366],[4.558412,-3.245583,3.957790,-3.220373,4.115167,-5.472058,-9.254444,9.096313,-0.314321,4.000121,-2.221128,5.309790,1.108631,-6.382328,-4.818139,-5.935983],[5.993635,-1.733257,3.353006,2.637524,0.129772,-9.345232,-4.537188,3.062292,-4.367092,7.865043,0.213881,6.257815,4.586661,-7.916774,-1.949748,4.470404]],[[9.887354,7.028220,-2.879645,3.398300,-8.851324,1.856639,9.256865,9.915867,-0.028090,4.696548,4.131212,-1.320120,-4.697325,3.919879,0.219976,-4.069279],[-6.213256,-5.185368,-9.842648,4.898730,2.516990,-0.652002,9.417713,5.750078,-3.177751,3.139037,2.494566,-9.929244,-2.891065,7.876085,-3.795116,-7.883008],[1.124906,1.151032,-1.002254,-2.935804,2.837040,8.194235,0.884153,-8.389386,1.020683,5.987194,2.462390,-2.269983,0.272853,-2.596673,8.045516,9.858422],[4.176346,5.253252,3.276654,1.696901,-8.742429,3.900201,1.869180,8.414303,5.527418,-6.596604,-8.851632,2.409284,-2.729883,4.332834,-6.894351,-0.139968],[7.159911,-9.999138,1.345899,7.718301,-4.546891,2.716386,3.061200,-0.053460,-1.107735,3.837800,5.395772,-0.650993,-8.641511,2.017131,-8.612689,-2.206360],[3.098803,-6.277190,5.458480,-4.003410,-3.423788,9.486436,-4.549685,1.877187,-6.825249,3.308160,5.230500,5.760251,6.766530,-1.012685,-6.650156,5.811747],[5.814476,0.915922,-4.293040,-3.470532,1.914538,-4.071479,3.521931,-7.501261,-5.443091,5.081001,-4.618427,-5.944675,-0.086830,4.191917,0.914185,-6.667168],[0.476298,5.159442,-6.713487,-2.731063,-2.743064,3.650762,-5.816316,0.179856,-3.579887,-4.686930,-9.408770,-7.349523,-6.750245,7.888003,1.757346,-1.289449],[0.043167,-8.471812,-1.106128,-0.118276,5.277987,-3.279769,2.427238,-1.792592,4.666469,-2.440353,7.476466,-9.509044,3.737739,-9.977376,9.757124,2.376280],[-1.938585,-5.303634,-4.337538,9.532037,0.622133,-0.371974,-8.116366,-4.920365,4.586795,8.339260,0.724519,-0.049062,9.455452,5.900165,-1.758418,-5.711024],[-6.595326,9.652920,4.725768,-4.771028,-7.098790,3.789970,-3.806964,-7.501515,0.498552,-4.562043,4.095974,4.273698,0.064345,-6.568336,5.148869,7.047668],[4.240694,-3.450296,6.250320,4.734665,4.708555,-8.143769,-3.877436,-9.303750,-3.067584,4.057488,4.328268,4.543229,0.815200,-3.614477,-1.425871,9.698443]],[[-3.515823,-4.127691,-6.220771,-7.735424,-0.875806,0.841452,7.791294,-1.374452,7.920389,-4.469897,-4.392005,0.672452,2.024852,-6.569463,0.584641,5.136199],[-3.029988,-2.478101,-8.397811,-1.049337,4.199132,3.215136,2.310165,8.682624,1.391567,-0.184507,3.729425,-2.329228,3.235117,-8.693401,-1.266194,3.738661],[7.742446,9.474909,-7.120436,-5.383033,-7.057949,-9.592791,-9.257882,-7.060642,2.907887,6.543865,-9.778060,6.947594,8.144680,4.571104,-9.330295,-1.065885],[-4.355858,9.224438,1.666498,-8.053942,3.878584,-6.022445,-1.048829,-5.374049,6.363517,-4.574613,2.269943,0.197511,5.929198,-5.847732,7.714128,9.962560],[-0.546279,-3.060443,8.714672,7.299187,-0.817646,-8.312232,-5.571475,-6.200139,-2.187698,-5.782229,8.326259,-8.923707,-4.492214,-0.418414,8.397278,8.869487],[-8.961961,-6.256686,-1.160583,-4.298244,8.865811,-2.536721,4.461513,7.826653,9.651720,0.726128,9.424228,-8.380803,-6.880321,-6.559533,-5.459189,-6.204495],[2.374561,-5.758996,-1.864882,-7.056657,6.212987,-4.719069,-4.697867,8.267359,9.393011,-6.197797,-6.091041,-8.543333,2.513485,1.041284,-5.687697,-7.879280],[-7.862443,1.681761,9.889935,-8.092855,-8.108234,-2.252707,-7.368306,8.241668,-6.583576,-3.747360,-6.722501,-9.606566,0.283217,4.020224,7.348446,-7.254171],[3.846035,-5.900099,6.889962,8.323823,9.513663,-6.704225,0.494210,8.438471,9.344493,4.884865,-2.006852,5.825129,0.387005,4.261287,-6.008903,-8.357906],[-7.205224,3.630501,6.997889,7.713807,-4.576366,-7.078131,3.830894,0.210999,3.654104,-4.963873,-9.492493,-5.645152,3.183865,-1.458910,1.807916,5.588613],[-5.186973,1.843301,9.207636,-9.092329,0.877133,-5.226910,4.298345,0.689313,-8.032816,-6.121115,-2.417049,-1.748823,4.683022,3.775967,1.577567,-6.786866],[5.308594,2.378607,-3.558797,-4.468270,-9.989934,5.948750,8.074496,-4.491458,-5.223631,-7.140641,3.509164,-7.868507,-7.409694,8.805486,-9.088600,1.810288]],[[-1.152949,5.381191,-6.953768,-8.730731,-1.641141,-3.295656,-8.085396,4.746832,-1.329211,3.774462,-9.383493,-4.753011,-3.377757,-8.006218,2.075272,-2.660124],[-3.068162,-1.801148,-8.714776,0.447056,-6.144884,-7.203533,-3.841325,-7.974510,7.683976,2.989118,6.652567,-8.501535,7.432796,7.982021,-2.693241,-0.128552],[6.919086,-9.015394,9.085537,-8.876897,7.203089,2.987929,-8.686626,-8.747285,6.696312,1.759868,3.314413,-2.576354,-6.155247,3.905112,-9.404329,8.870580],[1.524299,9.318583,6.679979,-8.165464,-3.517862,-5.612299,9.595399,-2.060720,-7.306810,-9.522064,-3.879258,2.862239,-4.394970,3.095652,-0.744384,-2.590805],[-9.215776,8.441480,8.568734,6.173630,5.162208,-7.290048,-5.497751,5.592310,-2.452823,5.462655,3.467606,4.803188,9.509981,-1.213401,2.462619,9.132078],[-0.188055,2.351254,1.912783,9.878817,-4.344082,9.021643,-0.064214,-4.073264,-9.627754,9.505650,-5.359762,9.966152,-2.314925,3.290565,-2.206770,8.820345],[0.927285,-1.612334,9.452340,6.932582,4.310007,0.520739,-7.847672,-8.061109,7.997424,-2.134571,-9.106812,8.329293,9.476829,-8.952198,-2.948562,-4.210573],[-6.021891,-6.736627,-4.974248,-1.499563,-3.285054,0.267907,8.930408,-7.838746,-5.860789,-1.355310,-7.449411,9.369256,-8.217553,-1.840252,2.845179,8.149771],[8.594932,-3.144496,8.869300,-8.919306,-3.062060,-2.686506,3.703089,-6.846502,6.026708,9.563423,-7.221512,1.537294,-0.516498,3.072220,-9.422338,-0.425189],[-2.499570,6.464282,4.984352,-7.007635,-0.564092,9.821580,2.896667,5.721984,-8.430988,-1.458460,3.185292,5.734459,5.548345,1.583925,8.869675,-3.506941],[-9.513766,-1.366284,5.242626,7.805054,9.657577,7.208628,-3.982689,-8.656067,5.848796,-7.544212,-0.835979,0.638065,-7.705975,-1.528978,-7.413972,-7.196317],[-7.780024,-3.956157,1.319808,9.048676,-8.852633,3.800149,1.724002,3.733898,-3.805605,8.008320,5.076898,9.098862,-9.357421,-4.540978,-1.761551,7.388721]],[[1.827914,-3.002931,-0.376396,1.323661,-6.663271,8.447011,-3.552493,7.686980,-2.127842,-9.218098,3.947824,-2.195878,5.170414,-6.388130,3.188831,-4.298356],[3.861902,5.756014,5.393145,-0.831263,9.015611,5.297239,-3.220401,-7.768087,-6.585617,-5.421153,-5.685696,1.440940,2.155891,4.617243,2.693959,2.477487],[-6.864026,-7.595179,-1.287683,-7.158454,6.317616,0.609562,-1.254239,-6.049343,-9.184660,-1.478644,6.433099,-8.806039,1.625482,1.301853,-8.406434,2.100753],[1.373589,-7.750359,-0.560887,1.416718,-6.744780,0.484760,2.036222,9.600045,-0.671340,-9.805813,1.544813,1.336866,9.012897,-0.725310,3.461531,-3.587139],[9.604883,-7.843479,3.873504,8.922354,2.904094,-7.581620,1.055109,-9.385663,4.749025,8.038935,-5.513999,6.936704,-8.217748,3.340840,6.997500,-3.036410],[-4.177017,-8.858831,0.165829,2.641583,-8.813718,5.845356,-7.873658,-6.301387,-0.626053,-6.399645,-2.845784,-5.611824,1.741376,-3.309694,-2.902924,-4.779009],[-3.576953,-5.488687,-6.336057,-8.986471,-8.255715,-9.254652,0.336991,-8.815387,2.772409,-6.828166,0.787755,-6.291207,-3.458709,2.581489,8.035652,7.988679],[3.872979,8.627308,-8.866472,-0.723651,4.839696,1.556088,5.350315,5.659269,-9.449983,-6.775238,-8.776514,7.474969,-7.420924,5.947086,-9.593011,5.572888],[5.733195,6.630285,-3.540747,-9.859812,8.264805,-3.374545,1.195844,3.414581,-7.224383,2.544156,-9.198027,4.772395,-9.410146,-2.772443,-7.688411,-7.510496],[6.836394,0.412421,8.795701,7.645985,2.758914,-5.866808,2.449908,-8.036533,1.661388,9.667936,-6.126338,-5.816995,3.883667,8.775591,-9.513970,5.920814],[-5.709777,6.853293,-6.871424,-3.626435,8.393024,8.195291,-9.968965,-9.254396,9.929523,8.751845,-3.777339,-8.192557,-5.223704,6.213150,3.524035,-6.740326],[2.246552,-9.392240,0.885236,4.062679,5.292023,7.550222,7.052813,6.974586,9.831078,-3.704307,2.960458,-6.476437,1.734622,-6.308636,-5.908010,-3.772408]],[[0.270613,-9.052182,5.651597,7.695592,-5.471435,-9.193385,-3.093430,-5.998740,-0.167140,0.542638,-7.956129,2.708967,-4.232466,-1.114778,8.334247,-4.656582],[5.305344,7.758824,7.091221,5.084504,8.300054,8.073620,-1.687114,-3.209231,-2.439941,-1.015250,6.121980,-7.263395,2.544212,-9.226056,7.559494,2.331762],[8.914916,9.193669,5.949189,-1.411411,-8.979532,-0.244195,-4.828929,6.491580,5.653454,2.326810,-5.739315,-6.829787,-6.646459,-3.160873,5.725044,3.223248],[-5.613619,3.699870,6.892473,-6.480416,7.828938,-3.420607,3.646313,2.370980,2.670721,5.307906,-2.591811,-1.411814,5.842755,5.745912,-3.616172,0.154638],[8.405745,1.636735,9.697062,1.366674,-5.605846,-1.151580,9.240589,-1.221878,-7.132968,-6.078647,0.947005,0.910520,9.330271,-3.262656,4.772025,-4.396194],[-3.961973,-0.470510,-8.192877,3.668816,2.797260,-5.440519,2.894559,-7.606473,8.954786,-5.408421,0.067617,1.826957,-3.885580,-6.982077,5.454953,3.166578],[-4.468575,1.127805,9.911808,-6.329334,-7.141101,1.945932,6.648974,9.810923,3.867753,-4.538013,-0.083111,3.189059,2.384475,-6.217739,2.921059,-0.833162],[2.538107,-1.817476,-5.966842,-4.859527,3.507238,-8.677472,9.423198,9.858528,-3.352353,9.731136,9.999171,2.790373,-9.758972,-6.300283,7.506850,-5.989272],[-9.924316,9.093436,7.030784,-9.944846,-7.928474,6.402351,-8.568087,-3.870212,-8.918230,5.322705,-7.985242,-8.181129,6.841212,-7.427661,-7.235121,6.104383],[4.937063,5.312610,-8.873544,-3.113487,2.534701,-7.764215,-4.945404,-9.622557,-2.186142,7.022089,-1.672800,-4.610037,-5.089625,1.794188,5.916767,6.827449],[8.557331,9.017976,-6.880695,-5.187165,5.809226,-3.861735,2.032679,9.695734,-5.527402,0.572654,-7.961170,-7.401187,-3.318284,8.217159,3.362066,9.662181],[-9.010372,-7.238698,-7.043549,-2.118136,-1.424024,0.977991,9.256306,9.977683,8.876928,-2.190042,-4.958835,-8.522475,-6.822538,-7.714852,7.127146,4.882648]],[[-3.135031,-3.118929,-4.231293,4.591233,2.507344,0.262194,7.338352,7.620076,7.900337,-5.595056,-1.413776,-9.190499,4.320509,-9.231325,-7.784772,-5.823387],[-0.142275,1.156661,8.641908,6.423851,-8.523888,0.832411,1.167136,-7.108643,-7.244527,6.835447,-8.730557,-8.020393,-2.237975,-4.484730,-4.834198,-6.169824],[1.273165,6.693515,-1.835938,-2.560869,9.568867,-4.878985,-8.890474,0.136971,8.575364,5.939857,1.211590,2.539417,6.040065,-2.005209,-8.490677,-3.719024],[5.666162,-1.884806,-4.605323,-5.494234,-8.352604,-0.786970,9.823433,-2.866922,-4.292486,-6.442789,2.405826,-1.941468,1.948889,-5.228941,3.412402,-9.174474],[-8.790096,-0.350776,2.176457,6.843459,3.684277,-7.639031,9.750088,8.024764,-3.615014,2.917730,-8.488510,-2.164599,5.513904,4.757639,0.734907,9.009963],[7.568567,-1.617448,-1.803034,-6.189892,-0.887113,-7.115304,3.662634,9.870534,-4.630094,4.100514,-3.417008,-3.211453,-7.198681,-0.286937,4.066494,-5.709876],[1.160432,3.277558,-3.930230,4.553889,-5.404774,-9.995303,-5.592066,-0.382819,8.707398,3.758635,4.991138,8.743246,4.381130,-3.629049,4.990951,7.170491],[5.945269,-8.710258,8.276855,-2.342265,2.939440,4.955929,8.202256,-1.472672,-4.853159,-7.608564,-3.937791,0.081122,-5.370074,-8.836851,-1.743139,-9.173040],[5.375369,6.710726,2.959275,-5.343374,1.839551,-6.585759,7.859054,8.675791,-4.509579,-0.170387,8.252205,-3.793228,7.416041,7.003707,6.284247,1.908710],[-6.330846,9.296164,0.548967,-9.421122,1.095923,9.858647,-4.748764,-9.418834,-2.280925,6.948931,2.360508,9.542399,-4.206394,-7.779345,4.347517,-1.592681],[7.942326,7.833277,-6.529246,2.282907,-1.852685,-2.832103,0.596741,9.518148,1.980868,3.214673,-1.868622,6.538554,8.912237,-0.593980,-0.870999,-1.486285],[-2.634579,-1.224206,4.166177,6.533412,-3.622894,-0.674436,-3.601589,0.220487,-9.201167,-5.277553,-5.275366,-4.012034,-1.378672,-9.126353,1.742591,-4.956880]],[[-9.468558,-8.362692,-0.683904,8.139644,-5.738221,-2.711907,1.336586,-5.927080,-9.765069,-5.144755,3.769335,-8.923131,-1.726793,-8.277120,0.767882,1.076313],[9.166646,4.331575,5.573034,-3.782067,1.229752,1.564177,-9.417641,-2.264841,-2.939611,5.230525,1.930334,0.744399,-9.968006,-1.664152,-1.335079,7.359971],[1.239275,0.646482,0.065620,-3.586082,-8.277008,0.354997,-5.875589,8.247161,7.027086,-6.573372,-7.399546,-3.102786,1.255664,-0.704652,-1.066588,6.284651],[0.151362,1.082808,-7.372082,3.265138,6.971656,9.954198,-7.890852,-8.276031,-0.140876,8.790292,0.027265,9.672868,-2.071655,-2.630084,-1.076146,-3.960120],[5.131160,-7.882666,-5.138522,-5.887483,8.154169,5.385498,1.145656,7.209756,-1.992913,-9.504890,-9.307271,-8.241243,-4.694285,2.434620,-9.498434,-7.908678],[4.144052,3.616458,-9.648868,2.786842,4.219720,7.672217,3.173034,-1.723828,8.394521,5.191647,5.292892,-0.912607,-5.329210,-7.615478,-4.268027,-6.955488],[9.374976,8.836497,-7.071031,8.175760,4.342325,-0.420814,5.151539,-8.669307,1.907644,-9.186817,6.979999,-2.162906,3.379084,-4.148777,6.964127,0.702768],[-9.262072,-1.207859,-8.706765,-4.617870,7.690366,-2.449039,-7.828568,3.146403,-4.201223,-7.303793,4.268617,2.523197,2.829304,-5.493120,1.468633,0.244031],[-0.903807,-5.605467,-4.876839,-7.862217,7.567704,-2.443908,6.422445,9.481749,-9.412925,6.688254,0.900920,-1.036813,-3.957257,6.767528,-2.992203,4.763953],[9.184886,6.315914,-6.746519,9.867078,-1.769067,9.344211,5.528166,6.265059,-7.777974,7.362145,-1.551881,-2.278176,-0.730698,-5.392300,6.681109,1.288274],[5.370268,-0.248584,-4.465710,2.307389,1.201406,-2.906957,2.989524,-7.372904,-4.936648,7.433788,8.406205,8.430915,-3.249979,9.008377,1.257518,-2.048827],[5.077340,6.739263,-1.964757,7.406676,6.644141,-3.360920,5.372793,5.785049,2.582109,-0.712875,-9.413679,-0.994155,4.020568,-9.554326,7.902625,6.540439]],[[4.491823,-7.679096,3.373822,-6.929306,-0.733527,-2.426325,5.622321,3.995996,-6.822685,-9.938155,-9.593323,1.056131,-9.708833,-0.849902,-2.642444,-5.247421],[-5.385168,7.833533,-5.915929,8.915380,7.720806,7.618485,3.432965,4.958026,-1.540649,-3.003500,-2.394165,5.329127,-6.234961,-8.685586,4.746495,-6.218667],[-9.057386,-6.640140,4.765110,7.353763,8.623812,-9.893691,9.541376,-1.297134,9.730688,-9.738844,1.481947,-8.679747,-1.140206,-0.529983,2.569451,3.100726],[5.778903,0.420779,5.195256,0.350601,6.095454,2.223493,5.049071,-4.659218,0.052319,-5.810529,-4.698855,-4.792543,-1.329549,4.428336,3.167682,0.861336],[-5.032879,-4.461842,0.336531,-0.474355,2.407913,6.172143,9.839658,3.141936,4.488191,3.195434,-1.170354,-3.637555,8.156765,-2.342855,-0.131694,8.266134],[-4.577226,0.659145,7.918339,-9.837000,1.023621,7.007810,-7.135644,5.956792,-8.390616,5.917762,-7.906384,3.445515,9.810683,2.242043,5.891368,-3.784039],[-5.504614,3.626975,0.077564,-1.680838,-8.280572,-1.821068,-8.662232,-9.445927,-7.489849,2.177911,4.174093,-5.505678,-8.102273,-9.460716,-0.759577,-7.353465],[-9.353487,-8.487416,8.846013,0.903303,-0.443254,-6.941093,8.335209,-0.071382,7.972208,7.255322,-1.695988,6.779809,0.965526,7.153652,8.456543,-6.012063],[3.208219,6.694967,1.643672,-3.742112,-4.780680,-5.393492,4.454492,-3.360633,-6.440534,0.852622,5.109791,3.616133,4.343582,4.258083,-2.983525,-7.738017],[-2.615606,1.471832,-7.120757,-4.036540,-4.124350,9.306227,1.382669,-2.010513,5.349658,-4.972600,3.025897,6.899514,-3.288392,8.795525,-7.254599,8.328567],[8.372832,-7.507709,-1.770051,9.434980,2.087203,0.768730,-0.596525,-7.627145,0.905237,-3.603392,-8.694585,8.560716,-1.689407,-7.766027,6.862618,-9.213624],[-0.908904,-2.539184,1.318075,6.135765,-4.047658,7.419783,4.568229,-2.150915,-4.141457,6.601061,-9.710049,-4.867438,1.842559,3.705416,-8.498696,2.966597]],[[-5.015625,1.519927,6.534063,-2.377363,5.438272,-0.672683,8.567863,-2.932639,-3.877981,9.524204,-4.038874,6.683681,-4.467155,-1.832728,-8.714272,0.581784],[-3.683111,-0.486090,7.072876,6.436826,-4.324135,9.352181,9.618239,-6.474883,4.235619,-6.289886,4.395541,1.510438,7.796634,-1.140471,-3.736841,-5.746164],[-2.578468,-0.881534,-7.600226,9.410925,-8.677691,-8.888014,-5.843200,7.763999,-3.916663,3.607064,9.320882,1.728447,4.890393,0.541497,6.315891,-0.266851],[-4.256611,-2.147106,-5.739278,-5.254862,-7.238717,-3.189466,9.227428,0.572625,-5.088455,1.150057,8.045337,-5.173969,-4.129933,-9.509457,9.239415,2.275927],[-7.658804,-5.793329,7.088423,7.078793,-8.391787,-9.669428,2.220347,2.694378,2.195915,9.371383,-6.532188,9.024739,8.123040,-2.042002,-5.930065,3.336027],[4.513219,9.349861,-1.715006,6.754709,3.439640,-2.085750,8.871018,-7.799070,-7.574038,8.097542,1.327891,8.329084,2.977875,0.820013,5.980639,-6.146552],[8.186920,-7.102245,-8.517904,-8.015634,1.402147,-7.855070,-7.971416,1.146356,-6.685956,2.620340,0.320568,8.938899,2.550220,-5.952282,8.388552,3.822179],[8.786836,-8.481166,8.069561,4.367658,9.669965,7.945228,-0.669910,-1.185435,-5.559059,-2.866557,-9.377546,-2.704356,-4.717523,-3.601075,1.614933,-4.446043],[5.980829,-4.049131,5.965033,-1.724701,2.247659,2.583540,-8.880761,-6.324549,6.989050,3.926715,-7.734956,5.729733,-5.622241,-3.281797,-9.816152,-7.880638],[0.968982,-3.720149,-8.481505,7.623144,7.683725,6.400316,-4.229707,-5.008901,-4.852337,3.174570,1.898534,-6.429899,6.400289,2.091634,6.082816,9.631723],[-3.243766,-2.799528,-9.418577,-0.989324,-7.786171,-1.901203,0.645970,-0.970412,-6.413194,2.637999,7.273959,9.911120,-7.575556,-2.948060,8.699824,5.897017],[6.551666,-5.289591,3.366119,5.803200,1.099729,2.020735,-8.623229,-0.824963,6.417991,-2.683511,2.310813,1.064554,-8.002990,-4.805297,-0.885357,0.779951]],[[4.793481,1.943737,-1.218848,-9.543594,-0.919980,1.888126,1.061657,9.374370,5.431839,1.357575,-8.948673,-4.762933,-3.103634,-4.541204,-9.825388,0.545200],[3.279956,2.348279,8.131822,5.727646,8.576969,9.215916,2.060312,5.280161,-6.321125,7.370153,-2.029516,-8.772036,-3.592231,3.958995,-7.795548,-5.770168],[3.741833,-3.412149,0.167941,7.688004,-8.900353,-3.560961,8.405090,-1.627424,-0.884765,-6.521242,8.476738,-1.618884,4.539786,3.800787,-0.908644,-2.800626],[4.363683,-3.136756,-0.147660,8.714050,-9.645196,-9.268363,1.584049,-2.252990,7.223417,-6.523160,0.383008,-2.050612,-0.793850,-6.484771,-1.498501,0.364290],[9.737624,-3.320543,6.057538,-3.845255,4.376197,9.281788,1.435505,8.417689,4.850835,-4.425601,-9.134797,9.609163,-4.724322,8.731053,-2.846726,-8.130668],[-0.015228,-9.615044,-2.291461,-6.164181,8.574588,-5.255747,6.938662,2.668741,-1.942978,2.537184,4.707295,2.419373,-5.961980,-3.063698,7.077596,8.264969],[5.586736,9.940739,-7.723792,-2.449128,-3.543936,9.685000,-0.579605,-7.065905,-0.035648,1.523790,-8.042622,1.708960,8.578829,-5.493138,-0.888173,-2.177381],[9.045440,7.631795,3.508047,5.774145,-0.529658,6.760700,-3.681547,8.826387,7.197847,-9.715876,-0.105789,8.160569,7.288943,-7.245566,8.775246,2.779920],[8.311507,-1.241317,-4.560106,-1.920612,-9.005713,6.958798,1.126515,6.578348,5.198150,-4.680647,7.548792,6.249786,3.022068,-2.346947,3.161696,3.151499],[-3.372804,7.730984,-9.428516,-6.356504,-9.864170,3.125340,-6.390429,-5.829593,-5.801772,1.967318,-0.809172,-6.071631,3.592714,-7.212590,-2.992248,1.090145],[-0.684816,-5.285822,-2.163039,5.060644,-3.299968,-6.577812,-3.980762,3.773406,8.462213,-4.040913,4.536794,-1.074855,-1.381212,5.799871,-8.323464,6.483799],[-3.652984,8.641534,-4.583944,9.279816,4.706650,-4.836511,-8.709005,-0.225151,-0.499710,-7.079248,0.423715,-1.215924,1.327793,3.466375,-6.414734,-0.621240]],[[-9.470910,8.019016,3.296054,6.005061,-7.688351,-6.446636,8.586713,9.253830,8.065932,-3.669613,-6.403222,-1.360005,-5.349563,9.334453,5.390038,0.374160],[-2.687213,-8.276974,9.667934,-3.270512,5.215480,1.118631,-5.528323,4.480853,-2.889419,-5.216123,-1.166004,-0.236396,-8.852440,-0.940891,-4.695238,4.952017],[-4.956417,-6.890895,-5.821303,-4.423813,6.716463,-8.127834,-5.685279,8.050129,4.907254,1.025566,6.391457,5.899778,6.049745,8.959489,8.213705,-4.931580],[-0.847851,-0.507917,-4.079020,1.067252,-8.640277,5.253015,7.049431,8.462353,-0.428649,-2.810626,-7.484345,-5.798164,2.973204,0.025667,-5.655876,2.617301],[-1.999225,5.864008,-2.718760,-1.726206,7.935660,5.585298,4.568094,9.563597,5.221100,1.839949,2.082836,8.452076,6.650323,-0.244677,9.054846,-6.793903],[7.912455,-9.464312,-6.657616,-3.810307,-9.551328,-7.728302,-4.134647,9.439038,-6.268711,1.347771,-2.636496,-9.409226,-4.271078,-2.393247,-9.758628,4.218783],[-3.566997,2.814724,2.722523,-8.010344,6.684384,3.481884,3.275267,0.811406,0.797720,3.975153,-0.248372,4.415919,-3.125530,-7.971273,-7.946272,-7.607055],[4.902349,-4.477374,0.011481,-0.027219,9.460669,-7.134678,-2.441011,-1.529093,7.335741,-6.922841,-7.576584,-4.376235,4.527628,3.274632,-1.972134,-8.130707],[-3.192397,-8.672201,-8.770102,-1.147779,-5.472276,-5.275102,5.104684,-9.075477,-9.471963,-2.489142,-7.221091,-9.461802,9.535507,-3.915489,9.189883,0.289948],[5.664058,-4.950808,-2.775687,3.307872,5.924994,9.588568,7.091225,9.854217,-4.677795,-0.458307,-0.192355,-9.489545,-1.582227,-0.835861,-6.640650,1.348032],[7.231317,8.292835,2.713733,1.678125,-1.168419,0.409359,-6.879986,6.099852,-3.654056,-8.446035,-2.907095,-3.550325,6.210261,2.119067,-5.603439,8.559576],[-2.763517,7.604110,7.411021,-8.484155,0.811606,0.088907,9.843514,7.289773,-1.985397,-1.255713,-1.872469,-5.075199,2.904408,7.202408,-8.824277,-8.863887]],[[5.569068,-9.481280,-4.890119,-0.555251,-4.320598,6.202819,4.034855,4.450623,-7.374137,-2.080855,-5.177080,-6.237693,-8.056336,7.749200,-7.995546,8.274986],[3.637037,8.476539,8.934463,-0.183286,0.779349,3.262018,-7.744029,5.787750,-0.149393,0.199067,-2.965344,0.316067,-6.806592,3.340355,-7.322944,-0.612818],[1.254309,9.307637,-5.044652,-3.636689,6.897554,-8.395148,0.883054,8.348191,8.428668,-6.191382,-3.834461,4.165296,5.077091,-3.880290,0.945925,6.048575],[-9.494246,7.608877,-9.360087,-4.298728,0.718347,2.145644,-9.791935,0.526452,-0.719667,8.487383,8.561599,6.743139,-4.910369,-6.632592,-7.434567,-3.744160],[-2.121002,4.545269,4.326409,-5.105131,-8.992486,3.288129,-2.671863,6.610481,8.659547,-2.350924,9.051579,7.881105,4.529801,9.737361,8.030664,-5.822548],[-4.495852,5.571819,9.760922,-7.499608,2.730944,9.925618,-4.789386,-1.975095,6.594201,-9.566086,-3.523442,-7.792579,5.650053,-4.963249,7.478507,-5.865934],[-2.220261,-5.269354,-1.659134,-8.925384,-4.346684,8.312097,-0.522799,-1.385472,-8.119331,-1.640876,-2.957553,-0.461005,-3.919946,0.145312,7.342045,8.186024],[8.460435,-9.962892,5.220816,1.636197,-9.458124,-6.642848,8.210334,-4.280289,-9.065973,-2.362278,-7.318036,-7.390897,7.187746,-5.163463,-9.013467,6.144100],[8.366945,4.401457,-8.821247,0.784208,3.227362,5.503571,-2.402762,3.331475,-3.430697,-1.305712,-1.669194,0.689064,-5.351727,6.432554,-5.498470,-9.848136],[-4.199514,-4.161152,-4.164834,6.404622,4.937525,-3.173512,-9.024526,-7.271290,-1.332139,1.620932,-5.261178,-9.667836,1.913858,4.293118,-2.504139,4.655776],[3.424024,9.628557,2.189631,0.067037,2.155435,7.832294,9.220629,-6.877917,-4.548894,1.478216,2.025169,0.991245,7.807201,-4.588470,-6.816810,-0.102433],[8.856203,6.402595,-4.566554,2.570455,5.798011,5.301540,3.707919,-7.159427,-6.900480,-5.859896,7.934940,-5.063080,-1.244103,0.212511,-1.247230,-5.476282]],[[2.113527,3.312820,-0.646764,-5.885383,1.010355,9.052872,9.367971,-6.298086,7.708434,1.158083,-4.310955,0.504681,-0.931383,2.701571,-0.253710,-4.315860],[1.629544,1.820144,0.937232,5.381421,9.695057,7.966457,-9.417189,-1.092940,-6.137865,0.582661,4.088869,8.867858,6.604040,1.618821,-6.701677,3.822282],[9.290873,2.829884,-3.594099,2.899295,0.197912,9.564619,-3.993177,0.196152,1.064905,3.480841,5.569819,8.018913,7.700663,-2.750823,-0.101958,1.423794],[-6.861648,-3.957715,-9.065322,0.903266,-0.695512,4.545270,-5.196853,9.071490,3.972224,4.582371,4.437894,5.381082,4.943658,-3.381012,-6.891688,7.386408],[6.082335,9.032439,7.051740,4.551772,9.562793,-5.524949,-3.830563,-5.319207,-1.858028,-8.855826,-1.046828,-1.864992,-7.065081,6.404390,-0.044593,6.999237],[7.831992,8.033882,7.097950,-6.749319,-1.095055,9.440343,3.662786,-5.576349,5.967403,1.637013,9.878548,0.056048,9.304406,-7.587345,1.154013,3.777944],[-1.152680,5.135361,0.272324,2.542841,-1.484388,-3.640876,-9.839884,6.680469,-2.857315,8.445883,-5.606050,2.245266,7.368576,3.031742,2.915286,0.640322],[-3.381733,-5.637377,5.573779,5.805057,-1.423945,3.680407,-5.093857,-3.668756,0.498956,-2.860407,-3.830857,8.073959,4.704214,-7.328091,2.859447,4.159814],[-8.365506,-2.684604,3.346208,2.546556,3.800181,-0.436249,6.936441,-0.537783,-7.953190,-0.076271,-4.698223,-4.889177,-7.445097,0.799318,3.833603,5.406974],[-7.931497,9.612539,1.674341,8.461014,8.567016,6.172656,-4.432658,2.408727,-5.500986,6.148100,-6.092273,5.179249,-2.702811,-2.528793,8.798465,4.543386],[8.458911,4.225007,2.608795,-4.993895,-2.750687,5.421393,5.028245,1.354857,-5.425149,6.717722,-9.689529,0.630799,1.304299,-7.170445,-2.500269,-8.592365],[-0.669991,-8.058421,-2.558498,-7.433699,-4.819854,7.566783,4.653144,-1.777461,9.821474,-5.625279,-0.791117,-3.420694,2.602835,-7.789888,-7.572386,-4.121798]]], dtype = "float64")#candidate|6092|(16, 12, 16)|const|float64
bop_6093 = relay.logical_xor(uop_6066.astype('int8'), relay.reshape(const_6092.astype('int8'), relay.shape_of(uop_6066))) # shape=(16, 12, 16)
output = relay.Tuple([call_6071,var_6072,bop_6093,])
output2 = relay.Tuple([call_6073,var_6072,bop_6093,])
func_6105 = relay.Function([var_6065,var_6072,], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6105_call = mutated_mod.get_global_var('func_6105')
var_6107 = relay.var("var_6107", dtype = "float64", shape = (16, 12, 16))#candidate|6107|(16, 12, 16)|var|float64
var_6108 = relay.var("var_6108", dtype = "float64", shape = (1568,))#candidate|6108|(1568,)|var|float64
call_6106 = func_6105_call(var_6107,var_6108,)
output = call_6106
func_6109 = relay.Function([var_6107,var_6108,], output)
mutated_mod['func_6109'] = func_6109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_6113 = relay.TupleGetItem(func_3322_call(), 0)
call_6114 = relay.TupleGetItem(func_3323_call(), 0)
output = call_6113
output2 = call_6114
func_6131 = relay.Function([], output)
mod['func_6131'] = func_6131
mod = relay.transform.InferType()(mod)
mutated_mod['func_6131'] = func_6131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6131_call = mutated_mod.get_global_var('func_6131')
call_6132 = func_6131_call()
output = call_6132
func_6133 = relay.Function([], output)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4712_call = mod.get_global_var('func_4712')
func_4713_call = mutated_mod.get_global_var('func_4713')
call_6189 = func_4712_call()
call_6190 = func_4712_call()
func_4313_call = mod.get_global_var('func_4313')
func_4317_call = mutated_mod.get_global_var('func_4317')
var_6198 = relay.var("var_6198", dtype = "float64", shape = (8, 140))#candidate|6198|(8, 140)|var|float64
var_6199 = relay.var("var_6199", dtype = "bool", shape = (44, 2))#candidate|6199|(44, 2)|var|bool
call_6197 = relay.TupleGetItem(func_4313_call(relay.reshape(var_6198.astype('float64'), [10, 7, 16]), relay.reshape(var_6199.astype('bool'), [88,]), ), 1)
call_6200 = relay.TupleGetItem(func_4317_call(relay.reshape(var_6198.astype('float64'), [10, 7, 16]), relay.reshape(var_6199.astype('bool'), [88,]), ), 1)
func_749_call = mod.get_global_var('func_749')
func_752_call = mutated_mod.get_global_var('func_752')
call_6204 = relay.TupleGetItem(func_749_call(relay.reshape(call_6197.astype('int32'), [2, 8, 6])), 0)
call_6205 = relay.TupleGetItem(func_752_call(relay.reshape(call_6197.astype('int32'), [2, 8, 6])), 0)
var_6218 = relay.var("var_6218", dtype = "bool", shape = (44, 2))#candidate|6218|(44, 2)|var|bool
bop_6219 = relay.right_shift(var_6199.astype('uint16'), relay.reshape(var_6218.astype('uint16'), relay.shape_of(var_6199))) # shape=(44, 2)
output = relay.Tuple([call_6189,call_6197,var_6198,call_6204,bop_6219,])
output2 = relay.Tuple([call_6190,call_6200,var_6198,call_6205,bop_6219,])
func_6223 = relay.Function([var_6198,var_6199,var_6218,], output)
mod['func_6223'] = func_6223
mod = relay.transform.InferType()(mod)
var_6224 = relay.var("var_6224", dtype = "float64", shape = (8, 140))#candidate|6224|(8, 140)|var|float64
var_6225 = relay.var("var_6225", dtype = "bool", shape = (44, 2))#candidate|6225|(44, 2)|var|bool
var_6226 = relay.var("var_6226", dtype = "bool", shape = (44, 2))#candidate|6226|(44, 2)|var|bool
output = func_6223(var_6224,var_6225,var_6226,)
func_6227 = relay.Function([var_6224,var_6225,var_6226,], output)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3469_call = mod.get_global_var('func_3469')
func_3471_call = mutated_mod.get_global_var('func_3471')
call_6234 = relay.TupleGetItem(func_3469_call(), 1)
call_6235 = relay.TupleGetItem(func_3471_call(), 1)
output = call_6234
output2 = call_6235
func_6242 = relay.Function([], output)
mod['func_6242'] = func_6242
mod = relay.transform.InferType()(mod)
mutated_mod['func_6242'] = func_6242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6242_call = mutated_mod.get_global_var('func_6242')
call_6243 = func_6242_call()
output = call_6243
func_6244 = relay.Function([], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3939_call = mod.get_global_var('func_3939')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_6254 = relay.TupleGetItem(func_3939_call(), 0)
call_6255 = relay.TupleGetItem(func_3941_call(), 0)
var_6270 = relay.var("var_6270", dtype = "float32", shape = (6, 13, 3))#candidate|6270|(6, 13, 3)|var|float32
bop_6271 = relay.divide(call_6254.astype('float64'), relay.reshape(var_6270.astype('float64'), relay.shape_of(call_6254))) # shape=(6, 13, 3)
bop_6274 = relay.divide(call_6255.astype('float64'), relay.reshape(var_6270.astype('float64'), relay.shape_of(call_6255))) # shape=(6, 13, 3)
output = bop_6271
output2 = bop_6274
func_6275 = relay.Function([var_6270,], output)
mod['func_6275'] = func_6275
mod = relay.transform.InferType()(mod)
mutated_mod['func_6275'] = func_6275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6276 = relay.var("var_6276", dtype = "float32", shape = (6, 13, 3))#candidate|6276|(6, 13, 3)|var|float32
func_6275_call = mutated_mod.get_global_var('func_6275')
call_6277 = func_6275_call(var_6276)
output = call_6277
func_6278 = relay.Function([var_6276], output)
mutated_mod['func_6278'] = func_6278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2873_call = mod.get_global_var('func_2873')
func_2874_call = mutated_mod.get_global_var('func_2874')
call_6282 = func_2873_call()
call_6283 = func_2873_call()
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_6324 = relay.const([[-4.465562,-2.200356,-0.885946,-3.007419,6.080056,1.172007,4.837063,-8.181707,-3.316854,6.416387,-6.697046,1.771690,8.388900,-7.490898,5.076901,-1.374577,-4.500819,-0.567266,6.876181,8.030050,2.447867,2.704145,-8.604117,-1.861522,-7.177733,8.793091,4.707158,8.053650,6.260696,5.516606,-6.080718,3.298131,-3.558382,-6.691034,-0.621810,-3.011252,-5.745735,-5.610549,6.871799,3.389460,-3.245894,-5.227140,-0.648044,-9.695052,-1.723662,-0.953417,-2.493085,2.879529,5.978240,-6.770609,-5.859771,9.276481,-4.298136,9.526652,1.350689,0.698595,8.964710,2.661422,-2.372672,-3.581710,6.823914,5.056228,-2.950907,-7.454618,-0.422443,2.754616,0.300659,-6.065138,-6.737272,4.876682,-0.054802,-4.719291,7.336656,6.997616,4.712929,-5.263270,5.609101,-0.775128,-8.890430,6.511877,-3.364550,6.243484,-6.913625,4.916329,2.513792,-4.212103,-8.408686,-8.387442,-3.010896,5.394013,1.101359,1.536821,9.355970,-1.138629,-0.384741,9.900951,-2.303421,8.711136,-7.650673,0.439509,0.956228,1.761573,-9.206455,3.280415,-6.432176,8.523593,-3.473084,-4.759671,-7.284569,-0.290279,-6.780299,5.188419,-8.499176,7.496118,-1.338143,8.171541,-3.837463,0.517104,-4.459376,-1.133609,4.674527,-8.041101,-0.588956,3.044832,8.971738,4.818199,8.205582,-9.685915,6.420314,-7.884285,-4.464352,-7.008796,8.489186,-2.831959,-2.492584,-7.369406,-6.370784,-5.568854,1.905607,6.945001,6.377983,-6.011639,-7.436062,-8.971128,2.026362,5.830054,-0.783905,-6.793665,8.507940,4.636665,1.415108,1.411413,-2.598361,-4.644106,5.352789,-7.784344,6.348547,-6.792544,8.527209,8.943745,4.777892,6.065501,-2.213396,6.387573,-7.414664,-9.257953,-9.541263,5.612587,0.687429,-1.002065,4.266073,5.686027,-5.770084,-6.112984,-7.970599,-8.300341,-8.509981,-3.446078,8.269311,-1.943454,-3.187388,-7.517586,-8.573792,-3.426510,4.034971,2.143993,7.329605,5.643056,-8.168109,-1.124025,-2.483783,-9.251948,-8.984827,8.465503,0.443098,2.133191,-6.577020,-3.285774,7.932526,-4.252498,-6.510179,9.859002,-1.011416,1.968655,5.496736,-8.926285,-5.235676,-4.578076,8.932900,-4.545394,-9.519868,-5.800571,3.107070,9.824805,3.125758,-5.423007,6.481113,-3.931014,-8.182109,-7.306486,1.791203,4.743116,-8.602815,-8.852688,-7.139553,-5.360079,-7.966509,5.712513,0.009052,-5.991647,1.580839,-4.763638,-6.570929,-9.767508,-1.346869,-4.763218,7.565490,4.998664,-4.325231,1.614325,7.900417,1.860859,4.419514,7.977558,9.756244,9.545590,-8.304824,-0.401216,-5.325016,-1.388430,2.087528,-3.979864,-1.113991,-0.580986,1.635593,4.000481,5.752775,-8.344412,-3.760914,-9.184231,1.820293,-7.284705,4.805294,3.124885,7.848421,9.018062,-8.868627,-5.015057,7.948910,2.799081,-8.078134,7.513916,1.673623,-5.558950,-4.100087,-2.616159,6.359145,7.811514,7.630097,-0.468289,-6.482672,8.894907,-8.724450,-8.406566,4.916891,-2.173326,-3.426969,0.865767,-6.865678,3.363470,-4.361922,-8.502758,-0.048798,2.140276,-7.020499,7.747257,0.778070,-5.204432,-0.638841,6.065422,-1.178113,5.762839,-3.032295,4.533643,4.063091,4.553842,-6.213749,9.042428,1.838944,-9.268130,-2.059175,5.296194,-9.223929,4.539533,-3.717431,-7.927634,7.320171,7.382916,4.241238,-4.820748,-5.635229,-5.857925,0.608643,5.860027,-8.424320,9.230035,3.715143,-3.795337,-3.548063,-2.948493,8.275140,7.942398,0.068362,-1.605585,9.550050,3.583616,-3.294445,-3.878856,0.617509,-4.904064,2.030074,-2.239325,-4.643989,7.173798,3.905651,4.574355,-6.800522,6.704099,-5.563402,-8.121186,-5.785148,0.082814,-3.108969,-2.909854,8.536553,5.426029,-6.899151,-0.278003,3.573466,2.466826,6.831346,8.916577,-6.268904,7.324105,-5.004566,-4.056141,6.146273,0.133454,-3.855320,9.224033,-2.069501,-2.912728,1.221598,-8.991706,-5.648063,3.243043,-3.258217,-6.175320,7.938680,1.979593,0.117316,-8.671379,1.253999,-3.151345,2.851008,-3.534975,5.195588,4.038301,4.546968,5.969029,2.096369,7.800229,9.093278,-3.479253,-4.758723,-1.904941],[-5.508356,-7.828515,-3.032016,6.074632,7.867862,1.170243,-0.365322,6.316972,-6.094526,-8.931592,0.876572,-2.200959,6.220506,9.050495,-3.237996,6.396052,-9.131076,5.858945,4.316985,-9.159975,-2.142603,7.275878,-7.492736,-8.070460,0.169603,8.878571,-7.253274,6.771582,-5.875681,5.735700,-7.160192,0.041425,6.347451,9.676763,1.333244,8.503640,1.326958,4.678530,5.161076,1.209920,-8.451896,1.016566,-8.671504,-4.038186,6.131094,5.957838,-7.839561,-1.505434,6.814252,-7.605381,6.165702,-4.756805,-2.218101,8.940110,9.912398,-6.624681,1.002064,0.593266,-9.712752,-9.662901,7.219467,2.603662,9.594576,0.441405,6.206641,2.297179,8.258651,-5.684516,8.443271,4.887068,-2.444592,-7.033909,0.753092,8.222312,6.920193,8.307525,3.145771,1.987113,-5.698954,-2.579067,-9.392026,7.403676,0.284184,-5.490427,6.974488,-3.211722,1.215382,3.630710,-0.151119,4.986151,-0.142324,-0.024088,0.942527,-6.306991,8.379319,-9.905521,9.704087,3.949826,8.099768,4.320789,-5.681043,-2.424826,0.965037,-8.801608,-9.669085,4.175355,7.767179,-2.047396,9.320394,-3.911791,1.340121,7.689552,-5.268001,-1.959434,-4.816529,-9.697570,5.897932,-4.020666,-8.257724,-6.378373,-4.383750,-4.239100,6.371013,1.834891,5.783060,2.854852,-2.930687,6.239281,-0.752666,-7.049068,-2.514597,8.909810,1.746037,-4.487476,-2.365168,-2.871261,-2.957637,-3.681392,1.934831,2.091720,-4.072754,-7.937669,3.412112,9.461832,2.292744,-5.996659,1.620751,5.429078,1.962519,-7.534526,-7.241781,6.633332,6.867569,-3.375556,9.730455,-1.236801,5.473528,-1.885079,-5.762242,-5.566167,8.155482,9.285153,-3.931356,8.267665,-9.929573,0.106462,-7.270623,-6.025167,8.493545,-6.120836,-3.054755,-8.232447,9.727516,-6.464170,-0.772184,5.076036,8.237116,-1.464013,8.668482,6.898874,-3.182814,-5.283955,0.033983,-4.408671,-1.898874,2.216009,6.666341,-5.729777,-7.339784,4.605146,7.479987,-4.332797,8.661255,-5.116193,-0.942600,6.544843,-0.142271,6.966043,-7.409099,-5.360641,4.010796,1.698662,9.963402,8.925651,-8.698375,7.128056,-1.060686,-5.589460,-9.053158,-0.576967,-4.159390,6.296480,-0.472185,5.960497,6.435534,1.506238,8.441240,4.928364,-1.645959,7.137393,3.706436,-0.888599,-5.961366,-6.432762,1.452474,-0.380622,-0.695802,-4.337240,-8.719392,2.841575,-5.974916,-6.134261,6.805901,-2.619119,5.933057,-7.545446,-9.680898,-2.613207,4.100409,-6.820891,6.911964,-3.164392,-8.647305,-0.290262,-2.455155,-3.738106,-9.313850,7.354481,2.260945,4.291167,6.174254,7.763815,-0.344684,-6.607404,-6.784888,-8.691131,4.904750,7.524657,-0.441523,9.608543,9.687938,2.395667,-9.552555,9.884078,-6.976940,-0.203521,-8.058762,-4.290795,8.449467,-4.690477,1.189583,-5.342602,-7.779211,-0.513752,7.601000,3.376387,-7.885845,2.776329,6.589818,-6.087838,7.060862,5.263434,-8.898271,3.590838,3.901197,-7.647554,-7.934681,9.884382,-3.589740,0.602297,0.493219,4.437391,8.495285,3.532718,5.044156,6.366308,-3.018187,4.913344,-5.885978,4.898082,-1.360047,-1.541817,-8.027052,2.182159,1.982982,-1.137081,-2.533998,-8.555458,-5.759404,-8.473031,5.869693,3.693832,5.172777,1.409831,0.072356,4.188355,-5.447127,-5.746760,8.308235,3.667518,6.692799,-6.568636,6.807173,5.585927,-9.002503,-9.464830,9.794928,4.838742,-8.829873,-3.247312,7.798520,4.084072,5.560767,-8.081506,-4.735374,-8.908249,-2.691677,7.006662,8.725155,5.661890,-5.971384,-1.282883,4.673922,-0.487279,-8.804843,1.409755,-9.441926,9.989826,5.687114,2.629480,7.398748,2.315338,-5.812541,-7.626224,7.606666,9.929376,1.038346,-5.247672,6.932061,-9.068265,8.572112,-5.200389,-3.466648,-8.310463,1.468240,9.846151,8.450669,-1.420517,0.012925,8.614794,5.986665,2.220088,-7.153148,2.948184,-4.520949,1.770704,-9.219439,-5.979422,8.801379,-6.691345,-2.994900,-8.525786,-6.241702,9.126795,0.304370,-7.472593,3.622853,8.322662,8.935648,1.818387,-7.386754,-2.009564,-8.385059,0.044036,2.451643,8.534638]], dtype = "float64")#candidate|6324|(2, 396)|const|float64
call_6323 = relay.TupleGetItem(func_2096_call(relay.reshape(const_6324.astype('float64'), [12, 11, 6]), relay.reshape(const_6324.astype('float64'), [12, 11, 6]), ), 0)
call_6325 = relay.TupleGetItem(func_2099_call(relay.reshape(const_6324.astype('float64'), [12, 11, 6]), relay.reshape(const_6324.astype('float64'), [12, 11, 6]), ), 0)
var_6367 = relay.var("var_6367", dtype = "float64", shape = (8, 3, 11))#candidate|6367|(8, 3, 11)|var|float64
bop_6368 = relay.bitwise_xor(call_6323.astype('int32'), relay.reshape(var_6367.astype('int32'), relay.shape_of(call_6323))) # shape=(8, 3, 11)
bop_6371 = relay.bitwise_xor(call_6325.astype('int32'), relay.reshape(var_6367.astype('int32'), relay.shape_of(call_6325))) # shape=(8, 3, 11)
uop_6372 = relay.cosh(const_6324.astype('float64')) # shape=(2, 396)
output = relay.Tuple([call_6282,bop_6368,uop_6372,])
output2 = relay.Tuple([call_6283,bop_6371,uop_6372,])
func_6385 = relay.Function([var_6367,], output)
mod['func_6385'] = func_6385
mod = relay.transform.InferType()(mod)
mutated_mod['func_6385'] = func_6385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6386 = relay.var("var_6386", dtype = "float64", shape = (8, 3, 11))#candidate|6386|(8, 3, 11)|var|float64
func_6385_call = mutated_mod.get_global_var('func_6385')
call_6387 = func_6385_call(var_6386)
output = call_6387
func_6388 = relay.Function([var_6386], output)
mutated_mod['func_6388'] = func_6388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6131_call = mod.get_global_var('func_6131')
func_6133_call = mutated_mod.get_global_var('func_6133')
call_6431 = func_6131_call()
call_6432 = func_6131_call()
func_5939_call = mod.get_global_var('func_5939')
func_5943_call = mutated_mod.get_global_var('func_5943')
var_6445 = relay.var("var_6445", dtype = "float64", shape = ())#candidate|6445|()|var|float64
const_6446 = relay.const([[-2.143552,-4.853807,-0.702644,-9.652185],[2.177752,-6.990007,5.092355,2.045281],[8.153390,-6.618851,3.744327,3.197959],[0.722633,1.880545,2.631097,-3.326961],[6.929778,-8.204497,-2.015808,-5.106974],[9.661044,5.056965,-6.249402,-6.818771],[-2.686775,7.610978,6.302857,1.258647],[-4.615680,0.259977,-5.113412,3.192605],[-5.608337,-1.509085,-5.720907,-4.946078],[6.828178,-7.348069,4.941649,6.924014],[7.981893,3.834322,2.626481,-8.744818],[-4.844343,5.510613,8.835514,-2.714625],[9.900814,-9.213270,2.418986,2.415540],[-9.067096,9.351857,-4.116303,8.915778],[7.596826,6.110539,-8.890286,-7.269988],[0.952675,8.041226,-4.053429,-7.925019],[-7.659725,4.166030,-7.949566,7.423704],[-3.658267,-3.939899,7.550928,1.512222],[-3.627620,-2.432504,-7.166101,2.669919],[-4.755979,-0.835704,6.714502,-4.512466],[-1.228863,9.148847,-2.178142,9.664391],[6.979255,-8.392737,-4.664674,-4.675486],[-7.269293,5.861066,4.986390,-0.280462],[6.067762,4.296350,7.733604,2.791508],[6.797732,-4.152787,0.740051,4.689467],[3.633535,0.329161,0.910636,0.961125],[-8.335982,-9.974310,3.876377,-6.792852],[9.707818,6.524712,6.343504,-8.090443],[-8.598486,6.484382,5.480102,-5.766357],[-6.550655,-3.671334,9.938898,4.747282],[-1.383933,-7.313247,-4.196967,-2.463185],[-7.598913,-6.546367,-6.161888,-2.920934],[-4.089221,-2.676417,-7.406849,-8.302356],[0.827905,-1.683714,-5.801178,-6.556532],[5.313074,4.238263,6.880469,-7.293719],[0.029992,-2.981522,4.838687,-3.673353],[-6.461582,3.601032,-5.341221,3.417391],[-2.743956,-2.196199,0.720678,6.707968],[1.099254,-7.959844,5.947125,-0.585261],[1.536997,-3.135948,-7.393485,-2.567823],[-1.899800,6.194773,-3.282589,-7.906135],[3.511665,7.046778,1.315418,1.733354],[3.040970,-5.922335,-6.587159,-1.100032],[2.864532,9.608495,8.106999,-0.223731]], dtype = "float64")#candidate|6446|(44, 4)|const|float64
call_6444 = relay.TupleGetItem(func_5939_call(relay.reshape(var_6445.astype('float64'), []), relay.reshape(const_6446.astype('float64'), [11, 8, 2]), ), 0)
call_6447 = relay.TupleGetItem(func_5943_call(relay.reshape(var_6445.astype('float64'), []), relay.reshape(const_6446.astype('float64'), [11, 8, 2]), ), 0)
func_1231_call = mod.get_global_var('func_1231')
func_1233_call = mutated_mod.get_global_var('func_1233')
const_6452 = relay.const([[-4.118833,1.333208],[-5.799076,2.614547],[-7.020210,-0.141291],[7.733108,-5.490842],[2.961647,-1.744230],[-6.673586,-4.722475],[-4.141946,8.566746],[6.958409,-4.006411],[-7.795935,0.194299],[4.649395,6.310324]], dtype = "float64")#candidate|6452|(10, 2)|const|float64
call_6451 = relay.TupleGetItem(func_1231_call(relay.reshape(const_6452.astype('float64'), [5, 2, 2])), 0)
call_6453 = relay.TupleGetItem(func_1233_call(relay.reshape(const_6452.astype('float64'), [5, 2, 2])), 0)
output = relay.Tuple([call_6431,call_6444,var_6445,const_6446,call_6451,const_6452,])
output2 = relay.Tuple([call_6432,call_6447,var_6445,const_6446,call_6453,const_6452,])
func_6456 = relay.Function([var_6445,], output)
mod['func_6456'] = func_6456
mod = relay.transform.InferType()(mod)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6457 = relay.var("var_6457", dtype = "float64", shape = ())#candidate|6457|()|var|float64
func_6456_call = mutated_mod.get_global_var('func_6456')
call_6458 = func_6456_call(var_6457)
output = call_6458
func_6459 = relay.Function([var_6457], output)
mutated_mod['func_6459'] = func_6459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_6511 = func_2981_call()
call_6512 = func_2981_call()
output = relay.Tuple([call_6511,])
output2 = relay.Tuple([call_6512,])
func_6544 = relay.Function([], output)
mod['func_6544'] = func_6544
mod = relay.transform.InferType()(mod)
mutated_mod['func_6544'] = func_6544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6544_call = mutated_mod.get_global_var('func_6544')
call_6545 = func_6544_call()
output = call_6545
func_6546 = relay.Function([], output)
mutated_mod['func_6546'] = func_6546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5129_call = mod.get_global_var('func_5129')
func_5130_call = mutated_mod.get_global_var('func_5130')
call_6551 = relay.TupleGetItem(func_5129_call(), 0)
call_6552 = relay.TupleGetItem(func_5130_call(), 0)
output = call_6551
output2 = call_6552
func_6563 = relay.Function([], output)
mod['func_6563'] = func_6563
mod = relay.transform.InferType()(mod)
output = func_6563()
func_6564 = relay.Function([], output)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3322_call = mod.get_global_var('func_3322')
func_3323_call = mutated_mod.get_global_var('func_3323')
call_6608 = relay.TupleGetItem(func_3322_call(), 1)
call_6609 = relay.TupleGetItem(func_3323_call(), 1)
output = call_6608
output2 = call_6609
func_6610 = relay.Function([], output)
mod['func_6610'] = func_6610
mod = relay.transform.InferType()(mod)
mutated_mod['func_6610'] = func_6610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6610_call = mutated_mod.get_global_var('func_6610')
call_6611 = func_6610_call()
output = call_6611
func_6612 = relay.Function([], output)
mutated_mod['func_6612'] = func_6612
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6641 = relay.const([[[9.828457,-8.012187,6.652890,-1.758154,-0.557162,1.326543,8.826477,-0.343689,3.220625,6.065415,-3.708546,-6.883432,-6.724022],[5.047100,1.949271,-8.360419,-3.199662,-6.689718,5.669476,9.963497,-7.811914,-4.451158,2.122923,1.702047,-8.449876,-6.483884],[-9.156958,-4.343214,5.619099,-5.626523,-1.591601,1.487057,-0.962325,-1.105099,-8.880600,5.844583,-8.482764,-0.772060,6.597672],[-4.866681,-9.077134,-7.689340,8.722612,-9.215228,-7.205600,-8.765680,5.710561,8.769467,1.904157,8.591468,-7.010504,-6.677221],[4.821017,-9.219171,-2.140940,-1.768918,1.670652,1.541737,7.251147,0.402858,4.930664,-8.688552,3.462086,-5.585621,1.003632],[-2.294220,-7.536698,-2.090723,-4.535364,-7.445830,-3.084334,4.309505,8.969696,-3.417163,-2.684717,1.781939,2.041966,-5.166348],[9.877154,8.430995,0.028031,-0.010210,0.864286,9.668284,0.392525,-1.584331,-2.750217,-6.907445,5.181720,-7.497506,-0.788741],[5.995957,2.909932,5.071142,-4.212221,8.960975,-9.331577,6.154390,-1.734915,2.436127,5.073284,7.502163,-1.832575,9.206309],[1.748901,3.821298,1.781270,0.961398,8.242330,-8.893638,-5.753634,8.564495,2.794064,-5.842664,5.071974,-5.223592,2.342798]],[[-2.635987,6.978616,0.848439,6.609163,-7.826014,7.992605,1.314804,-2.054889,-0.856389,1.887325,-2.209013,5.883281,-8.403927],[-9.533938,0.201586,5.408999,4.013248,7.327049,8.072247,-5.808180,-7.869877,5.403461,-4.684437,7.112686,-9.214005,-5.644329],[9.568472,4.430077,-0.765594,-1.155498,-9.661244,4.418678,-5.408307,-1.093644,4.301770,-7.974497,0.341946,6.893445,3.335432],[-8.472388,2.299892,-9.225573,-6.978810,-8.980155,-7.079161,-8.659468,-9.297275,-5.584510,0.418898,-9.726923,5.990811,-1.425120],[1.868626,-5.033787,-8.563527,-2.745796,8.954450,-8.758544,2.609861,-2.760353,-2.174315,-8.946050,-3.523364,2.839431,7.870938],[-9.636948,-6.834742,3.555720,-3.866051,4.937421,4.770738,-1.064569,-5.091107,-8.143902,-5.093384,7.253156,-8.925475,5.689152],[8.080090,-8.238441,0.260471,1.742609,9.343266,7.588584,4.969372,-3.425857,-1.529893,7.504942,5.484600,-0.105613,8.530847],[-3.718820,0.610618,-6.592006,6.788749,-1.091554,-6.267621,-7.214409,-9.979636,8.112326,-7.331411,-1.741183,5.382881,-0.642544],[-4.560398,-9.421268,-1.995058,2.150858,-2.277266,-4.650245,-7.759779,-0.041040,8.533428,-4.037322,-8.750770,6.582001,2.656390]],[[-7.215642,3.561419,0.684820,9.475918,0.834212,1.535741,-6.291904,9.589428,4.055599,7.382542,-4.364089,-4.544763,-3.535219],[-7.550880,-2.258046,-1.419922,-8.021525,0.351125,7.056369,3.648777,-7.544180,5.786322,2.701431,-8.173937,-5.202423,-6.638359],[-8.083045,2.836841,-6.587875,-8.933870,0.339508,5.229480,-3.603395,2.156069,0.957749,0.335516,9.497135,-9.677589,9.979040],[2.480830,-0.245938,-3.301842,7.389171,-5.072370,1.350033,-0.040677,1.888724,1.026660,-8.040523,8.770954,6.975329,3.633694],[8.549735,3.976408,-0.171437,-3.229501,7.082733,9.308829,-5.917854,-4.552980,-6.361772,-8.752041,-9.493213,-8.197905,-3.228991],[-0.264827,-8.523448,4.470103,-5.688291,-4.077291,1.829809,9.981864,9.524113,4.942402,-5.199901,0.377857,-4.898313,-0.925987],[2.439280,4.810813,-3.441806,-5.442737,-7.668278,-7.610939,-9.782043,0.751959,5.657584,-2.675303,-9.219916,-4.527563,6.781694],[4.465951,4.223399,-2.126607,-6.028311,5.125238,-1.826413,3.897032,0.339669,9.408897,-7.631283,8.319751,2.784762,-0.155648],[-1.823217,4.191600,2.943371,6.949219,-6.372340,4.189416,-9.694314,-5.956225,-1.597534,5.121919,2.338609,-2.711981,4.589982]]], dtype = "float32")#candidate|6641|(3, 9, 13)|const|float32
uop_6642 = relay.log(const_6641.astype('float32')) # shape=(3, 9, 13)
output = uop_6642
output2 = uop_6642
func_6649 = relay.Function([], output)
mod['func_6649'] = func_6649
mod = relay.transform.InferType()(mod)
output = func_6649()
func_6650 = relay.Function([], output)
mutated_mod['func_6650'] = func_6650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_6659 = relay.TupleGetItem(func_2695_call(), 0)
call_6660 = relay.TupleGetItem(func_2697_call(), 0)
func_5350_call = mod.get_global_var('func_5350')
func_5352_call = mutated_mod.get_global_var('func_5352')
call_6664 = func_5350_call()
call_6665 = func_5350_call()
output = relay.Tuple([call_6659,call_6664,])
output2 = relay.Tuple([call_6660,call_6665,])
func_6675 = relay.Function([], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
output = func_6675()
func_6676 = relay.Function([], output)
mutated_mod['func_6676'] = func_6676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6563_call = mod.get_global_var('func_6563')
func_6564_call = mutated_mod.get_global_var('func_6564')
call_6722 = func_6563_call()
call_6723 = func_6563_call()
func_624_call = mod.get_global_var('func_624')
func_629_call = mutated_mod.get_global_var('func_629')
const_6741 = relay.const([False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False], dtype = "bool")#candidate|6741|(88,)|const|bool
const_6742 = relay.const([7.043325,1.596948,7.720630,2.785081,-0.460503,2.708859,-5.587429,-5.740462,-9.384986,6.176782,1.667468,-9.966283,-5.741087,-9.674150,-5.416266,6.870393,7.362552,-6.557125,-3.890919,4.991942,6.051611,-5.925283,-1.013087,-2.957289,4.163393,9.411050,-7.231441,-1.397121,5.565342,1.879607,-0.344717,-2.039185,2.227458,5.686598,-4.862489,-1.717351,1.135851,5.620673,-2.146138,-6.912575,4.892358,-4.220894,4.620349,-7.983398,7.311694,-6.889408,-0.887451,1.867384,0.572285,-4.067988,-8.371973,-1.073513,3.694580,2.093639,0.685835,-3.312407,7.854335,-9.317886,5.277014,-3.999853,-6.673288,3.343975,5.872031,0.468266,6.984086,-0.739126,-3.336561,5.577508,3.479088,5.492053,-5.894929,3.317743,7.582511,-0.598975,5.253263,3.315852,7.241014,-9.997574,-5.353720,1.453790,2.162781,9.257938,-6.334804,-0.151491,2.237343,-0.892147,7.482801,6.490878,-9.664278,4.769376,-6.929491,2.373910,3.486429,-2.811587,6.894649,9.629112,-2.326632,8.022691,9.746726,-0.472273,9.328946,-2.760225,-0.631265,4.180704,3.072760,-4.510810,-4.839521,6.011252,-3.702634,4.561601,-2.487171,-4.081251,4.554894,2.574526,5.904215,5.976650,3.774148,6.824610,1.626148,-6.128915,-0.389860,9.346939,-3.914933,-4.061795,-2.107485,2.939976,8.146212,7.197489,2.539822,9.689893,-2.833734,1.218025,3.418074,-8.637455,-6.247387,4.649684,7.130774,0.640075,-3.680328,-0.975984,4.262025,6.582075,-4.239699,6.243064,4.781723,-3.320945,1.886417,0.871918,1.774439,7.410714,-7.349965,-5.436235,1.098944,-6.934034,1.758477,4.308295,-3.088430,4.711164,5.312526,-2.260819,-5.518932,6.665068,-0.067106,-7.928250,-7.912903,2.895202,-3.817042,-4.659299,6.730201,4.320803,-1.124785,9.789169,9.968775,9.875595,2.443186,-0.720877,-2.357424,8.291723,-4.010589,-6.704035,-8.981440,-4.137270,6.703374,-1.321386,3.437243,-6.921366,-5.509859,-8.196139,-2.375233,6.297142,4.839386,5.482724,7.772284,-7.701581,-7.795527,-1.740183,1.776178,-2.204888,4.745641,9.719828,-4.534968,-5.246588,-1.284720,1.284989,-0.807531,-2.338844,-4.126273,-7.817369,0.196664,7.208940,1.817506,-7.274654,-9.637519,-3.222172,4.284397,-6.865018,9.951693,5.506370,1.095347,-7.974462,5.011550,8.144687,7.567123,8.471221,8.129711,-6.196368,-4.189670,0.475631,1.200482,-8.877431,9.402703,8.283747,-3.806026,-6.432028,6.926679,3.478786,-3.613108,-9.610778,-0.948515,-3.855035,-2.502167,3.394325,4.235820,-2.382289,-2.833559,7.417036,5.846398,-1.688724,2.743588,-2.991069,5.553651,4.119703,-6.393022,4.703640,1.419303,-5.925872,2.913339,-1.103766,-3.121730,8.654972,-3.899245,1.951458,9.709427,4.280941,-0.137295,7.100743,5.861820,4.371492,-4.396696,9.173180,-9.719089,-3.815047,0.506354,-9.824150,5.869268,-5.410225,0.248229,6.055932,1.499961,5.657212,-4.562350,8.322370,-5.770293,-5.019862,-9.962728,-4.012979,7.359077,-0.495515,-2.643622,7.055878,-0.114305,1.017854,6.315425,2.789770,0.868119,-2.748722,4.837968,1.038609,6.296083,3.482854,2.378659,-6.826628,-4.918196,1.444852,-5.409588,-6.744777,-2.231056,-8.605013,-2.466506,-5.534832,-6.112250,-2.294152,1.798138,6.315153,3.230958,-1.268023,7.360525,6.050422,5.521179,-9.494937,4.316045,-0.167477,-7.684546,1.021279,-8.170502,-3.457898,1.026090,0.027240,-4.517261,6.460232,9.534544,0.703774,-0.118624,-5.470961,6.086982,1.606808,5.513009,6.211073,-6.963671,-7.171131,-5.806089,-5.689045,2.186327,-8.253530,-1.872498,3.045060,9.908995,-1.149211,-3.366048,7.256275,4.157787,-0.154291,1.889687,-5.121688,0.771455,-8.560747,6.379172,7.237530,-3.282921,8.296329,0.616255,-7.528457,4.798560,-9.872436,3.257620,0.570820,6.032877,2.394544,4.506902,-5.930443,5.192564,5.554441,0.449078,0.218949,-2.538909,5.650284,-3.943983,4.449834,-2.624923,7.345707,4.032762,3.358602,-8.450621,1.527346,-4.984088,-0.264683,0.138108,2.574400,-5.072154,-1.615038,3.284094,-0.761812,-4.092522,5.567147,-4.421510,-5.231847,9.897053,-3.906012,3.541589,-5.683014,3.692416,4.440506,-2.032762,-3.649614,4.710745,1.699306,-7.939345,-0.700272,9.063543,9.160864,-8.076077,-6.058757,4.369143,-4.982693,-4.755356,9.843108,8.887297,-2.421990,9.903031,6.547679,-9.595208,4.385432,-7.947758,5.545312,8.991999,0.984117,-8.815903,4.154769,-7.439704,-6.753566,-6.206003,3.337666,-2.622507,3.269796,-8.823743,9.447498,-0.193468,3.980197,-5.306504,-1.633979,8.665792,-4.189378,7.929756,-6.096897,7.841169,8.392332,-7.829283,5.285087,-2.968037,-6.371576,7.932890,7.950668,-0.723864,3.352884,4.322545,-2.395173,5.423314,0.556727,-2.049855,4.841517,-1.523878,-1.801114,1.565466,-6.267223,-9.201542,-3.008145,-8.911141,9.906814,-5.048782,4.992267,5.639666,-2.864278,-6.304415,7.196200,1.162988,-2.572317,6.880456,-9.948549,4.929687,6.460554,6.565337,2.300350,3.786229,-7.324386,6.755122,-5.657781,1.059118,-9.079608,-0.773411,9.206887,-2.770418,7.601743,-9.424769,-2.177352,-2.990067,5.617366,3.432172,1.107140,-2.914618,-4.083219,-9.966334,-4.710952,4.129417,1.087562,-6.179841,-7.705297,5.511285,9.893743,4.262350,5.500401,6.627050,-8.712991,2.142948,1.217288,5.352034,-6.931183,-2.611003,-6.831005,0.942429,0.884578,-4.711697,-5.126140,-7.402073,4.342638,8.496187,6.402289,9.579293,7.107640,-7.761887,-5.447479,-9.295380,2.734174,0.171979,-4.290669,3.689345,6.434205,2.283086,1.411093,9.999271,-2.434286,3.460041,7.802853,9.386623,-8.990207,4.176508,0.943677,1.805316,6.932732,-6.218251,6.578131,8.196531,3.538896,-8.493117,-6.136760,9.315304,-1.011702,6.501997,-0.565336,-8.141322,-5.607963,3.253557,8.190269,-2.520330,-0.599609,-1.450622,-3.581448,-6.837251,8.131991,2.543429,-3.369632,-2.664171,1.263400,-2.901134,-6.990705,-0.010672,-2.181742,-2.976819,-9.964911,-8.876496,-6.863336,-4.326533,1.795298,-4.130641,8.925266,-2.583455,5.290495,-9.369402,-5.741735,-5.818394,1.290996,5.103506,-9.331603,5.403485,-6.807502,7.454955,5.867284,-1.039578,-8.475540,1.079017,-4.934757,6.564497,-2.974148,-2.490746,-4.959906,4.639410,-5.716382,-4.950031,-2.351961,2.191246,1.212776,6.469914,1.774980,1.880455,1.089095,5.242262,9.057282,8.283855,9.702300,-9.861065,-7.815679,9.011796,0.050756,7.683349,-7.297343,-9.984372,-9.476500,-2.439908,1.387610,7.130562,-0.136354,-5.147429,-6.338516,0.942802,-8.782489,4.206962,0.872736,1.197940,-7.357019,-3.482226,4.456175,9.233936,8.101022,3.085688,1.980133,9.648504,-4.305058,0.729351,7.306874,-6.680229,3.958596,-7.510282,-8.769636,8.469473,-2.746293,2.701996,-3.706071,0.716813,-9.313481,3.838966,-6.487829,6.658680,-3.035758,7.074933,2.754549,4.202312,8.501777,1.527268,9.396705,8.036426,0.109414,-7.767790,6.648624,3.598939,-3.951301,6.229154,6.159926,4.356046,-7.349282,3.715051,-6.869134,-1.560466,-6.658487,-5.261328,-5.703620,9.814386,-0.633323,6.171208,-8.180626,-6.869272,0.847107,3.383999,-6.323716,6.204524,4.451875,1.059063,1.271209,6.791883,5.894568,-6.451874,9.691106,7.287508,1.552361,6.056199,5.307049,-8.245302,-1.074845,6.354439,9.450680,4.589457,8.955735,-8.554589,-9.795834,-2.703844,8.785310,9.495958,4.119110,2.309673,7.726986,-0.112098,-2.521146,-7.757602,-4.333215,3.035120,-8.794140,-1.838143,6.817904,-6.597492,-8.351574,-1.926249,3.405250,5.145258,-5.390575,1.166133,9.006922,4.241600,8.144650,-3.372077,3.477044,4.783503,-7.159335,-7.811676,-0.498701,7.884114,3.580968,0.145716,3.250228,8.451330,5.611899,-6.455474,-0.150766,-7.736670,7.675019,0.113767,-2.231876,-1.387290,-0.415272,5.001955,5.896272,-2.359916,-3.201846,-0.252641,-2.862269,4.449179,-9.609701,-9.619614,2.345647,-9.431050,-3.350572,-2.450662,-1.784930,3.057675,4.076974,-8.791034,-0.193243,5.765138,-0.542284,-5.165334,-8.222789,-2.318681,7.111537,9.380943,2.638302,8.332042,-3.587734,-4.752940,-6.740686,1.912308,-4.088760,8.508812,-8.245473,4.005156,-4.801576,3.746188,-1.078135,3.567851,0.097515,-5.490560,0.325850,-4.876617,0.825347,-3.999313,-6.552969,9.494360,4.229701,3.110744,-5.656466,-2.226049,5.970547,6.400064,5.254905,4.016989,3.052315,3.963114,-7.696228,-3.595416,5.009850,4.806133,8.635937,-7.128455,7.251279,-2.820964,8.806944,-8.300707,7.309258,-6.606442,4.274509,2.358918,2.048624,5.990656,-5.330093,-1.488290,-4.761909,5.435208,-9.933249,8.164523,-4.311524,0.515013,-0.620336,-9.176091,4.990303,7.917691,-8.396369,-1.715161,6.832593,8.361034,2.775623,6.738445,-0.818083,9.888785,6.920107,-3.841419,8.325371,5.161538,-9.955080,8.058453,-8.714962,-8.505002,5.866680,-9.369086,-5.736473,-2.730408,5.848795,2.247577,-8.757601,8.179883,0.521741,7.816595,0.723016,3.315106,-8.505431,-7.366209,1.186467,-2.947780,5.943711,4.887744,-4.423805,9.949991,-6.458006,4.920577,-5.963583,-8.829341,7.757379,-6.945900,-1.527094,-0.794539,-7.297099,9.965781,6.297085,-6.071319,-2.627271,-5.072703,4.012511,9.766246,-5.185007,-8.353060,9.341718,5.907116,3.511564,0.146269,9.294683,-2.826829,-8.015382,1.826705,1.651737,-1.398310,9.593798,3.792338,4.414242,-5.549584,9.449974,-2.987441,6.217348,5.171471,4.076986,-1.195634,-6.452444,-7.028205,-2.580921,-6.581509,0.272414,-8.865702,9.216129,0.629751,-2.714340,5.690663,-4.857950,-7.486255,6.389162,-6.557824,-8.250071,3.728466,-7.484054,-9.163095,2.231375,-2.831333,7.662020,9.669882,-8.245194,8.795782,8.228107,6.530979,-0.101283,9.329970,4.095247,-4.201613,0.982632,7.028308,0.772014,-8.679724,-5.383655,8.749582,7.833735,6.352600,7.846038,-7.434409,7.632929,3.713215,3.478284,7.414208,-1.914177,6.085677,6.893918,1.091574,-0.529132,8.230876,1.497787,-1.979736,1.539617,-0.136591,7.114970,7.943936,-3.886808,-5.864108,-6.776282,7.778812,-7.168416,-3.411231,8.435822,-2.624769,2.228555,-9.894721,6.974710,-1.453043,-7.902411,9.648226,0.294854,-1.556816,1.593372,-5.352878,-6.033313,4.118467,-3.249982,-8.467603,7.682504,0.818750,-9.920958,7.238428,-4.631929,4.013922,8.048585,-9.134421,2.260280,-3.819993,-8.827152,-7.576775,-1.835505,0.328572,7.749747,-8.732932,-2.903647,-4.121066,-9.050692,-1.004878,2.587013,2.717215,3.549903,8.493725,7.979105,5.502043,-9.357555,-6.008581,5.959134,0.264941,-2.795722,-3.237108,9.710550,3.084175,-8.681002,6.979307,6.361647,-6.342629,-5.427628,-2.227764,-1.410010,2.237440,2.772756,2.739661,9.635808,-1.224170,2.582982,6.737655,4.331347,-0.692759,-8.611414,3.469828,-3.542839,-1.666164,3.802899,-4.170612,8.529533,3.458444,-4.165477,6.753057,8.067803,9.893074,-5.625177,-9.644760,7.834811,-1.146243,-7.238236,-6.252326,3.873140,5.431372,1.326124,-7.952637,-2.860880,6.978130,3.132833,-5.467087,-4.646469,6.749146,-3.153793,-7.655627,-7.353479,-4.957821,-8.358098,4.506137,6.173261,4.508723,4.264181,8.886715,0.366983,-9.217947,-7.245152,5.936643,-4.738380,7.709899,-1.491618,-8.928614,-0.806470,3.509145,2.882794,9.688762,-9.837880,3.940808,-5.596394,6.919670,-9.753048,-9.054692,-6.538527,3.318632,-9.882912,-0.538759,7.317775,7.067232,7.597887,-8.421986,-3.404324,7.780946,-7.310454,-0.362141,-8.377352,-9.630795,1.950205,4.492369,4.622178,-1.703117,5.099801,-3.316684,1.619957,8.815066,0.454605,-2.797608,8.038747,-7.145140,-7.829825,-0.365361,-9.709212,9.383865,-6.020293,0.733884,-1.560764,6.401038,-5.324532,-4.804294,-4.294267,-1.250019,1.274760,6.931016,3.287740,1.460137,-9.510049,-3.114992,-6.796422,-6.762985,-8.492901,-3.471373,6.130726,-6.430338,-1.968853,8.528995,-5.530983,-4.735606,-6.811042,-8.108686,5.816061,-8.020125,-3.275725,-9.830001,-0.217897,0.169586,-8.190067,1.935870,8.675388,-7.237100,-5.183682,-9.077553,8.617823,7.891067,-5.621411,4.985848,2.286583,0.852685,-6.264609,-9.542038,-7.924708,3.265433,-0.428352,-3.118411,6.895505,1.951772,2.577684,-6.701998,-3.212474,-9.482276,-1.435060,-0.322704,4.638879,7.867816,9.658772,0.277518,4.818264,-6.786238,7.647627,1.626494,9.932817,5.451689,8.956203,-7.515485,5.744504,-2.067729,-1.398837,4.279495,6.837711,-5.059555,-3.197450,-4.727441,-2.953858,4.813722,-6.247186,-9.956035,2.404061,-9.855091,-4.592168,-1.358392,1.925575,2.861070,8.439130,-9.193887,4.207592,0.308274,-8.435698,8.053949,7.505482,-6.419955,4.511538,8.696077,-4.139685,9.171821,-0.021701,-0.314173,0.967240,-7.479522,-7.537825,3.249330,1.986564,-2.267622,-5.297324,-2.855211,-0.717859,0.764292,-0.298304,2.830553,-2.600703,0.315431,-6.331223,3.684197,7.913613,5.781052,-9.268796,7.779610,5.106956,8.569206,9.540696,0.401720,-4.539960,6.810093,-0.666873,-3.638806,-6.372131,1.422812,0.641053,-8.981843,-1.540734,6.572734,-7.995605,-7.745267,-4.048541,6.063477,-2.705972,5.343586,-6.706045,3.932970,2.149863,6.136903,0.462231,9.782463,2.427891,2.091802,6.694288,-8.649252,1.368116,2.331241,-1.293437,1.639762,-9.528779,-7.967210,1.361183,5.033808,6.475124,-8.813980,8.654597,6.076753,4.085501,1.328507,7.289910,-6.894238,-8.888220,-5.999520,4.136975,8.929791,0.481622,-4.935991,7.096801,5.044170,-4.908473,9.344116,8.514005,5.422190,8.932903,7.873388,-5.362009,2.402684,-1.562747,-2.557162,0.408561,4.666733,6.315393,-2.761284,3.832192,9.125493,3.246028,7.523152,1.452531,-1.468245,8.388926,-3.897570,0.493340,8.132147,3.231048,3.139874,2.543670,2.626152,-1.644587,-3.977309,-1.775592,-5.660368,-9.827294,-4.232291,-1.115047,3.243130,0.584049,0.111096,4.786938,-6.045604,-3.355547,-3.883883,-8.017944,-1.573085,8.994686,-6.300820,-4.640935,0.533191,-0.597282,4.972155,-9.256384,2.076854,-7.726843,9.447184,4.440059,-4.674875,1.126191,3.129181,8.529308,0.543368,-3.747473,-3.289279,-4.208784,-2.318777,8.259625,0.233773,-2.737195,3.623524,6.634933,-2.272796,-7.018593,9.013499,0.538386,5.463906,-1.037106,6.323505,-0.774899,-5.510106,-6.395363,-5.599420,-6.338722,0.091450,-1.674046,4.368737,3.361221,-7.646446,-4.305581,-9.333324,-1.150832,-8.381367,-5.361107,-7.977189,8.873799,1.446082,4.732055,-0.164192,7.047232,-3.866300,-2.270346,4.851657,1.550060,-7.169455,6.148524,-5.807636,-6.053921,3.697180,-7.211697,-3.418658,-2.537881,3.888014,1.064744,3.063734,-5.910783,-1.673199,6.437485,-2.954433,0.446392,-7.144529,2.210655,-7.821137,-1.580807,-3.225595,2.032099,-2.173915,-8.827912,5.362321,3.459166,-0.647150,-8.878129,9.047083,8.849275,1.858543,-8.629160,8.812764,-0.316121,4.971807,7.200226,8.200455,-7.143338,-8.084743,-1.935976,-6.943166,-1.505384,0.671132,5.347280,-6.070923,-1.602602,7.222658,-8.719746,0.314936,6.354190,9.230273,-0.964245,6.622325,-5.185784,-9.399128,-4.837721,0.439088,5.556415,1.330461,0.445632,5.815032,2.561434,-3.775646,-1.808809,-9.805119,-6.609812,-1.350728,5.867869,-3.416536,-2.360975,-4.194619,1.683176,8.199944,-7.721909,-8.782996,1.014756,4.377098,-3.548938,-6.286140,9.790621,-6.780632,-0.094994,4.025629,5.334968,7.300954,-6.883038,-7.284575,3.846933,-0.609476,-9.535126,1.825649,3.222123,1.021631,-4.506545,-7.911373,-4.212081,-2.794986,1.619211,-9.451103,3.936608,-3.418667,1.074180,1.738374,9.628403,-1.145083,-0.556655,1.294396,2.532998,-9.935892,-0.617060,8.656174,9.915140,3.404474,6.854970,4.962248,9.446604,-6.436547,-1.518031,-9.582163,-7.358304,-7.367679,-3.820062,-5.543382,-9.360073,-1.824112,1.950751,4.516166,6.145215,2.971930,3.181060,3.392179,8.975608,2.818631,2.447581,5.593396,0.928678,6.685436,1.213182,7.645721,-4.748689,-8.614282,9.114991,-2.614232,-7.489787,-7.326074,2.267862,-6.505327,8.592879,-8.507298,0.495008,-8.264759,6.899925,5.285660,9.674628,-0.505408,-3.988584,0.837586,2.776876,-5.622070,-5.484601,7.150008,-0.681223], dtype = "float64")#candidate|6742|(1568,)|const|float64
call_6740 = relay.TupleGetItem(func_624_call(relay.reshape(const_6741.astype('bool'), [4, 11, 2]), relay.reshape(const_6741.astype('bool'), [4, 11, 2]), relay.reshape(const_6741.astype('bool'), [4, 11, 2]), relay.reshape(const_6742.astype('float64'), [1568,]), ), 5)
call_6743 = relay.TupleGetItem(func_629_call(relay.reshape(const_6741.astype('bool'), [4, 11, 2]), relay.reshape(const_6741.astype('bool'), [4, 11, 2]), relay.reshape(const_6741.astype('bool'), [4, 11, 2]), relay.reshape(const_6742.astype('float64'), [1568,]), ), 5)
uop_6765 = relay.log2(call_6740.astype('float32')) # shape=(4, 11, 2)
uop_6767 = relay.log2(call_6743.astype('float32')) # shape=(4, 11, 2)
uop_6770 = relay.atanh(uop_6765.astype('float64')) # shape=(4, 11, 2)
uop_6772 = relay.atanh(uop_6767.astype('float64')) # shape=(4, 11, 2)
output = relay.Tuple([call_6722,const_6741,const_6742,uop_6770,])
output2 = relay.Tuple([call_6723,const_6741,const_6742,uop_6772,])
func_6776 = relay.Function([], output)
mod['func_6776'] = func_6776
mod = relay.transform.InferType()(mod)
output = func_6776()
func_6777 = relay.Function([], output)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4891_call = mod.get_global_var('func_4891')
func_4893_call = mutated_mod.get_global_var('func_4893')
call_6834 = relay.TupleGetItem(func_4891_call(), 0)
call_6835 = relay.TupleGetItem(func_4893_call(), 0)
func_4542_call = mod.get_global_var('func_4542')
func_4547_call = mutated_mod.get_global_var('func_4547')
const_6850 = relay.const([-0.708458,7.108447,2.986342,-3.350210,-4.893804,-6.939434,-9.699464,6.411548,-4.841988,9.636112,-5.231188,-6.441776,5.095998,-7.527247,3.630497,0.763887,1.856312,2.144115,-5.855166,5.842488,3.096158,4.799992,-5.954404,3.815019,-8.523758,-5.366409,-3.070366,1.939964,0.790224,8.471668,-0.729526,-9.991330,2.574629,3.821688,-9.649676,-1.029535,-0.881589,1.768418,-2.619574,-5.152029,4.997956,3.489419,9.565284,-8.815295,6.427762,-6.931817,-6.798151,3.881063,-6.462577,7.248811,-7.066304,-9.268823,9.926708,4.734696,7.214361,-6.549321,-9.555136,-5.066119,-5.368241,8.932283,-8.631338,-2.337234,-4.719383,-4.301118,-1.996316,1.668788,8.910910,7.141266,-0.681025,4.333379,-3.362088,-0.457622,8.305649,7.409093,4.777814,1.199293,-2.630501,-8.398756,-3.650630,8.608057,9.616380,8.525810,3.129541,8.797482,0.415195,3.490418,7.883805,-2.699389,-3.525668,-2.349411,-9.275472,-8.868030,8.695948,-0.085464,7.733453,-9.092699,-9.053146,-8.877058,0.527795,0.534239,-9.742461,-4.647389,3.607085,-4.710280,-7.590073,3.054635,6.335853,0.447396,0.073701,-7.097039,-7.237633,7.138594,-5.156024,-5.441587,9.390405,-7.717949,-5.780488,4.858391,5.518299,8.695926,5.418512,2.477056,-2.314253,0.200000,-7.910097,3.457505,2.115541,0.102734,-9.074650,5.163272,-2.604670,8.547210,-7.863147,-5.052199,-4.803043,-4.580563,-1.924191,-5.490896,-0.669417,-7.820868,3.139048,3.257993,-2.743331,-1.011381,-9.300742,6.939318,3.664374,7.859036,8.779939,-8.790893,-8.655351,4.669369,-8.180540,0.310690,-6.652810,2.592522,5.569072,-1.387620,0.583759,-7.316525,-1.485259,-7.445493,-3.122455,7.181494,0.723877,-7.115059,-5.432023,2.799909,8.783554,-3.185312,-0.229542,-2.407857,-2.203890,-1.970438,9.672362,-0.888368,-8.485205,-6.999346,-9.231970,-1.076277,5.668813,0.165323,6.429997,-1.078768,-7.201519,-9.376182,-5.338707,-6.667204,5.067078,-0.618459,-8.651077,-2.168358,-2.863952,5.800683,-5.718779,-8.335467,-7.351965,-6.564053,-9.187603,3.856483,6.285132,-7.121249,-1.696415,-0.600723,0.606768,-6.469474,7.130313,-3.497346,4.120191,7.980409,6.098622,2.284845,6.609433,1.396835,-6.578545,-6.650285,-0.044307,2.130746,-3.358613,-5.628843,2.432229,5.236524,0.427625,-5.950919,1.177065,2.338493,0.965179,1.287049,-8.032136,4.848694,3.438596,-3.224314,-3.353849,-5.738873,3.944296,-6.395336,1.044951,-8.231352,7.143466,-6.668949,-7.893500,7.498480,-1.714087,-2.737393,-0.135387,-0.889485,-6.161377,4.409659,-8.393238,6.870808,8.996333,-6.483044,3.312995,1.658153,7.531337,7.985904,8.100544,-0.289981,6.019161,-2.959886,-3.502577,2.882312,7.357211,7.231933,-3.344921,-8.776796,-7.364873,2.185129,7.324731,-3.424530,-2.847649,-2.983471,-1.117536,9.651027,4.654309,3.144764,-7.778009,-0.727837,-7.629658,-2.842137,-1.201399,-4.341586,8.327564,-5.280197,-8.441653,-3.907491,5.676281,5.555582,1.084215,8.889995,-9.716750,-5.481656,-8.133721,7.923070,-0.258852,6.570361,-0.461284,9.477063,2.039524,-1.375564,-8.833283,-8.898476,4.316619,6.166439,2.129399,1.579220,-3.290781,-5.790460,4.717340,0.812269,4.203084,-0.035351,-0.926042,-5.943222,-5.047975,0.932538,3.437132,-2.703807,6.075891,2.561393,-8.208118,8.633215,-8.934258,2.391457,3.118415,4.933371,-9.879938,-5.345641,6.909206,-0.835062,9.227417,-5.357137,-7.838446,7.433023,-9.932977,-7.110233,2.809721,7.696577,7.401670,9.384562,9.376381,-3.763700,8.291514,-1.468350,2.804584,-8.253060,0.540403,1.576645,0.437471,1.175374,7.898084,-1.092438,0.567030,-2.245806,8.324272,0.725161,-0.780576,-4.524007,-6.883601,-1.253502,6.345680,-9.483578,3.596181,-3.687015,-4.517273,-6.897121,3.500458,8.370740,3.608830,-6.290389,7.865641,3.657221,2.465570,1.648968,8.724161,7.385008,-8.520323,1.888652,2.393164,-2.404255,9.908517,7.463793,-8.155495,-0.740475,-1.941311,-6.879054,-8.132889,5.087666,1.929218,-3.546244,-6.073843,7.673198,8.514172,-8.099550,4.075242,9.362094,8.215088,2.005283,7.095472,0.644042,-2.388006,4.919883,-5.906987,-9.595051,-2.376298,-3.282805,-1.133198,2.871376,-5.942227,-7.013943,1.767365,-2.175269,-4.884240,-6.792202,2.176179,2.610195,9.815646,6.488601,5.749499,6.670289,-9.768282,-1.287994,1.821414,-1.434272,3.016860,9.053516,-7.546640,-7.934749,-0.715474,-2.030733,-8.381743,3.873055,4.275760,0.467798,3.808432,-7.265423,-5.553501,-4.756979,-8.939809,0.716161,-1.334213,-4.916316,4.304227,3.449607,5.303040,4.665090,-6.193404,3.024723,2.329613,-2.569044,4.607063,-9.106024,-9.173707,-3.722358,-9.189784,-8.517883,-7.651191,7.511367,7.246839,7.472251,1.313535,2.772714,-8.444596,5.503049,7.407914,-1.893771,-2.877930,3.895898,0.208581,3.118071,6.200188,-1.832699,9.377985,7.975108,1.344953,5.825255,-6.943591,-6.447409,-5.339510,-5.833504,1.605407,-4.688213,-9.590670,-3.002064,7.267332,7.038097,-8.705032,7.348550,4.142930,-0.128128,7.663576,9.017140,-9.065026,-4.204138,4.824705,8.403395,4.194456,-5.432997,1.170696,-6.023021,3.362557,9.978671,3.595498,9.014586,-2.926388,0.088323,9.729753,3.385650,-8.864432,-3.785736,-2.089363,6.581945,-0.556231,1.983391,-5.871919,-9.390274,8.702581,5.002771,-6.897502,-7.780512,3.256909,4.484795,-5.722211,-2.053458,-7.380206,6.892388,-6.114446,3.711990,-5.139122,-5.495618,-0.352394,-1.295505,6.856423,-5.510040,-6.189659,-7.884158,3.902840,1.060387,-7.535502,-8.902708,-1.296927,0.941575,-9.424757,9.301741,-2.732995,-3.129446,5.335794,-3.699748,-8.769725,-2.321281,6.715942,-1.898100,-7.629490,6.613320,-8.388971,-4.953873,4.783899,1.982495,-9.118101,-9.483335,6.124781,8.425291,-9.067937,4.765374,-9.618160,5.023062,-7.476078,-4.031191,9.869503,5.366251,-2.158050,5.970916,4.138974,1.088247,7.623992,-0.339089,-4.724298,8.483032,-8.540776,-7.949114,7.382927,-5.267094,1.525343,-7.074187,-6.004036,-3.983637,0.985821,-6.644988,2.843004,-2.914912,-0.222316,2.399195,-0.825529,8.807158,8.355573,-8.318105,4.803869,-0.461590,8.268430,-6.989186,-7.367118,-2.656102,-4.487392,-4.781851,2.365002,-9.044979,-9.924341,-9.759080,5.278609,6.796584,1.575530,6.235485,-4.813881,-9.946500,-5.949991,-4.162584,9.197540,5.410027,2.007976,8.048617,-0.446761,-9.180049,5.256361,-7.782456,-4.909858,4.999982,2.636600,4.664779,-6.717925,0.140599,-7.377135,2.623647,1.452010,0.932942,0.801933,5.251554,-5.872517,-5.909956,-0.227673,-3.827969,-5.737380,2.580390,-4.386425,0.430187,-5.170046,-1.433232,-9.189785,-5.228263,-7.223697,9.206149,2.740512,7.836508,-9.666609,6.257084,-8.300090,-9.586581,-6.223156,-7.477965,-6.852249,3.713471,4.735326,8.904678,-3.235623,9.962748,2.525262,-7.397316,8.603144,-3.930453,6.231828,-8.241504,-0.394006,-7.310559,-4.654506,3.582345,-7.224928,7.878423,-2.547769,-2.446097,8.736847,3.690433,-9.266666,1.538263,-0.153477,2.087119,5.223396,8.329137,-9.936582,-3.766863,6.500800,8.275321,0.832719,4.087107,6.777101], dtype = "float64")#candidate|6850|(693,)|const|float64
var_6851 = relay.var("var_6851", dtype = "bool", shape = (88,))#candidate|6851|(88,)|var|bool
const_6852 = relay.const([5.209218,6.472531,6.435221,-1.109759,-4.434222,-9.628252,-9.906200,-7.683698,7.441073,-3.527920,-2.815092,-6.894046,-4.073897,-4.673122,6.029606,-2.900171,2.389879,-2.955238,6.891978,-6.726024,1.905362,-4.090943,-2.620155,-2.447155,-5.964796,-4.583035,-2.439346,8.346164,-7.642763,2.436029,9.599232,-6.386659,5.479418,9.087658,0.363129,-7.883943,-0.620783,-0.047533,6.814005,5.150715,-1.790080,-9.739583,-5.513708,9.090280,-3.770233,2.771893,8.774269,-0.462552,-4.376287,1.728894,3.215277,-9.671830,-7.112712,-4.642588,3.453559,-5.380945,3.006798,7.435477,-3.078255,-6.975088,1.415574,3.573245,8.225593,9.377731,3.670710,-3.306839,-4.091394,3.218110,4.398712,-7.703078,5.004058,-3.429147,-8.959396,-4.069428,0.603102,1.705301,-9.849172,0.525962,-9.887273,4.535229,2.142342,1.397413,8.229095,-9.528582,-6.447138,5.899303,0.958096,6.633299,6.415941,3.070434,-4.159761,8.543626,6.591215,7.068585,0.096433,7.827835,-1.716655,-9.047124,5.976964,-8.961611,-7.474602,1.964033,-3.758096,8.899045,7.043090,-0.090861,9.265852,-9.120249,-3.564219,-7.466739,6.510544,-7.594496,-4.554228,5.518134,5.514924,-6.906558,6.027194,-7.005256,-6.428163,-5.974688,-0.908574,7.373158,-0.957282,-8.783139,2.858753,6.735021,-5.653244,-8.868482,-5.078857,1.402735,-8.393028,5.133659,5.060428,1.572131,2.660827,1.792164,-8.646775,4.091241,2.539104,8.525629,0.279299,3.147325,-1.771189,-8.026815,0.969209,-1.118689,5.129213,1.973281,1.366787,-9.014713,-2.069865,-5.927936,1.803265,-0.622665,4.665246,1.679589,-2.732476,7.026118,1.009704,3.058942,6.496035,-4.578870,-7.937265,2.693102,-8.001558,-6.546968,-1.559179,5.134081,3.515935,-5.289956,9.688773,9.810190,-9.585476,-5.214945,-4.087993,-3.571980,5.426529,5.845206,-8.689065,-0.726986,-1.450419,-3.333593,0.624367,-4.913265,6.642872,-7.262751,9.532553,-6.013850,-3.973905,9.332467,-8.853950,-9.567794,-2.728848,6.203832,-6.119909,4.065743,6.617739,3.487487,3.062218,2.225594,-9.114888,6.424014,5.702138,4.501178,-5.478111,-5.305721,-5.189024,-5.481930,-1.210442,-7.728004,9.327017,-8.516770,4.267220,-3.343535,2.724618,9.436046,0.729311,9.263588,-2.328717,-4.170599,4.420012,0.191507,9.862865,-7.338584,-2.515157,-0.004714,-8.246183,-5.216734,2.045945,-9.153314,-7.642600,-4.895059,-9.087911,-7.313362,7.367193,0.659397,5.042176,-5.788467,9.347101,2.314687,3.925862,0.678622,-9.421245,0.578724,-4.160014,-1.109712,4.924517,-5.952993,4.482205,-8.683261,4.032950,9.585583,2.563367,6.237296,4.372793,-8.110752,4.551990,-6.939719,0.495821,6.183693,-3.319341,-2.993735,-6.866719,8.931885,9.801607,-5.671707,-3.751926,6.408160,-0.369169,-2.213580,3.242881,-3.030681,-4.726296,-8.672627,3.782708,-1.707773,-9.557663,9.099037,2.445388,-0.679703,5.532282,-3.565239,-4.116918,9.061435,-9.340480,-6.819475,-1.172321,-2.549276,-9.287572,-5.532850,-1.796839,7.072444,8.518443,-9.625081,6.819352,6.133042,8.221583,-4.247506,2.602660,-9.875659,3.533130,-9.840301,-8.715448,7.647533,8.636726,-3.837282,-5.642842,-5.492361,-7.650454,-6.969555,2.567665,-6.074944,6.291465,7.660527,-2.918715,8.248552,-7.946572,1.433285,-6.611601,7.809092,-7.233112,-6.294163,8.507366,-9.627742,3.486325,-6.623083,-2.761642,9.827195,3.856810,9.261383,3.559240,-5.706707,-0.125929,-5.909190,-6.350725,-3.284789,8.288591,2.622748,-8.964205,-1.583005,-6.286288,-8.749795,-1.794805,2.094755,-7.106783,6.410010,2.363236,-7.204944,-8.100514,-5.052162,-3.259055,0.376384,8.750473,5.350121,4.359129,2.348164,-1.061649,-3.016331,-7.248320,-8.268967,-5.254419,-1.664880,2.402002,7.791178,0.857112,-6.164790,0.112713,6.629940,-6.025785,-3.473811,-7.075595,-5.707208,7.027439,1.966978,-8.187681,4.046129,-9.377264,-0.586201,-5.001506,4.858686,2.173419,1.750792,2.926643,-7.267852,2.809055,2.569369,-2.051621,-7.719104,9.763861,3.397142,-0.873652,-8.997049,-7.284022,-6.960944,2.973567,-5.583090,-3.784989,6.731174,-5.470790,3.571792,-1.536000,-5.034644,-2.321227,-7.309966,-5.885187,9.563613,-6.842652,1.747848,-4.596346,9.622470,0.733883,6.299681,-1.820299,-5.727022,-3.291842,-7.895860,-2.597345,0.070376,-3.657260,-4.346947,-2.313523,2.004520,-4.340292,7.894676,-2.445176,-5.367258,7.968667,1.774569,-7.662119,-5.614772,-0.341181,9.627388,3.121297,7.081356,-0.595607,3.075774,-0.919351,-8.340164,7.139948,1.913484,-5.065217,-1.632137,5.241997,0.267542,5.521644,-5.762186,5.312961,-7.319437,2.975627,-7.893351,-4.484310,-7.233706,-7.880274,4.698248,-5.246640,3.197367,-9.675966,-5.981456,-8.122319,5.175199,-3.543112,2.593895,4.319475,-9.071487,5.383201,-8.436088,-7.146884,-9.359600,0.447533,0.389242,3.235178,8.209260,-9.458147,6.661347,2.836018,-5.611764,4.922985,2.869355,2.190585,3.114689,-0.052206,-9.346525,-5.383553,7.358125,-2.391012,4.562673,-2.952143,5.331465,8.570394,6.562919,8.280463,-5.686142,5.944873,9.452434,8.446386,6.291048,7.705783,6.241445,2.829722,4.670978,4.620217,3.258224,4.383151,-0.345486,8.704431,-2.079358,7.828747,6.486862,-4.495099,6.716035,2.479105,-9.908905,2.299042,-9.483265,-6.694409,-0.415156,3.767218,0.082582,9.575007,4.185347,4.184248,4.848278,-4.504590,2.456470,-7.272456,-1.260334,-5.885517,-2.742205,-3.792428,-4.991588,-0.918461,-0.592235,-9.513180,7.974551,0.342909,-5.754316,-1.120649,1.357785,6.817522,0.880213,-7.983094,4.751896,-5.255362,-1.589145,3.105653,-8.473577,7.154277,0.760102,-6.945031,1.712124,5.555585,2.444570,-9.409215,-6.002811,2.196602,4.413479,2.678135,-4.562748,-1.702171,0.848089,4.498463,5.157671,-3.634819,-6.470006,7.707622,2.628185,-5.204021,-7.618628,6.393086,-0.682980,1.630648,-7.393876,-9.142291,-5.897589,9.303701,-0.988294,5.753337,-5.498075,-2.132823,6.168608,-3.203907,-2.022304,4.634652,6.952790,5.074678,7.839957,1.699340,-7.143381,3.463225,-5.709867,-2.882997,6.247691,2.037384,8.013680,5.969267,9.286258,3.908546,-5.057131,2.166434,-7.068232,5.827597,0.130098,5.306736,-0.922354,-3.445200,-2.071002,-8.101232,3.965960,0.048225,9.464458,9.886226,-9.793003,9.032963,7.071732,3.078497,8.324805,9.664056,8.155142,-9.388112,9.454771,5.864834,8.846264,-9.593170,6.747723,-3.072287,-9.166033,0.464452,-4.336918,6.993962,0.558669,3.903297,6.799360,0.283115,-1.750664,-7.975825,2.686724,5.806376,1.507050,0.018215,5.766032,-7.738091,0.402731,-8.068440,-0.489300,0.035311,-7.060001,-5.040369,0.348960,2.471632,-3.793556,-2.682057,8.886939,-6.656875,2.937195,6.314067,1.429174,-6.994310,1.015038,0.901006,-6.050391,-8.994325,5.017864,-5.390891,-4.934986,-1.011876,0.077300,-7.199467,-6.215557,-1.078807,-3.835880,-7.092611,3.402938,-2.428554,-2.779739,-0.274793,-9.070834,4.092738,0.610836,6.160212,9.793890,-9.089295,-6.957318,8.854363,-2.684567,-8.118561,2.351308,-0.206412,1.252046,-4.847305,-2.758186,-8.899840,7.993524,4.113612,6.836403,-3.041264,-1.638953,7.016472,-8.290566,-9.070929,-7.881538,4.978919,0.764823,-9.083242,5.413694,-0.096252,4.197090,-9.182256,3.221621,-8.382061,-1.007840,4.169508,7.538537,9.051586,-0.567036,-3.746788,-9.735494,-9.720525,-3.927900,-5.713045,5.812666,1.151572,8.405127,8.166439,1.304211,0.645460,4.286111,7.846421,-0.658839,-8.076064,-0.818401,3.913914,-9.494580,-2.607960,8.128848,-4.230435,-6.786943,4.390799,-1.507081,-3.387477,-4.057119,2.915200,-3.155031,0.321070,-8.291843,2.477769,-2.360290,7.311617,2.213329,1.973333,2.873199,8.366235,-1.992234,1.286238,-3.709747,-9.713493,-3.306016,-4.655631,-1.079569,9.799012,2.880570,2.255128,9.685212,-9.317373,5.282144,5.706231,-7.093921,-1.834163,-9.684361,9.448700,2.102326,3.563741,6.600382,-3.976864,5.743794,-0.424899,6.732402,9.631203,3.148820,5.976421,5.368045,8.977942,2.522183,-5.425389,2.807117,-2.240279,-2.275581,-9.415297,9.927269,7.382420,-9.403047,0.856346,-7.843256,2.962751,6.407637,-4.598232,3.502831,-9.968680,0.792123,-4.505199,-3.692604,9.115196,3.264698,-4.772902,-7.094806,4.505488,-7.147867,-4.162522,0.906447,-8.054622,-9.359724,-2.532410,-2.111484,7.191941,7.126332,-2.434992,-0.035242,-2.021168,-1.067781,0.610258,1.544487,0.371244,3.088456,-5.465866,1.587964,1.171025,2.968133,-2.864510,-7.713510,4.700081,3.712810,9.659989,1.993611,3.166840,8.493727,-4.562419,-4.658882,-7.690731,-9.268832,-2.667774,0.866500,7.608520,8.533540,-4.359885,4.792423,-2.975834,3.183561,4.623526,5.119978,-4.109862,7.638939,8.848181,4.195126,0.167516,-8.501280,8.112283,-5.370858,-7.038295,-6.926881,8.423363,-8.324614,9.130266,-7.330912,-0.727065,8.096554,-4.211598,-8.817449,-4.998824,5.379820,8.109734,-7.121893,7.236068,3.423635,-1.004075,-7.600501,-0.883702,2.152430,-3.907715,-8.311214,-7.990968,-7.779747,-6.833262,-7.399432,-2.901698,-2.552241,-6.095295,-0.807048,1.678348,4.308278,-7.641763,-9.243867,3.679785,-9.029196,3.470607,-7.546118,-0.556645,-1.307571,4.342550,-2.211403,-8.798148,8.190264,6.698254,-3.499098,-2.168085,-1.773478,1.018850,5.424019,3.281017,-1.304395,-9.613284,-7.166970,1.304844,6.630236,0.476599,-8.863876,-4.949132,-1.497183,-2.205477,5.283148,0.730428,4.397826,-5.204669,0.774387,-4.394807,-9.265190,-2.628500,3.230438,5.400819,2.920144,-0.636994,-4.091210,8.977263,-2.054891,2.935284,-8.571654,-5.025110,8.050351,-9.913466,-5.115522,-4.572753,5.644280,5.543628,6.883833,1.565136,9.937970,-3.520520,5.628928,8.386275,1.825752,7.514448,3.683713,9.107600,-4.445564,0.167693,-9.072396,7.068784,-5.567974,9.137348,5.916325,-4.030199,-4.493218,-5.670658,3.373697,-0.408480,-6.407651,-9.297299,8.687096,-8.855956,-9.082548,-7.239463,9.090577,-9.312931,-6.154433,8.833798,2.095860,-9.858530,4.707777,2.685858,-1.253759,3.612609,4.260283,-0.492786,-0.259228,-8.617794,-5.540255,3.282791,-4.975427,-2.720563,2.227771,-7.130768,0.922627,5.598436,0.601644,6.045417,-9.876051,-2.600518,3.605287,-1.973843,0.260796,-9.272316,5.635462,8.864020,4.795365,-6.195686,-3.938079,0.784400,9.055233,-9.785217,8.409698,5.498157,-7.566681,3.661648,-2.789944,8.306285,-2.134621,-2.987790,-5.574223,2.677727,9.117578,-7.253100,-5.035843,5.157372,-8.494166,-7.843825,-0.336793,8.612701,9.586265,-6.369129,-5.071273,3.560368,7.582907,-5.092893,-8.455254,5.600502,1.315889,0.671915,-2.630282,-2.878885,-4.706024,-4.441237,-1.834519,6.886301,3.287611,9.308095,-9.546651,-5.402376,-6.251868,6.080814,3.690975,-4.293089,-8.933561,-8.642711,9.652475,-3.592294,-8.222724,-4.065238,-3.369678,-3.722859,4.168414,-6.199622,9.586543,9.045058,6.188579,-8.124014,9.817609,-6.058700,-4.864973,-5.681824,5.534057,0.044766,-6.852358,-5.813400,6.220103,-5.158207,-2.990150,-2.078191,7.983752,-5.568316,-1.587160,8.669957,9.794322,-0.667027,0.712241,5.279283,9.844428,-4.892389,-8.096669,-3.783892,4.586380,-4.134890,2.576862,6.147714,-7.836943,-0.085318,-2.142685,8.329384,5.295671,6.215283,-8.177775,9.868531,8.487018,5.200381,-6.203198,-3.555751,-7.357238,7.891036,1.902217,4.920963,-1.307093,7.812347,7.191081,3.713200,-5.439995,2.647879,3.819372,-8.077837,-0.331939,5.110229,1.647605,0.430498,-4.258590,-0.337352,5.571966,-7.624294,0.902981,9.123666,-7.341892,1.544062,8.601761,4.940703,0.208941,-8.683917,-6.573174,-6.683518,2.397450,4.621378,-4.118252,3.760238,8.155237,-8.049841,0.697052,-7.921338,-0.660544,-2.784795,-7.292241,-0.073544,0.075092,-4.172862,-7.391622,-4.845106,-2.076025,-3.137338,0.083214,-2.011636,5.841127,8.539774,-4.459059,-9.605912,1.508237,8.869861,-3.989663,5.369525,-2.397326,9.246883,-4.683895,-6.828310,-9.549433,7.972224,-4.945727,-8.561615,-1.606528,1.699810,0.192991,4.573494,-3.041547,8.344423,5.247242,7.081971,-8.908177,-4.627567,-7.721177,9.817573,0.720455,-2.453507,-9.936662,0.116157,-6.407018,-1.195966,-4.236420,-5.406756,-7.659294,-7.088623,-4.094426,3.427013,-9.439241,7.721701,-6.467581,6.799245,2.644237,1.736964,8.346198,3.196599,2.296779,9.460837,7.372027,3.426787,0.749171,9.643076,8.712110,-1.660693,6.360145,-6.756145,-0.444666,9.583119,4.310456,-9.687392,-5.271158,-5.858792,7.963361,8.433002,7.333999,-1.974617,-5.188634,-3.371410,-9.895104,-7.759368,-4.339938,8.434291,-6.205284,-2.932230,4.619259,-9.680041,-6.932800,-8.410147,1.392667,5.577742,-9.188438,7.782949,5.557772,-1.644145,3.104779,0.759173,6.655614,-9.025825,-2.402830,5.512319,7.396342,2.998784,-1.526680,9.611510,5.708203,-6.601935,-6.915689,3.643456,6.569545,5.698498,-9.565494,-0.170183,4.510662,2.294825,0.076695,-3.020605,5.328288,9.865647,6.856164,5.027756,9.874338,-4.247214,2.748209,5.452761,7.652004,1.325629,-5.937982,9.873258,3.414402,7.576713,7.276924,3.186925,8.943734,-1.890617,-7.294810,9.053214,8.514312,8.357986,7.963474,6.627793,-3.863758,-9.560571,-1.845435,-2.963359,2.241747,-8.487022,4.028470,8.972674,-2.014930,2.805452,1.377513,-4.016394,-2.281867,4.514153,5.794220,-9.596501,-9.673361,-3.944558,-9.081457,-2.071194,-9.750574,-1.385209,-5.992078,-5.803604,1.860820,1.365784,-6.250037,2.114344,-9.011294,5.694863,6.760817,3.289612,-7.819788,-3.691170,-7.708615,-0.661875,-1.191982,1.715266,-0.527246,4.437265,7.482564,-9.759933,9.439899,3.153645,8.579546,7.238571,-1.900530,-6.321614,-0.881082,-3.314075,8.354214,7.233701,4.582055,-0.771397,-7.153470,-4.788006,6.256513,9.673707,-1.513729,-5.885407,8.640376,7.029546,-5.415825,8.067663,-5.576540,9.202096,-9.541280,8.164785,1.637838,-5.769344,-6.570076,-4.617301,2.540144,-5.239159,-3.532661,0.670682,-1.703554,3.261687,-6.125170,1.359315,-3.965707,-6.130477,4.484414,5.960471,-3.547405,-3.928291,-6.341863,-5.389370,-5.045619,0.230684,9.803005,0.815085,0.164246,-3.411016,6.713061,7.872172,-4.867173,-2.506032,3.425228,5.016896,0.549477,-3.753685,-1.317915,-3.056445,0.005284,7.089171,-3.293347,-7.271675,4.258879,-8.034977,-8.485709,3.483194,7.122042,-3.037365,1.338677,-7.172979,5.688344,-2.617771,8.029341,2.176001,-2.952396,5.876714,9.468810,3.410188,-2.079982,4.144917,9.434741,-3.799727,-7.758384,2.617541,-0.463376,3.488040,7.215200,8.552550,-4.628426,9.979020,7.103198,1.921571,5.377234,6.008746,-8.446035,-1.577883,2.852422,6.451650,-3.589032,3.128413,-8.181312,-1.225767,-1.730636,1.322693,-4.311475,-7.212396,6.967108,-4.898273,-1.007466,0.477940,-7.204271,-6.450400,-7.595412,-6.145029,-7.552268,1.141344,-6.412768,-5.875539,7.093226,0.731432,5.329403,3.513698,4.302313,2.723774,2.228728,5.356059,-3.887607,-1.882354,6.457954,6.766782,-1.293182,-9.723820,2.444340,-5.588035,-1.556334,-8.475295,0.126012,2.978360,-3.302664,-5.721129,8.027226,3.378015,4.441110,-1.124797,-4.005436,-5.059508,-4.436475,6.679122,-5.315111,-3.251475,8.718270,-4.048759,-3.279208,-7.324852,-9.884429,-5.950532,-5.782402,9.710174,9.277447,-5.449799,-5.246888,5.725088,8.955573,-1.097573,-2.573809,1.151136,4.791390,-9.838466,2.851061,-2.489449,5.063279,3.740380,4.378676,6.151134,-1.059938,-5.435176,-2.861009,0.503745,3.491313,5.636415,-8.468627,2.321116,-8.992816,8.372166,-6.281903,8.459752,-1.452223,7.945291,-0.956945,6.551456,-0.713772,2.942359,7.899673,4.877141,-7.213947,-9.675943,0.400600,-7.640310,5.894420,3.463227,-1.876757,9.887746,9.484298,-7.067575,2.099993,-4.022359,5.665050,-1.971183,-7.354202,6.623737,2.299783,4.364298,-0.652976,-8.845782,5.268054,2.535920,8.397626,-5.039444,-3.971972,-2.364454,-0.644167,6.007084,-3.942105,-0.219658,3.338267,4.300418,9.841906,2.366044,-0.948490,9.676641,7.312953,9.339994,0.267055,5.914036,-9.240264,1.330717,-4.788465], dtype = "float64")#candidate|6852|(1568,)|const|float64
const_6853 = relay.const([3,5,-10,5,2,8,-8,-2,-3,2,2,-10,-3,-6,-2,-6,-6,-5,5,10,3,1,6,-4,6,7,-3,-7,-7,-1,-9,-4,-9,1,-10,3,-10,-5,-10,7,8,4,-2,10,-5,8,9,10,2,-1,-2,-6,-9,-1,1,-4,4,10,10,-7,2,-8,-9,8,10,6,6,-6,-4,-5,-7,-3,9,-8,5,4,3,8,-4,5,-8,6,4,8,-1,2,1,8,9,1,-5,9,10,-10,-4,6,8,5,-6,-10,5,4,7,6,-1,-8,-3,-2,6,5,9,-1,7,-8,8,-9,-10,-7,-6,3,-1,2,9,6,8,-5,-5,1,-4,-5,7,-3,9,-5,6,-2,8,10,-10,3,10,-2,-8,-6,-3,5,5,10,10,8,-1,1,-4,9,9,-1,-3,3,7,-4,-10,-4,-6,10,-10,-10,-9,-2,-3,-7,2,3,-3,7,-6,2,-9,-1,-1,-1,-9,3,1,3,4,-8,9,4,-10,4,3,1,4,-8,-5,7,-9,2,-4,6,6,-8,7,-9,-6,-2,6,-2,-7,7,-9,-6,3,-8,4,6,-8,-6,-8,-2,5,5,7,-4,-10,-6,3,9,1,-4,-1,-6,-7,-4,7,-1,-9,-4,4,5,-8,2,5,1,9,1,-8,-9,-9,-1,-10,-9,-9,-9,2,6,5,5,-9,5,2,10,-3,4,-3,-8,-9,3,-1,-10,6,-5,6,-10,6,5,-1,7,-5,6,8,-2,-3,5,-9,9,3,-8,-3,5,6,-7,-6,-1,-5,-10,2,-2,-7,1,3,5,3,6,4,5,-5,4,-7,4,-3,7,-6,-2,-5,1,2,-6,1,-3,5,-4,-10,-4,3,-1,2,-2,4,-1,9,-6,10,-8,-4,-6,8,-1,-10,5,3,-2,1,-5,-9,3,10,9,-1,-3,-7,-6,-10,-1,-2,-4,4,3,-9,2,5,-6,-7,7,1,3,-2,10,5,-2,10,3,-3,9,5,2,9,4,-2,-3,2,10,6,6,3,-8,8,-7,10,-7,-9,2,8,5,-9,-4,6,-5,-5,-6,2,1,7,-3,6,-9,-8,5,9,5,-10,-8,-4,-1,-7,5,-10,9,6,4,1,-9,6,-2,-5,2,-7,-2,-5,-8,-1,-4,-1,10,-5,7,2,5,-9,-3,-6,-10,5,-4,8,-5,-4,1,1,3,10,4,-8,-7,5,-3,-5,4,6,2,-7,-2,7,-8,-5,-6,1,-6,-8,7,-3,2,1,9,3,1,2,3,-5,8,2,-6,4,3,4,-5,10,6,3,-1,1,-6,-3,2,2,9,-6,10,-6,-3,-4,-7,8,-6,-3,9,8,8,-6,7,-2,3,-1,1,-5,8,-7,-4,2,-5,-8,10,-10,7,-9,-4,-3,3,10,-1,-2,-6,6,1,-1,-5,-1,-7,1,8,10,-5,9,-7,3,3,1,-4,9,-6,-6,-3,4,-9,-6,9,9,9,1,6,-7,1,10,4,-5,-4,-1,-7,9,-2,-4,-2,-4,-2,8,10,9,-3,9,10,10,-6,-1,6,10,4,8,7,-7,-6,7,2,9,6,-5,-3,-10,-5,-1,-10,10,5,2,-1,-2,-5,5,6,-5,2,-1,-4,-4,-2,10,8,-8,8,-6,8,-8,-7,-2,-6,7,6,5,-9,-7,-5,-4,6,7,-1,-5,-1,6,3,-2,7,-7,7,3,2,-6,-8,10,-2,10,-10,-2,5,2,8,-8,-3,-7,6,4,-3,-5,-1,-7,-3,-4,-1,5,-6,7,-1,8,10,2,-7,-6,-9,1,7,10,-4,-3,5,-4,-7,7,-6,1,2,5,-2,-8,-1,10,7,-8,-8,-8,10,-8,-5,-4,1,8,-1,-1,-2,-5,-7,3,-8,-5,-1,-3,-6,-10,5,-3,-1,10,-2,6,-1,10,-9,2,-3,6,-3,-9,-10,-2,-4,3,-4,9,5,1,-8,6,4,-5,-8,-3,9,-9,-10,4,-4,1,-10,-5,8,5,-6,3,10,9,10,6,-3,-8,6,8,9,-7,10,5,7,-3,-10,5,6,-5,-7,6,8,2,6,-1,9,-1,9,6,6,10,-6,6,-10,-8,4,4,8,3,8,-6,-3,6,4,9,-1,-8,6,9,-6,1,-1,-1,3,-2,1,9,-4,7,9,10,7,-7,3,-6,-4,-9,2,-3,-6,-7,2,1,3,8,4,-3,7,3,-9,8,-4,8,7,-2,-8,-1,6,-8,10,4,5,6,-9,-1,5,-2,8,-8,3,9,-8,-4,10,7,10,-5,-9,7,9,-8,9,5,2,-2,3,8,2,10,-4,4,-6,-8,-10,-5,-7,3,-5,-3,4,-5,9,-2,5,-4,7,-4,-9,-10,-1,7,-1,4,-1,-4,4,-3,5,3,5,1,-7,9,-1,-4,5,10,4,-2,1,-9,9,8,-5,-4,-2,4,-1,-7,3,3,-5,-6,7,1,7,-2,1,-8,3,-9,-8,4,8,-10,-3,1,-5,4,-8,-9,6,-1,1,3,3,7,-5,-9,-2,-5,3,10,4,10,-10,7,10,3,9,-5,8,-2,-5,-7,1,10,10,3,-8,8,-4,4,-2,7,-2,4,6,-4,-10,-8,3,-6,-9,-6,4,5,-10,-3,-7,-6,3,-3,-7,-10,8,-7,-7,3,-1,-3,7,-2,10,-9,-8,-7,4,-1,-7,-5,10,-5,4,3,10,-2,-7,-2,-2,3,6,10,-2,-9,4,3,8,1,7,-9,1,4,6,4,-8,5,-8,4,-5,-6,-8,3,6,-8,-7,2,8,7,-3,-9,7,-5,-8,3,-3,-2,-10,7,-8,-1,-3,6,-10,-3,-1,1,8,-3,6,-2,8,10,-1,-6,-5,6,1,-7,-5,1,5,-6,-2,9,-8,7,-5,4,7,6,6,-7,-4,-7,7,6,3,-2,10,3,10,-4,10,-2,-7,-8,-2,1,9,6,-7,7,2,-5,1,-2,9,-8,3,5,-10,-4,-7,-8,-4,-4,7,-3,1,5,7,2,5,-6,-2,10,-1,4,-1,4,-9,8,-10,-4,10,-2,9,4,4,2,-10,-9,9,9,-10,-5,3,-2,4,-3,-7,3,9,-10,9,10,-4,-10,-6,3,4,-2,1,2,-4,-2,-10,-7,-6,3,-8,-5,-5,7,4,5,8,-6,3,-6,3,-8,-7,-3,3,-8,-10,-5,-8,6,10,3,-9,7,-5,9,-3,2,-3,10,-10,8,3,-6,-4,6,-2,-4,-6,-4,-3,10,1,5,4,1,6,-5,-3,-10,3,-10,3,-7,4,1,-6,5,-2,3,-6,1,6,-8,8,3,-4,-6,9,-7,7,-2,10,10,8,7,10,5,-5,-2,-5,-4,-9,7,6,-1,-3,-3,10,6,-7,-1,2,-2,1,1,10,-4,-8,7,6,-6,-2,-3,-2,-10,3,-7,-9,3,2,7,-9,-1,3,-10,7,-9,5,-1,2,-8,-3,9,4,4,-6,-8,-2,-2,6,-6,-8,-1,-9,-9,-4,-6,-4,8,9,-3,-3,-9,-9,-3,-5,-9,-4,-5,1,-5,-5,-1,-10,-6,-3,1,2,-2,-1,8,-4,8,-7,2,-10,-4,-2,3,-6,-8,-10,6,10,-4,4,8,9,7,-10,-6,10,5,-7,-1,-9,-1,-9,-10,-4,2,6,-6,-6,3,-4,8,10,-3,4,-9,4,-10,6,3,-4,-8,3,-5,8,6,-8,-5,8,7,-3,-2,6,-9,-2,4,7,6,7,10,-1,7,-1,-2,-2,10,5,2,4,6,6,-3,10,-5,-3,2,3,5,-2,2,6,-9,4,4,7,-5,8,5,7], dtype = "int8")#candidate|6853|(1440,)|const|int8
call_6849 = relay.TupleGetItem(func_4542_call(relay.reshape(const_6850.astype('float64'), [693,]), relay.reshape(var_6851.astype('bool'), [88,]), relay.reshape(const_6852.astype('float64'), [1568,]), relay.reshape(const_6853.astype('int8'), [360, 4]), ), 0)
call_6854 = relay.TupleGetItem(func_4547_call(relay.reshape(const_6850.astype('float64'), [693,]), relay.reshape(var_6851.astype('bool'), [88,]), relay.reshape(const_6852.astype('float64'), [1568,]), relay.reshape(const_6853.astype('int8'), [360, 4]), ), 0)
output = relay.Tuple([call_6834,call_6849,const_6850,var_6851,const_6852,const_6853,])
output2 = relay.Tuple([call_6835,call_6854,const_6850,var_6851,const_6852,const_6853,])
func_6871 = relay.Function([var_6851,], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
var_6872 = relay.var("var_6872", dtype = "bool", shape = (88,))#candidate|6872|(88,)|var|bool
output = func_6871(var_6872)
func_6873 = relay.Function([var_6872], output)
mutated_mod['func_6873'] = func_6873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6999 = relay.var("var_6999", dtype = "bool", shape = (2, 1, 4))#candidate|6999|(2, 1, 4)|var|bool
var_7000 = relay.var("var_7000", dtype = "bool", shape = (2, 7, 4))#candidate|7000|(2, 7, 4)|var|bool
bop_7001 = relay.logical_and(var_6999.astype('bool'), var_7000.astype('bool')) # shape=(2, 7, 4)
output = bop_7001
output2 = bop_7001
func_7004 = relay.Function([var_6999,var_7000,], output)
mod['func_7004'] = func_7004
mod = relay.transform.InferType()(mod)
var_7005 = relay.var("var_7005", dtype = "bool", shape = (2, 1, 4))#candidate|7005|(2, 1, 4)|var|bool
var_7006 = relay.var("var_7006", dtype = "bool", shape = (2, 7, 4))#candidate|7006|(2, 7, 4)|var|bool
output = func_7004(var_7005,var_7006,)
func_7007 = relay.Function([var_7005,var_7006,], output)
mutated_mod['func_7007'] = func_7007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3137_call = mod.get_global_var('func_3137')
func_3139_call = mutated_mod.get_global_var('func_3139')
call_7032 = relay.TupleGetItem(func_3137_call(), 0)
call_7033 = relay.TupleGetItem(func_3139_call(), 0)
uop_7039 = relay.exp(call_7032.astype('float64')) # shape=(6, 13, 3)
uop_7041 = relay.exp(call_7033.astype('float64')) # shape=(6, 13, 3)
func_2981_call = mod.get_global_var('func_2981')
func_2982_call = mutated_mod.get_global_var('func_2982')
call_7054 = func_2981_call()
call_7055 = func_2981_call()
func_6871_call = mod.get_global_var('func_6871')
func_6873_call = mutated_mod.get_global_var('func_6873')
const_7061 = relay.const([[True,True,False,False],[False,True,False,True],[True,True,False,True],[True,True,True,True],[True,True,True,False],[False,True,True,False],[False,True,True,True],[True,False,False,False],[True,False,True,True],[True,True,False,False],[False,False,False,False],[True,True,True,False],[False,False,False,False],[False,True,False,False],[False,False,True,True],[False,True,False,False],[True,True,True,False],[False,False,True,True],[False,True,True,False],[False,False,False,False],[True,True,True,True],[False,True,True,True]], dtype = "bool")#candidate|7061|(22, 4)|const|bool
call_7060 = relay.TupleGetItem(func_6871_call(relay.reshape(const_7061.astype('bool'), [88,])), 0)
call_7062 = relay.TupleGetItem(func_6873_call(relay.reshape(const_7061.astype('bool'), [88,])), 0)
output = relay.Tuple([uop_7039,call_7054,call_7060,const_7061,])
output2 = relay.Tuple([uop_7041,call_7055,call_7062,const_7061,])
func_7070 = relay.Function([], output)
mod['func_7070'] = func_7070
mod = relay.transform.InferType()(mod)
output = func_7070()
func_7071 = relay.Function([], output)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_7129 = func_5970_call()
call_7130 = func_5970_call()
func_3939_call = mod.get_global_var('func_3939')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_7148 = relay.TupleGetItem(func_3939_call(), 0)
call_7149 = relay.TupleGetItem(func_3941_call(), 0)
output = relay.Tuple([call_7129,call_7148,])
output2 = relay.Tuple([call_7130,call_7149,])
func_7156 = relay.Function([], output)
mod['func_7156'] = func_7156
mod = relay.transform.InferType()(mod)
output = func_7156()
func_7157 = relay.Function([], output)
mutated_mod['func_7157'] = func_7157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_7190 = func_5970_call()
call_7191 = func_5970_call()
var_7194 = relay.var("var_7194", dtype = "bool", shape = (9, 10, 6))#candidate|7194|(9, 10, 6)|var|bool
bop_7195 = relay.logical_or(call_7190.astype('bool'), var_7194.astype('bool')) # shape=(9, 10, 6)
bop_7198 = relay.logical_or(call_7191.astype('bool'), var_7194.astype('bool')) # shape=(9, 10, 6)
func_4741_call = mod.get_global_var('func_4741')
func_4744_call = mutated_mod.get_global_var('func_4744')
var_7204 = relay.var("var_7204", dtype = "float32", shape = (234,))#candidate|7204|(234,)|var|float32
call_7203 = func_4741_call(relay.reshape(var_7204.astype('float32'), [6, 13, 3]))
call_7205 = func_4741_call(relay.reshape(var_7204.astype('float32'), [6, 13, 3]))
func_6131_call = mod.get_global_var('func_6131')
func_6133_call = mutated_mod.get_global_var('func_6133')
call_7206 = func_6131_call()
call_7207 = func_6131_call()
func_6675_call = mod.get_global_var('func_6675')
func_6676_call = mutated_mod.get_global_var('func_6676')
call_7217 = relay.TupleGetItem(func_6675_call(), 1)
call_7218 = relay.TupleGetItem(func_6676_call(), 1)
output = relay.Tuple([bop_7195,call_7203,var_7204,call_7206,call_7217,])
output2 = relay.Tuple([bop_7198,call_7205,var_7204,call_7207,call_7218,])
func_7220 = relay.Function([var_7194,var_7204,], output)
mod['func_7220'] = func_7220
mod = relay.transform.InferType()(mod)
mutated_mod['func_7220'] = func_7220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7220_call = mutated_mod.get_global_var('func_7220')
var_7222 = relay.var("var_7222", dtype = "bool", shape = (9, 10, 6))#candidate|7222|(9, 10, 6)|var|bool
var_7223 = relay.var("var_7223", dtype = "float32", shape = (234,))#candidate|7223|(234,)|var|float32
call_7221 = func_7220_call(var_7222,var_7223,)
output = call_7221
func_7224 = relay.Function([var_7222,var_7223,], output)
mutated_mod['func_7224'] = func_7224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2695_call = mod.get_global_var('func_2695')
func_2697_call = mutated_mod.get_global_var('func_2697')
call_7293 = relay.TupleGetItem(func_2695_call(), 2)
call_7294 = relay.TupleGetItem(func_2697_call(), 2)
const_7301 = relay.const([4.799686,5.891465,-5.072866,-5.924183,1.753673,6.576204,-5.449024,-1.345656,-3.728249,-2.685304,-6.890492,-8.179080,0.547891,-8.829057,0.962603,8.789306,6.494213,-1.314280,-9.949396,-5.360671,-7.181464,0.409574,-0.587675,-0.284292,-7.348450,7.707047,4.810668,7.635990,-0.798803,9.252261,1.035002,7.372160,-9.215988,-7.248690,-6.046435,-8.878017,9.408973,3.144774,-4.340329,-9.165494,4.930451,0.591645,6.085923,2.820261,5.319174,-8.541681,9.661217,8.501391,1.078944,-4.657171,7.127339,-3.873292,-5.248326,-2.577352,-9.233653,4.579311,-3.989470,-7.829890,9.930917,-6.345620], dtype = "float32")#candidate|7301|(60,)|const|float32
bop_7302 = relay.mod(call_7293.astype('float32'), relay.reshape(const_7301.astype('float32'), relay.shape_of(call_7293))) # shape=(60,)
bop_7305 = relay.mod(call_7294.astype('float32'), relay.reshape(const_7301.astype('float32'), relay.shape_of(call_7294))) # shape=(60,)
uop_7311 = relay.atanh(call_7293.astype('float32')) # shape=(60,)
uop_7313 = relay.atanh(call_7294.astype('float32')) # shape=(60,)
output = relay.Tuple([bop_7302,uop_7311,])
output2 = relay.Tuple([bop_7305,uop_7313,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

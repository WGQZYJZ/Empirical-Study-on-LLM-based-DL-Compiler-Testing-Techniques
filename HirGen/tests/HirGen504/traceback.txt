==========mod==========
#[version = "0.0.5"]
def @func_8921(%var_8916: Tensor[(15, 9, 8), float32]) -> (Tensor[(15, 9, 8), float32], Tensor[(2, 9, 6), float32]) {
  %0 = cast(%var_8916, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %1 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %2 = log10(%0) /* ty=Tensor[(15, 9, 8), float32] */;
  %3 = %1.1;
  (%2, %3)
}

def @func_9387(%var_9365: Tensor[(140, 2), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(5, 56), bool], Tensor[(2, 9, 6), float32]) {
  %4 = @func_8800() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %5 = cast(%var_9365, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %6 = reshape(%5, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %7 = @func_4725(%6) /* ty=(Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) */;
  %8 = %7.2;
  %9 = cast(%var_9365, dtype="bool") /* ty=Tensor[(140, 2), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(2), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(5, 56), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %13 = @func_7450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %14 = %4.0;
  %15 = greater(%11, %12) /* ty=Tensor[(5, 56), bool] */;
  %16 = %13.1;
  (%14, %15, %16)
}

def @func_9971(%var_9939: Tensor[(9, 6, 8), float64]) -> (Tensor[(9, 6, 8), float64], Tensor[(2, 9, 6), float32]) {
  %17 = cast(5.99716f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %18 = cast(%var_9939, dtype="float64") /* ty=Tensor[(9, 6, 8), float64] */;
  %19 = @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %20 = multiply(%17, %18) /* ty=Tensor[(9, 6, 8), float64] */;
  %21 = %19.1;
  (%20, %21)
}

def @func_4041() -> (Tensor[(2, 9, 6), float32],) {
  %22 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %23 = %22.0;
  (%23,)
}

def @func_6274(%var_6256: Tensor[(1800), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) {
  %24 = cast(%var_6256, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %25 = cast(%var_6256, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %26 = reshape(%24, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %27 = reshape(%25, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %28 = @func_3366(%26, %27) /* ty=(Tensor[(12, 10, 15), float32],) */;
  %29 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %30 = %28.0;
  (%29, %30, %var_6256)
}

def @func_8956() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %31 = @func_6116() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %32 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %33 = %31.1;
  (%32, %33)
}

def @func_4622(%var_4609: Tensor[(15, 3, 6), float32]) -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %34 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  %36 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %37 = cast(%34, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  %38 = tan(%37) /* ty=Tensor[(15, 3, 6), float32] */;
  %39 = cast(%var_4609, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%38, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %43 = sqrt(%35) /* ty=Tensor[(15, 3, 6), float32] */;
  %44 = %36.0;
  %45 = floor_mod(%41, %42) /* ty=Tensor[(15, 3, 6), float32] */;
  (%43, %44, %45)
}

def @func_13303() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %46 = @func_11235() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %47 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %48 = @func_3636() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %49 = %46.1;
  %50 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  %51 = %47.0;
  %52 = %48.1;
  (%49, %50, %51, %52)
}

def @func_3194() -> Tensor[(2, 9, 6), float32] {
  %53 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %53.0
}

def @func_7402(%var_7392: Tensor[(13, 6, 4), uint8]) -> Tensor[(13, 6, 4), uint8] {
  %54 = cast(%var_7392, dtype="uint8") /* ty=Tensor[(13, 6, 4), uint8] */;
  %55 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(13, 6, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 6, 4), uint8] */, dtype="uint8") /* ty=Tensor[(13, 6, 4), uint8] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%56, %57) /* ty=Tensor[(13, 6, 4), uint8] */
}

def @func_12625() -> (Tensor[(2, 9, 6), float32], Tensor[(5, 56), float32], Tensor[(280), float32], Tensor[(768, ?), float32]) {
  %58 = @func_7579() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %59 = cast(meta[relay.Constant][1] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %60 = reshape(%59, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %61 = @func_4725(%60) /* ty=(Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) */;
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(768, 1), float64] */, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %63 = tan(%62) /* ty=Tensor[(768, 1), float32] */;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(768, 1), float64] */, dtype="float64") /* ty=Tensor[(768, 1), float64] */;
  %65 = reshape(%64, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %66 = @func_9804(%65) /* ty=Tensor[(768), bool] */;
  %67 = cast(%66, dtype="int64") /* ty=Tensor[(768), int64] */;
  %68 = shape_of(%63, dtype="int32") /* ty=Tensor[(2), int32] */;
  %69 = cast(%63, dtype="int64") /* ty=Tensor[(768, 1), int64] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %71 = minimum(%69, %70) /* ty=Tensor[(768, ?), int64] */;
  %72 = cast(meta[relay.Constant][2] /* ty=Tensor[(768, 1), float64] */, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
  %74 = cast(%71, dtype="float32") /* ty=Tensor[(768, ?), float32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %76 = %58.0;
  %77 = %61.2;
  %78 = divide(%74, %75) /* ty=Tensor[(768, ?), float32] */;
  (%76, %77, meta[relay.Constant][1] /* ty=Tensor[(280), float32] */, %78)
}

def @func_11120(%var_11082: Tensor[(16, 2, 11), float64]) -> (Tensor[(16, 2, 11), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32]) {
  %79 = cast(%var_11082, dtype="float64") /* ty=Tensor[(16, 2, 11), float64] */;
  %80 = @func_7579() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %81 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
  %82 = @func_6364() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */;
  %83 = sinh(%79) /* ty=Tensor[(16, 2, 11), float64] */;
  %84 = %80.0;
  %85 = %81.0;
  %86 = %82.1;
  (%83, %84, %85, %86)
}

def @func_5444() -> Tensor[(3, 16, 16), float64] {
  @func_3885() /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_1673() -> Tensor[(2, 9, 6), float32] {
  @func_1579() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_2743() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) {
  %87 = cast(meta[relay.Constant][3] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %88 = reshape(%87, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %89 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
  %90 = @func_3(%88) /* ty=Tensor[(3, 16, 16), float64] */;
  (%89, %90, meta[relay.Constant][3] /* ty=Tensor[(768), float64] */)
}

def @func_8627() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(264, 2), int64]) {
  %91 = @func_6364() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */;
  %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(264, 2), int64] */, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(264, 2), int64] */, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(264, 2), int64] */, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
  %95 = reshape(%92, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %96 = reshape(%93, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %97 = reshape(%94, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
  %98 = @func_3026(%95, %96, %97) /* ty=(Tensor[(11, 4, 12), int64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(11, 4, 12), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %99 = %91.0;
  %100 = %98.6;
  (%99, %100, meta[relay.Constant][4] /* ty=Tensor[(264, 2), int64] */)
}

def @func_3311(%var_3309: Tensor[(112), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(112), float32]) {
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %102 = reshape(%101, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %103 = @func_1884(%102) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %104 = %103.2;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(768), float64] */;
  %106 = cast(%var_3309, dtype="float32") /* ty=Tensor[(112), float32] */;
  %107 = reshape(%105, newshape=[384, 2]) /* ty=Tensor[(384, 2), float64] */;
  %108 = reshape(%106, newshape=[28, 4]) /* ty=Tensor[(28, 4), float32] */;
  %109 = @func_2374(%107, %108) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64], Tensor[(28, 4), float32], Tensor[(2, 7, 8), float32], Tensor[(2, 9, 6), bool], Tensor[(10, 7, 4), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */;
  %110 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %111 = %109.10;
  (%110, %104, meta[relay.Constant][5] /* ty=Tensor[(768), float64] */, %111, %var_3309)
}

def @func_4971(%var_4944: Tensor[(2, 168), float32], %var_4951: Tensor[(2, 168), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) {
  %112 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %113 = cast(%var_4944, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %114 = reshape(%113, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %115 = @func_2082(%114) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %116 = cast(%var_4951, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %117 = shape_of(%var_4944, dtype="int32") /* ty=Tensor[(2), int32] */;
  %118 = cast(%var_4944, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %120 = cast(meta[relay.Constant][6] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %121 = cast(meta[relay.Constant][7] /* ty=Tensor[(2730), int8] */, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %122 = reshape(%120, newshape=[]) /* ty=int8 */;
  %123 = reshape(%121, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %124 = @func_1073(%122, %123) /* ty=(Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) */;
  %125 = %112.1;
  %126 = %115.0;
  %127 = logical_and(%118, %119) /* ty=Tensor[(2, 168), bool] */;
  %128 = %124.4;
  (%125, %126, %127, %128, meta[relay.Constant][6] /* ty=int8 */, meta[relay.Constant][7] /* ty=Tensor[(2730), int8] */)
}

def @func_5863(%var_5846: Tensor[(2, 15, 14), float64]) -> (Tensor[(2, 15, 14), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %129 = cast(%var_5846, dtype="float64") /* ty=Tensor[(2, 15, 14), float64] */;
  %130 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %131 = sin(%129) /* ty=Tensor[(2, 15, 14), float64] */;
  %132 = %130.2;
  %133 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %134 = @func_4188() /* ty=Tensor[(2, 9, 6), float32] */;
  (%131, %132, %133, %134)
}

def @func_7595() -> (Tensor[(3, 16, 16), float64],) {
  %135 = @func_5444() /* ty=Tensor[(3, 16, 16), float64] */;
  (%135,)
}

def @func_2870() -> Tensor[(2, 9, 6), float32] {
  @func_2820() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12037() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(2, 168), float32], Tensor[(2, 9, 6), float32]) {
  %136 = @func_4041() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %137 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %138 = reshape(%137, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %139 = @func_2554(%138) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) */;
  %140 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %141 = %136.0;
  %142 = %139.1;
  %143 = %140.0;
  (%141, %142, meta[relay.Constant][8] /* ty=Tensor[(2, 168), float32] */, %143)
}

def @func_7614() -> Tensor[(2, 9, 6), float32] {
  %144 = @func_5389() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %144.0
}

def @func_10659(%var_10609: Tensor[(1296), int32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(3, 28), float64], Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(1296), int32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %145 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %146 = @func_8596() /* ty=(Tensor[(2, 9, 6), bool],) */;
  %147 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %148 = @func_6450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %149 = @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %150 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 28), float64] */, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
  %151 = reshape(%150, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %152 = @func_6782(%151) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) */;
  %153 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %154 = cast(%var_10609, dtype="int32") /* ty=Tensor[(1296), int32] */;
  %155 = reshape(%154, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), int32] */;
  %156 = %145.0;
  %157 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
  %158 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  %159 = %146.0;
  %160 = %147.2;
  %161 = %148.0;
  %162 = %149.1;
  %163 = %152.2;
  %164 = %153.0;
  %165 = @func_2731(%155) /* ty=Tensor[(9, 12, 12), int32] */;
  %166 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %167 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
  (%156, %157, %158, %159, %160, %161, %162, %163, meta[relay.Constant][9] /* ty=Tensor[(3, 28), float64] */, %164, %165, %var_10609, %166, %167)
}

def @func_3097() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) {
  %168 = cast(meta[relay.Constant][10] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %169 = reshape(%168, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %170 = @func_1884(%169) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %171 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %172 = %170.0;
  (%171, %172, meta[relay.Constant][10] /* ty=Tensor[(768), float64] */)
}

def @func_2171() -> (Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) {
  %173 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %175 = reshape(%174, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %176 = @func_358(%175) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %177 = %173.0;
  %178 = %176.1;
  (%177, %178, meta[relay.Constant][11] /* ty=Tensor[(280), float32] */)
}

def @func_3572() -> Tensor[(15, 3, 6), float32] {
  %179 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  rsqrt(%179) /* ty=Tensor[(15, 3, 6), float32] */
}

def @func_1631() -> Tensor[(2, 9, 6), float32] {
  %180 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %180.0
}

def @func_13013() -> (Tensor[(2, 9, 6), float32],) {
  %181 = @func_5649() /* ty=Tensor[(2, 9, 6), float32] */;
  (%181,)
}

def @func_3788() -> (Tensor[(2, 9, 6), float32],) {
  %182 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  (%182,)
}

def @func_6836() -> (Tensor[(384), float32],) {
  %183 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%183,)
}

def @func_7259(%var_7255: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  %184 = cast(%var_7255, dtype="float64") /* ty=Tensor[(84), float64] */;
  %185 = reshape(%184, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %186 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %187 = @func_550(%185) /* ty=Tensor[(6, 2, 7), float64] */;
  (%186, %187, %var_7255)
}

def @func_12419() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %188 = @func_7553() /* ty=Tensor[(2, 9, 6), float32] */;
  %189 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  (%188, %189)
}

def @func_9322() -> (Tensor[(2, 9, 6), float32],) {
  %190 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
  (%190,)
}

def @func_12734() -> (Tensor[(2, 9, 6), float32],) {
  %191 = @func_8800() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %192 = %191.1;
  (%192,)
}

def @func_4463(%var_4433: Tensor[(280), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(78), int64], Tensor[(360), float64], Tensor[(280), float32], Tensor[(2, 9, 6), float32]) {
  %193 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %194 = %193.1;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %197 = cast(%var_4433, dtype="float32") /* ty=Tensor[(280), float32] */;
  %198 = reshape(%196, newshape=[4, 15, 6]) /* ty=Tensor[(4, 15, 6), float64] */;
  %199 = reshape(%197, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %200 = @func_1251(%198, %199) /* ty=(Tensor[(384, 2), float64], Tensor[(280), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64], Tensor[(1, 7, 1), float32], Tensor[(4, 15, 6), uint8], Tensor[(2, 9, 6), float32]) */;
  %201 = cos(%195) /* ty=Tensor[(3, 16, 16), float64] */;
  %202 = %200.3;
  %203 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  (%201, %202, meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, %var_4433, %203)
}

def @func_10986() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %204 = @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %205 = @func_5389() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %206 = @func_7450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %207 = %204.0;
  %208 = %205.0;
  %209 = %206.1;
  %210 = @func_8539() /* ty=Tensor[(2, 9, 6), float32] */;
  (%207, %208, %209, %210)
}

def @func_7987() -> (Tensor[(2, 9, 6), float32],) {
  %211 = @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %212 = %211.0;
  (%212,)
}

def @func_2640(%var_2638: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %213 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %214 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %215 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %216 = cast(%var_2638, dtype="float32") /* ty=Tensor[(336), float32] */;
  %217 = reshape(%216, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %218 = @func_1494(%217) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %219 = %213.0;
  %220 = %214.0;
  %221 = %215.2;
  %222 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %223 = %218.1;
  (%219, %220, %221, %222, %223, %var_2638)
}

def @func_5599() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) {
  %224 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %225 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %226 = cast(meta[relay.Constant][15] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %227 = reshape(%224, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
  %228 = reshape(%225, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
  %229 = reshape(%226, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %230 = @func_2916(%227, %228, %229) /* ty=(Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) */;
  %231 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  %232 = %230.0;
  (%231, %232, meta[relay.Constant][14] /* ty=Tensor[(48), uint64] */, meta[relay.Constant][15] /* ty=Tensor[(336, 1), float32] */)
}

def @func_704() -> Tensor[(2, 9, 6), float32] {
  @func_612() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_3885() -> Tensor[(3, 16, 16), float64] {
  %233 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %233.1
}

def @func_6400(%var_6387: Tensor[(144), float64], %var_6397: Tensor[(168), float64], %var_6398: Tensor[(1680), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(144), float64], Tensor[(1, 14, 12), float64], Tensor[(168), float64], Tensor[(1680), float64]) {
  %234 = cast(%var_6387, dtype="float64") /* ty=Tensor[(144), float64] */;
  %235 = reshape(%234, newshape=[6, 4, 6]) /* ty=Tensor[(6, 4, 6), float64] */;
  %236 = @func_3841(%235) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %237 = cast(%var_6397, dtype="float64") /* ty=Tensor[(168), float64] */;
  %238 = cast(%var_6398, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %239 = reshape(%237, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
  %240 = reshape(%238, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), float64] */;
  %241 = @func_3675(%239, %240) /* ty=(Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %242 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
  %243 = %236.1;
  %244 = %241.0;
  (%242, %243, %var_6387, %244, %var_6397, %var_6398)
}

def @func_3982() -> (Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) {
  %245 = @func_2781() /* ty=Tensor[(3, 16, 16), float64] */;
  %246 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 16, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %251 = cast(%245, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
  %252 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(3, 16, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 16, 16), float64] */, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %255 = greater(%248, %249) /* ty=Tensor[(3, 16, 16), bool] */;
  %256 = atan(%250) /* ty=Tensor[(3, 16, 16), float64] */;
  %257 = bitwise_and(%253, %254) /* ty=Tensor[(3, 16, 16), int64] */;
  (%255, %256, %257)
}

def @func_1838() -> (Tensor[(2, 9, 6), float32],) {
  %258 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %259 = %258.0;
  (%259,)
}

def @func_4725(%var_4696: Tensor[(5, 56), float32]) -> (Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) {
  %260 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
  %261 = cast(%var_4696, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
  %262 = reshape(%261, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %263 = @func_358(%262) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %264 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %265 = %260.1;
  %266 = %263.2;
  %267 = %264.0;
  (%265, %266, %var_4696, %267)
}

def @func_6939() -> (Tensor[(2, 9, 6), float32],) {
  %268 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  (%268,)
}

def @func_612() -> Tensor[(2, 9, 6), float32] {
  %269 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 6), float64] */;
  %270 = asinh(%269) /* ty=Tensor[(2, 9, 6), float64] */;
  %271 = cast(%270, dtype="float32") /* ty=Tensor[(2, 9, 6), float32] */;
  log2(%271) /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_5481() -> (Tensor[(2, 9, 6), float32],) {
  %272 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %273 = %272.0;
  (%273,)
}

def @func_8214() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %274 = @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %275 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %276 = %274.0;
  %277 = %275.0;
  (%276, %277)
}

def @func_11571() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  %278 = @func_7595() /* ty=(Tensor[(3, 16, 16), float64],) */;
  %279 = %278.0;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %281 = @func_9633() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %282 = acos(%280) /* ty=Tensor[(3, 16, 16), float64] */;
  %283 = %281.0;
  (%282, %283)
}

def @func_7179() -> Tensor[(2, 9, 6), float32] {
  %284 = @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %284.0
}

def @func_11592() -> Tensor[(15, 3, 6), float64] {
  %285 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %286 = %285.2;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
  acosh(%287) /* ty=Tensor[(15, 3, 6), float64] */
}

def @func_4667() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %288 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %289 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %290 = %288.0;
  %291 = %289.0;
  (%290, %291)
}

def @func_1073(%var_998: int8, %var_999: Tensor[(13, 14, 15), int8]) -> (Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) {
  %292 = cast(%var_998, dtype="int8") /* ty=int8 */;
  %293 = cast(%var_999, dtype="int8") /* ty=Tensor[(13, 14, 15), int8] */;
  %294 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %295 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %296 = cast(%var_999, dtype="uint16") /* ty=Tensor[(13, 14, 15), uint16] */;
  %297 = cast(%var_998, dtype="uint16") /* ty=uint16 */;
  %298 = left_shift(%296, %297) /* ty=Tensor[(13, 14, 15), uint16] */;
  %299 = cast(%298, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %300 = shape_of(%var_999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_999, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %303 = greater_equal(%301, %302) /* ty=Tensor[(13, 14, 15), bool] */;
  %304 = cast(%var_999, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%303, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %308 = logical_or(%306, %307) /* ty=Tensor[(13, 14, 15), bool] */;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %310 = multiply(%292, %293) /* ty=Tensor[(13, 14, 15), int8] */;
  %311 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %312 = %294.4;
  %313 = %295.4;
  %314 = cos(%309) /* ty=Tensor[(13, 14, 15), float32] */;
  (%310, %311, %312, %313, %314)
}

def @func_2731(%var_2724: Tensor[(9, 12, 12), int32]) -> Tensor[(9, 12, 12), int32] {
  %315 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 12, 1), int32] */, dtype="int32") /* ty=Tensor[(9, 12, 1), int32] */;
  %316 = cast(%var_2724, dtype="int32") /* ty=Tensor[(9, 12, 12), int32] */;
  bitwise_and(%315, %316) /* ty=Tensor[(9, 12, 12), int32] */
}

def @func_1447(%var_1441: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  %317 = cast(%var_1441, dtype="float64") /* ty=Tensor[(84), float64] */;
  %318 = reshape(%317, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %319 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %320 = @func_550(%318) /* ty=Tensor[(6, 2, 7), float64] */;
  (%319, %320, %var_1441)
}

def @func_4161() -> (Tensor[(15, 3, 6), float32],) {
  %321 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
  (%321,)
}

def @func_2051(%var_2043: Tensor[(2, 9, 6), float32]) -> Tensor[(2, 9, 6), bool] {
  %322 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %323 = %322.0;
  %324 = cast(%var_2043, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
  %325 = shape_of(%323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%323, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%326, %327) /* ty=Tensor[(2, 9, 6), bool] */
}

def @func_11235() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %328 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %329 = @func_2820() /* ty=Tensor[(2, 9, 6), float32] */;
  %330 = %328.0;
  (%329, %330)
}

def @func_4632() -> (Tensor[(2, 9, 6), float32],) {
  %331 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %332 = %331.0;
  (%332,)
}

def @func_2409() -> (Tensor[(2, 9, 6), float32],) {
  %333 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %334 = %333.0;
  (%334,)
}

def @func_3455() -> Tensor[(384), float32] {
  %335 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %335.2
}

def @func_2916(%var_2880: Tensor[(3, 8, 2), uint64], %var_2881: Tensor[(3, 8, 2), uint64], %var_2892: Tensor[(336), float32]) -> (Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) {
  %336 = cast(%var_2881, dtype="uint64") /* ty=Tensor[(3, 8, 2), uint64] */;
  %337 = shape_of(%var_2880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%var_2880, dtype="uint64") /* ty=Tensor[(3, 8, 2), uint64] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %340 = cast(%var_2892, dtype="float32") /* ty=Tensor[(336), float32] */;
  %341 = reshape(%340, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %342 = @func_2554(%341) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) */;
  %343 = right_shift(%338, %339) /* ty=Tensor[(3, 8, 2), uint64] */;
  %344 = %342.1;
  (%343, %344, %var_2892)
}

def @func_7332() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %345 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %346 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %347 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %348 = %345.0;
  %349 = %346.1;
  (%347, %348, %349)
}

def @func_2082(%var_2080: Tensor[(8, 42), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) {
  %350 = cast(%var_2080, dtype="float32") /* ty=Tensor[(8, 42), float32] */;
  %351 = reshape(%350, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %352 = @func_1494(%351) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %353 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  %354 = %352.0;
  (%353, %354, %var_2080)
}

def @func_8674() -> (Tensor[(2, 9, 6), float32],) {
  %355 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  (%355,)
}

def @func_10329(%var_10301: Tensor[(13, 7, 8), float32], %var_10320: Tensor[(1800), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) {
  %356 = cast(%var_10301, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %357 = rsqrt(%356) /* ty=Tensor[(13, 7, 8), float32] */;
  %358 = cast(%357, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
  %359 = shape_of(%var_10301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_10301, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %362 = greater_equal(%360, %361) /* ty=Tensor[(13, 7, 8), bool] */;
  %363 = cast(%362, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %364 = cast(%var_10320, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %365 = cast(%var_10320, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %366 = reshape(%364, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %367 = reshape(%365, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %368 = @func_3366(%366, %367) /* ty=(Tensor[(12, 10, 15), float32],) */;
  %369 = erf(%363) /* ty=Tensor[(13, 7, 8), float32] */;
  %370 = %368.0;
  (%369, %370, %var_10320)
}

def @func_1579() -> Tensor[(2, 9, 6), float32] {
  @func_612() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_8258(%var_8244: Tensor[(84), float64], %var_8246: Tensor[(336, 16), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(144), float64], Tensor[(336, 768), bool], Tensor[(84), float64], Tensor[(84), float64], Tensor[(336, 16), float32]) {
  %371 = cast(meta[relay.Constant][19] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %372 = cast(meta[relay.Constant][20] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %373 = reshape(%371, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %374 = reshape(%372, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %375 = @func_6243(%373, %374) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 168), int32], Tensor[(768), float64], Tensor[(2, 72), float64]) */;
  %376 = @func_7229() /* ty=(Tensor[(768), float64],) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="bool") /* ty=Tensor[(768), bool] */;
  %379 = cast(meta[relay.Constant][19] /* ty=Tensor[(336, 1), float32] */, dtype="bool") /* ty=Tensor[(336, 1), bool] */;
  %380 = cast(%var_8244, dtype="float64") /* ty=Tensor[(84), float64] */;
  %381 = reshape(%380, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %382 = @func_6782(%381) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) */;
  %383 = cast(meta[relay.Constant][19] /* ty=Tensor[(336, 1), float32] */, dtype="bool") /* ty=Tensor[(336, 1), bool] */;
  %384 = cast(%var_8246, dtype="bool") /* ty=Tensor[(336, 16), bool] */;
  %385 = logical_or(%383, %384) /* ty=Tensor[(336, 16), bool] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(336, 16), float32] */;
  %387 = %375.0;
  %388 = logical_or(%378, %379) /* ty=Tensor[(336, 768), bool] */;
  %389 = %382.2;
  %390 = log10(%386) /* ty=Tensor[(336, 16), float32] */;
  (%387, meta[relay.Constant][20] /* ty=Tensor[(144), float64] */, %388, %389, %var_8244, %390)
}

def @func_9287() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %391 = @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %392 = %391.0;
  %393 = @func_7614() /* ty=Tensor[(2, 9, 6), float32] */;
  (%392, %393)
}

def @func_2554(%var_2541: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) {
  %394 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %395 = cast(%var_2541, dtype="float32") /* ty=Tensor[(336), float32] */;
  %396 = reshape(%395, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %397 = @func_2082(%396) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %398 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %399 = %394.2;
  %400 = %397.2;
  (%398, %399, %400, %var_2541)
}

def @func_13430() -> (Tensor[(2, 9, 6), float32],) {
  %401 = @func_8319() /* ty=(Tensor[(3, 16, 16), int64], Tensor[(2, 9, 6), float32]) */;
  %402 = %401.1;
  (%402,)
}

def @func_10151() -> (Tensor[(2, 9, 6), float32], Tensor[(13, 14, 15), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %403 = cast(meta[relay.Constant][21] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %404 = cast(meta[relay.Constant][21] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %405 = reshape(%403, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %406 = reshape(%404, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %407 = @func_4971(%405, %406) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) */;
  %408 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %409 = @func_7553() /* ty=Tensor[(2, 9, 6), float32] */;
  %410 = %407.3;
  %411 = %408.0;
  %412 = @func_1579() /* ty=Tensor[(2, 9, 6), float32] */;
  (%409, %410, meta[relay.Constant][21] /* ty=Tensor[(336), float32] */, %411, %412)
}

def @func_3636() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %413 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  %414 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
  (%413, %414)
}

def @func_4876(%var_4829: Tensor[(78), int64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(78), int64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float32]) {
  %415 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %416 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %417 = cast(%var_4829, dtype="int64") /* ty=Tensor[(78), int64] */;
  %418 = reshape(%417, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), int64] */;
  %419 = @func_849(%418) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */;
  %420 = %419.2;
  %421 = cast(%420, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
  %422 = %415.0;
  %423 = %416.0;
  %424 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %425 = log10(%421) /* ty=Tensor[(13, 2, 3), float32] */;
  (%422, %423, %var_4829, %424, %425)
}

def @func_10701(%var_10694: Tensor[(507), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(507), float32], Tensor[(507), uint64]) {
  %426 = @func_6421() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %427 = cast(%var_10694, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %428 = reshape(%427, newshape=[507]) /* ty=Tensor[(507), uint64] */;
  %429 = @func_8082(%428) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) */;
  %430 = %426.1;
  %431 = @func_4188() /* ty=Tensor[(2, 9, 6), float32] */;
  %432 = %429.3;
  (%430, %431, %432, %var_10694)
}

def @func_12182() -> (Tensor[(2, 9, 6), float32],) {
  %433 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %434 = %433.0;
  (%434,)
}

def @func_11923() -> Tensor[(2, 9, 6), float32] {
  %435 = @func_10096() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %435.1
}

def @func_13107(%var_13080: Tensor[(1296), int32], %var_13081: int8) -> (Tensor[(2, 9, 6), float32], int8, Tensor[(2730), int8], Tensor[(2, 648), uint16], Tensor[(280), float32]) {
  %436 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %437 = cast(%var_13080, dtype="int32") /* ty=Tensor[(1296), int32] */;
  %438 = cast(%var_13081, dtype="int8") /* ty=int8 */;
  %439 = cast(meta[relay.Constant][22] /* ty=Tensor[(2730), int8] */, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %440 = reshape(%437, newshape=[2, 648]) /* ty=Tensor[(2, 648), int32] */;
  %441 = reshape(%438, newshape=[]) /* ty=int8 */;
  %442 = reshape(%439, newshape=[2730]) /* ty=Tensor[(2730), int8] */;
  %443 = @func_5183(%440, %441, %442) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], int8, Tensor[(2730), int8], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 648), float32]) */;
  %444 = %443.8;
  %445 = cast(%var_13080, dtype="uint16") /* ty=Tensor[(1296), uint16] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(2), int32] */;
  %447 = cast(%444, dtype="uint16") /* ty=Tensor[(2, 648), uint16] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %449 = @func_6364() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */;
  %450 = %436.0;
  %451 = bitwise_xor(%447, %448) /* ty=Tensor[(2, 648), uint16] */;
  %452 = %449.1;
  (%450, %var_13081, meta[relay.Constant][22] /* ty=Tensor[(2730), int8] */, %451, %452)
}

def @func_5389() -> (Tensor[(2, 9, 6), float32],) {
  %453 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %454 = %453.0;
  (%454,)
}

def @func_9696() -> (Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32]) {
  %455 = @func_9322() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %456 = %455.0;
  %457 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
  %458 = @func_1579() /* ty=Tensor[(2, 9, 6), float32] */;
  (%456, %457, %458)
}

def @func_2225(%var_2204: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  %459 = cast(%var_2204, dtype="float32") /* ty=Tensor[(336), float32] */;
  %460 = reshape(%459, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %461 = @func_2082(%460) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %462 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %463 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %464 = %461.2;
  %465 = %462.0;
  (%463, %464, %var_2204, %465)
}

def @func_5529() -> (Tensor[(384), float32], Tensor[(2, 9, 6), float32]) {
  %466 = @func_5508() /* ty=(Tensor[(384), float32],) */;
  %467 = %466.0;
  %468 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  (%467, %468)
}

def @func_7941(%var_7882: Tensor[(1, 2, 12), float64], %var_7917: Tensor[(1, 8), float32], %var_7938: Tensor[(13, 13), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(4, 1, 2), float32], Tensor[(1, 8), float32], Tensor[(2, 9, 6), float32], Tensor[(?, 2, 12), bool], Tensor[(13, 3, 13), uint64], Tensor[(13, 13), uint64], Tensor[(507), uint64]) {
  %469 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %470 = cast(%var_7917, dtype="float32") /* ty=Tensor[(1, 8), float32] */;
  %471 = reshape(%470, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), float32] */;
  %472 = @func_7119(%471) /* ty=(Tensor[(4, 1, 2), float32],) */;
  %473 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %474 = cast(%var_7882, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  %475 = sqrt(%474) /* ty=Tensor[(1, 2, 12), float64] */;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  %477 = asin(%476) /* ty=Tensor[(1, 2, 12), float64] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(1, 2, 12), bool] */;
  %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%477, dtype="bool") /* ty=Tensor[(1, 2, 12), bool] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %482 = equal(%480, %481) /* ty=Tensor[(?, 2, 12), bool] */;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(?, 2, 12), float64] */;
  %484 = sigmoid(%483) /* ty=Tensor[(?, 2, 12), float64] */;
  %485 = cast(%var_7882, dtype="bool") /* ty=Tensor[(1, 2, 12), bool] */;
  %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%484, dtype="bool") /* ty=Tensor[(?, 2, 12), bool] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %489 = cast(%var_7938, dtype="uint64") /* ty=Tensor[(13, 13), uint64] */;
  %490 = cast(meta[relay.Constant][23] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %491 = reshape(%489, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %492 = reshape(%490, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), uint64] */;
  %493 = @func_7697(%491, %492) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */;
  %494 = @func_5649() /* ty=Tensor[(2, 9, 6), float32] */;
  %495 = %469.0;
  %496 = %472.0;
  %497 = %473.0;
  %498 = less(%487, %488) /* ty=Tensor[(?, 2, 12), bool] */;
  %499 = %493.0;
  (%494, %495, %496, %var_7917, %497, %498, %499, %var_7938, meta[relay.Constant][23] /* ty=Tensor[(507), uint64] */)
}

def @func_8800() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %500 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %501 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %502 = %500.0;
  %503 = %501.1;
  (%502, %503)
}

def @func_10486() -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(168, 2), float32]) {
  %504 = @func_9696() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %505 = cast(meta[relay.Constant][24] /* ty=Tensor[(168, 2), float32] */, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %506 = reshape(%505, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %507 = @func_1494(%506) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %508 = %504.1;
  %509 = %507.0;
  (%508, %509, meta[relay.Constant][24] /* ty=Tensor[(168, 2), float32] */)
}

def @func_6421() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %510 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %511 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  %512 = %510.0;
  %513 = @func_4315() /* ty=Tensor[(2, 9, 6), float32] */;
  (%511, %512, %513)
}

def @func_11680(%var_11660: Tensor[(2, 16, 2), float32], %var_11661: Tensor[(2, 16, 2), float32]) -> (Tensor[(2, 16, 2), float32], Tensor[(384), float32]) {
  %514 = cast(%var_11661, dtype="float32") /* ty=Tensor[(2, 16, 2), float32] */;
  %515 = shape_of(%var_11660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_11660, dtype="float32") /* ty=Tensor[(2, 16, 2), float32] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %518 = floor_mod(%516, %517) /* ty=Tensor[(2, 16, 2), float32] */;
  %519 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%518, %519)
}

def @func_1715() -> (Tensor[(2, 9, 6), float32],) {
  %520 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %521 = %520.0;
  (%521,)
}

def @func_425(%var_420: Tensor[(7, 4, 12), float32]) -> Tensor[(7, 4, 12), float32] {
  %522 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %523 = shape_of(%var_420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%var_420, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%524, %525) /* ty=Tensor[(7, 4, 12), float32] */
}

def @func_8709() -> (Tensor[(384), float32], Tensor[(2, 9, 6), float32]) {
  %526 = @func_8124() /* ty=(Tensor[(384), float32],) */;
  %527 = @func_6513() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %528 = %526.0;
  %529 = %527.0;
  (%528, %529)
}

def @func_1948() -> Tensor[(2, 9, 6), float32] {
  @func_1673() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_9308() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %530 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %531 = @func_9010() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %532 = %530.0;
  %533 = %531.0;
  (%532, %533)
}

def @func_12932(%var_12927: Tensor[(22, 5), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(11, 10, 1), float64], Tensor[(22, 5), float64]) {
  %534 = @func_5508() /* ty=(Tensor[(384), float32],) */;
  %535 = cast(%var_12927, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
  %536 = reshape(%535, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float64] */;
  %537 = @func_8931(%536) /* ty=(Tensor[(11, 10, 1), float64],) */;
  %538 = @func_5649() /* ty=Tensor[(2, 9, 6), float32] */;
  %539 = %534.0;
  %540 = %537.0;
  (%538, %539, %540, %var_12927)
}

def @func_2374(%var_2319: Tensor[(384, 2), float64], %var_2322: Tensor[(28, 4), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64], Tensor[(28, 4), float32], Tensor[(2, 7, 8), float32], Tensor[(2, 9, 6), bool], Tensor[(10, 7, 4), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  %541 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %542 = cast(%var_2319, dtype="float64") /* ty=Tensor[(384, 2), float64] */;
  %543 = reshape(%542, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %544 = cast(%var_2322, dtype="float32") /* ty=Tensor[(28, 4), float32] */;
  %545 = reshape(%544, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
  %546 = @func_2309(%545) /* ty=(Tensor[(2, 7, 8), float32],) */;
  %547 = %546.0;
  %548 = cast(%547, dtype="float32") /* ty=Tensor[(2, 7, 8), float32] */;
  %549 = %541.0;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(2, 9, 6), float32] */;
  %551 = reshape(%550, newshape=[2, 9, 6]) /* ty=Tensor[(2, 9, 6), float32] */;
  %552 = cast(meta[relay.Constant][26] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %553 = reshape(%552, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %554 = @func_358(%553) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %555 = cast(meta[relay.Constant][27] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %556 = reshape(%555, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %557 = @func_2082(%556) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %558 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %559 = @func_3(%543) /* ty=Tensor[(3, 16, 16), float64] */;
  %560 = cos(%548) /* ty=Tensor[(2, 7, 8), float32] */;
  %561 = @func_2051(%551) /* ty=Tensor[(2, 9, 6), bool] */;
  %562 = %554.0;
  %563 = %557.0;
  %564 = %558.0;
  (%549, %559, %var_2319, %var_2322, %560, %561, %562, meta[relay.Constant][26] /* ty=Tensor[(280), float32] */, %563, meta[relay.Constant][27] /* ty=Tensor[(336), float32] */, %564)
}

def @func_4787() -> Tensor[(2, 9, 6), float32] {
  %565 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %565.0
}

def @func_3675(%var_3646: Tensor[(1, 14, 12), float64], %var_3655: Tensor[(10, 14, 12), float64]) -> (Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %566 = cast(%var_3646, dtype="float64") /* ty=Tensor[(1, 14, 12), float64] */;
  %567 = cast(%var_3646, dtype="bool") /* ty=Tensor[(1, 14, 12), bool] */;
  %568 = cast(%var_3655, dtype="bool") /* ty=Tensor[(10, 14, 12), bool] */;
  %569 = atanh(%566) /* ty=Tensor[(1, 14, 12), float64] */;
  %570 = less_equal(%567, %568) /* ty=Tensor[(10, 14, 12), bool] */;
  %571 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %572 = @func_2820() /* ty=Tensor[(2, 9, 6), float32] */;
  (%569, %570, %571, %572)
}

def @func_9804(%var_9799: Tensor[(768), float64]) -> Tensor[(768), bool] {
  %573 = @func_9074() /* ty=Tensor[(768), float64] */;
  %574 = cast(%var_9799, dtype="bool") /* ty=Tensor[(768), bool] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(1), int32] */;
  %576 = cast(%573, dtype="bool") /* ty=Tensor[(768), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_and(%576, %577) /* ty=Tensor[(768), bool] */
}

def @func_3026(%var_2967: Tensor[(11, 4, 12), int64], %var_2968: Tensor[(11, 4, 12), int64], %var_3006: Tensor[(11, 4, 12), int64]) -> (Tensor[(11, 4, 12), int64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(11, 4, 12), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %578 = cast(%var_2968, dtype="int64") /* ty=Tensor[(11, 4, 12), int64] */;
  %579 = shape_of(%var_2967, dtype="int32") /* ty=Tensor[(3), int32] */;
  %580 = cast(%var_2967, dtype="int64") /* ty=Tensor[(11, 4, 12), int64] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %582 = cast(meta[relay.Constant][28] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %583 = reshape(%582, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %584 = @func_2082(%583) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %585 = cast(%var_3006, dtype="uint32") /* ty=Tensor[(11, 4, 12), uint32] */;
  %586 = shape_of(%var_2968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_2968, dtype="uint32") /* ty=Tensor[(11, 4, 12), uint32] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %589 = subtract(%587, %588) /* ty=Tensor[(11, 4, 12), uint32] */;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(11, 4, 12), float64] */;
  %591 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %592 = bitwise_and(%580, %581) /* ty=Tensor[(11, 4, 12), int64] */;
  %593 = @func_1948() /* ty=Tensor[(2, 9, 6), float32] */;
  %594 = %584.1;
  %595 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %596 = erf(%590) /* ty=Tensor[(11, 4, 12), float64] */;
  %597 = %591.0;
  %598 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  (%592, %593, %594, meta[relay.Constant][28] /* ty=Tensor[(336), float32] */, %595, %596, %597, %598)
}

def @func_2953() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %599 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %600 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  (%599, %600)
}

def @func_3366(%var_3356: Tensor[(12, 10, 15), float32], %var_3357: Tensor[(12, 10, 15), float32]) -> (Tensor[(12, 10, 15), float32],) {
  %601 = cast(%var_3357, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %602 = shape_of(%var_3356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%var_3356, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %605 = floor_mod(%603, %604) /* ty=Tensor[(12, 10, 15), float32] */;
  (%605,)
}

def @func_3225() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) {
  %606 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %607 = %606.0;
  %608 = cast(%607, dtype="float32") /* ty=Tensor[(2, 9, 6), float32] */;
  %609 = reshape(%608, newshape=[2, 9, 6]) /* ty=Tensor[(2, 9, 6), float32] */;
  %610 = @func_2051(%609) /* ty=Tensor[(2, 9, 6), bool] */;
  (%607, %610)
}

def @func_3907(%var_3902: Tensor[(336), float32]) -> (Tensor[(768), float64], Tensor[(6, 4, 6), float64], Tensor[(144), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %611 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
  %612 = cast(meta[relay.Constant][29] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %613 = reshape(%612, newshape=[6, 4, 6]) /* ty=Tensor[(6, 4, 6), float64] */;
  %614 = @func_3841(%613) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %615 = cast(%var_3902, dtype="float32") /* ty=Tensor[(336), float32] */;
  %616 = reshape(%615, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %617 = %611.2;
  %618 = %614.0;
  %619 = @func_425(%616) /* ty=Tensor[(7, 4, 12), float32] */;
  (%617, %618, meta[relay.Constant][29] /* ty=Tensor[(144), float64] */, %619, %var_3902)
}

def @func_1132() -> (Tensor[(2, 9, 6), float32],) {
  %620 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  (%620,)
}

def @func_1607() -> (Tensor[(2, 9, 6), float32],) {
  %621 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  (%621,)
}

def @func_4741() -> (Tensor[(2, 9, 6), float32],) {
  %622 = @func_4041() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_3932() -> (Tensor[(2, 9, 6), float32],) {
  %624 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %625 = %624.0;
  (%625,)
}

def @func_8124() -> (Tensor[(384), float32],) {
  %626 = @func_5508() /* ty=(Tensor[(384), float32],) */;
  %627 = %626.0;
  (%627,)
}

def @func_12331() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  %628 = @func_6836() /* ty=(Tensor[(384), float32],) */;
  %629 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %630 = %628.0;
  (%629, %630)
}

def @func_9835(%var_9815: uint32) -> (Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  %631 = cast(%var_9815, dtype="bool") /* ty=bool */;
  %632 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 1, 14), uint32] */, dtype="bool") /* ty=Tensor[(1, 1, 14), bool] */;
  %633 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %634 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %635 = greater_equal(%631, %632) /* ty=Tensor[(1, 1, 14), bool] */;
  %636 = %633.1;
  %637 = %634.0;
  (%635, %636, %637)
}

def @func_8844() -> (Tensor[(2, 9, 6), float32],) {
  %638 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  (%638,)
}

def @func_7697(%var_7655: Tensor[(13, 1, 13), uint64], %var_7656: Tensor[(13, 3, 13), uint64]) -> (Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) {
  %639 = cast(%var_7655, dtype="uint64") /* ty=Tensor[(13, 1, 13), uint64] */;
  %640 = cast(%var_7656, dtype="uint64") /* ty=Tensor[(13, 3, 13), uint64] */;
  %641 = @func_4494() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %642 = cast(%var_7655, dtype="int8") /* ty=Tensor[(13, 1, 13), int8] */;
  %643 = cast(%var_7656, dtype="int8") /* ty=Tensor[(13, 3, 13), int8] */;
  %644 = maximum(%639, %640) /* ty=Tensor[(13, 3, 13), uint64] */;
  %645 = %641.0;
  %646 = add(%642, %643) /* ty=Tensor[(13, 3, 13), int8] */;
  %647 = @func_5444() /* ty=Tensor[(3, 16, 16), float64] */;
  (%644, %645, %646, %647)
}

def @func_2499() -> (Tensor[(2, 9, 6), float32],) {
  %648 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %649 = %648.0;
  (%649,)
}

def @func_11819() -> (Tensor[(2, 9, 6), float32],) {
  %650 = @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %651 = %650.0;
  (%651,)
}

def @func_958() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) {
  %652 = cast(meta[relay.Constant][31] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %653 = reshape(%652, newshape=[2, 12, 16]) /* ty=Tensor[(2, 12, 16), float32] */;
  %654 = @func_497(%653) /* ty=(Tensor[(2, 12, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(280), float32], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64]) */;
  %655 = cast(meta[relay.Constant][32] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %656 = reshape(%655, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %657 = @func_358(%656) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %658 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %659 = %654.1;
  %660 = %657.3;
  (%658, %659, meta[relay.Constant][31] /* ty=Tensor[(384), float32] */, %660, meta[relay.Constant][32] /* ty=Tensor[(280), float32] */)
}

def @func_6782(%var_6757: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) {
  %661 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %662 = cast(%var_6757, dtype="float64") /* ty=Tensor[(84), float64] */;
  %663 = reshape(%662, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %664 = @func_1447(%663) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %665 = %661.0;
  %666 = %664.2;
  (%665, %666, %var_6757)
}

def @func_5203() -> (Tensor[(2, 9, 6), float32],) {
  %667 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %668 = %667.0;
  (%668,)
}

def @func_12956() -> (Tensor[(2, 9, 6), float32],) {
  %669 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %670 = %669.0;
  (%670,)
}

def @func_8539() -> Tensor[(2, 9, 6), float32] {
  %671 = @func_6116() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %671.1
}

def @func_10867() -> Tensor[(2, 9, 6), float32] {
  @func_9142() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12063() -> (Tensor[(15, 3, 6), float32],) {
  %672 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %673 = %672.1;
  %674 = cast(%673, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  %675 = asinh(%674) /* ty=Tensor[(15, 3, 6), float32] */;
  (%675,)
}

def @func_4081(%var_4069: Tensor[(6, 5, 5), float64]) -> (Tensor[(6, 5, 5), float64],) {
  %676 = cast(%var_4069, dtype="float64") /* ty=Tensor[(6, 5, 5), float64] */;
  %677 = log10(%676) /* ty=Tensor[(6, 5, 5), float64] */;
  (%677,)
}

def @func_9487() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %678 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %679 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %680 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %681 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %682 = @func_8627() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(264, 2), int64]) */;
  %683 = %678.0;
  %684 = %679.0;
  %685 = %680.0;
  %686 = %681.0;
  %687 = %682.1;
  (%683, %684, %685, %686, %687)
}

def @func_13175() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %688 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %689 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %690 = @func_11313() /* ty=Tensor[(2, 9, 6), float32] */;
  %691 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %692 = @func_10102() /* ty=Tensor[(2, 9, 6), float32] */;
  %693 = %688.1;
  (%689, %690, %691, %692, %693)
}

def @func_6143(%var_6129: Tensor[(10, 9, 8), uint8], %var_6135: Tensor[(1848), float32]) -> (Tensor[(10, 9, 8), uint8], Tensor[(1848), float32], Tensor[(1848), float64]) {
  %694 = cast(%var_6129, dtype="uint8") /* ty=Tensor[(10, 9, 8), uint8] */;
  %695 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(10, 9, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 9, 8), uint8] */, dtype="uint8") /* ty=Tensor[(10, 9, 8), uint8] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %698 = cast(%var_6135, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %699 = reshape(%698, newshape=[1848]) /* ty=Tensor[(1848), float32] */;
  %700 = @func_6006(%699) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */;
  %701 = %700.4;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %703 = bitwise_xor(%696, %697) /* ty=Tensor[(10, 9, 8), uint8] */;
  %704 = sigmoid(%702) /* ty=Tensor[(1848), float64] */;
  (%703, %var_6135, %704)
}

def @func_6116() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %705 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %706 = @func_1992() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %707 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %708 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %709 = %705.0;
  %710 = %706.0;
  %711 = %707.0;
  %712 = %708.0;
  (%709, %710, %711, %712)
}

def @func_6364() -> (Tensor[(3, 16, 16), float64], Tensor[(280), float32]) {
  %713 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %714 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %715 = %713.1;
  %716 = %714.4;
  (%715, %716)
}

def @func_3500() -> Tensor[(2, 9, 6), float32] {
  %717 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %717.0
}

def @func_9715() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %718 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
  %719 = @func_1948() /* ty=Tensor[(2, 9, 6), float32] */;
  (%718, %719)
}

def @func_6513() -> (Tensor[(2, 9, 6), float32],) {
  %720 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  (%720,)
}

def @func_497(%var_451: Tensor[(2, 12, 16), float32]) -> (Tensor[(2, 12, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(280), float32], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64]) {
  %721 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 12, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %722 = shape_of(%var_451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%var_451, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %725 = subtract(%723, %724) /* ty=Tensor[(2, 12, 16), float32] */;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
  %727 = cast(meta[relay.Constant][35] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %728 = reshape(%727, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %729 = cast(meta[relay.Constant][36] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %730 = reshape(%729, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %731 = @func_358(%730) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %732 = @func_3(%728) /* ty=Tensor[(3, 16, 16), float64] */;
  %733 = cast(%732, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %734 = reshape(%733, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %735 = %731.2;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %737 = reshape(%736, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %738 = cast(meta[relay.Constant][35] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %739 = reshape(%738, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %740 = exp(%726) /* ty=Tensor[(2, 12, 16), float32] */;
  %741 = @func_3(%734) /* ty=Tensor[(3, 16, 16), float64] */;
  %742 = @func_3(%737) /* ty=Tensor[(3, 16, 16), float64] */;
  %743 = @func_3(%739) /* ty=Tensor[(3, 16, 16), float64] */;
  (%740, %732, meta[relay.Constant][35] /* ty=Tensor[(768), float64] */, %735, meta[relay.Constant][36] /* ty=Tensor[(280), float32] */, %741, %742, %743)
}

def @func_5649() -> Tensor[(2, 9, 6), float32] {
  %744 = @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %744.0
}

def @func_7553() -> Tensor[(2, 9, 6), float32] {
  %745 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %745.0
}

def @func_6047() -> Tensor[(2, 9, 6), float32] {
  %746 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %746.0
}

def @func_8596() -> (Tensor[(2, 9, 6), bool],) {
  %747 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
  %748 = %747.1;
  (%748,)
}

def @func_9142() -> Tensor[(2, 9, 6), float32] {
  @func_6185() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_10789() -> (Tensor[(4, 11, 14), bool],) {
  %749 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(4, 11, 14), float64] */;
  %750 = sinh(%749) /* ty=Tensor[(4, 11, 14), float64] */;
  %751 = cast(meta[relay.Constant][37] /* ty=Tensor[(4, 11, 14), float64] */, dtype="bool") /* ty=Tensor[(4, 11, 14), bool] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="bool") /* ty=Tensor[(4, 11, 14), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = less(%753, %754) /* ty=Tensor[(4, 11, 14), bool] */;
  (%755,)
}

def @func_8149() -> (Tensor[(15, 3, 6), float32],) {
  %756 = @func_4161() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %757 = %756.0;
  (%757,)
}

def @func_9095() -> (Tensor[(2, 9, 6), float32],) {
  %758 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %759 = %758.0;
  (%759,)
}

def @func_8573() -> Tensor[(2, 9, 6), float32] {
  @func_4188() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_1811(%var_1761: Tensor[(7, 8, 8), float32]) -> (Tensor[(6, 2, 7), float64], Tensor[(7, 8, 8), float64], Tensor[(84, 1), float32]) {
  %760 = cast(meta[relay.Constant][38] /* ty=Tensor[(84, 1), float64] */, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %761 = reshape(%760, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %762 = @func_1447(%761) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %763 = cast(%var_1761, dtype="float32") /* ty=Tensor[(7, 8, 8), float32] */;
  %764 = exp(%763) /* ty=Tensor[(7, 8, 8), float32] */;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(7, 8, 8), float64] */;
  %766 = cast(meta[relay.Constant][38] /* ty=Tensor[(84, 1), float64] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %767 = %762.1;
  %768 = erf(%765) /* ty=Tensor[(7, 8, 8), float64] */;
  %769 = log10(%766) /* ty=Tensor[(84, 1), float32] */;
  (%767, %768, %769)
}

def @func_5811() -> (Tensor[(2, 9, 6), float32],) {
  %770 = @func_5039() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */;
  %771 = %770.0;
  (%771,)
}

def @func_5183(%var_5098: Tensor[(2, 648), int32], %var_5121: int8, %var_5122: Tensor[(2730), int8]) -> (Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], int8, Tensor[(2730), int8], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 648), float32]) {
  %772 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %773 = cast(%var_5098, dtype="int32") /* ty=Tensor[(2, 648), int32] */;
  %774 = reshape(%773, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), int32] */;
  %775 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %776 = cast(%var_5121, dtype="int8") /* ty=int8 */;
  %777 = cast(%var_5122, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %778 = reshape(%776, newshape=[]) /* ty=int8 */;
  %779 = reshape(%777, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %780 = @func_1073(%778, %779) /* ty=(Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) */;
  %781 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %782 = cast(%var_5098, dtype="float32") /* ty=Tensor[(2, 648), float32] */;
  %783 = %772.0;
  %784 = @func_2731(%774) /* ty=Tensor[(9, 12, 12), int32] */;
  %785 = %775.0;
  %786 = %780.2;
  %787 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %788 = %781.0;
  %789 = erf(%782) /* ty=Tensor[(2, 648), float32] */;
  (%783, %784, %785, %786, %var_5121, %var_5122, %787, %788, %789)
}

def @func_8091() -> (Tensor[(280), float32],) {
  %790 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %791 = %790.4;
  (%791,)
}

def @func_9934() -> (Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], uint32) {
  %792 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %793 = @func_7229() /* ty=(Tensor[(768), float64],) */;
  %794 = %793.0;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(768), float32] */;
  %796 = acosh(%795) /* ty=Tensor[(768), float32] */;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(768), float64] */;
  %798 = cast(meta[relay.Constant][39] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %799 = reshape(%798, newshape=[]) /* ty=uint32 */;
  %800 = @func_9835(%799) /* ty=(Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
  %801 = %792.1;
  %802 = tan(%797) /* ty=Tensor[(768), float64] */;
  %803 = %800.1;
  (%801, %802, %803, meta[relay.Constant][39] /* ty=uint32 */)
}

def @func_1570(%var_1560: Tensor[(12, 14, 11), float32]) -> (Tensor[(12, 14, 11), float32],) {
  %804 = cast(%var_1560, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %805 = acosh(%804) /* ty=Tensor[(12, 14, 11), float32] */;
  (%805,)
}

def @func_6677() -> (Tensor[(384), float32], Tensor[(3, 16, 16), float64]) {
  %806 = @func_5039() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */;
  %807 = %806.1;
  %808 = cast(%807, dtype="float32") /* ty=Tensor[(384), float32] */;
  %809 = sinh(%808) /* ty=Tensor[(384), float32] */;
  %810 = @func_3885() /* ty=Tensor[(3, 16, 16), float64] */;
  (%809, %810)
}

def @func_2242() -> Tensor[(2, 9, 6), float32] {
  @func_704() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_7119(%var_7113: Tensor[(4, 1, 2), float32]) -> (Tensor[(4, 1, 2), float32],) {
  %811 = cast(%var_7113, dtype="float32") /* ty=Tensor[(4, 1, 2), float32] */;
  %812 = acos(%811) /* ty=Tensor[(4, 1, 2), float32] */;
  (%812,)
}

def @func_3841(%var_3802: Tensor[(6, 4, 6), float64]) -> (Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %813 = cast(%var_3802, dtype="float64") /* ty=Tensor[(6, 4, 6), float64] */;
  %814 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(6, 4, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 4, 6), float64] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %817 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %818 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 84), float64] */, dtype="float64") /* ty=Tensor[(1, 84), float64] */;
  %819 = reshape(%818, newshape=[3, 28]) /* ty=Tensor[(3, 28), float64] */;
  %820 = @func_3080(%819) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(3, 28), float64], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64]) */;
  %821 = power(%815, %816) /* ty=Tensor[(6, 4, 6), float64] */;
  %822 = %817.2;
  %823 = %820.0;
  %824 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  %825 = @func_2820() /* ty=Tensor[(2, 9, 6), float32] */;
  (%821, %822, %823, meta[relay.Constant][41] /* ty=Tensor[(1, 84), float64] */, %824, %825)
}

def @func_2309(%var_2306: Tensor[(2, 7, 8), float32]) -> (Tensor[(2, 7, 8), float32],) {
  %826 = cast(%var_2306, dtype="float32") /* ty=Tensor[(2, 7, 8), float32] */;
  %827 = sin(%826) /* ty=Tensor[(2, 7, 8), float32] */;
  (%827,)
}

def @func_4188() -> Tensor[(2, 9, 6), float32] {
  @func_704() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12571() -> Tensor[(2, 9, 6), float32] {
  @func_10867() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_11313() -> Tensor[(2, 9, 6), float32] {
  @func_2820() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12525() -> (Tensor[(15, 3, 6), float32],) {
  %828 = @func_9229() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %829 = %828.0;
  (%829,)
}

def @func_5039() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  %830 = @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %831 = %830.0;
  %832 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%831, %832)
}

def @func_2781() -> Tensor[(3, 16, 16), float64] {
  %833 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %833.1
}

def @func_12895() -> (Tensor[(15, 3, 6), float32], Tensor[(15, 3, 6), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32]) {
  %834 = @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %835 = cast(meta[relay.Constant][42] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %836 = reshape(%835, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
  %837 = @func_2309(%836) /* ty=(Tensor[(2, 7, 8), float32],) */;
  %838 = %834.0;
  %839 = @func_11592() /* ty=Tensor[(15, 3, 6), float64] */;
  %840 = %837.0;
  (%838, %839, %840, meta[relay.Constant][42] /* ty=Tensor[(112), float32] */)
}

def @func_849(%var_804: Tensor[(13, 2, 3), int64]) -> (Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) {
  %841 = cast(meta[relay.Constant][43] /* ty=Tensor[(13, 2, 3), int64] */, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %842 = shape_of(%var_804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%var_804, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %845 = cast(meta[relay.Constant][44] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %846 = reshape(%845, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %847 = @func_358(%846) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %848 = %847.1;
  %849 = cast(%848, dtype="int64") /* ty=Tensor[(1, 7, 1), int64] */;
  %850 = cast(meta[relay.Constant][44] /* ty=Tensor[(280), float32] */, dtype="int64") /* ty=Tensor[(280), int64] */;
  %851 = cast(%var_804, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  %852 = not_equal(%843, %844) /* ty=Tensor[(13, 2, 3), bool] */;
  %853 = maximum(%849, %850) /* ty=Tensor[(1, 7, 280), int64] */;
  %854 = cos(%851) /* ty=Tensor[(13, 2, 3), float64] */;
  (%852, %853, %854)
}

def @func_4494() -> (Tensor[(2, 9, 6), float32],) {
  %855 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %856 = %855.0;
  (%856,)
}

def @func_8082(%var_8046: Tensor[(507), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) {
  %857 = cast(meta[relay.Constant][45] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
  %858 = cast(%var_8046, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %859 = reshape(%857, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %860 = reshape(%858, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), uint64] */;
  %861 = @func_7697(%859, %860) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */;
  %862 = cast(meta[relay.Constant][46] /* ty=Tensor[(507), uint64] */, dtype="float32") /* ty=Tensor[(507), float32] */;
  %863 = shape_of(%var_8046, dtype="int32") /* ty=Tensor[(1), int32] */;
  %864 = cast(%var_8046, dtype="float32") /* ty=Tensor[(507), float32] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?), float32] */;
  %866 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %867 = %861.1;
  %868 = floor_divide(%864, %865) /* ty=Tensor[(507), float32] */;
  (%866, %867, meta[relay.Constant][45] /* ty=Tensor[(169), uint64] */, %868)
}

def @func_9229() -> (Tensor[(15, 3, 6), float32],) {
  %869 = @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %870 = %869.0;
  (%870,)
}

def @func_12244(%var_12237: Tensor[(1, 3, 5), int16], %var_12238: Tensor[(11, 3, 5), int16]) -> (Tensor[(11, 3, 5), int16], Tensor[(1, 3, 5), float64]) {
  %871 = cast(%var_12237, dtype="int16") /* ty=Tensor[(1, 3, 5), int16] */;
  %872 = cast(%var_12238, dtype="int16") /* ty=Tensor[(11, 3, 5), int16] */;
  %873 = cast(%var_12237, dtype="float64") /* ty=Tensor[(1, 3, 5), float64] */;
  %874 = bitwise_xor(%871, %872) /* ty=Tensor[(11, 3, 5), int16] */;
  %875 = asin(%873) /* ty=Tensor[(1, 3, 5), float64] */;
  (%874, %875)
}

def @func_6243(%var_6233: Tensor[(2, 168), float32], %var_6239: Tensor[(2, 72), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 168), int32], Tensor[(768), float64], Tensor[(2, 72), float64]) {
  %876 = @func_6067() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) */;
  %877 = %876.2;
  %878 = cast(%var_6233, dtype="int32") /* ty=Tensor[(2, 168), int32] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(2), int32] */;
  %880 = cast(%877, dtype="int32") /* ty=Tensor[(2, 168), int32] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %882 = cast(%var_6239, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %883 = reshape(%882, newshape=[6, 4, 6]) /* ty=Tensor[(6, 4, 6), float64] */;
  %884 = @func_3841(%883) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %885 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  %886 = left_shift(%880, %881) /* ty=Tensor[(2, 168), int32] */;
  %887 = %884.1;
  (%885, %886, %887, %var_6239)
}

def @func_358(%var_344: Tensor[(10, 7, 4), float32]) -> (Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) {
  %888 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 1), float32] */;
  %889 = cast(%var_344, dtype="float32") /* ty=Tensor[(10, 7, 4), float32] */;
  %890 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 1), float32] */;
  %891 = cast(meta[relay.Constant][48] /* ty=Tensor[(384, 2), float64] */, dtype="float64") /* ty=Tensor[(384, 2), float64] */;
  %892 = reshape(%891, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %893 = floor_mod(%888, %889) /* ty=Tensor[(10, 7, 4), float32] */;
  %894 = atan(%890) /* ty=Tensor[(1, 7, 1), float32] */;
  %895 = @func_3(%892) /* ty=Tensor[(3, 16, 16), float64] */;
  (%893, %894, %895, meta[relay.Constant][48] /* ty=Tensor[(384, 2), float64] */)
}

def @func_10102() -> Tensor[(2, 9, 6), float32] {
  %896 = @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %896.0
}

def @func_4127(%var_4123: Tensor[(2, 168), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(2, 168), float32], Tensor[(3, 16, 16), float64]) {
  %897 = cast(%var_4123, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %898 = reshape(%897, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %899 = @func_2640(%898) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %900 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %901 = %899.4;
  %902 = @func_2781() /* ty=Tensor[(3, 16, 16), float64] */;
  (%900, %901, %var_4123, %902)
}

def @func_12472() -> (Tensor[(2, 9, 6), float32],) {
  %903 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %904 = %903.0;
  (%904,)
}

def @func_6868() -> (Tensor[(2, 9, 6), float32],) {
  %905 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %906 = %905.0;
  (%906,)
}

def @func_6586() -> Tensor[(2, 9, 6), float32] {
  %907 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
  %907.0
}

def @func_4315() -> Tensor[(2, 9, 6), float32] {
  %908 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %908.0
}

def @func_12126() -> Tensor[(2, 9, 6), float32] {
  %909 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %909.0
}

def @func_9891(%var_9879: Tensor[(768), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(384), float32]) {
  %910 = @func_8709() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
  %911 = @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %912 = cast(%var_9879, dtype="float64") /* ty=Tensor[(768), float64] */;
  %913 = reshape(%912, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %914 = @func_8124() /* ty=(Tensor[(384), float32],) */;
  %915 = %910.1;
  %916 = %911.1;
  %917 = @func_3(%913) /* ty=Tensor[(3, 16, 16), float64] */;
  %918 = %914.0;
  (%915, %916, %917, %var_9879, %918)
}

def @func_7962() -> Tensor[(2, 9, 6), float32] {
  @func_2242() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_3718() -> (Tensor[(2, 9, 6), float32],) {
  %919 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %920 = %919.0;
  (%920,)
}

def @func_5781(%var_5775: Tensor[(13, 9, 11), float32], %var_5776: Tensor[(13, 9, 11), float32]) -> Tensor[(13, 9, 11), float32] {
  %921 = cast(%var_5776, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %922 = shape_of(%var_5775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %923 = cast(%var_5775, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%923, %924) /* ty=Tensor[(13, 9, 11), float32] */
}

def @func_11494() -> Tensor[(2, 9, 6), float32] {
  %925 = @func_4741() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %925.0
}

def @func_7450() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %926 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %927 = %926.0;
  %928 = @func_6586() /* ty=Tensor[(2, 9, 6), float32] */;
  (%927, %928)
}

def @func_13141(%var_13125: Tensor[(2, 7, 12), float32], %var_13126: Tensor[(2, 7, 12), float32]) -> Tensor[(2, 7, 12), float32] {
  %929 = cast(%var_13126, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %930 = shape_of(%var_13125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_13125, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%931, %932) /* ty=Tensor[(2, 7, 12), float32] */
}

def @func_3512() -> Tensor[(2, 9, 6), float32] {
  %933 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
  %933.0
}

def @func_6450() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %934 = @func_3636() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %935 = %934.1;
  %936 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  (%935, %936)
}

def @func_3(%var_0: Tensor[(3, 16, 16), float64]) -> Tensor[(3, 16, 16), float64] {
  %937 = cast(%var_0, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  erf(%937) /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_4535() -> (Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %938 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %939 = %938.0;
  %940 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
  (%939, %940)
}

def @func_5508() -> (Tensor[(384), float32],) {
  %941 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%941,)
}

def @func_1992() -> (Tensor[(2, 9, 6), float32],) {
  %942 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %943 = %942.0;
  (%943,)
}

def @func_3080(%var_3044: Tensor[(3, 28), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(3, 28), float64], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64]) {
  %944 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %945 = cast(%var_3044, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
  %946 = reshape(%945, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %947 = cast(meta[relay.Constant][49] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %948 = reshape(%947, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %949 = cast(meta[relay.Constant][49] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %950 = reshape(%949, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %951 = %944.0;
  %952 = @func_550(%946) /* ty=Tensor[(6, 2, 7), float64] */;
  %953 = @func_3(%948) /* ty=Tensor[(3, 16, 16), float64] */;
  %954 = @func_3(%950) /* ty=Tensor[(3, 16, 16), float64] */;
  (%951, %952, %var_3044, %953, meta[relay.Constant][49] /* ty=Tensor[(768), float64] */, %954)
}

def @func_6730() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) {
  %955 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %956 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
  %957 = %955.1;
  (%956, %957)
}

def @func_12479() -> Tensor[(2, 9, 6), float32] {
  @func_704() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_13373() -> (Tensor[(3, 16, 16), float64],) {
  %958 = @func_6730() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) */;
  %959 = %958.1;
  (%959,)
}

def @func_12690(%var_12680: Tensor[(728), float32], %var_12681: Tensor[(18, 100), float32]) -> (Tensor[(384), float32], Tensor[(13, 7, 8), float32], Tensor[(728), float32], Tensor[(18, 100), float32]) {
  %960 = @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
  %961 = cast(%var_12680, dtype="float32") /* ty=Tensor[(728), float32] */;
  %962 = cast(%var_12681, dtype="float32") /* ty=Tensor[(18, 100), float32] */;
  %963 = reshape(%961, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %964 = reshape(%962, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %965 = @func_10329(%963, %964) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) */;
  %966 = %960.0;
  %967 = %965.0;
  (%966, %967, %var_12680, %var_12681)
}

def @func_7229() -> (Tensor[(768), float64],) {
  %968 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
  %969 = %968.2;
  (%969,)
}

def @func_8898(%var_8891: Tensor[(8, 15, 14), uint8]) -> (Tensor[(8, 15, 14), uint8],) {
  %970 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(8, 15, 14), uint8] */;
  %971 = shape_of(%var_8891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %972 = cast(%var_8891, dtype="uint8") /* ty=Tensor[(8, 15, 14), uint8] */;
  %973 = dyn.reshape(%970, %971, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %974 = right_shift(%972, %973) /* ty=Tensor[(8, 15, 14), uint8] */;
  (%974,)
}

def @func_11388() -> Tensor[(384), float32] {
  @func_3455() /* ty=Tensor[(384), float32] */
}

def @func_2820() -> Tensor[(2, 9, 6), float32] {
  @func_2242() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_8435() -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %975 = @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %976 = @func_5389() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %977 = %975.0;
  %978 = %976.0;
  %979 = @func_2667() /* ty=Tensor[(2, 9, 6), float32] */;
  (%977, %978, %979)
}

def @func_10751(%var_10749: Tensor[(1848), float32]) -> (Tensor[(2, 9, 6), bool], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32]) {
  %980 = @func_8596() /* ty=(Tensor[(2, 9, 6), bool],) */;
  %981 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
  %982 = cast(%var_10749, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %983 = reshape(%982, newshape=[1848]) /* ty=Tensor[(1848), float32] */;
  %984 = @func_6006(%983) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */;
  %985 = %980.0;
  %986 = %981.0;
  %987 = %984.6;
  (%985, %986, %987, %var_10749)
}

def @func_10096() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %988 = @func_4041() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %989 = @func_8214() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %990 = %988.0;
  %991 = %989.0;
  (%990, %991)
}

def @func_10449(%var_10423: Tensor[(13, 13), uint64]) -> (Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(13, 13), uint64], Tensor[(507), uint64], Tensor[(2, 9, 6), float32]) {
  %992 = cast(%var_10423, dtype="uint64") /* ty=Tensor[(13, 13), uint64] */;
  %993 = cast(meta[relay.Constant][51] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %994 = reshape(%992, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %995 = reshape(%993, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), uint64] */;
  %996 = @func_7697(%994, %995) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */;
  %997 = @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %998 = @func_9074() /* ty=Tensor[(768), float64] */;
  %999 = %996.3;
  %1000 = %997.0;
  (%998, %999, %var_10423, meta[relay.Constant][51] /* ty=Tensor[(507), uint64] */, %1000)
}

def @func_7014() -> (Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  %1001 = @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1002 = @func_5599() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) */;
  %1003 = @func_6730() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) */;
  %1004 = @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1005 = %1001.0;
  %1006 = %1002.2;
  %1007 = %1003.1;
  %1008 = %1004.0;
  (%1005, %1006, %1007, %1008)
}

def @func_10818(%var_10806: Tensor[(5, 1, 9), float32], %var_10816: Tensor[(1, 78), int64]) -> (Tensor[(5, 14, 9), float32], Tensor[(3, 16, 16), float64], Tensor[(1, 78), int64]) {
  %1009 = cast(%var_10806, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %1010 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 9), float32] */;
  %1011 = cast(%var_10816, dtype="int64") /* ty=Tensor[(1, 78), int64] */;
  %1012 = reshape(%1011, newshape=[78]) /* ty=Tensor[(78), int64] */;
  %1013 = @func_5326(%1012) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64]) */;
  %1014 = divide(%1009, %1010) /* ty=Tensor[(5, 14, 9), float32] */;
  %1015 = %1013.0;
  (%1014, %1015, %var_10816)
}

def @func_11899() -> (Tensor[(2, 9, 6), float32],) {
  %1016 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1016,)
}

def @func_9633() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1017 = @func_7380() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1018 = @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
  %1019 = %1017.1;
  %1020 = %1018.1;
  (%1019, %1020)
}

def @func_9074() -> Tensor[(768), float64] {
  %1021 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %1021.2
}

def @func_11789() -> (Tensor[(2, 9, 6), float32],) {
  %1022 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %1023 = %1022.0;
  (%1023,)
}

def @func_1884(%var_1878: Tensor[(768), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) {
  %1024 = cast(%var_1878, dtype="float64") /* ty=Tensor[(768), float64] */;
  %1025 = reshape(%1024, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
  %1026 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %1027 = @func_3(%1025) /* ty=Tensor[(3, 16, 16), float64] */;
  (%1026, %1027, %var_1878)
}

def @func_9549(%var_9532: int16, %var_9533: Tensor[(6, 1), int16]) -> (Tensor[(6, 1), int16], Tensor[(2, 9, 6), float32]) {
  %1028 = cast(%var_9532, dtype="int16") /* ty=int16 */;
  %1029 = cast(%var_9533, dtype="int16") /* ty=Tensor[(6, 1), int16] */;
  %1030 = @func_9487() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1031 = maximum(%1028, %1029) /* ty=Tensor[(6, 1), int16] */;
  %1032 = %1030.0;
  (%1031, %1032)
}

def @func_2667() -> Tensor[(2, 9, 6), float32] {
  %1033 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1033.0
}

def @func_7380() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1034 = @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
  %1035 = %1034.1;
  %1036 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1035, %1036)
}

def @func_10292() -> (Tensor[(2, 9, 6), float32],) {
  %1037 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1038 = %1037.0;
  (%1038,)
}

def @func_11169(%var_11155: Tensor[(1, 3, 7), float32], %var_11156: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), float32], Tensor[(2, 9, 6), float32]) {
  %1039 = cast(%var_11155, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %1040 = cast(%var_11156, dtype="float32") /* ty=Tensor[(12, 3, 7), float32] */;
  %1041 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1042 = floor_mod(%1039, %1040) /* ty=Tensor[(12, 3, 7), float32] */;
  %1043 = %1041.0;
  (%1042, %1043)
}

def @func_12838(%var_12831: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(48), uint64], Tensor[(336), float32]) {
  %1044 = @func_12472() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1045 = cast(meta[relay.Constant][53] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %1046 = cast(meta[relay.Constant][53] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
  %1047 = cast(%var_12831, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1048 = reshape(%1045, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
  %1049 = reshape(%1046, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
  %1050 = reshape(%1047, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %1051 = @func_2916(%1048, %1049, %1050) /* ty=(Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) */;
  %1052 = %1044.0;
  %1053 = %1051.1;
  (%1052, %1053, meta[relay.Constant][53] /* ty=Tensor[(48), uint64] */, %var_12831)
}

def @func_11028(%var_11020: Tensor[(84, 2), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(1, 14, 12), float64], Tensor[(84, 2), float64], Tensor[(1680), float64]) {
  %1054 = @func_10986() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1055 = cast(%var_11020, dtype="float64") /* ty=Tensor[(84, 2), float64] */;
  %1056 = cast(meta[relay.Constant][54] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1057 = reshape(%1055, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
  %1058 = reshape(%1056, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), float64] */;
  %1059 = @func_3675(%1057, %1058) /* ty=(Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1060 = %1054.3;
  %1061 = %1059.0;
  (%1060, %1061, %var_11020, meta[relay.Constant][54] /* ty=Tensor[(1680), float64] */)
}

def @func_13007(%var_12982: Tensor[(13, 3, 8), float64]) -> (Tensor[(13, 3, 8), float64], Tensor[(2, 9, 6), float32], Tensor[(110), float64]) {
  %1062 = cast(%var_12982, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
  %1063 = sigmoid(%1062) /* ty=Tensor[(13, 3, 8), float64] */;
  %1064 = cast(%1063, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
  %1065 = cast(meta[relay.Constant][55] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %1066 = reshape(%1065, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
  %1067 = @func_12932(%1066) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(11, 10, 1), float64], Tensor[(22, 5), float64]) */;
  %1068 = cosh(%1064) /* ty=Tensor[(13, 3, 8), float64] */;
  %1069 = %1067.0;
  (%1068, %1069, meta[relay.Constant][55] /* ty=Tensor[(110), float64] */)
}

def @func_5326(%var_5324: Tensor[(78), int64]) -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64]) {
  %1070 = cast(%var_5324, dtype="int64") /* ty=Tensor[(78), int64] */;
  %1071 = reshape(%1070, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), int64] */;
  %1072 = @func_849(%1071) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */;
  %1073 = @func_3885() /* ty=Tensor[(3, 16, 16), float64] */;
  %1074 = @func_1579() /* ty=Tensor[(2, 9, 6), float32] */;
  %1075 = %1072.2;
  (%1073, %1074, %1075, %var_5324)
}

def @func_11838() -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64]) {
  %1076 = @func_7380() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1077 = %1076.0;
  %1078 = @func_9074() /* ty=Tensor[(768), float64] */;
  (%1077, %1078)
}

def @func_13253(%var_13251: uint32) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), uint64], Tensor[(3, 16, 16), float64], uint32) {
  %1079 = @func_12472() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1080 = cast(meta[relay.Constant][56] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %1081 = reshape(%1080, newshape=[507]) /* ty=Tensor[(507), uint64] */;
  %1082 = @func_8082(%1081) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) */;
  %1083 = cast(%var_13251, dtype="uint32") /* ty=uint32 */;
  %1084 = reshape(%1083, newshape=[]) /* ty=uint32 */;
  %1085 = @func_9835(%1084) /* ty=(Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
  %1086 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %1087 = %1079.0;
  %1088 = %1082.2;
  %1089 = %1085.1;
  (%1086, %1087, %1088, meta[relay.Constant][56] /* ty=Tensor[(507), uint64] */, %1089, %var_13251)
}

def @func_13465(%var_13452: Tensor[(8, 1, 3), float32], %var_13453: Tensor[(8, 14, 3), float32]) -> Tensor[(8, 14, 3), float32] {
  %1090 = cast(%var_13452, dtype="float32") /* ty=Tensor[(8, 1, 3), float32] */;
  %1091 = cast(%var_13453, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
  mod(%1090, %1091) /* ty=Tensor[(8, 14, 3), float32] */
}

def @func_1494(%var_1483: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %1092 = cast(%var_1483, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1093 = reshape(%1092, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %1094 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %1095 = @func_425(%1093) /* ty=Tensor[(7, 4, 12), float32] */;
  (%1094, %1095, %var_1483)
}

def @func_6185() -> Tensor[(2, 9, 6), float32] {
  @func_3512() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_8931(%var_8926: Tensor[(11, 10, 1), float64]) -> (Tensor[(11, 10, 1), float64],) {
  %1096 = cast(%var_8926, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
  %1097 = cos(%1096) /* ty=Tensor[(11, 10, 1), float64] */;
  (%1097,)
}

def @func_8319() -> (Tensor[(3, 16, 16), int64], Tensor[(2, 9, 6), float32]) {
  %1098 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %1099 = %1098.2;
  %1100 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1099, %1100)
}

def @func_7579() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1101 = @func_7014() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
  %1102 = @func_5599() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) */;
  %1103 = %1101.3;
  %1104 = %1102.0;
  (%1103, %1104)
}

def @func_9010() -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %1105 = cast(meta[relay.Constant][57] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1106 = reshape(%1105, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %1107 = @func_3907(%1106) /* ty=(Tensor[(768), float64], Tensor[(6, 4, 6), float64], Tensor[(144), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %1108 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %1109 = %1107.3;
  (%1108, %1109, meta[relay.Constant][57] /* ty=Tensor[(336), float32] */)
}

def @func_9267() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  %1110 = @func_6067() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) */;
  %1111 = @func_5508() /* ty=(Tensor[(384), float32],) */;
  %1112 = %1110.0;
  %1113 = %1111.0;
  (%1112, %1113)
}

def @func_550(%var_537: Tensor[(6, 2, 7), float64]) -> Tensor[(6, 2, 7), float64] {
  %1114 = cast(%var_537, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
  atanh(%1114) /* ty=Tensor[(6, 2, 7), float64] */
}

def @main() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(507), bool]) {
  %1115 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %1116 = cast(meta[relay.Constant][58] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %1117 = reshape(%1116, newshape=[507]) /* ty=Tensor[(507), uint64] */;
  %1118 = @func_10701(%1117) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(507), float32], Tensor[(507), uint64]) */;
  %1119 = @func_9934() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], uint32) */;
  %1120 = %1119.3;
  %1121 = cast(meta[relay.Constant][58] /* ty=Tensor[(507), uint64] */, dtype="bool") /* ty=Tensor[(507), bool] */;
  %1122 = cast(%1120, dtype="bool") /* ty=bool */;
  %1123 = %1115.1;
  %1124 = %1118.0;
  %1125 = logical_or(%1121, %1122) /* ty=Tensor[(507), bool] */;
  (%1123, %1124, %1125)
}

def @func_10941() -> Tensor[(2, 9, 6), float32] {
  @func_8573() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12723() -> (Tensor[(48), uint64], Tensor[(2, 9, 6), float32]) {
  %1126 = @func_7014() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
  %1127 = %1126.1;
  %1128 = @func_7962() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1127, %1128)
}

def @func_10230() -> Tensor[(2, 9, 6), float32] {
  @func_7179() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_6006(%var_5916: Tensor[(1848), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  %1129 = @func_4741() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1130 = cast(%var_5916, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %1131 = reshape(%1130, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), float32] */;
  %1132 = @func_1570(%1131) /* ty=(Tensor[(12, 14, 11), float32],) */;
  %1133 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1134 = %1132.0;
  %1135 = cast(%1134, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %1136 = reshape(%1135, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), float32] */;
  %1137 = @func_1570(%1136) /* ty=(Tensor[(12, 14, 11), float32],) */;
  %1138 = cast(meta[relay.Constant][59] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1139 = reshape(%1138, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %1140 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %1141 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  %1142 = %1129.0;
  %1143 = %1133.0;
  %1144 = %1137.0;
  %1145 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  %1146 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
  %1147 = @func_425(%1139) /* ty=Tensor[(7, 4, 12), float32] */;
  %1148 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1140, %1141, %1142, %1134, %var_5916, %1143, %1144, %1145, %1146, %1147, meta[relay.Constant][59] /* ty=Tensor[(336), float32] */, %1148)
}

def @func_6067() -> (Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) {
  %1149 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1150 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %1151 = cast(meta[relay.Constant][60] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %1152 = reshape(%1150, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %1153 = reshape(%1151, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %1154 = @func_4971(%1152, %1153) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) */;
  %1155 = %1149.0;
  %1156 = %1154.5;
  (%1155, %1156, meta[relay.Constant][60] /* ty=Tensor[(2, 168), float32] */)
}

def @func_7735() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1157 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %1158 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1157, %1158)
}

def @func_11135() -> Tensor[(2, 9, 6), float32] {
  %1159 = @func_9715() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1159.0
}

def @func_11484() -> (Tensor[(2, 9, 6), float32],) {
  %1160 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1161 = %1160.0;
  (%1161,)
}

def @func_7082() -> (Tensor[(2, 9, 6), float32],) {
  %1162 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %1163 = %1162.0;
  (%1163,)
}

def @func_1251(%var_1184: Tensor[(4, 15, 6), float64], %var_1188: Tensor[(280), float32]) -> (Tensor[(384, 2), float64], Tensor[(280), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64], Tensor[(1, 7, 1), float32], Tensor[(4, 15, 6), uint8], Tensor[(2, 9, 6), float32]) {
  %1164 = cast(%var_1188, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1165 = reshape(%1164, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %1166 = @func_358(%1165) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %1167 = cast(meta[relay.Constant][61] /* ty=Tensor[(78), int64] */, dtype="int64") /* ty=Tensor[(78), int64] */;
  %1168 = reshape(%1167, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), int64] */;
  %1169 = @func_849(%1168) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */;
  %1170 = cast(%var_1188, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1171 = reshape(%1170, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %1172 = @func_358(%1171) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %1173 = cast(%var_1184, dtype="float64") /* ty=Tensor[(4, 15, 6), float64] */;
  %1174 = log10(%1173) /* ty=Tensor[(4, 15, 6), float64] */;
  %1175 = cast(%1174, dtype="float64") /* ty=Tensor[(4, 15, 6), float64] */;
  %1176 = sigmoid(%1175) /* ty=Tensor[(4, 15, 6), float64] */;
  %1177 = cast(%1176, dtype="uint8") /* ty=Tensor[(4, 15, 6), uint8] */;
  %1178 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%1174, dtype="uint8") /* ty=Tensor[(4, 15, 6), uint8] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1181 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1182 = %1166.3;
  %1183 = %1169.2;
  %1184 = %1172.1;
  %1185 = bitwise_xor(%1179, %1180) /* ty=Tensor[(4, 15, 6), uint8] */;
  %1186 = %1181.0;
  (%1182, %var_1188, %1183, meta[relay.Constant][61] /* ty=Tensor[(78), int64] */, %1184, %1185, %1186)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7941(%var_7882: Tensor[(1, 2, 12), float64], %var_7917: Tensor[(1, 8), float32], %var_7938: Tensor[(13, 13), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(4, 1, 2), float32], Tensor[(1, 8), float32], Tensor[(2, 9, 6), float32], Tensor[(?, 2, 12), bool], Tensor[(13, 3, 13), uint64], Tensor[(13, 13), uint64], Tensor[(507), uint64]) {
  %0 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1 = cast(%var_7917, dtype="float32") /* ty=Tensor[(1, 8), float32] */;
  %2 = reshape(%1, newshape=[4, 1, 2]) /* ty=Tensor[(4, 1, 2), float32] */;
  %3 = @func_7119(%2) /* ty=(Tensor[(4, 1, 2), float32],) */;
  %4 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %5 = cast(%var_7882, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  %6 = sqrt(%5) /* ty=Tensor[(1, 2, 12), float64] */;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  %8 = asin(%7) /* ty=Tensor[(1, 2, 12), float64] */;
  %9 = cast(%6, dtype="bool") /* ty=Tensor[(1, 2, 12), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(1, 2, 12), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = equal(%11, %12) /* ty=Tensor[(?, 2, 12), bool] */;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(?, 2, 12), float64] */;
  %15 = sigmoid(%14) /* ty=Tensor[(?, 2, 12), float64] */;
  %16 = cast(%var_7882, dtype="bool") /* ty=Tensor[(1, 2, 12), bool] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%15, dtype="bool") /* ty=Tensor[(?, 2, 12), bool] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %20 = cast(%var_7938, dtype="uint64") /* ty=Tensor[(13, 13), uint64] */;
  %21 = cast(meta[relay.Constant][0] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %22 = reshape(%20, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %23 = reshape(%21, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), uint64] */;
  %24 = @func_7697(%22, %23) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */;
  %25 = @func_5649() /* ty=Tensor[(2, 9, 6), float32] */;
  %26 = %0.0;
  %27 = %3.0;
  %28 = %4.0;
  %29 = less(%18, %19) /* ty=Tensor[(?, 2, 12), bool] */;
  %30 = %24.0;
  (%25, %26, %27, %var_7917, %28, %29, %30, %var_7938, meta[relay.Constant][0] /* ty=Tensor[(507), uint64] */)
}

def @func_4084(%var_4082: Tensor[(6, 5, 5), float64]) -> (Tensor[(6, 5, 5), float64],) {
  @func_4081(%var_4082) /* ty=(Tensor[(6, 5, 5), float64],) */
}

def @func_11169(%var_11155: Tensor[(1, 3, 7), float32], %var_11156: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), float32], Tensor[(2, 9, 6), float32]) {
  %31 = cast(%var_11155, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %32 = cast(%var_11156, dtype="float32") /* ty=Tensor[(12, 3, 7), float32] */;
  %33 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %34 = floor_mod(%31, %32) /* ty=Tensor[(12, 3, 7), float32] */;
  %35 = %33.0;
  (%34, %35)
}

def @func_3(%var_0: Tensor[(3, 16, 16), float64]) -> Tensor[(3, 16, 16), float64] {
  %36 = cast(%var_0, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  erf(%36) /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_8258(%var_8244: Tensor[(84), float64], %var_8246: Tensor[(336, 16), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(144), float64], Tensor[(336, 768), bool], Tensor[(84), float64], Tensor[(84), float64], Tensor[(336, 16), float32]) {
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %39 = reshape(%37, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %40 = reshape(%38, newshape=[2, 72]) /* ty=Tensor[(2, 72), float64] */;
  %41 = @func_6243(%39, %40) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 168), int32], Tensor[(768), float64], Tensor[(2, 72), float64]) */;
  %42 = @func_7229() /* ty=(Tensor[(768), float64],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="bool") /* ty=Tensor[(768), bool] */;
  %45 = cast(meta[relay.Constant][1] /* ty=Tensor[(336, 1), float32] */, dtype="bool") /* ty=Tensor[(336, 1), bool] */;
  %46 = cast(%var_8244, dtype="float64") /* ty=Tensor[(84), float64] */;
  %47 = reshape(%46, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %48 = @func_6782(%47) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) */;
  %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(336, 1), float32] */, dtype="bool") /* ty=Tensor[(336, 1), bool] */;
  %50 = cast(%var_8246, dtype="bool") /* ty=Tensor[(336, 16), bool] */;
  %51 = logical_or(%49, %50) /* ty=Tensor[(336, 16), bool] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(336, 16), float32] */;
  %53 = %41.0;
  %54 = logical_or(%44, %45) /* ty=Tensor[(336, 768), bool] */;
  %55 = %48.2;
  %56 = log10(%52) /* ty=Tensor[(336, 16), float32] */;
  (%53, meta[relay.Constant][2] /* ty=Tensor[(144), float64] */, %54, %55, %var_8244, %56)
}

def @func_3082(%var_3081: Tensor[(3, 28), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(3, 28), float64], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64]) {
  %68 = fn (%var_3044: Tensor[(3, 28), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(3, 28), float64], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64]) {
    %57 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %58 = cast(%var_3044, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
    %59 = reshape(%58, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
    %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %61 = reshape(%60, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %63 = reshape(%62, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %64 = %57.0;
    %65 = @func_550(%59) /* ty=Tensor[(6, 2, 7), float64] */;
    %66 = @func_3(%61) /* ty=Tensor[(3, 16, 16), float64] */;
    %67 = @func_3(%63) /* ty=Tensor[(3, 16, 16), float64] */;
    (%64, %65, %var_3044, %66, meta[relay.Constant][3] /* ty=Tensor[(768), float64] */, %67)
  };
  %68(%var_3081) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(3, 28), float64], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64]) */
}

def @func_12897() -> (Tensor[(15, 3, 6), float32], Tensor[(15, 3, 6), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32]) {
  @func_12895() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(15, 3, 6), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32]) */
}

def @func_11821() -> (Tensor[(2, 9, 6), float32],) {
  @func_11819() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_8541() -> Tensor[(2, 9, 6), float32] {
  @func_8539() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_9390(%var_9388: Tensor[(140, 2), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(5, 56), bool], Tensor[(2, 9, 6), float32]) {
  @func_9387(%var_9388) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(5, 56), bool], Tensor[(2, 9, 6), float32]) */
}

def @func_2871() -> Tensor[(2, 9, 6), float32] {
  %69 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_2820() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %69() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_4315() -> Tensor[(2, 9, 6), float32] {
  %70 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %70.0
}

def @func_10102() -> Tensor[(2, 9, 6), float32] {
  %71 = @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %71.0
}

def @func_2643(%var_2641: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  @func_2640(%var_2641) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */
}

def @func_8321() -> (Tensor[(3, 16, 16), int64], Tensor[(2, 9, 6), float32]) {
  @func_8319() /* ty=(Tensor[(3, 16, 16), int64], Tensor[(2, 9, 6), float32]) */
}

def @func_6423() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_6421() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_2171() -> (Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) {
  %72 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %74 = reshape(%73, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %75 = @func_358(%74) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %76 = %72.0;
  %77 = %75.1;
  (%76, %77, meta[relay.Constant][4] /* ty=Tensor[(280), float32] */)
}

def @func_9076() -> Tensor[(768), float64] {
  @func_9074() /* ty=Tensor[(768), float64] */
}

def @func_7333() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %83 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
    %78 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %79 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
    %80 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
    %81 = %78.0;
    %82 = %79.1;
    (%80, %81, %82)
  };
  %83() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */
}

def @func_5204() -> (Tensor[(2, 9, 6), float32],) {
  %86 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %84 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %85 = %84.0;
    (%85,)
  };
  %86() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_2921(%var_2918: Tensor[(3, 8, 2), uint64], %var_2919: Tensor[(3, 8, 2), uint64], %var_2920: Tensor[(336), float32]) -> (Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) {
  @func_2916(%var_2918, %var_2919, %var_2920) /* ty=(Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) */
}

def @func_4743() -> (Tensor[(2, 9, 6), float32],) {
  @func_4741() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_1255(%var_1253: Tensor[(4, 15, 6), float64], %var_1254: Tensor[(280), float32]) -> (Tensor[(384, 2), float64], Tensor[(280), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64], Tensor[(1, 7, 1), float32], Tensor[(4, 15, 6), uint8], Tensor[(2, 9, 6), float32]) {
  @func_1251(%var_1253, %var_1254) /* ty=(Tensor[(384, 2), float64], Tensor[(280), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64], Tensor[(1, 7, 1), float32], Tensor[(4, 15, 6), uint8], Tensor[(2, 9, 6), float32]) */
}

def @func_9010() -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %87 = cast(meta[relay.Constant][5] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %88 = reshape(%87, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %89 = @func_3907(%88) /* ty=(Tensor[(768), float64], Tensor[(6, 4, 6), float64], Tensor[(144), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %90 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %91 = %89.3;
  (%90, %91, meta[relay.Constant][5] /* ty=Tensor[(336), float32] */)
}

def @func_6451() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %95 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %92 = @func_3636() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %93 = %92.1;
    %94 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
    (%93, %94)
  };
  %95() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_3311(%var_3309: Tensor[(112), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(112), float32]) {
  %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %97 = reshape(%96, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %98 = @func_1884(%97) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %99 = %98.2;
  %100 = cast(%99, dtype="float64") /* ty=Tensor[(768), float64] */;
  %101 = cast(%var_3309, dtype="float32") /* ty=Tensor[(112), float32] */;
  %102 = reshape(%100, newshape=[384, 2]) /* ty=Tensor[(384, 2), float64] */;
  %103 = reshape(%101, newshape=[28, 4]) /* ty=Tensor[(28, 4), float32] */;
  %104 = @func_2374(%102, %103) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64], Tensor[(28, 4), float32], Tensor[(2, 7, 8), float32], Tensor[(2, 9, 6), bool], Tensor[(10, 7, 4), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */;
  %105 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %106 = %104.10;
  (%105, %99, meta[relay.Constant][6] /* ty=Tensor[(768), float64] */, %106, %var_3309)
}

def @func_5390() -> (Tensor[(2, 9, 6), float32],) {
  %109 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %107 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %108 = %107.0;
    (%108,)
  };
  %109() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_4876(%var_4829: Tensor[(78), int64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(78), int64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float32]) {
  %110 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %111 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %112 = cast(%var_4829, dtype="int64") /* ty=Tensor[(78), int64] */;
  %113 = reshape(%112, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), int64] */;
  %114 = @func_849(%113) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */;
  %115 = %114.2;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
  %117 = %110.0;
  %118 = %111.0;
  %119 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %120 = log10(%116) /* ty=Tensor[(13, 2, 3), float32] */;
  (%117, %118, %var_4829, %119, %120)
}

def @func_4974(%var_4972: Tensor[(2, 168), float32], %var_4973: Tensor[(2, 168), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) {
  %138 = fn (%var_4944: Tensor[(2, 168), float32], %var_4951: Tensor[(2, 168), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) {
    %121 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
    %122 = cast(%var_4944, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %123 = reshape(%122, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
    %124 = @func_2082(%123) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
    %125 = cast(%var_4951, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
    %126 = shape_of(%var_4944, dtype="int32") /* ty=Tensor[(2), int32] */;
    %127 = cast(%var_4944, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
    %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %129 = cast(meta[relay.Constant][7] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %130 = cast(meta[relay.Constant][8] /* ty=Tensor[(2730), int8] */, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %131 = reshape(%129, newshape=[]) /* ty=int8 */;
    %132 = reshape(%130, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
    %133 = @func_1073(%131, %132) /* ty=(Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) */;
    %134 = %121.1;
    %135 = %124.0;
    %136 = logical_and(%127, %128) /* ty=Tensor[(2, 168), bool] */;
    %137 = %133.4;
    (%134, %135, %136, %137, meta[relay.Constant][7] /* ty=int8 */, meta[relay.Constant][8] /* ty=Tensor[(2730), int8] */)
  };
  %138(%var_4972, %var_4973) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) */
}

def @func_12895() -> (Tensor[(15, 3, 6), float32], Tensor[(15, 3, 6), float64], Tensor[(2, 7, 8), float32], Tensor[(112), float32]) {
  %139 = @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %140 = cast(meta[relay.Constant][9] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %141 = reshape(%140, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
  %142 = @func_2309(%141) /* ty=(Tensor[(2, 7, 8), float32],) */;
  %143 = %139.0;
  %144 = @func_11592() /* ty=Tensor[(15, 3, 6), float64] */;
  %145 = %142.0;
  (%143, %144, %145, meta[relay.Constant][9] /* ty=Tensor[(112), float32] */)
}

def @func_11236() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %149 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %146 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
    %147 = @func_2820() /* ty=Tensor[(2, 9, 6), float32] */;
    %148 = %146.0;
    (%147, %148)
  };
  %149() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_2820() -> Tensor[(2, 9, 6), float32] {
  @func_2242() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_2669() -> Tensor[(2, 9, 6), float32] {
  @func_2667() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_2500() -> (Tensor[(2, 9, 6), float32],) {
  %152 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %150 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %151 = %150.0;
    (%151,)
  };
  %152() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_12063() -> (Tensor[(15, 3, 6), float32],) {
  %153 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %154 = %153.1;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  %156 = asinh(%155) /* ty=Tensor[(15, 3, 6), float32] */;
  (%156,)
}

def @func_8933(%var_8932: Tensor[(11, 10, 1), float64]) -> (Tensor[(11, 10, 1), float64],) {
  %159 = fn (%var_8926: Tensor[(11, 10, 1), float64]) -> (Tensor[(11, 10, 1), float64],) {
    %157 = cast(%var_8926, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
    %158 = cos(%157) /* ty=Tensor[(11, 10, 1), float64] */;
    (%158,)
  };
  %159(%var_8932) /* ty=(Tensor[(11, 10, 1), float64],) */
}

def @func_11496() -> Tensor[(2, 9, 6), float32] {
  @func_11494() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_5781(%var_5775: Tensor[(13, 9, 11), float32], %var_5776: Tensor[(13, 9, 11), float32]) -> Tensor[(13, 9, 11), float32] {
  %160 = cast(%var_5776, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %161 = shape_of(%var_5775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%var_5775, dtype="float32") /* ty=Tensor[(13, 9, 11), float32] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%162, %163) /* ty=Tensor[(13, 9, 11), float32] */
}

def @func_11313() -> Tensor[(2, 9, 6), float32] {
  @func_2820() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_8539() -> Tensor[(2, 9, 6), float32] {
  %164 = @func_6116() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %164.1
}

def @func_8597() -> (Tensor[(2, 9, 6), bool],) {
  %167 = fn () -> (Tensor[(2, 9, 6), bool],) {
    %165 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
    %166 = %165.1;
    (%166,)
  };
  %167() /* ty=(Tensor[(2, 9, 6), bool],) */
}

def @func_11315() -> Tensor[(2, 9, 6), float32] {
  @func_11313() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_11571() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  %168 = @func_7595() /* ty=(Tensor[(3, 16, 16), float64],) */;
  %169 = %168.0;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %171 = @func_9633() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %172 = acos(%170) /* ty=Tensor[(3, 16, 16), float64] */;
  %173 = %171.0;
  (%172, %173)
}

def @func_7989() -> (Tensor[(2, 9, 6), float32],) {
  @func_7987() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_705() -> Tensor[(2, 9, 6), float32] {
  %174 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_612() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %174() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12473() -> (Tensor[(2, 9, 6), float32],) {
  %177 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %175 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
    %176 = %175.0;
    (%176,)
  };
  %177() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_10751(%var_10749: Tensor[(1848), float32]) -> (Tensor[(2, 9, 6), bool], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32]) {
  %178 = @func_8596() /* ty=(Tensor[(2, 9, 6), bool],) */;
  %179 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
  %180 = cast(%var_10749, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %181 = reshape(%180, newshape=[1848]) /* ty=Tensor[(1848), float32] */;
  %182 = @func_6006(%181) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */;
  %183 = %178.0;
  %184 = %179.0;
  %185 = %182.6;
  (%183, %184, %185, %var_10749)
}

def @func_7735() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %186 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %187 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  (%186, %187)
}

def @func_9142() -> Tensor[(2, 9, 6), float32] {
  @func_6185() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12038() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(2, 168), float32], Tensor[(2, 9, 6), float32]) {
  %196 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(2, 168), float32], Tensor[(2, 9, 6), float32]) {
    %188 = @func_4041() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %189 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %190 = reshape(%189, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %191 = @func_2554(%190) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) */;
    %192 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %193 = %188.0;
    %194 = %191.1;
    %195 = %192.0;
    (%193, %194, meta[relay.Constant][10] /* ty=Tensor[(2, 168), float32] */, %195)
  };
  %196() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(2, 168), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_3718() -> (Tensor[(2, 9, 6), float32],) {
  %197 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %198 = %197.0;
  (%198,)
}

def @func_1838() -> (Tensor[(2, 9, 6), float32],) {
  %199 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %200 = %199.0;
  (%200,)
}

def @func_10488() -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(168, 2), float32]) {
  @func_10486() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(168, 2), float32]) */
}

def @func_7450() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %201 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %202 = %201.0;
  %203 = @func_6586() /* ty=Tensor[(2, 9, 6), float32] */;
  (%202, %203)
}

def @func_7452() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_7450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_2085(%var_2083: Tensor[(8, 42), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) {
  @func_2082(%var_2083) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */
}

def @func_7181() -> Tensor[(2, 9, 6), float32] {
  @func_7179() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_10097() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %208 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %204 = @func_4041() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %205 = @func_8214() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %206 = %204.0;
    %207 = %205.0;
    (%206, %207)
  };
  %208() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_7179() -> Tensor[(2, 9, 6), float32] {
  %209 = @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %209.0
}

def @func_1950() -> Tensor[(2, 9, 6), float32] {
  @func_1948() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_2243() -> Tensor[(2, 9, 6), float32] {
  %210 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_704() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %210() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_10104() -> Tensor[(2, 9, 6), float32] {
  @func_10102() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_3788() -> (Tensor[(2, 9, 6), float32],) {
  %211 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  (%211,)
}

def @func_10754(%var_10752: Tensor[(1848), float32]) -> (Tensor[(2, 9, 6), bool], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32]) {
  @func_10751(%var_10752) /* ty=(Tensor[(2, 9, 6), bool], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32]) */
}

def @func_12421() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_12419() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_13431() -> (Tensor[(2, 9, 6), float32],) {
  %214 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %212 = @func_8319() /* ty=(Tensor[(3, 16, 16), int64], Tensor[(2, 9, 6), float32]) */;
    %213 = %212.1;
    (%213,)
  };
  %214() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_1814(%var_1812: Tensor[(7, 8, 8), float32]) -> (Tensor[(6, 2, 7), float64], Tensor[(7, 8, 8), float64], Tensor[(84, 1), float32]) {
  @func_1811(%var_1812) /* ty=(Tensor[(6, 2, 7), float64], Tensor[(7, 8, 8), float64], Tensor[(84, 1), float32]) */
}

def @func_3098() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) {
  %220 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) {
    %215 = cast(meta[relay.Constant][11] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %216 = reshape(%215, newshape=[768]) /* ty=Tensor[(768), float64] */;
    %217 = @func_1884(%216) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
    %218 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
    %219 = %217.0;
    (%218, %219, meta[relay.Constant][11] /* ty=Tensor[(768), float64] */)
  };
  %220() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */
}

def @func_4190() -> Tensor[(2, 9, 6), float32] {
  @func_4188() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_11790() -> (Tensor[(2, 9, 6), float32],) {
  %223 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %221 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_2554(%var_2541: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) {
  %224 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %225 = cast(%var_2541, dtype="float32") /* ty=Tensor[(336), float32] */;
  %226 = reshape(%225, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %227 = @func_2082(%226) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %228 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %229 = %224.2;
  %230 = %227.2;
  (%228, %229, %230, %var_2541)
}

def @func_7259(%var_7255: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  %231 = cast(%var_7255, dtype="float64") /* ty=Tensor[(84), float64] */;
  %232 = reshape(%231, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
  %233 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %234 = @func_550(%232) /* ty=Tensor[(6, 2, 7), float64] */;
  (%233, %234, %var_7255)
}

def @func_3031(%var_3028: Tensor[(11, 4, 12), int64], %var_3029: Tensor[(11, 4, 12), int64], %var_3030: Tensor[(11, 4, 12), int64]) -> (Tensor[(11, 4, 12), int64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(11, 4, 12), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_3026(%var_3028, %var_3029, %var_3030) /* ty=(Tensor[(11, 4, 12), int64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(11, 4, 12), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_9231() -> (Tensor[(15, 3, 6), float32],) {
  @func_9229() /* ty=(Tensor[(15, 3, 6), float32],) */
}

def @func_11390() -> Tensor[(384), float32] {
  @func_11388() /* ty=Tensor[(384), float32] */
}

def @func_2557(%var_2555: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) {
  @func_2554(%var_2555) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) */
}

def @func_12735() -> (Tensor[(2, 9, 6), float32],) {
  %237 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %235 = @func_8800() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %236 = %235.1;
    (%236,)
  };
  %237() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_9488() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %248 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %238 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %239 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %240 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %241 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %242 = @func_8627() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(264, 2), int64]) */;
    %243 = %238.0;
    %244 = %239.0;
    %245 = %240.0;
    %246 = %241.0;
    %247 = %242.1;
    (%243, %244, %245, %246, %247)
  };
  %248() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_5649() -> Tensor[(2, 9, 6), float32] {
  %249 = @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %249.0
}

def @func_2731(%var_2724: Tensor[(9, 12, 12), int32]) -> Tensor[(9, 12, 12), int32] {
  %250 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 12, 1), int32] */, dtype="int32") /* ty=Tensor[(9, 12, 1), int32] */;
  %251 = cast(%var_2724, dtype="int32") /* ty=Tensor[(9, 12, 12), int32] */;
  bitwise_and(%250, %251) /* ty=Tensor[(9, 12, 12), int32] */
}

def @func_1449(%var_1448: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  %256 = fn (%var_1441: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
    %252 = cast(%var_1441, dtype="float64") /* ty=Tensor[(84), float64] */;
    %253 = reshape(%252, newshape=[6, 2, 7]) /* ty=Tensor[(6, 2, 7), float64] */;
    %254 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
    %255 = @func_550(%253) /* ty=Tensor[(6, 2, 7), float64] */;
    (%254, %255, %var_1441)
  };
  %256(%var_1448) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */
}

def @func_8898(%var_8891: Tensor[(8, 15, 14), uint8]) -> (Tensor[(8, 15, 14), uint8],) {
  %257 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(8, 15, 14), uint8] */;
  %258 = shape_of(%var_8891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_8891, dtype="uint8") /* ty=Tensor[(8, 15, 14), uint8] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %261 = right_shift(%259, %260) /* ty=Tensor[(8, 15, 14), uint8] */;
  (%261,)
}

def @func_849(%var_804: Tensor[(13, 2, 3), int64]) -> (Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) {
  %262 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 2, 3), int64] */, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %263 = shape_of(%var_804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_804, dtype="bool") /* ty=Tensor[(13, 2, 3), bool] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %266 = cast(meta[relay.Constant][15] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %267 = reshape(%266, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %268 = @func_358(%267) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %269 = %268.1;
  %270 = cast(%269, dtype="int64") /* ty=Tensor[(1, 7, 1), int64] */;
  %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(280), float32] */, dtype="int64") /* ty=Tensor[(280), int64] */;
  %272 = cast(%var_804, dtype="float64") /* ty=Tensor[(13, 2, 3), float64] */;
  %273 = not_equal(%264, %265) /* ty=Tensor[(13, 2, 3), bool] */;
  %274 = maximum(%270, %271) /* ty=Tensor[(1, 7, 280), int64] */;
  %275 = cos(%272) /* ty=Tensor[(13, 2, 3), float64] */;
  (%273, %274, %275)
}

def @func_9697() -> (Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32]) {
  %280 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32]) {
    %276 = @func_9322() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %277 = %276.0;
    %278 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
    %279 = @func_1579() /* ty=Tensor[(2, 9, 6), float32] */;
    (%277, %278, %279)
  };
  %280() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_6009(%var_6007: Tensor[(1848), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  @func_6006(%var_6007) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_12694(%var_12692: Tensor[(728), float32], %var_12693: Tensor[(18, 100), float32]) -> (Tensor[(384), float32], Tensor[(13, 7, 8), float32], Tensor[(728), float32], Tensor[(18, 100), float32]) {
  @func_12690(%var_12692, %var_12693) /* ty=(Tensor[(384), float32], Tensor[(13, 7, 8), float32], Tensor[(728), float32], Tensor[(18, 100), float32]) */
}

def @func_6(%var_4: Tensor[(3, 16, 16), float64]) -> Tensor[(3, 16, 16), float64] {
  @func_3(%var_4) /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_7946(%var_7943: Tensor[(1, 2, 12), float64], %var_7944: Tensor[(1, 8), float32], %var_7945: Tensor[(13, 13), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(4, 1, 2), float32], Tensor[(1, 8), float32], Tensor[(2, 9, 6), float32], Tensor[(?, 2, 12), bool], Tensor[(13, 3, 13), uint64], Tensor[(13, 13), uint64], Tensor[(507), uint64]) {
  @func_7941(%var_7943, %var_7944, %var_7945) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(4, 1, 2), float32], Tensor[(1, 8), float32], Tensor[(2, 9, 6), float32], Tensor[(?, 2, 12), bool], Tensor[(13, 3, 13), uint64], Tensor[(13, 13), uint64], Tensor[(507), uint64]) */
}

def @func_6186() -> Tensor[(2, 9, 6), float32] {
  %281 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_3512() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %281() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_3932() -> (Tensor[(2, 9, 6), float32],) {
  %282 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %283 = %282.0;
  (%283,)
}

def @func_7084() -> (Tensor[(2, 9, 6), float32],) {
  @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_3502() -> Tensor[(2, 9, 6), float32] {
  @func_3500() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_11135() -> Tensor[(2, 9, 6), float32] {
  %284 = @func_9715() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %284.0
}

def @func_8125() -> (Tensor[(384), float32],) {
  %287 = fn () -> (Tensor[(384), float32],) {
    %285 = @func_5508() /* ty=(Tensor[(384), float32],) */;
    %286 = %285.0;
    (%286,)
  };
  %287() /* ty=(Tensor[(384), float32],) */
}

def @func_12572() -> Tensor[(2, 9, 6), float32] {
  %288 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_10867() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %288() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_2955() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_5188(%var_5185: Tensor[(2, 648), int32], %var_5186: int8, %var_5187: Tensor[(2730), int8]) -> (Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], int8, Tensor[(2730), int8], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 648), float32]) {
  @func_5183(%var_5185, %var_5186, %var_5187) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], int8, Tensor[(2730), int8], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 648), float32]) */
}

def @func_4634() -> (Tensor[(2, 9, 6), float32],) {
  @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_4535() -> (Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %289 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %290 = %289.0;
  %291 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
  (%290, %291)
}

def @func_9267() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  %292 = @func_6067() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) */;
  %293 = @func_5508() /* ty=(Tensor[(384), float32],) */;
  %294 = %292.0;
  %295 = %293.0;
  (%294, %295)
}

def @func_13009(%var_13008: Tensor[(13, 3, 8), float64]) -> (Tensor[(13, 3, 8), float64], Tensor[(2, 9, 6), float32], Tensor[(110), float64]) {
  %304 = fn (%var_12982: Tensor[(13, 3, 8), float64]) -> (Tensor[(13, 3, 8), float64], Tensor[(2, 9, 6), float32], Tensor[(110), float64]) {
    %296 = cast(%var_12982, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
    %297 = sigmoid(%296) /* ty=Tensor[(13, 3, 8), float64] */;
    %298 = cast(%297, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
    %299 = cast(meta[relay.Constant][16] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %300 = reshape(%299, newshape=[22, 5]) /* ty=Tensor[(22, 5), float64] */;
    %301 = @func_12932(%300) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(11, 10, 1), float64], Tensor[(22, 5), float64]) */;
    %302 = cosh(%298) /* ty=Tensor[(13, 3, 8), float64] */;
    %303 = %301.0;
    (%302, %303, meta[relay.Constant][16] /* ty=Tensor[(110), float64] */)
  };
  %304(%var_13008) /* ty=(Tensor[(13, 3, 8), float64], Tensor[(2, 9, 6), float32], Tensor[(110), float64]) */
}

def @func_10333(%var_10331: Tensor[(13, 7, 8), float32], %var_10332: Tensor[(1800), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) {
  @func_10329(%var_10331, %var_10332) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) */
}

def @func_12332() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  %308 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
    %305 = @func_6836() /* ty=(Tensor[(384), float32],) */;
    %306 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
    %307 = %305.0;
    (%306, %307)
  };
  %308() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */
}

def @func_3314(%var_3312: Tensor[(112), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(112), float32]) {
  @func_3311(%var_3312) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(112), float32]) */
}

def @func_9289() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_9287() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_8676() -> (Tensor[(2, 9, 6), float32],) {
  @func_8674() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_8435() -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %309 = @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %310 = @func_5389() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %311 = %309.0;
  %312 = %310.0;
  %313 = @func_2667() /* ty=Tensor[(2, 9, 6), float32] */;
  (%311, %312, %313)
}

def @func_10942() -> Tensor[(2, 9, 6), float32] {
  %314 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_8573() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %314() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_8149() -> (Tensor[(15, 3, 6), float32],) {
  %315 = @func_4161() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %316 = %315.0;
  (%316,)
}

def @func_9635() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_9633() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_1076(%var_1074: int8, %var_1075: Tensor[(13, 14, 15), int8]) -> (Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) {
  %340 = fn (%var_998: int8, %var_999: Tensor[(13, 14, 15), int8]) -> (Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) {
    %317 = cast(%var_998, dtype="int8") /* ty=int8 */;
    %318 = cast(%var_999, dtype="int8") /* ty=Tensor[(13, 14, 15), int8] */;
    %319 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %320 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %321 = cast(%var_999, dtype="uint16") /* ty=Tensor[(13, 14, 15), uint16] */;
    %322 = cast(%var_998, dtype="uint16") /* ty=uint16 */;
    %323 = left_shift(%321, %322) /* ty=Tensor[(13, 14, 15), uint16] */;
    %324 = cast(%323, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %325 = shape_of(%var_999, dtype="int32") /* ty=Tensor[(3), int32] */;
    %326 = cast(%var_999, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %328 = greater_equal(%326, %327) /* ty=Tensor[(13, 14, 15), bool] */;
    %329 = cast(%var_999, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%328, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %333 = logical_or(%331, %332) /* ty=Tensor[(13, 14, 15), bool] */;
    %334 = cast(%333, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
    %335 = multiply(%317, %318) /* ty=Tensor[(13, 14, 15), int8] */;
    %336 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
    %337 = %319.4;
    %338 = %320.4;
    %339 = cos(%334) /* ty=Tensor[(13, 14, 15), float32] */;
    (%335, %336, %337, %338, %339)
  };
  %340(%var_1074, %var_1075) /* ty=(Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) */
}

def @func_7402(%var_7392: Tensor[(13, 6, 4), uint8]) -> Tensor[(13, 6, 4), uint8] {
  %341 = cast(%var_7392, dtype="uint8") /* ty=Tensor[(13, 6, 4), uint8] */;
  %342 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 6, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 6, 4), uint8] */, dtype="uint8") /* ty=Tensor[(13, 6, 4), uint8] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%343, %344) /* ty=Tensor[(13, 6, 4), uint8] */
}

def @func_9012() -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  @func_9010() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */
}

def @func_7737() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_7735() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_4727(%var_4726: Tensor[(5, 56), float32]) -> (Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) {
  %353 = fn (%var_4696: Tensor[(5, 56), float32]) -> (Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) {
    %345 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
    %346 = cast(%var_4696, dtype="float32") /* ty=Tensor[(5, 56), float32] */;
    %347 = reshape(%346, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
    %348 = @func_358(%347) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
    %349 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %350 = %345.1;
    %351 = %348.2;
    %352 = %349.0;
    (%350, %351, %var_4696, %352)
  };
  %353(%var_4726) /* ty=(Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_3026(%var_2967: Tensor[(11, 4, 12), int64], %var_2968: Tensor[(11, 4, 12), int64], %var_3006: Tensor[(11, 4, 12), int64]) -> (Tensor[(11, 4, 12), int64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(11, 4, 12), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %354 = cast(%var_2968, dtype="int64") /* ty=Tensor[(11, 4, 12), int64] */;
  %355 = shape_of(%var_2967, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(%var_2967, dtype="int64") /* ty=Tensor[(11, 4, 12), int64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %358 = cast(meta[relay.Constant][18] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %359 = reshape(%358, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
  %360 = @func_2082(%359) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
  %361 = cast(%var_3006, dtype="uint32") /* ty=Tensor[(11, 4, 12), uint32] */;
  %362 = shape_of(%var_2968, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_2968, dtype="uint32") /* ty=Tensor[(11, 4, 12), uint32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %365 = subtract(%363, %364) /* ty=Tensor[(11, 4, 12), uint32] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(11, 4, 12), float64] */;
  %367 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %368 = bitwise_and(%356, %357) /* ty=Tensor[(11, 4, 12), int64] */;
  %369 = @func_1948() /* ty=Tensor[(2, 9, 6), float32] */;
  %370 = %360.1;
  %371 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %372 = erf(%366) /* ty=Tensor[(11, 4, 12), float64] */;
  %373 = %367.0;
  %374 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  (%368, %369, %370, meta[relay.Constant][18] /* ty=Tensor[(336), float32] */, %371, %372, %373, %374)
}

def @func_3369(%var_3367: Tensor[(12, 10, 15), float32], %var_3368: Tensor[(12, 10, 15), float32]) -> (Tensor[(12, 10, 15), float32],) {
  %380 = fn (%var_3356: Tensor[(12, 10, 15), float32], %var_3357: Tensor[(12, 10, 15), float32]) -> (Tensor[(12, 10, 15), float32],) {
    %375 = cast(%var_3357, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %376 = shape_of(%var_3356, dtype="int32") /* ty=Tensor[(3), int32] */;
    %377 = cast(%var_3356, dtype="float32") /* ty=Tensor[(12, 10, 15), float32] */;
    %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %379 = floor_mod(%377, %378) /* ty=Tensor[(12, 10, 15), float32] */;
    (%379,)
  };
  %380(%var_3367, %var_3368) /* ty=(Tensor[(12, 10, 15), float32],) */
}

def @func_7405(%var_7403: Tensor[(13, 6, 4), uint8]) -> Tensor[(13, 6, 4), uint8] {
  @func_7402(%var_7403) /* ty=Tensor[(13, 6, 4), uint8] */
}

def @func_12419() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %381 = @func_7553() /* ty=Tensor[(2, 9, 6), float32] */;
  %382 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  (%381, %382)
}

def @func_2082(%var_2080: Tensor[(8, 42), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) {
  %383 = cast(%var_2080, dtype="float32") /* ty=Tensor[(8, 42), float32] */;
  %384 = reshape(%383, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %385 = @func_1494(%384) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %386 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
  %387 = %385.0;
  (%386, %387, %var_2080)
}

def @func_6514() -> (Tensor[(2, 9, 6), float32],) {
  %389 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %388 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
    (%388,)
  };
  %389() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_10818(%var_10806: Tensor[(5, 1, 9), float32], %var_10816: Tensor[(1, 78), int64]) -> (Tensor[(5, 14, 9), float32], Tensor[(3, 16, 16), float64], Tensor[(1, 78), int64]) {
  %390 = cast(%var_10806, dtype="float32") /* ty=Tensor[(5, 1, 9), float32] */;
  %391 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 14, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 9), float32] */;
  %392 = cast(%var_10816, dtype="int64") /* ty=Tensor[(1, 78), int64] */;
  %393 = reshape(%392, newshape=[78]) /* ty=Tensor[(78), int64] */;
  %394 = @func_5326(%393) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64]) */;
  %395 = divide(%390, %391) /* ty=Tensor[(5, 14, 9), float32] */;
  %396 = %394.0;
  (%395, %396, %var_10816)
}

def @func_7700(%var_7698: Tensor[(13, 1, 13), uint64], %var_7699: Tensor[(13, 3, 13), uint64]) -> (Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) {
  %406 = fn (%var_7655: Tensor[(13, 1, 13), uint64], %var_7656: Tensor[(13, 3, 13), uint64]) -> (Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) {
    %397 = cast(%var_7655, dtype="uint64") /* ty=Tensor[(13, 1, 13), uint64] */;
    %398 = cast(%var_7656, dtype="uint64") /* ty=Tensor[(13, 3, 13), uint64] */;
    %399 = @func_4494() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %400 = cast(%var_7655, dtype="int8") /* ty=Tensor[(13, 1, 13), int8] */;
    %401 = cast(%var_7656, dtype="int8") /* ty=Tensor[(13, 3, 13), int8] */;
    %402 = maximum(%397, %398) /* ty=Tensor[(13, 3, 13), uint64] */;
    %403 = %399.0;
    %404 = add(%400, %401) /* ty=Tensor[(13, 3, 13), int8] */;
    %405 = @func_5444() /* ty=Tensor[(3, 16, 16), float64] */;
    (%402, %403, %404, %405)
  };
  %406(%var_7698, %var_7699) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */
}

def @func_13177() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  @func_13175() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */
}

def @func_11684(%var_11682: Tensor[(2, 16, 2), float32], %var_11683: Tensor[(2, 16, 2), float32]) -> (Tensor[(2, 16, 2), float32], Tensor[(384), float32]) {
  @func_11680(%var_11682, %var_11683) /* ty=(Tensor[(2, 16, 2), float32], Tensor[(384), float32]) */
}

def @func_12690(%var_12680: Tensor[(728), float32], %var_12681: Tensor[(18, 100), float32]) -> (Tensor[(384), float32], Tensor[(13, 7, 8), float32], Tensor[(728), float32], Tensor[(18, 100), float32]) {
  %407 = @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
  %408 = cast(%var_12680, dtype="float32") /* ty=Tensor[(728), float32] */;
  %409 = cast(%var_12681, dtype="float32") /* ty=Tensor[(18, 100), float32] */;
  %410 = reshape(%408, newshape=[13, 7, 8]) /* ty=Tensor[(13, 7, 8), float32] */;
  %411 = reshape(%409, newshape=[1800]) /* ty=Tensor[(1800), float32] */;
  %412 = @func_10329(%410, %411) /* ty=(Tensor[(13, 7, 8), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) */;
  %413 = %407.0;
  %414 = %412.0;
  (%413, %414, %var_12680, %var_12681)
}

def @func_3637() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %417 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %415 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
    %416 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
    (%415, %416)
  };
  %417() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_1948() -> Tensor[(2, 9, 6), float32] {
  @func_1673() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_4632() -> (Tensor[(2, 9, 6), float32],) {
  %418 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %419 = %418.0;
  (%419,)
}

def @func_9806(%var_9805: Tensor[(768), float64]) -> Tensor[(768), bool] {
  %425 = fn (%var_9799: Tensor[(768), float64]) -> Tensor[(768), bool] {
    %420 = @func_9074() /* ty=Tensor[(768), float64] */;
    %421 = cast(%var_9799, dtype="bool") /* ty=Tensor[(768), bool] */;
    %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(1), int32] */;
    %423 = cast(%420, dtype="bool") /* ty=Tensor[(768), bool] */;
    %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?), bool] */;
    logical_and(%423, %424) /* ty=Tensor[(768), bool] */
  };
  %425(%var_9805) /* ty=Tensor[(768), bool] */
}

def @func_6869() -> (Tensor[(2, 9, 6), float32],) {
  %428 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %426 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %427 = %426.0;
    (%427,)
  };
  %428() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_1496(%var_1495: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %433 = fn (%var_1483: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
    %429 = cast(%var_1483, dtype="float32") /* ty=Tensor[(336), float32] */;
    %430 = reshape(%429, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
    %431 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
    %432 = @func_425(%430) /* ty=Tensor[(7, 4, 12), float32] */;
    (%431, %432, %var_1483)
  };
  %433(%var_1495) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */
}

def @func_8958() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_8956() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_11122(%var_11121: Tensor[(16, 2, 11), float64]) -> (Tensor[(16, 2, 11), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32]) {
  %442 = fn (%var_11082: Tensor[(16, 2, 11), float64]) -> (Tensor[(16, 2, 11), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32]) {
    %434 = cast(%var_11082, dtype="float64") /* ty=Tensor[(16, 2, 11), float64] */;
    %435 = @func_7579() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %436 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
    %437 = @func_6364() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */;
    %438 = sinh(%434) /* ty=Tensor[(16, 2, 11), float64] */;
    %439 = %435.0;
    %440 = %436.0;
    %441 = %437.1;
    (%438, %439, %440, %441)
  };
  %442(%var_11121) /* ty=(Tensor[(16, 2, 11), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32]) */
}

def @func_1840() -> (Tensor[(2, 9, 6), float32],) {
  @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_10152() -> (Tensor[(2, 9, 6), float32], Tensor[(13, 14, 15), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %453 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(13, 14, 15), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %443 = cast(meta[relay.Constant][20] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %444 = cast(meta[relay.Constant][20] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %445 = reshape(%443, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
    %446 = reshape(%444, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
    %447 = @func_4971(%445, %446) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) */;
    %448 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %449 = @func_7553() /* ty=Tensor[(2, 9, 6), float32] */;
    %450 = %447.3;
    %451 = %448.0;
    %452 = @func_1579() /* ty=Tensor[(2, 9, 6), float32] */;
    (%449, %450, meta[relay.Constant][20] /* ty=Tensor[(336), float32] */, %451, %452)
  };
  %453() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(13, 14, 15), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_427(%var_426: Tensor[(7, 4, 12), float32]) -> Tensor[(7, 4, 12), float32] {
  %458 = fn (%var_420: Tensor[(7, 4, 12), float32]) -> Tensor[(7, 4, 12), float32] {
    %454 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
    %455 = shape_of(%var_420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%var_420, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    subtract(%456, %457) /* ty=Tensor[(7, 4, 12), float32] */
  };
  %458(%var_426) /* ty=Tensor[(7, 4, 12), float32] */
}

def @func_3790() -> (Tensor[(2, 9, 6), float32],) {
  @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_360(%var_359: Tensor[(10, 7, 4), float32]) -> (Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) {
  %467 = fn (%var_344: Tensor[(10, 7, 4), float32]) -> (Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) {
    %459 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 1), float32] */;
    %460 = cast(%var_344, dtype="float32") /* ty=Tensor[(10, 7, 4), float32] */;
    %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 1), float32] */;
    %462 = cast(meta[relay.Constant][23] /* ty=Tensor[(384, 2), float64] */, dtype="float64") /* ty=Tensor[(384, 2), float64] */;
    %463 = reshape(%462, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %464 = floor_mod(%459, %460) /* ty=Tensor[(10, 7, 4), float32] */;
    %465 = atan(%461) /* ty=Tensor[(1, 7, 1), float32] */;
    %466 = @func_3(%463) /* ty=Tensor[(3, 16, 16), float64] */;
    (%464, %465, %466, meta[relay.Constant][23] /* ty=Tensor[(384, 2), float64] */)
  };
  %467(%var_359) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */
}

def @func_13175() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %468 = @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %469 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %470 = @func_11313() /* ty=Tensor[(2, 9, 6), float32] */;
  %471 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %472 = @func_10102() /* ty=Tensor[(2, 9, 6), float32] */;
  %473 = %468.1;
  (%469, %470, %471, %472, %473)
}

def @func_3678(%var_3676: Tensor[(1, 14, 12), float64], %var_3677: Tensor[(10, 14, 12), float64]) -> (Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %481 = fn (%var_3646: Tensor[(1, 14, 12), float64], %var_3655: Tensor[(10, 14, 12), float64]) -> (Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %474 = cast(%var_3646, dtype="float64") /* ty=Tensor[(1, 14, 12), float64] */;
    %475 = cast(%var_3646, dtype="bool") /* ty=Tensor[(1, 14, 12), bool] */;
    %476 = cast(%var_3655, dtype="bool") /* ty=Tensor[(10, 14, 12), bool] */;
    %477 = atanh(%474) /* ty=Tensor[(1, 14, 12), float64] */;
    %478 = less_equal(%475, %476) /* ty=Tensor[(10, 14, 12), bool] */;
    %479 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
    %480 = @func_2820() /* ty=Tensor[(2, 9, 6), float32] */;
    (%477, %478, %479, %480)
  };
  %481(%var_3676, %var_3677) /* ty=(Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_8437() -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_12244(%var_12237: Tensor[(1, 3, 5), int16], %var_12238: Tensor[(11, 3, 5), int16]) -> (Tensor[(11, 3, 5), int16], Tensor[(1, 3, 5), float64]) {
  %482 = cast(%var_12237, dtype="int16") /* ty=Tensor[(1, 3, 5), int16] */;
  %483 = cast(%var_12238, dtype="int16") /* ty=Tensor[(11, 3, 5), int16] */;
  %484 = cast(%var_12237, dtype="float64") /* ty=Tensor[(1, 3, 5), float64] */;
  %485 = bitwise_xor(%482, %483) /* ty=Tensor[(11, 3, 5), int16] */;
  %486 = asin(%484) /* ty=Tensor[(1, 3, 5), float64] */;
  (%485, %486)
}

def @func_2782() -> Tensor[(3, 16, 16), float64] {
  %488 = fn () -> Tensor[(3, 16, 16), float64] {
    %487 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
    %487.1
  };
  %488() /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_8262(%var_8260: Tensor[(84), float64], %var_8261: Tensor[(336, 16), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(144), float64], Tensor[(336, 768), bool], Tensor[(84), float64], Tensor[(84), float64], Tensor[(336, 16), float32]) {
  @func_8258(%var_8260, %var_8261) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(144), float64], Tensor[(336, 768), bool], Tensor[(84), float64], Tensor[(84), float64], Tensor[(336, 16), float32]) */
}

def @func_11924() -> Tensor[(2, 9, 6), float32] {
  %490 = fn () -> Tensor[(2, 9, 6), float32] {
    %489 = @func_10096() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %489.1
  };
  %490() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_6365() -> (Tensor[(3, 16, 16), float64], Tensor[(280), float32]) {
  %495 = fn () -> (Tensor[(3, 16, 16), float64], Tensor[(280), float32]) {
    %491 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
    %492 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %493 = %491.1;
    %494 = %492.4;
    (%493, %494)
  };
  %495() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */
}

def @func_6047() -> Tensor[(2, 9, 6), float32] {
  %496 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %496.0
}

def @func_7230() -> (Tensor[(768), float64],) {
  %499 = fn () -> (Tensor[(768), float64],) {
    %497 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
    %498 = %497.2;
    (%498,)
  };
  %499() /* ty=(Tensor[(768), float64],) */
}

def @func_10452(%var_10450: Tensor[(13, 13), uint64]) -> (Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(13, 13), uint64], Tensor[(507), uint64], Tensor[(2, 9, 6), float32]) {
  @func_10449(%var_10450) /* ty=(Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(13, 13), uint64], Tensor[(507), uint64], Tensor[(2, 9, 6), float32]) */
}

def @func_4537() -> (Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  @func_4535() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */
}

def @func_9973(%var_9972: Tensor[(9, 6, 8), float64]) -> (Tensor[(9, 6, 8), float64], Tensor[(2, 9, 6), float32]) {
  %505 = fn (%var_9939: Tensor[(9, 6, 8), float64]) -> (Tensor[(9, 6, 8), float64], Tensor[(2, 9, 6), float32]) {
    %500 = cast(5.99716f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %501 = cast(%var_9939, dtype="float64") /* ty=Tensor[(9, 6, 8), float64] */;
    %502 = @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %503 = multiply(%500, %501) /* ty=Tensor[(9, 6, 8), float64] */;
    %504 = %502.1;
    (%503, %504)
  };
  %505(%var_9972) /* ty=(Tensor[(9, 6, 8), float64], Tensor[(2, 9, 6), float32]) */
}

def @func_10868() -> Tensor[(2, 9, 6), float32] {
  %506 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_9142() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %506() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_7082() -> (Tensor[(2, 9, 6), float32],) {
  %507 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %508 = %507.0;
  (%508,)
}

def @func_8845() -> (Tensor[(2, 9, 6), float32],) {
  %510 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %509 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
    (%509,)
  };
  %510() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_10987() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %518 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %511 = @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %512 = @func_5389() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %513 = @func_7450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %514 = %511.0;
    %515 = %512.0;
    %516 = %513.1;
    %517 = @func_8539() /* ty=Tensor[(2, 9, 6), float32] */;
    (%514, %515, %516, %517)
  };
  %518() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_13373() -> (Tensor[(3, 16, 16), float64],) {
  %519 = @func_6730() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) */;
  %520 = %519.1;
  (%520,)
}

def @func_9074() -> Tensor[(768), float64] {
  %521 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
  %521.2
}

def @func_12840(%var_12839: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(48), uint64], Tensor[(336), float32]) {
  %532 = fn (%var_12831: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(48), uint64], Tensor[(336), float32]) {
    %522 = @func_12472() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %523 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %524 = cast(meta[relay.Constant][24] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %525 = cast(%var_12831, dtype="float32") /* ty=Tensor[(336), float32] */;
    %526 = reshape(%523, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
    %527 = reshape(%524, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
    %528 = reshape(%525, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %529 = @func_2916(%526, %527, %528) /* ty=(Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) */;
    %530 = %522.0;
    %531 = %529.1;
    (%530, %531, meta[relay.Constant][24] /* ty=Tensor[(48), uint64] */, %var_12831)
  };
  %532(%var_12839) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(48), uint64], Tensor[(336), float32]) */
}

def @func_6277(%var_6275: Tensor[(1800), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) {
  @func_6274(%var_6275) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) */
}

def @func_9096() -> (Tensor[(2, 9, 6), float32],) {
  %535 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %533 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %534 = %533.0;
    (%534,)
  };
  %535() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_6587() -> Tensor[(2, 9, 6), float32] {
  %537 = fn () -> Tensor[(2, 9, 6), float32] {
    %536 = @func_3225() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */;
    %536.0
  };
  %537() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_12934(%var_12933: Tensor[(22, 5), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(11, 10, 1), float64], Tensor[(22, 5), float64]) {
  %545 = fn (%var_12927: Tensor[(22, 5), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(11, 10, 1), float64], Tensor[(22, 5), float64]) {
    %538 = @func_5508() /* ty=(Tensor[(384), float32],) */;
    %539 = cast(%var_12927, dtype="float64") /* ty=Tensor[(22, 5), float64] */;
    %540 = reshape(%539, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float64] */;
    %541 = @func_8931(%540) /* ty=(Tensor[(11, 10, 1), float64],) */;
    %542 = @func_5649() /* ty=Tensor[(2, 9, 6), float32] */;
    %543 = %538.0;
    %544 = %541.0;
    (%542, %543, %544, %var_12927)
  };
  %545(%var_12933) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(11, 10, 1), float64], Tensor[(22, 5), float64]) */
}

def @func_6785(%var_6783: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) {
  @func_6782(%var_6783) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) */
}

def @func_5481() -> (Tensor[(2, 9, 6), float32],) {
  %546 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %547 = %546.0;
  (%547,)
}

def @func_10701(%var_10694: Tensor[(507), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(507), float32], Tensor[(507), uint64]) {
  %548 = @func_6421() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %549 = cast(%var_10694, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %550 = reshape(%549, newshape=[507]) /* ty=Tensor[(507), uint64] */;
  %551 = @func_8082(%550) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) */;
  %552 = %548.1;
  %553 = @func_4188() /* ty=Tensor[(2, 9, 6), float32] */;
  %554 = %551.3;
  (%552, %553, %554, %var_10694)
}

def @func_12723() -> (Tensor[(48), uint64], Tensor[(2, 9, 6), float32]) {
  %555 = @func_7014() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
  %556 = %555.1;
  %557 = @func_7962() /* ty=Tensor[(2, 9, 6), float32] */;
  (%556, %557)
}

def @func_9633() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %558 = @func_7380() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %559 = @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
  %560 = %558.1;
  %561 = %559.1;
  (%560, %561)
}

def @func_9287() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %562 = @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %563 = %562.0;
  %564 = @func_7614() /* ty=Tensor[(2, 9, 6), float32] */;
  (%563, %564)
}

def @func_3934() -> (Tensor[(2, 9, 6), float32],) {
  @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_2227(%var_2226: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  %572 = fn (%var_2204: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
    %565 = cast(%var_2204, dtype="float32") /* ty=Tensor[(336), float32] */;
    %566 = reshape(%565, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
    %567 = @func_2082(%566) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
    %568 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %569 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
    %570 = %567.2;
    %571 = %568.0;
    (%569, %570, %var_2204, %571)
  };
  %572(%var_2226) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_3514() -> Tensor[(2, 9, 6), float32] {
  @func_3512() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_6049() -> Tensor[(2, 9, 6), float32] {
  @func_6047() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_6006(%var_5916: Tensor[(1848), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  %573 = @func_4741() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %574 = cast(%var_5916, dtype="float32") /* ty=Tensor[(1848), float32] */;
  %575 = reshape(%574, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), float32] */;
  %576 = @func_1570(%575) /* ty=(Tensor[(12, 14, 11), float32],) */;
  %577 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %578 = %576.0;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %580 = reshape(%579, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), float32] */;
  %581 = @func_1570(%580) /* ty=(Tensor[(12, 14, 11), float32],) */;
  %582 = cast(meta[relay.Constant][25] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %583 = reshape(%582, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %584 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %585 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
  %586 = %573.0;
  %587 = %577.0;
  %588 = %581.0;
  %589 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  %590 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
  %591 = @func_425(%583) /* ty=Tensor[(7, 4, 12), float32] */;
  %592 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  (%584, %585, %586, %578, %var_5916, %587, %588, %589, %590, %591, meta[relay.Constant][25] /* ty=Tensor[(336), float32] */, %592)
}

def @func_1631() -> Tensor[(2, 9, 6), float32] {
  %593 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %593.0
}

def @func_7121(%var_7120: Tensor[(4, 1, 2), float32]) -> (Tensor[(4, 1, 2), float32],) {
  %596 = fn (%var_7113: Tensor[(4, 1, 2), float32]) -> (Tensor[(4, 1, 2), float32],) {
    %594 = cast(%var_7113, dtype="float32") /* ty=Tensor[(4, 1, 2), float32] */;
    %595 = acos(%594) /* ty=Tensor[(4, 1, 2), float32] */;
    (%595,)
  };
  %596(%var_7120) /* ty=(Tensor[(4, 1, 2), float32],) */
}

def @func_10790() -> (Tensor[(4, 11, 14), bool],) {
  %604 = fn () -> (Tensor[(4, 11, 14), bool],) {
    %597 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 11, 14), float64] */, dtype="float64") /* ty=Tensor[(4, 11, 14), float64] */;
    %598 = sinh(%597) /* ty=Tensor[(4, 11, 14), float64] */;
    %599 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 11, 14), float64] */, dtype="bool") /* ty=Tensor[(4, 11, 14), bool] */;
    %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%598, dtype="bool") /* ty=Tensor[(4, 11, 14), bool] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %603 = less(%601, %602) /* ty=Tensor[(4, 11, 14), bool] */;
    (%603,)
  };
  %604() /* ty=(Tensor[(4, 11, 14), bool],) */
}

def @func_8800() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %605 = @func_1607() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %606 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %607 = %605.0;
  %608 = %606.1;
  (%607, %608)
}

def @func_3886() -> Tensor[(3, 16, 16), float64] {
  %610 = fn () -> Tensor[(3, 16, 16), float64] {
    %609 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %609.1
  };
  %610() /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_5445() -> Tensor[(3, 16, 16), float64] {
  %611 = fn () -> Tensor[(3, 16, 16), float64] {
    @func_3885() /* ty=Tensor[(3, 16, 16), float64] */
  };
  %611() /* ty=Tensor[(3, 16, 16), float64] */
}

def @func_9893(%var_9892: Tensor[(768), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(384), float32]) {
  %621 = fn (%var_9879: Tensor[(768), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(384), float32]) {
    %612 = @func_8709() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
    %613 = @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %614 = cast(%var_9879, dtype="float64") /* ty=Tensor[(768), float64] */;
    %615 = reshape(%614, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %616 = @func_8124() /* ty=(Tensor[(384), float32],) */;
    %617 = %612.1;
    %618 = %613.1;
    %619 = @func_3(%615) /* ty=Tensor[(3, 16, 16), float64] */;
    %620 = %616.0;
    (%617, %618, %619, %var_9879, %620)
  };
  %621(%var_9892) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(384), float32]) */
}

def @func_11173(%var_11171: Tensor[(1, 3, 7), float32], %var_11172: Tensor[(12, 3, 7), float32]) -> (Tensor[(12, 3, 7), float32], Tensor[(2, 9, 6), float32]) {
  @func_11169(%var_11171, %var_11172) /* ty=(Tensor[(12, 3, 7), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_1608() -> (Tensor[(2, 9, 6), float32],) {
  %623 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %622 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
    (%622,)
  };
  %623() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_5183(%var_5098: Tensor[(2, 648), int32], %var_5121: int8, %var_5122: Tensor[(2730), int8]) -> (Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], int8, Tensor[(2730), int8], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 648), float32]) {
  %624 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %625 = cast(%var_5098, dtype="int32") /* ty=Tensor[(2, 648), int32] */;
  %626 = reshape(%625, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), int32] */;
  %627 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %628 = cast(%var_5121, dtype="int8") /* ty=int8 */;
  %629 = cast(%var_5122, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %630 = reshape(%628, newshape=[]) /* ty=int8 */;
  %631 = reshape(%629, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %632 = @func_1073(%630, %631) /* ty=(Tensor[(13, 14, 15), int8], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(280), float32], Tensor[(13, 14, 15), float32]) */;
  %633 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %634 = cast(%var_5098, dtype="float32") /* ty=Tensor[(2, 648), float32] */;
  %635 = %624.0;
  %636 = @func_2731(%626) /* ty=Tensor[(9, 12, 12), int32] */;
  %637 = %627.0;
  %638 = %632.2;
  %639 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  %640 = %633.0;
  %641 = erf(%634) /* ty=Tensor[(2, 648), float32] */;
  (%635, %636, %637, %638, %var_5121, %var_5122, %639, %640, %641)
}

def @func_11819() -> (Tensor[(2, 9, 6), float32],) {
  %642 = @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %643 = %642.0;
  (%643,)
}

def @func_6838() -> (Tensor[(384), float32],) {
  @func_6836() /* ty=(Tensor[(384), float32],) */
}

def @func_11839() -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64]) {
  %647 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64]) {
    %644 = @func_7380() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %645 = %644.0;
    %646 = @func_9074() /* ty=Tensor[(768), float64] */;
    (%645, %646)
  };
  %647() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */
}

def @func_2640(%var_2638: Tensor[(336), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %648 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %649 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %650 = @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */;
  %651 = cast(%var_2638, dtype="float32") /* ty=Tensor[(336), float32] */;
  %652 = reshape(%651, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %653 = @func_1494(%652) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %654 = %648.0;
  %655 = %649.0;
  %656 = %650.2;
  %657 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  %658 = %653.1;
  (%654, %655, %656, %657, %658, %var_2638)
}

def @func_3226() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) {
  %664 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) {
    %659 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %660 = %659.0;
    %661 = cast(%660, dtype="float32") /* ty=Tensor[(2, 9, 6), float32] */;
    %662 = reshape(%661, newshape=[2, 9, 6]) /* ty=Tensor[(2, 9, 6), float32] */;
    %663 = @func_2051(%662) /* ty=Tensor[(2, 9, 6), bool] */;
    (%660, %663)
  };
  %664() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool]) */
}

def @func_2953() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %665 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  %666 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  (%665, %666)
}

def @func_5651() -> Tensor[(2, 9, 6), float32] {
  @func_5649() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_4162() -> (Tensor[(15, 3, 6), float32],) {
  %668 = fn () -> (Tensor[(15, 3, 6), float32],) {
    %667 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
    (%667,)
  };
  %668() /* ty=(Tensor[(15, 3, 6), float32],) */
}

def @func_6117() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %677 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %669 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %670 = @func_1992() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %671 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %672 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %673 = %669.0;
    %674 = %670.0;
    %675 = %671.0;
    %676 = %672.0;
    (%673, %674, %675, %676)
  };
  %677() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_6404(%var_6401: Tensor[(144), float64], %var_6402: Tensor[(168), float64], %var_6403: Tensor[(1680), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(144), float64], Tensor[(1, 14, 12), float64], Tensor[(168), float64], Tensor[(1680), float64]) {
  %689 = fn (%var_6387: Tensor[(144), float64], %var_6397: Tensor[(168), float64], %var_6398: Tensor[(1680), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(144), float64], Tensor[(1, 14, 12), float64], Tensor[(168), float64], Tensor[(1680), float64]) {
    %678 = cast(%var_6387, dtype="float64") /* ty=Tensor[(144), float64] */;
    %679 = reshape(%678, newshape=[6, 4, 6]) /* ty=Tensor[(6, 4, 6), float64] */;
    %680 = @func_3841(%679) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %681 = cast(%var_6397, dtype="float64") /* ty=Tensor[(168), float64] */;
    %682 = cast(%var_6398, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %683 = reshape(%681, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
    %684 = reshape(%682, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), float64] */;
    %685 = @func_3675(%683, %684) /* ty=(Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %686 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
    %687 = %680.1;
    %688 = %685.0;
    (%686, %687, %var_6387, %688, %var_6397, %var_6398)
  };
  %689(%var_6401, %var_6402, %var_6403) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(768), float64], Tensor[(144), float64], Tensor[(1, 14, 12), float64], Tensor[(168), float64], Tensor[(1680), float64]) */
}

def @func_10486() -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(168, 2), float32]) {
  %690 = @func_9696() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %691 = cast(meta[relay.Constant][27] /* ty=Tensor[(168, 2), float32] */, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %692 = reshape(%691, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %693 = @func_1494(%692) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %694 = %690.1;
  %695 = %693.0;
  (%694, %695, meta[relay.Constant][27] /* ty=Tensor[(168, 2), float32] */)
}

def @func_11494() -> Tensor[(2, 9, 6), float32] {
  %696 = @func_4741() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %696.0
}

def @func_7580() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %701 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %697 = @func_7014() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
    %698 = @func_5599() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) */;
    %699 = %697.3;
    %700 = %698.0;
    (%699, %700)
  };
  %701() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_6068() -> (Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) {
  %710 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) {
    %702 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %703 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %704 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %705 = reshape(%703, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
    %706 = reshape(%704, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
    %707 = @func_4971(%705, %706) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 168), bool], Tensor[(13, 14, 15), float32], int8, Tensor[(2730), int8]) */;
    %708 = %702.0;
    %709 = %707.5;
    (%708, %709, meta[relay.Constant][28] /* ty=Tensor[(2, 168), float32] */)
  };
  %710() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) */
}

def @func_11573() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  @func_11571() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */
}

def @func_13015() -> (Tensor[(2, 9, 6), float32],) {
  @func_13013() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_7015() -> (Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  %719 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
    %711 = @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %712 = @func_5599() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) */;
    %713 = @func_6730() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) */;
    %714 = @func_3788() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %715 = %711.0;
    %716 = %712.2;
    %717 = %713.1;
    %718 = %714.0;
    (%715, %716, %717, %718)
  };
  %719() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(48), uint64], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */
}

def @func_12481() -> Tensor[(2, 9, 6), float32] {
  @func_12479() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_499(%var_498: Tensor[(2, 12, 16), float32]) -> (Tensor[(2, 12, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(280), float32], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64]) {
  %743 = fn (%var_451: Tensor[(2, 12, 16), float32]) -> (Tensor[(2, 12, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(280), float32], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64]) {
    %720 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 12, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
    %721 = shape_of(%var_451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %722 = cast(%var_451, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
    %723 = dyn.reshape(%720, %721, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %724 = subtract(%722, %723) /* ty=Tensor[(2, 12, 16), float32] */;
    %725 = cast(%724, dtype="float32") /* ty=Tensor[(2, 12, 16), float32] */;
    %726 = cast(meta[relay.Constant][30] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %727 = reshape(%726, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %728 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %729 = reshape(%728, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
    %730 = @func_358(%729) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
    %731 = @func_3(%727) /* ty=Tensor[(3, 16, 16), float64] */;
    %732 = cast(%731, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
    %733 = reshape(%732, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %734 = %730.2;
    %735 = cast(%734, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
    %736 = reshape(%735, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %737 = cast(meta[relay.Constant][30] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %738 = reshape(%737, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %739 = exp(%725) /* ty=Tensor[(2, 12, 16), float32] */;
    %740 = @func_3(%733) /* ty=Tensor[(3, 16, 16), float64] */;
    %741 = @func_3(%736) /* ty=Tensor[(3, 16, 16), float64] */;
    %742 = @func_3(%738) /* ty=Tensor[(3, 16, 16), float64] */;
    (%739, %731, meta[relay.Constant][30] /* ty=Tensor[(768), float64] */, %734, meta[relay.Constant][31] /* ty=Tensor[(280), float32] */, %740, %741, %742)
  };
  %743(%var_498) /* ty=(Tensor[(2, 12, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(280), float32], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64]) */
}

def @func_7597() -> (Tensor[(3, 16, 16), float64],) {
  @func_7595() /* ty=(Tensor[(3, 16, 16), float64],) */
}

def @func_12127() -> Tensor[(2, 9, 6), float32] {
  %745 = fn () -> Tensor[(2, 9, 6), float32] {
    %744 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %744.0
  };
  %745() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_11484() -> (Tensor[(2, 9, 6), float32],) {
  %746 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %747 = %746.0;
  (%747,)
}

def @func_8091() -> (Tensor[(280), float32],) {
  %748 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %749 = %748.4;
  (%749,)
}

def @func_959() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) {
  %759 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) {
    %750 = cast(meta[relay.Constant][32] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %751 = reshape(%750, newshape=[2, 12, 16]) /* ty=Tensor[(2, 12, 16), float32] */;
    %752 = @func_497(%751) /* ty=(Tensor[(2, 12, 16), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(280), float32], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), float64]) */;
    %753 = cast(meta[relay.Constant][33] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %754 = reshape(%753, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
    %755 = @func_358(%754) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
    %756 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
    %757 = %752.1;
    %758 = %755.3;
    (%756, %757, meta[relay.Constant][32] /* ty=Tensor[(384), float32] */, %758, meta[relay.Constant][33] /* ty=Tensor[(280), float32] */)
  };
  %759() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */
}

def @func_4879(%var_4877: Tensor[(78), int64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(78), int64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float32]) {
  @func_4876(%var_4877) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(78), int64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float32]) */
}

def @func_6146(%var_6144: Tensor[(10, 9, 8), uint8], %var_6145: Tensor[(1848), float32]) -> (Tensor[(10, 9, 8), uint8], Tensor[(1848), float32], Tensor[(1848), float64]) {
  %771 = fn (%var_6129: Tensor[(10, 9, 8), uint8], %var_6135: Tensor[(1848), float32]) -> (Tensor[(10, 9, 8), uint8], Tensor[(1848), float32], Tensor[(1848), float64]) {
    %760 = cast(%var_6129, dtype="uint8") /* ty=Tensor[(10, 9, 8), uint8] */;
    %761 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(10, 9, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %762 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 9, 8), uint8] */, dtype="uint8") /* ty=Tensor[(10, 9, 8), uint8] */;
    %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %764 = cast(%var_6135, dtype="float32") /* ty=Tensor[(1848), float32] */;
    %765 = reshape(%764, newshape=[1848]) /* ty=Tensor[(1848), float32] */;
    %766 = @func_6006(%765) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(1848), float32], Tensor[(2, 9, 6), float32], Tensor[(12, 14, 11), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */;
    %767 = %766.4;
    %768 = cast(%767, dtype="float64") /* ty=Tensor[(1848), float64] */;
    %769 = bitwise_xor(%762, %763) /* ty=Tensor[(10, 9, 8), uint8] */;
    %770 = sigmoid(%768) /* ty=Tensor[(1848), float64] */;
    (%769, %var_6135, %770)
  };
  %771(%var_6144, %var_6145) /* ty=(Tensor[(10, 9, 8), uint8], Tensor[(1848), float32], Tensor[(1848), float64]) */
}

def @func_3909(%var_3908: Tensor[(336), float32]) -> (Tensor[(768), float64], Tensor[(6, 4, 6), float64], Tensor[(144), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
  %781 = fn (%var_3902: Tensor[(336), float32]) -> (Tensor[(768), float64], Tensor[(6, 4, 6), float64], Tensor[(144), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) {
    %772 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
    %773 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
    %774 = reshape(%773, newshape=[6, 4, 6]) /* ty=Tensor[(6, 4, 6), float64] */;
    %775 = @func_3841(%774) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %776 = cast(%var_3902, dtype="float32") /* ty=Tensor[(336), float32] */;
    %777 = reshape(%776, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
    %778 = %772.2;
    %779 = %775.0;
    %780 = @func_425(%777) /* ty=Tensor[(7, 4, 12), float32] */;
    (%778, %779, meta[relay.Constant][35] /* ty=Tensor[(144), float64] */, %780, %var_3902)
  };
  %781(%var_3908) /* ty=(Tensor[(768), float64], Tensor[(6, 4, 6), float64], Tensor[(144), float64], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */
}

def @func_8628() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(264, 2), int64]) {
  %792 = fn () -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(264, 2), int64]) {
    %782 = @func_6364() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */;
    %783 = cast(meta[relay.Constant][36] /* ty=Tensor[(264, 2), int64] */, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
    %784 = cast(meta[relay.Constant][36] /* ty=Tensor[(264, 2), int64] */, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
    %785 = cast(meta[relay.Constant][36] /* ty=Tensor[(264, 2), int64] */, dtype="int64") /* ty=Tensor[(264, 2), int64] */;
    %786 = reshape(%783, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
    %787 = reshape(%784, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
    %788 = reshape(%785, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), int64] */;
    %789 = @func_3026(%786, %787, %788) /* ty=(Tensor[(11, 4, 12), int64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32], Tensor[(11, 4, 12), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %790 = %782.0;
    %791 = %789.6;
    (%790, %791, meta[relay.Constant][36] /* ty=Tensor[(264, 2), int64] */)
  };
  %792() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(264, 2), int64]) */
}

def @func_12957() -> (Tensor[(2, 9, 6), float32],) {
  %795 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %793 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %794 = %793.0;
    (%794,)
  };
  %795() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_12625() -> (Tensor[(2, 9, 6), float32], Tensor[(5, 56), float32], Tensor[(280), float32], Tensor[(768, ?), float32]) {
  %796 = @func_7579() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %797 = cast(meta[relay.Constant][37] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %798 = reshape(%797, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %799 = @func_4725(%798) /* ty=(Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) */;
  %800 = cast(meta[relay.Constant][38] /* ty=Tensor[(768, 1), float64] */, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %801 = tan(%800) /* ty=Tensor[(768, 1), float32] */;
  %802 = cast(meta[relay.Constant][38] /* ty=Tensor[(768, 1), float64] */, dtype="float64") /* ty=Tensor[(768, 1), float64] */;
  %803 = reshape(%802, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %804 = @func_9804(%803) /* ty=Tensor[(768), bool] */;
  %805 = cast(%804, dtype="int64") /* ty=Tensor[(768), int64] */;
  %806 = shape_of(%801, dtype="int32") /* ty=Tensor[(2), int32] */;
  %807 = cast(%801, dtype="int64") /* ty=Tensor[(768, 1), int64] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %809 = minimum(%807, %808) /* ty=Tensor[(768, ?), int64] */;
  %810 = cast(meta[relay.Constant][38] /* ty=Tensor[(768, 1), float64] */, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(2), int32] */;
  %812 = cast(%809, dtype="float32") /* ty=Tensor[(768, ?), float32] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %814 = %796.0;
  %815 = %799.2;
  %816 = divide(%812, %813) /* ty=Tensor[(768, ?), float32] */;
  (%814, %815, meta[relay.Constant][37] /* ty=Tensor[(280), float32] */, %816)
}

def @func_11486() -> (Tensor[(2, 9, 6), float32],) {
  @func_11484() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_1580() -> Tensor[(2, 9, 6), float32] {
  %817 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_612() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %817() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_1633() -> Tensor[(2, 9, 6), float32] {
  @func_1631() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_7595() -> (Tensor[(3, 16, 16), float64],) {
  %818 = @func_5444() /* ty=Tensor[(3, 16, 16), float64] */;
  (%818,)
}

def @func_7262(%var_7260: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) {
  @func_7259(%var_7260) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */
}

def @func_2377(%var_2375: Tensor[(384, 2), float64], %var_2376: Tensor[(28, 4), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64], Tensor[(28, 4), float32], Tensor[(2, 7, 8), float32], Tensor[(2, 9, 6), bool], Tensor[(10, 7, 4), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
  %843 = fn (%var_2319: Tensor[(384, 2), float64], %var_2322: Tensor[(28, 4), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64], Tensor[(28, 4), float32], Tensor[(2, 7, 8), float32], Tensor[(2, 9, 6), bool], Tensor[(10, 7, 4), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) {
    %819 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %820 = cast(%var_2319, dtype="float64") /* ty=Tensor[(384, 2), float64] */;
    %821 = reshape(%820, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %822 = cast(%var_2322, dtype="float32") /* ty=Tensor[(28, 4), float32] */;
    %823 = reshape(%822, newshape=[2, 7, 8]) /* ty=Tensor[(2, 7, 8), float32] */;
    %824 = @func_2309(%823) /* ty=(Tensor[(2, 7, 8), float32],) */;
    %825 = %824.0;
    %826 = cast(%825, dtype="float32") /* ty=Tensor[(2, 7, 8), float32] */;
    %827 = %819.0;
    %828 = cast(%827, dtype="float32") /* ty=Tensor[(2, 9, 6), float32] */;
    %829 = reshape(%828, newshape=[2, 9, 6]) /* ty=Tensor[(2, 9, 6), float32] */;
    %830 = cast(meta[relay.Constant][39] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %831 = reshape(%830, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
    %832 = @func_358(%831) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
    %833 = cast(meta[relay.Constant][40] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %834 = reshape(%833, newshape=[8, 42]) /* ty=Tensor[(8, 42), float32] */;
    %835 = @func_2082(%834) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(8, 42), float32]) */;
    %836 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %837 = @func_3(%821) /* ty=Tensor[(3, 16, 16), float64] */;
    %838 = cos(%826) /* ty=Tensor[(2, 7, 8), float32] */;
    %839 = @func_2051(%829) /* ty=Tensor[(2, 9, 6), bool] */;
    %840 = %832.0;
    %841 = %835.0;
    %842 = %836.0;
    (%827, %837, %var_2319, %var_2322, %838, %839, %840, meta[relay.Constant][39] /* ty=Tensor[(280), float32] */, %841, meta[relay.Constant][40] /* ty=Tensor[(336), float32] */, %842)
  };
  %843(%var_2375, %var_2376) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64], Tensor[(28, 4), float32], Tensor[(2, 7, 8), float32], Tensor[(2, 9, 6), bool], Tensor[(10, 7, 4), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(336), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_1715() -> (Tensor[(2, 9, 6), float32],) {
  %844 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %845 = %844.0;
  (%845,)
}

def @func_7987() -> (Tensor[(2, 9, 6), float32],) {
  %846 = @func_2953() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %847 = %846.0;
  (%847,)
}

def @func_11388() -> Tensor[(384), float32] {
  @func_3455() /* ty=Tensor[(384), float32] */
}

def @func_3720() -> (Tensor[(2, 9, 6), float32],) {
  @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_4668() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %852 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %848 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %849 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %850 = %848.0;
    %851 = %849.0;
    (%850, %851)
  };
  %852() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_8319() -> (Tensor[(3, 16, 16), int64], Tensor[(2, 9, 6), float32]) {
  %853 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %854 = %853.2;
  %855 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
  (%854, %855)
}

def @func_2822() -> Tensor[(2, 9, 6), float32] {
  @func_2820() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_4188() -> Tensor[(2, 9, 6), float32] {
  @func_704() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_4130(%var_4128: Tensor[(2, 168), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(2, 168), float32], Tensor[(3, 16, 16), float64]) {
  @func_4127(%var_4128) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(2, 168), float32], Tensor[(3, 16, 16), float64]) */
}

def @func_2053(%var_2052: Tensor[(2, 9, 6), float32]) -> Tensor[(2, 9, 6), bool] {
  %862 = fn (%var_2043: Tensor[(2, 9, 6), float32]) -> Tensor[(2, 9, 6), bool] {
    %856 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %857 = %856.0;
    %858 = cast(%var_2043, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
    %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%857, dtype="bool") /* ty=Tensor[(2, 9, 6), bool] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%860, %861) /* ty=Tensor[(2, 9, 6), bool] */
  };
  %862(%var_2052) /* ty=Tensor[(2, 9, 6), bool] */
}

def @func_4465(%var_4464: Tensor[(280), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(78), int64], Tensor[(360), float64], Tensor[(280), float32], Tensor[(2, 9, 6), float32]) {
  %874 = fn (%var_4433: Tensor[(280), float32]) -> (Tensor[(3, 16, 16), float64], Tensor[(78), int64], Tensor[(360), float64], Tensor[(280), float32], Tensor[(2, 9, 6), float32]) {
    %863 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
    %864 = %863.1;
    %865 = cast(%864, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
    %866 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %867 = cast(%var_4433, dtype="float32") /* ty=Tensor[(280), float32] */;
    %868 = reshape(%866, newshape=[4, 15, 6]) /* ty=Tensor[(4, 15, 6), float64] */;
    %869 = reshape(%867, newshape=[280]) /* ty=Tensor[(280), float32] */;
    %870 = @func_1251(%868, %869) /* ty=(Tensor[(384, 2), float64], Tensor[(280), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64], Tensor[(1, 7, 1), float32], Tensor[(4, 15, 6), uint8], Tensor[(2, 9, 6), float32]) */;
    %871 = cos(%865) /* ty=Tensor[(3, 16, 16), float64] */;
    %872 = %870.3;
    %873 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
    (%871, %872, meta[relay.Constant][41] /* ty=Tensor[(360), float64] */, %var_4433, %873)
  };
  %874(%var_4464) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(78), int64], Tensor[(360), float64], Tensor[(280), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_2734(%var_2732: Tensor[(9, 12, 12), int32]) -> Tensor[(9, 12, 12), int32] {
  @func_2731(%var_2732) /* ty=Tensor[(9, 12, 12), int32] */
}

def @func_9552(%var_9550: int16, %var_9551: Tensor[(6, 1), int16]) -> (Tensor[(6, 1), int16], Tensor[(2, 9, 6), float32]) {
  %880 = fn (%var_9532: int16, %var_9533: Tensor[(6, 1), int16]) -> (Tensor[(6, 1), int16], Tensor[(2, 9, 6), float32]) {
    %875 = cast(%var_9532, dtype="int16") /* ty=int16 */;
    %876 = cast(%var_9533, dtype="int16") /* ty=Tensor[(6, 1), int16] */;
    %877 = @func_9487() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %878 = maximum(%875, %876) /* ty=Tensor[(6, 1), int16] */;
    %879 = %877.0;
    (%878, %879)
  };
  %880(%var_9550, %var_9551) /* ty=(Tensor[(6, 1), int16], Tensor[(2, 9, 6), float32]) */
}

def @func_1886(%var_1885: Tensor[(768), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) {
  %885 = fn (%var_1878: Tensor[(768), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) {
    %881 = cast(%var_1878, dtype="float64") /* ty=Tensor[(768), float64] */;
    %882 = reshape(%881, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %883 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
    %884 = @func_3(%882) /* ty=Tensor[(3, 16, 16), float64] */;
    (%883, %884, %var_1878)
  };
  %885(%var_1885) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */
}

def @func_2311(%var_2310: Tensor[(2, 7, 8), float32]) -> (Tensor[(2, 7, 8), float32],) {
  %888 = fn (%var_2306: Tensor[(2, 7, 8), float32]) -> (Tensor[(2, 7, 8), float32],) {
    %886 = cast(%var_2306, dtype="float32") /* ty=Tensor[(2, 7, 8), float32] */;
    %887 = sin(%886) /* ty=Tensor[(2, 7, 8), float32] */;
    (%887,)
  };
  %888(%var_2310) /* ty=(Tensor[(2, 7, 8), float32],) */
}

def @func_1811(%var_1761: Tensor[(7, 8, 8), float32]) -> (Tensor[(6, 2, 7), float64], Tensor[(7, 8, 8), float64], Tensor[(84, 1), float32]) {
  %889 = cast(meta[relay.Constant][42] /* ty=Tensor[(84, 1), float64] */, dtype="float64") /* ty=Tensor[(84, 1), float64] */;
  %890 = reshape(%889, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %891 = @func_1447(%890) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %892 = cast(%var_1761, dtype="float32") /* ty=Tensor[(7, 8, 8), float32] */;
  %893 = exp(%892) /* ty=Tensor[(7, 8, 8), float32] */;
  %894 = cast(%893, dtype="float64") /* ty=Tensor[(7, 8, 8), float64] */;
  %895 = cast(meta[relay.Constant][42] /* ty=Tensor[(84, 1), float64] */, dtype="float32") /* ty=Tensor[(84, 1), float32] */;
  %896 = %891.1;
  %897 = erf(%894) /* ty=Tensor[(7, 8, 8), float64] */;
  %898 = log10(%895) /* ty=Tensor[(84, 1), float32] */;
  (%896, %897, %898)
}

def @func_8924(%var_8922: Tensor[(15, 9, 8), float32]) -> (Tensor[(15, 9, 8), float32], Tensor[(2, 9, 6), float32]) {
  @func_8921(%var_8922) /* ty=(Tensor[(15, 9, 8), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_4081(%var_4069: Tensor[(6, 5, 5), float64]) -> (Tensor[(6, 5, 5), float64],) {
  %899 = cast(%var_4069, dtype="float64") /* ty=Tensor[(6, 5, 5), float64] */;
  %900 = log10(%899) /* ty=Tensor[(6, 5, 5), float64] */;
  (%900,)
}

def @func_4741() -> (Tensor[(2, 9, 6), float32],) {
  %901 = @func_4041() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %902 = %901.0;
  (%902,)
}

def @func_4127(%var_4123: Tensor[(2, 168), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(2, 168), float32], Tensor[(3, 16, 16), float64]) {
  %903 = cast(%var_4123, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %904 = reshape(%903, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %905 = @func_2640(%904) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %906 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %907 = %905.4;
  %908 = @func_2781() /* ty=Tensor[(3, 16, 16), float64] */;
  (%906, %907, %var_4123, %908)
}

def @func_7615() -> Tensor[(2, 9, 6), float32] {
  %910 = fn () -> Tensor[(2, 9, 6), float32] {
    %909 = @func_5389() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %909.0
  };
  %910() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_6782(%var_6757: Tensor[(84), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) {
  %911 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %912 = cast(%var_6757, dtype="float64") /* ty=Tensor[(84), float64] */;
  %913 = reshape(%912, newshape=[84]) /* ty=Tensor[(84), float64] */;
  %914 = @func_1447(%913) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(84), float64]) */;
  %915 = %911.0;
  %916 = %914.2;
  (%915, %916, %var_6757)
}

def @func_13145(%var_13143: Tensor[(2, 7, 12), float32], %var_13144: Tensor[(2, 7, 12), float32]) -> Tensor[(2, 7, 12), float32] {
  @func_13141(%var_13143, %var_13144) /* ty=Tensor[(2, 7, 12), float32] */
}

def @func_10294() -> (Tensor[(2, 9, 6), float32],) {
  @func_10292() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_8084(%var_8083: Tensor[(507), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) {
  %929 = fn (%var_8046: Tensor[(507), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) {
    %917 = cast(meta[relay.Constant][43] /* ty=Tensor[(169), uint64] */, dtype="uint64") /* ty=Tensor[(169), uint64] */;
    %918 = cast(%var_8046, dtype="uint64") /* ty=Tensor[(507), uint64] */;
    %919 = reshape(%917, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
    %920 = reshape(%918, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), uint64] */;
    %921 = @func_7697(%919, %920) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */;
    %922 = cast(meta[relay.Constant][44] /* ty=Tensor[(507), uint64] */, dtype="float32") /* ty=Tensor[(507), float32] */;
    %923 = shape_of(%var_8046, dtype="int32") /* ty=Tensor[(1), int32] */;
    %924 = cast(%var_8046, dtype="float32") /* ty=Tensor[(507), float32] */;
    %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?), float32] */;
    %926 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
    %927 = %921.1;
    %928 = floor_divide(%924, %925) /* ty=Tensor[(507), float32] */;
    (%926, %927, meta[relay.Constant][43] /* ty=Tensor[(169), uint64] */, %928)
  };
  %929(%var_8083) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) */
}

def @func_852(%var_850: Tensor[(13, 2, 3), int64]) -> (Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) {
  @func_849(%var_850) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */
}

def @func_3984() -> (Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) {
  @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */
}

def @func_8214() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %930 = @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %931 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %932 = %930.0;
  %933 = %931.0;
  (%932, %933)
}

def @func_5326(%var_5324: Tensor[(78), int64]) -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64]) {
  %934 = cast(%var_5324, dtype="int64") /* ty=Tensor[(78), int64] */;
  %935 = reshape(%934, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), int64] */;
  %936 = @func_849(%935) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */;
  %937 = @func_3885() /* ty=Tensor[(3, 16, 16), float64] */;
  %938 = @func_1579() /* ty=Tensor[(2, 9, 6), float32] */;
  %939 = %936.2;
  (%937, %938, %939, %var_5324)
}

def @func_10292() -> (Tensor[(2, 9, 6), float32],) {
  %940 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %941 = %940.0;
  (%941,)
}

def @func_12248(%var_12246: Tensor[(1, 3, 5), int16], %var_12247: Tensor[(11, 3, 5), int16]) -> (Tensor[(11, 3, 5), int16], Tensor[(1, 3, 5), float64]) {
  @func_12244(%var_12246, %var_12247) /* ty=(Tensor[(11, 3, 5), int16], Tensor[(1, 3, 5), float64]) */
}

def @main() -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(507), bool]) {
  %942 = @func_3984() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
  %943 = cast(meta[relay.Constant][45] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %944 = reshape(%943, newshape=[507]) /* ty=Tensor[(507), uint64] */;
  %945 = @func_10704(%944) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(507), float32], Tensor[(507), uint64]) */;
  %946 = @func_9935() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], uint32) */;
  %947 = %946.3;
  %948 = cast(meta[relay.Constant][45] /* ty=Tensor[(507), uint64] */, dtype="bool") /* ty=Tensor[(507), bool] */;
  %949 = cast(%947, dtype="bool") /* ty=bool */;
  %950 = %942.1;
  %951 = %945.0;
  %952 = logical_or(%948, %949) /* ty=Tensor[(507), bool] */;
  (%950, %951, %952)
}

def @func_11594() -> Tensor[(15, 3, 6), float64] {
  @func_11592() /* ty=Tensor[(15, 3, 6), float64] */
}

def @func_13255(%var_13254: uint32) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), uint64], Tensor[(3, 16, 16), float64], uint32) {
  %964 = fn (%var_13251: uint32) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), uint64], Tensor[(3, 16, 16), float64], uint32) {
    %953 = @func_12472() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %954 = cast(meta[relay.Constant][46] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
    %955 = reshape(%954, newshape=[507]) /* ty=Tensor[(507), uint64] */;
    %956 = @func_8082(%955) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), float32]) */;
    %957 = cast(%var_13251, dtype="uint32") /* ty=uint32 */;
    %958 = reshape(%957, newshape=[]) /* ty=uint32 */;
    %959 = @func_9835(%958) /* ty=(Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
    %960 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
    %961 = %953.0;
    %962 = %956.2;
    %963 = %959.1;
    (%960, %961, %962, meta[relay.Constant][46] /* ty=Tensor[(507), uint64] */, %963, %var_13251)
  };
  %964(%var_13254) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(169), uint64], Tensor[(507), uint64], Tensor[(3, 16, 16), float64], uint32) */
}

def @func_9837(%var_9836: uint32) -> (Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
  %972 = fn (%var_9815: uint32) -> (Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) {
    %965 = cast(%var_9815, dtype="bool") /* ty=bool */;
    %966 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 1, 14), uint32] */, dtype="bool") /* ty=Tensor[(1, 1, 14), bool] */;
    %967 = @func_3982() /* ty=(Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) */;
    %968 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %969 = greater_equal(%965, %966) /* ty=Tensor[(1, 1, 14), bool] */;
    %970 = %967.1;
    %971 = %968.0;
    (%969, %970, %971)
  };
  %972(%var_9836) /* ty=(Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */
}

def @func_13304() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %980 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %973 = @func_11235() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %974 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %975 = @func_3636() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %976 = %973.1;
    %977 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
    %978 = %974.0;
    %979 = %975.1;
    (%976, %977, %978, %979)
  };
  %980() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_2411() -> (Tensor[(2, 9, 6), float32],) {
  @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_4495() -> (Tensor[(2, 9, 6), float32],) {
  %983 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %981 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %982 = %981.0;
    (%982,)
  };
  %983() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_8921(%var_8916: Tensor[(15, 9, 8), float32]) -> (Tensor[(15, 9, 8), float32], Tensor[(2, 9, 6), float32]) {
  %984 = cast(%var_8916, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %985 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %986 = log10(%984) /* ty=Tensor[(15, 9, 8), float32] */;
  %987 = %985.1;
  (%986, %987)
}

def @func_3572() -> Tensor[(15, 3, 6), float32] {
  %988 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
  rsqrt(%988) /* ty=Tensor[(15, 3, 6), float32] */
}

def @func_1134() -> (Tensor[(2, 9, 6), float32],) {
  @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_11900() -> (Tensor[(2, 9, 6), float32],) {
  %990 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %989 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
    (%989,)
  };
  %990() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_9323() -> (Tensor[(2, 9, 6), float32],) {
  %992 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %991 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
    (%991,)
  };
  %992() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_9387(%var_9365: Tensor[(140, 2), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(5, 56), bool], Tensor[(2, 9, 6), float32]) {
  %993 = @func_8800() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %994 = cast(%var_9365, dtype="float32") /* ty=Tensor[(140, 2), float32] */;
  %995 = reshape(%994, newshape=[5, 56]) /* ty=Tensor[(5, 56), float32] */;
  %996 = @func_4725(%995) /* ty=(Tensor[(2, 9, 6), bool], Tensor[(3, 16, 16), float64], Tensor[(5, 56), float32], Tensor[(2, 9, 6), float32]) */;
  %997 = %996.2;
  %998 = cast(%var_9365, dtype="bool") /* ty=Tensor[(140, 2), bool] */;
  %999 = shape_of(%997, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1000 = cast(%997, dtype="bool") /* ty=Tensor[(5, 56), bool] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1002 = @func_7450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1003 = %993.0;
  %1004 = greater(%1000, %1001) /* ty=Tensor[(5, 56), bool] */;
  %1005 = %1002.1;
  (%1003, %1004, %1005)
}

def @func_1717() -> (Tensor[(2, 9, 6), float32],) {
  @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_11137() -> Tensor[(2, 9, 6), float32] {
  @func_11135() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_13110(%var_13108: Tensor[(1296), int32], %var_13109: int8) -> (Tensor[(2, 9, 6), float32], int8, Tensor[(2730), int8], Tensor[(2, 648), uint16], Tensor[(280), float32]) {
  %1023 = fn (%var_13080: Tensor[(1296), int32], %var_13081: int8) -> (Tensor[(2, 9, 6), float32], int8, Tensor[(2730), int8], Tensor[(2, 648), uint16], Tensor[(280), float32]) {
    %1006 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1007 = cast(%var_13080, dtype="int32") /* ty=Tensor[(1296), int32] */;
    %1008 = cast(%var_13081, dtype="int8") /* ty=int8 */;
    %1009 = cast(meta[relay.Constant][49] /* ty=Tensor[(2730), int8] */, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %1010 = reshape(%1007, newshape=[2, 648]) /* ty=Tensor[(2, 648), int32] */;
    %1011 = reshape(%1008, newshape=[]) /* ty=int8 */;
    %1012 = reshape(%1009, newshape=[2730]) /* ty=Tensor[(2730), int8] */;
    %1013 = @func_5183(%1010, %1011, %1012) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(2, 9, 6), float32], Tensor[(280), float32], int8, Tensor[(2730), int8], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 648), float32]) */;
    %1014 = %1013.8;
    %1015 = cast(%var_13080, dtype="uint16") /* ty=Tensor[(1296), uint16] */;
    %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1017 = cast(%1014, dtype="uint16") /* ty=Tensor[(2, 648), uint16] */;
    %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1019 = @func_6364() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(280), float32]) */;
    %1020 = %1006.0;
    %1021 = bitwise_xor(%1017, %1018) /* ty=Tensor[(2, 648), uint16] */;
    %1022 = %1019.1;
    (%1020, %var_13081, meta[relay.Constant][49] /* ty=Tensor[(2730), int8] */, %1021, %1022)
  };
  %1023(%var_13108, %var_13109) /* ty=(Tensor[(2, 9, 6), float32], int8, Tensor[(2730), int8], Tensor[(2, 648), uint16], Tensor[(280), float32]) */
}

def @func_4789() -> Tensor[(2, 9, 6), float32] {
  @func_4787() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_1251(%var_1184: Tensor[(4, 15, 6), float64], %var_1188: Tensor[(280), float32]) -> (Tensor[(384, 2), float64], Tensor[(280), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64], Tensor[(1, 7, 1), float32], Tensor[(4, 15, 6), uint8], Tensor[(2, 9, 6), float32]) {
  %1024 = cast(%var_1188, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1025 = reshape(%1024, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %1026 = @func_358(%1025) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %1027 = cast(meta[relay.Constant][50] /* ty=Tensor[(78), int64] */, dtype="int64") /* ty=Tensor[(78), int64] */;
  %1028 = reshape(%1027, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), int64] */;
  %1029 = @func_849(%1028) /* ty=(Tensor[(13, 2, 3), bool], Tensor[(1, 7, 280), int64], Tensor[(13, 2, 3), float64]) */;
  %1030 = cast(%var_1188, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1031 = reshape(%1030, newshape=[10, 7, 4]) /* ty=Tensor[(10, 7, 4), float32] */;
  %1032 = @func_358(%1031) /* ty=(Tensor[(10, 7, 4), float32], Tensor[(1, 7, 1), float32], Tensor[(3, 16, 16), float64], Tensor[(384, 2), float64]) */;
  %1033 = cast(%var_1184, dtype="float64") /* ty=Tensor[(4, 15, 6), float64] */;
  %1034 = log10(%1033) /* ty=Tensor[(4, 15, 6), float64] */;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(4, 15, 6), float64] */;
  %1036 = sigmoid(%1035) /* ty=Tensor[(4, 15, 6), float64] */;
  %1037 = cast(%1036, dtype="uint8") /* ty=Tensor[(4, 15, 6), uint8] */;
  %1038 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%1034, dtype="uint8") /* ty=Tensor[(4, 15, 6), uint8] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1041 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1042 = %1026.3;
  %1043 = %1029.2;
  %1044 = %1032.1;
  %1045 = bitwise_xor(%1039, %1040) /* ty=Tensor[(4, 15, 6), uint8] */;
  %1046 = %1041.0;
  (%1042, %var_1188, %1043, meta[relay.Constant][50] /* ty=Tensor[(78), int64] */, %1044, %1045, %1046)
}

def @func_7555() -> Tensor[(2, 9, 6), float32] {
  @func_7553() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_1132() -> (Tensor[(2, 9, 6), float32],) {
  %1047 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1047,)
}

def @func_8151() -> (Tensor[(15, 3, 6), float32],) {
  @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */
}

def @func_3195() -> Tensor[(2, 9, 6), float32] {
  %1049 = fn () -> Tensor[(2, 9, 6), float32] {
    %1048 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1048.0
  };
  %1049() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_7963() -> Tensor[(2, 9, 6), float32] {
  %1050 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_2242() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %1050() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_5529() -> (Tensor[(384), float32], Tensor[(2, 9, 6), float32]) {
  %1051 = @func_5508() /* ty=(Tensor[(384), float32],) */;
  %1052 = %1051.0;
  %1053 = @func_612() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1052, %1053)
}

def @func_4624(%var_4623: Tensor[(15, 3, 6), float32]) -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
  %1066 = fn (%var_4609: Tensor[(15, 3, 6), float32]) -> (Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) {
    %1054 = @func_3572() /* ty=Tensor[(15, 3, 6), float32] */;
    %1055 = cast(%1054, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
    %1056 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1057 = cast(%1054, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
    %1058 = tan(%1057) /* ty=Tensor[(15, 3, 6), float32] */;
    %1059 = cast(%var_4609, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
    %1060 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1061 = cast(%1058, dtype="float32") /* ty=Tensor[(15, 3, 6), float32] */;
    %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1063 = sqrt(%1055) /* ty=Tensor[(15, 3, 6), float32] */;
    %1064 = %1056.0;
    %1065 = floor_mod(%1061, %1062) /* ty=Tensor[(15, 3, 6), float32] */;
    (%1063, %1064, %1065)
  };
  %1066(%var_4623) /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */
}

def @func_8093() -> (Tensor[(280), float32],) {
  @func_8091() /* ty=(Tensor[(280), float32],) */
}

def @func_2916(%var_2880: Tensor[(3, 8, 2), uint64], %var_2881: Tensor[(3, 8, 2), uint64], %var_2892: Tensor[(336), float32]) -> (Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) {
  %1067 = cast(%var_2881, dtype="uint64") /* ty=Tensor[(3, 8, 2), uint64] */;
  %1068 = shape_of(%var_2880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%var_2880, dtype="uint64") /* ty=Tensor[(3, 8, 2), uint64] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1071 = cast(%var_2892, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1072 = reshape(%1071, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %1073 = @func_2554(%1072) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32], Tensor[(8, 42), float32], Tensor[(336), float32]) */;
  %1074 = right_shift(%1069, %1070) /* ty=Tensor[(3, 8, 2), uint64] */;
  %1075 = %1073.1;
  (%1074, %1075, %var_2892)
}

def @func_12184() -> (Tensor[(2, 9, 6), float32],) {
  @func_12182() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_10661(%var_10660: Tensor[(1296), int32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(3, 28), float64], Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(1296), int32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1099 = fn (%var_10609: Tensor[(1296), int32]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(3, 28), float64], Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(1296), int32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %1076 = @func_4632() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1077 = @func_8596() /* ty=(Tensor[(2, 9, 6), bool],) */;
    %1078 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
    %1079 = @func_6450() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %1080 = @func_8435() /* ty=(Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %1081 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 28), float64] */, dtype="float64") /* ty=Tensor[(3, 28), float64] */;
    %1082 = reshape(%1081, newshape=[84]) /* ty=Tensor[(84), float64] */;
    %1083 = @func_6782(%1082) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(84), float64]) */;
    %1084 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1085 = cast(%var_10609, dtype="int32") /* ty=Tensor[(1296), int32] */;
    %1086 = reshape(%1085, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), int32] */;
    %1087 = %1076.0;
    %1088 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
    %1089 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
    %1090 = %1077.0;
    %1091 = %1078.2;
    %1092 = %1079.0;
    %1093 = %1080.1;
    %1094 = %1083.2;
    %1095 = %1084.0;
    %1096 = @func_2731(%1086) /* ty=Tensor[(9, 12, 12), int32] */;
    %1097 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
    %1098 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
    (%1087, %1088, %1089, %1090, %1091, %1092, %1093, %1094, meta[relay.Constant][51] /* ty=Tensor[(3, 28), float64] */, %1095, %1096, %var_10609, %1097, %1098)
  };
  %1099(%var_10660) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), bool], Tensor[(15, 3, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(84), float64], Tensor[(3, 28), float64], Tensor[(2, 9, 6), float32], Tensor[(9, 12, 12), int32], Tensor[(1296), int32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_1993() -> (Tensor[(2, 9, 6), float32],) {
  %1102 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %1100 = @func_1715() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1101 = %1100.0;
    (%1101,)
  };
  %1102() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_8710() -> (Tensor[(384), float32], Tensor[(2, 9, 6), float32]) {
  %1107 = fn () -> (Tensor[(384), float32], Tensor[(2, 9, 6), float32]) {
    %1103 = @func_8124() /* ty=(Tensor[(384), float32],) */;
    %1104 = @func_6513() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1105 = %1103.0;
    %1106 = %1104.0;
    (%1105, %1106)
  };
  %1107() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_11592() -> Tensor[(15, 3, 6), float64] {
  %1108 = @func_7332() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(15, 3, 6), float32]) */;
  %1109 = %1108.2;
  %1110 = cast(%1109, dtype="float64") /* ty=Tensor[(15, 3, 6), float64] */;
  acosh(%1110) /* ty=Tensor[(15, 3, 6), float64] */
}

def @func_3843(%var_3842: Tensor[(6, 4, 6), float64]) -> (Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1124 = fn (%var_3802: Tensor[(6, 4, 6), float64]) -> (Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %1111 = cast(%var_3802, dtype="float64") /* ty=Tensor[(6, 4, 6), float64] */;
    %1112 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(6, 4, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1113 = cast(meta[relay.Constant][52] /* ty=Tensor[(6, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 4, 6), float64] */;
    %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1115 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
    %1116 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 84), float64] */, dtype="float64") /* ty=Tensor[(1, 84), float64] */;
    %1117 = reshape(%1116, newshape=[3, 28]) /* ty=Tensor[(3, 28), float64] */;
    %1118 = @func_3080(%1117) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(6, 2, 7), float64], Tensor[(3, 28), float64], Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64]) */;
    %1119 = power(%1113, %1114) /* ty=Tensor[(6, 4, 6), float64] */;
    %1120 = %1115.2;
    %1121 = %1118.0;
    %1122 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
    %1123 = @func_2820() /* ty=Tensor[(2, 9, 6), float32] */;
    (%1119, %1120, %1121, meta[relay.Constant][53] /* ty=Tensor[(1, 84), float64] */, %1122, %1123)
  };
  %1124(%var_3842) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_9935() -> (Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], uint32) {
  %1137 = fn () -> (Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], uint32) {
    %1125 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %1126 = @func_7229() /* ty=(Tensor[(768), float64],) */;
    %1127 = %1126.0;
    %1128 = cast(%1127, dtype="float32") /* ty=Tensor[(768), float32] */;
    %1129 = acosh(%1128) /* ty=Tensor[(768), float32] */;
    %1130 = cast(%1129, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1131 = cast(meta[relay.Constant][54] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1132 = reshape(%1131, newshape=[]) /* ty=uint32 */;
    %1133 = @func_9835(%1132) /* ty=(Tensor[(1, 1, 14), bool], Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32]) */;
    %1134 = %1125.1;
    %1135 = tan(%1130) /* ty=Tensor[(768), float64] */;
    %1136 = %1133.1;
    (%1134, %1135, %1136, meta[relay.Constant][54] /* ty=uint32 */)
  };
  %1137() /* ty=(Tensor[(3, 16, 16), float64], Tensor[(768), float64], Tensor[(3, 16, 16), float64], uint32) */
}

def @func_13013() -> (Tensor[(2, 9, 6), float32],) {
  %1138 = @func_5649() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1138,)
}

def @func_1572(%var_1571: Tensor[(12, 14, 11), float32]) -> (Tensor[(12, 14, 11), float32],) {
  %1141 = fn (%var_1560: Tensor[(12, 14, 11), float32]) -> (Tensor[(12, 14, 11), float32],) {
    %1139 = cast(%var_1560, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
    %1140 = acosh(%1139) /* ty=Tensor[(12, 14, 11), float32] */;
    (%1140,)
  };
  %1141(%var_1571) /* ty=(Tensor[(12, 14, 11), float32],) */
}

def @func_5813() -> (Tensor[(2, 9, 6), float32],) {
  @func_5811() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_12479() -> Tensor[(2, 9, 6), float32] {
  @func_704() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_8674() -> (Tensor[(2, 9, 6), float32],) {
  %1142 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1142,)
}

def @func_6731() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) {
  %1146 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) {
    %1143 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
    %1144 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
    %1145 = %1143.1;
    (%1144, %1145)
  };
  %1146() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64]) */
}

def @func_4317() -> Tensor[(2, 9, 6), float32] {
  @func_4315() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_10329(%var_10301: Tensor[(13, 7, 8), float32], %var_10320: Tensor[(1800), float32]) -> (Tensor[(13, 7, 8), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) {
  %1147 = cast(%var_10301, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1148 = rsqrt(%1147) /* ty=Tensor[(13, 7, 8), float32] */;
  %1149 = cast(%1148, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
  %1150 = shape_of(%var_10301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1151 = cast(%var_10301, dtype="bool") /* ty=Tensor[(13, 7, 8), bool] */;
  %1152 = dyn.reshape(%1149, %1150, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1153 = greater_equal(%1151, %1152) /* ty=Tensor[(13, 7, 8), bool] */;
  %1154 = cast(%1153, dtype="float32") /* ty=Tensor[(13, 7, 8), float32] */;
  %1155 = cast(%var_10320, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %1156 = cast(%var_10320, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %1157 = reshape(%1155, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %1158 = reshape(%1156, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %1159 = @func_3366(%1157, %1158) /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1160 = erf(%1154) /* ty=Tensor[(13, 7, 8), float32] */;
  %1161 = %1159.0;
  (%1160, %1161, %var_10320)
}

def @func_8574() -> Tensor[(2, 9, 6), float32] {
  %1162 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_4188() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %1162() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_6246(%var_6244: Tensor[(2, 168), float32], %var_6245: Tensor[(2, 72), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 168), int32], Tensor[(768), float64], Tensor[(2, 72), float64]) {
  %1175 = fn (%var_6233: Tensor[(2, 168), float32], %var_6239: Tensor[(2, 72), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 168), int32], Tensor[(768), float64], Tensor[(2, 72), float64]) {
    %1163 = @func_6067() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2730), int8], Tensor[(2, 168), float32]) */;
    %1164 = %1163.2;
    %1165 = cast(%var_6233, dtype="int32") /* ty=Tensor[(2, 168), int32] */;
    %1166 = shape_of(%1164, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1167 = cast(%1164, dtype="int32") /* ty=Tensor[(2, 168), int32] */;
    %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1169 = cast(%var_6239, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
    %1170 = reshape(%1169, newshape=[6, 4, 6]) /* ty=Tensor[(6, 4, 6), float64] */;
    %1171 = @func_3841(%1170) /* ty=(Tensor[(6, 4, 6), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(1, 84), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %1172 = @func_1673() /* ty=Tensor[(2, 9, 6), float32] */;
    %1173 = left_shift(%1167, %1168) /* ty=Tensor[(2, 168), int32] */;
    %1174 = %1171.1;
    (%1172, %1173, %1174, %var_6239)
  };
  %1175(%var_6244, %var_6245) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 168), int32], Tensor[(768), float64], Tensor[(2, 72), float64]) */
}

def @func_613() -> Tensor[(2, 9, 6), float32] {
  %1179 = fn () -> Tensor[(2, 9, 6), float32] {
    %1176 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 9, 6), float64] */, dtype="float64") /* ty=Tensor[(2, 9, 6), float64] */;
    %1177 = asinh(%1176) /* ty=Tensor[(2, 9, 6), float64] */;
    %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(2, 9, 6), float32] */;
    log2(%1178) /* ty=Tensor[(2, 9, 6), float32] */
  };
  %1179() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_7553() -> Tensor[(2, 9, 6), float32] {
  %1180 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1180.0
}

def @func_3574() -> Tensor[(15, 3, 6), float32] {
  @func_3572() /* ty=Tensor[(15, 3, 6), float32] */
}

def @func_12182() -> (Tensor[(2, 9, 6), float32],) {
  %1181 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_12065() -> (Tensor[(15, 3, 6), float32],) {
  @func_12063() /* ty=(Tensor[(15, 3, 6), float32],) */
}

def @func_8956() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1183 = @func_6116() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1184 = @func_1631() /* ty=Tensor[(2, 9, 6), float32] */;
  %1185 = %1183.1;
  (%1184, %1185)
}

def @func_2744() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) {
  %1190 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) {
    %1186 = cast(meta[relay.Constant][56] /* ty=Tensor[(768), float64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
    %1187 = reshape(%1186, newshape=[3, 16, 16]) /* ty=Tensor[(3, 16, 16), float64] */;
    %1188 = @func_2242() /* ty=Tensor[(2, 9, 6), float32] */;
    %1189 = @func_3(%1187) /* ty=Tensor[(3, 16, 16), float64] */;
    (%1188, %1189, meta[relay.Constant][56] /* ty=Tensor[(768), float64] */)
  };
  %1190() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */
}

def @func_7381() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1194 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %1191 = @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */;
    %1192 = %1191.1;
    %1193 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
    (%1192, %1193)
  };
  %1194() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_5041() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  @func_5039() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */
}

def @func_6836() -> (Tensor[(384), float32],) {
  %1195 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%1195,)
}

def @func_8802() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_8800() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_2173() -> (Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) {
  @func_2171() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 7, 1), float32], Tensor[(280), float32]) */
}

def @func_3512() -> Tensor[(2, 9, 6), float32] {
  %1196 = @func_3097() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(768), float64]) */;
  %1196.0
}

def @func_3500() -> Tensor[(2, 9, 6), float32] {
  %1197 = @func_1838() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1197.0
}

def @func_5865(%var_5864: Tensor[(2, 15, 14), float64]) -> (Tensor[(2, 15, 14), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1204 = fn (%var_5846: Tensor[(2, 15, 14), float64]) -> (Tensor[(2, 15, 14), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %1198 = cast(%var_5846, dtype="float64") /* ty=Tensor[(2, 15, 14), float64] */;
    %1199 = @func_2743() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(768), float64]) */;
    %1200 = sin(%1198) /* ty=Tensor[(2, 15, 14), float64] */;
    %1201 = %1199.2;
    %1202 = @func_704() /* ty=Tensor[(2, 9, 6), float32] */;
    %1203 = @func_4188() /* ty=Tensor[(2, 9, 6), float32] */;
    (%1200, %1201, %1202, %1203)
  };
  %1204(%var_5864) /* ty=(Tensor[(2, 15, 14), float64], Tensor[(768), float64], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_6677() -> (Tensor[(384), float32], Tensor[(3, 16, 16), float64]) {
  %1205 = @func_5039() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */;
  %1206 = %1205.1;
  %1207 = cast(%1206, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1208 = sinh(%1207) /* ty=Tensor[(384), float32] */;
  %1209 = @func_3885() /* ty=Tensor[(3, 16, 16), float64] */;
  (%1208, %1209)
}

def @func_9229() -> (Tensor[(15, 3, 6), float32],) {
  %1210 = @func_8149() /* ty=(Tensor[(15, 3, 6), float32],) */;
  %1211 = %1210.0;
  (%1211,)
}

def @func_9716() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1214 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
    %1212 = @func_6047() /* ty=Tensor[(2, 9, 6), float32] */;
    %1213 = @func_1948() /* ty=Tensor[(2, 9, 6), float32] */;
    (%1212, %1213)
  };
  %1214() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_8216() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_8214() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_5531() -> (Tensor[(384), float32], Tensor[(2, 9, 6), float32]) {
  @func_5529() /* ty=(Tensor[(384), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_10704(%var_10702: Tensor[(507), uint64]) -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(507), float32], Tensor[(507), uint64]) {
  @func_10701(%var_10702) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(507), float32], Tensor[(507), uint64]) */
}

def @func_10230() -> Tensor[(2, 9, 6), float32] {
  @func_7179() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_1674() -> Tensor[(2, 9, 6), float32] {
  %1215 = fn () -> Tensor[(2, 9, 6), float32] {
    @func_1579() /* ty=Tensor[(2, 9, 6), float32] */
  };
  %1215() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_2409() -> (Tensor[(2, 9, 6), float32],) {
  %1216 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1217 = %1216.0;
  (%1217,)
}

def @func_6421() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1218 = @func_4667() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
  %1219 = @func_3500() /* ty=Tensor[(2, 9, 6), float32] */;
  %1220 = %1218.0;
  %1221 = @func_4315() /* ty=Tensor[(2, 9, 6), float32] */;
  (%1219, %1220, %1221)
}

def @func_12526() -> (Tensor[(15, 3, 6), float32],) {
  %1224 = fn () -> (Tensor[(15, 3, 6), float32],) {
    %1222 = @func_9229() /* ty=(Tensor[(15, 3, 6), float32],) */;
    %1223 = %1222.0;
    (%1223,)
  };
  %1224() /* ty=(Tensor[(15, 3, 6), float32],) */
}

def @func_552(%var_551: Tensor[(6, 2, 7), float64]) -> Tensor[(6, 2, 7), float64] {
  %1226 = fn (%var_537: Tensor[(6, 2, 7), float64]) -> Tensor[(6, 2, 7), float64] {
    %1225 = cast(%var_537, dtype="float64") /* ty=Tensor[(6, 2, 7), float64] */;
    atanh(%1225) /* ty=Tensor[(6, 2, 7), float64] */
  };
  %1226(%var_551) /* ty=Tensor[(6, 2, 7), float64] */
}

def @func_2667() -> Tensor[(2, 9, 6), float32] {
  %1227 = @func_2409() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1227.0
}

def @func_8901(%var_8899: Tensor[(8, 15, 14), uint8]) -> (Tensor[(8, 15, 14), uint8],) {
  @func_8898(%var_8899) /* ty=(Tensor[(8, 15, 14), uint8],) */
}

def @func_9310() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  @func_9308() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */
}

def @func_5600() -> (Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) {
  %1237 = fn () -> (Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) {
    %1228 = cast(meta[relay.Constant][57] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %1229 = cast(meta[relay.Constant][57] /* ty=Tensor[(48), uint64] */, dtype="uint64") /* ty=Tensor[(48), uint64] */;
    %1230 = cast(meta[relay.Constant][58] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
    %1231 = reshape(%1228, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
    %1232 = reshape(%1229, newshape=[3, 8, 2]) /* ty=Tensor[(3, 8, 2), uint64] */;
    %1233 = reshape(%1230, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %1234 = @func_2916(%1231, %1232, %1233) /* ty=(Tensor[(3, 8, 2), uint64], Tensor[(384), float32], Tensor[(336), float32]) */;
    %1235 = @func_3194() /* ty=Tensor[(2, 9, 6), float32] */;
    %1236 = %1234.0;
    (%1235, %1236, meta[relay.Constant][57] /* ty=Tensor[(48), uint64] */, meta[relay.Constant][58] /* ty=Tensor[(336, 1), float32] */)
  };
  %1237() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 8, 2), uint64], Tensor[(48), uint64], Tensor[(336, 1), float32]) */
}

def @func_3456() -> Tensor[(384), float32] {
  %1239 = fn () -> Tensor[(384), float32] {
    %1238 = @func_958() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(3, 16, 16), float64], Tensor[(384), float32], Tensor[(384, 2), float64], Tensor[(280), float32]) */;
    %1238.2
  };
  %1239() /* ty=Tensor[(384), float32] */
}

def @func_9144() -> Tensor[(2, 9, 6), float32] {
  @func_9142() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_9269() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  @func_9267() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */
}

def @func_11030(%var_11029: Tensor[(84, 2), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(1, 14, 12), float64], Tensor[(84, 2), float64], Tensor[(1680), float64]) {
  %1248 = fn (%var_11020: Tensor[(84, 2), float64]) -> (Tensor[(2, 9, 6), float32], Tensor[(1, 14, 12), float64], Tensor[(84, 2), float64], Tensor[(1680), float64]) {
    %1240 = @func_10986() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %1241 = cast(%var_11020, dtype="float64") /* ty=Tensor[(84, 2), float64] */;
    %1242 = cast(meta[relay.Constant][59] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
    %1243 = reshape(%1241, newshape=[1, 14, 12]) /* ty=Tensor[(1, 14, 12), float64] */;
    %1244 = reshape(%1242, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), float64] */;
    %1245 = @func_3675(%1243, %1244) /* ty=(Tensor[(1, 14, 12), float64], Tensor[(10, 14, 12), bool], Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) */;
    %1246 = %1240.3;
    %1247 = %1245.0;
    (%1246, %1247, %var_11020, meta[relay.Constant][59] /* ty=Tensor[(1680), float64] */)
  };
  %1248(%var_11029) /* ty=(Tensor[(2, 9, 6), float32], Tensor[(1, 14, 12), float64], Tensor[(84, 2), float64], Tensor[(1680), float64]) */
}

def @func_5811() -> (Tensor[(2, 9, 6), float32],) {
  %1249 = @func_5039() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(384), float32]) */;
  %1250 = %1249.0;
  (%1250,)
}

def @func_10822(%var_10820: Tensor[(5, 1, 9), float32], %var_10821: Tensor[(1, 78), int64]) -> (Tensor[(5, 14, 9), float32], Tensor[(3, 16, 16), float64], Tensor[(1, 78), int64]) {
  @func_10818(%var_10820, %var_10821) /* ty=(Tensor[(5, 14, 9), float32], Tensor[(3, 16, 16), float64], Tensor[(1, 78), int64]) */
}

def @func_9308() -> (Tensor[(2, 9, 6), float32], Tensor[(2, 9, 6), float32]) {
  %1251 = @func_2499() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1252 = @func_9010() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(7, 4, 12), float32], Tensor[(336), float32]) */;
  %1253 = %1251.0;
  %1254 = %1252.0;
  (%1253, %1254)
}

def @func_12725() -> (Tensor[(48), uint64], Tensor[(2, 9, 6), float32]) {
  @func_12723() /* ty=(Tensor[(48), uint64], Tensor[(2, 9, 6), float32]) */
}

def @func_10232() -> Tensor[(2, 9, 6), float32] {
  @func_10230() /* ty=Tensor[(2, 9, 6), float32] */
}

def @func_5329(%var_5327: Tensor[(78), int64]) -> (Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64]) {
  @func_5326(%var_5327) /* ty=(Tensor[(3, 16, 16), float64], Tensor[(2, 9, 6), float32], Tensor[(13, 2, 3), float64], Tensor[(78), int64]) */
}

def @func_4042() -> (Tensor[(2, 9, 6), float32],) {
  %1257 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %1255 = @func_3932() /* ty=(Tensor[(2, 9, 6), float32],) */;
    %1256 = %1255.0;
    (%1256,)
  };
  %1257() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_5509() -> (Tensor[(384), float32],) {
  %1259 = fn () -> (Tensor[(384), float32],) {
    %1258 = @func_3455() /* ty=Tensor[(384), float32] */;
    (%1258,)
  };
  %1259() /* ty=(Tensor[(384), float32],) */
}

def @func_13141(%var_13125: Tensor[(2, 7, 12), float32], %var_13126: Tensor[(2, 7, 12), float32]) -> Tensor[(2, 7, 12), float32] {
  %1260 = cast(%var_13126, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %1261 = shape_of(%var_13125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1262 = cast(%var_13125, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%1262, %1263) /* ty=Tensor[(2, 7, 12), float32] */
}

def @func_5483() -> (Tensor[(2, 9, 6), float32],) {
  @func_5481() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_10449(%var_10423: Tensor[(13, 13), uint64]) -> (Tensor[(768), float64], Tensor[(3, 16, 16), float64], Tensor[(13, 13), uint64], Tensor[(507), uint64], Tensor[(2, 9, 6), float32]) {
  %1264 = cast(%var_10423, dtype="uint64") /* ty=Tensor[(13, 13), uint64] */;
  %1265 = cast(meta[relay.Constant][60] /* ty=Tensor[(507), uint64] */, dtype="uint64") /* ty=Tensor[(507), uint64] */;
  %1266 = reshape(%1264, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), uint64] */;
  %1267 = reshape(%1265, newshape=[13, 3, 13]) /* ty=Tensor[(13, 3, 13), uint64] */;
  %1268 = @func_7697(%1266, %1267) /* ty=(Tensor[(13, 3, 13), uint64], Tensor[(2, 9, 6), float32], Tensor[(13, 3, 13), int8], Tensor[(3, 16, 16), float64]) */;
  %1269 = @func_7082() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1270 = @func_9074() /* ty=Tensor[(768), float64] */;
  %1271 = %1268.3;
  %1272 = %1269.0;
  (%1270, %1271, %var_10423, meta[relay.Constant][60] /* ty=Tensor[(507), uint64] */, %1272)
}

def @func_5039() -> (Tensor[(2, 9, 6), float32], Tensor[(384), float32]) {
  %1273 = @func_3718() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1274 = %1273.0;
  %1275 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%1274, %1275)
}

def @func_5785(%var_5783: Tensor[(13, 9, 11), float32], %var_5784: Tensor[(13, 9, 11), float32]) -> Tensor[(13, 9, 11), float32] {
  @func_5781(%var_5783, %var_5784) /* ty=Tensor[(13, 9, 11), float32] */
}

def @func_13375() -> (Tensor[(3, 16, 16), float64],) {
  @func_13373() /* ty=(Tensor[(3, 16, 16), float64],) */
}

def @func_12627() -> (Tensor[(2, 9, 6), float32], Tensor[(5, 56), float32], Tensor[(280), float32], Tensor[(768, ?), float32]) {
  @func_12625() /* ty=(Tensor[(2, 9, 6), float32], Tensor[(5, 56), float32], Tensor[(280), float32], Tensor[(768, ?), float32]) */
}

def @func_13468(%var_13466: Tensor[(8, 1, 3), float32], %var_13467: Tensor[(8, 14, 3), float32]) -> Tensor[(8, 14, 3), float32] {
  %1278 = fn (%var_13452: Tensor[(8, 1, 3), float32], %var_13453: Tensor[(8, 14, 3), float32]) -> Tensor[(8, 14, 3), float32] {
    %1276 = cast(%var_13452, dtype="float32") /* ty=Tensor[(8, 1, 3), float32] */;
    %1277 = cast(%var_13453, dtype="float32") /* ty=Tensor[(8, 14, 3), float32] */;
    mod(%1276, %1277) /* ty=Tensor[(8, 14, 3), float32] */
  };
  %1278(%var_13466, %var_13467) /* ty=Tensor[(8, 14, 3), float32] */
}

def @func_6679() -> (Tensor[(384), float32], Tensor[(3, 16, 16), float64]) {
  @func_6677() /* ty=(Tensor[(384), float32], Tensor[(3, 16, 16), float64]) */
}

def @func_11680(%var_11660: Tensor[(2, 16, 2), float32], %var_11661: Tensor[(2, 16, 2), float32]) -> (Tensor[(2, 16, 2), float32], Tensor[(384), float32]) {
  %1279 = cast(%var_11661, dtype="float32") /* ty=Tensor[(2, 16, 2), float32] */;
  %1280 = shape_of(%var_11660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1281 = cast(%var_11660, dtype="float32") /* ty=Tensor[(2, 16, 2), float32] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1283 = floor_mod(%1281, %1282) /* ty=Tensor[(2, 16, 2), float32] */;
  %1284 = @func_3455() /* ty=Tensor[(384), float32] */;
  (%1283, %1284)
}

def @func_6274(%var_6256: Tensor[(1800), float32]) -> (Tensor[(2, 9, 6), float32], Tensor[(12, 10, 15), float32], Tensor[(1800), float32]) {
  %1285 = cast(%var_6256, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %1286 = cast(%var_6256, dtype="float32") /* ty=Tensor[(1800), float32] */;
  %1287 = reshape(%1285, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %1288 = reshape(%1286, newshape=[12, 10, 15]) /* ty=Tensor[(12, 10, 15), float32] */;
  %1289 = @func_3366(%1287, %1288) /* ty=(Tensor[(12, 10, 15), float32],) */;
  %1290 = @func_2870() /* ty=Tensor[(2, 9, 6), float32] */;
  %1291 = %1289.0;
  (%1290, %1291, %var_6256)
}

def @func_4787() -> Tensor[(2, 9, 6), float32] {
  %1292 = @func_1132() /* ty=(Tensor[(2, 9, 6), float32],) */;
  %1292.0
}

def @func_6940() -> (Tensor[(2, 9, 6), float32],) {
  %1294 = fn () -> (Tensor[(2, 9, 6), float32],) {
    %1293 = @func_3512() /* ty=Tensor[(2, 9, 6), float32] */;
    (%1293,)
  };
  %1294() /* ty=(Tensor[(2, 9, 6), float32],) */
}

def @func_3982() -> (Tensor[(3, 16, 16), bool], Tensor[(3, 16, 16), float64], Tensor[(3, 16, 16), int64]) {
  %1295 = @func_2781() /* ty=Tensor[(3, 16, 16), float64] */;
  %1296 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 16, 16), float64] */, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
  %1297 = shape_of(%1295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1298 = cast(%1295, dtype="bool") /* ty=Tensor[(3, 16, 16), bool] */;
  %1299 = dyn.reshape(%1296, %1297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1300 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 16, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 16, 16), float64] */;
  %1301 = cast(%1295, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
  %1302 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(3, 16, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1303 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 16, 16), float64] */, dtype="int64") /* ty=Tensor[(3, 16, 16), int64] */;
  %1304 = dyn.reshape(%1301, %1302, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1305 = greater(%1298, %1299) /* ty=Tensor[(3, 16, 16), bool] */;
  %1306 = atan(%1300) /* ty=Tensor[(3, 16, 16), float64] */;
  %1307 = bitwise_and(%1303, %1304) /* ty=Tensor[(3, 16, 16), int64] */;
  (%1305, %1306, %1307)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen504/build/output.py", line 4710, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:25:27] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


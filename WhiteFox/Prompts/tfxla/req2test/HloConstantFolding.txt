### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `ReshapeReshapeForwarding` in TensorFlow XLA.

# Description
The model should contain the following pattern:
```
t1 = tf.reshape(input_tensor, ...)
t2 = tf.reshape(t1, input_tensor.shape)
```
The pattern describes that there are two reshape operators in the model. The first `reshape` operator transforms a tensor input `input_tensor` from `input_tensor.shape` to any new shape, and the second `reshape` operator transforms the output of first `reshape` back to `input_tensor.shape`.


# Model
class Model(tf.keras.Model):

  def __init__(self):
    super(Model, self).__init__()

  def call(self, x1):
    x2 = tf.reshape(x1, [2,2])
    return tf.reshape(x2, [4])

# Initializing the model
m = Model()

# Inputs to the model
input_shape = [4]
x1 = tf.constant([4.,5.,6.,7.], shape=input_shape)

# Call model
y = m(x1)


### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `HloConstantFolding` in TensorFlow XLA.

# Description
The model should contain the following characteristics:

1. The model should contain operations where at least one operand is a constant, and all other operands are either constants or broadcasts of constants. This is because the `HloConstantFolding` optimization pass is designed to fold constants in the computation graph.

2. The model should not contain operations that are side-effecting, such as `kRng` or `kAfterAll`. These operations are not suitable for constant folding.

3. The model should not contain operations that are `kParameter`, `kConstant`, `kTuple`, `kBroadcast`, `kIota`, or `kFft`. These operations are explicitly skipped in the `HloConstantFolding` optimization pass.

4. The model should not contain operations that would result in a constant of size greater than 45 million elements. This is a hard limit set in the `HloConstantFolding` optimization pass to prevent excessive memory usage.

5. The model should not contain operations that are asynchronous and not supposed to be changed by this pass.

6. The model should not contain operations that would significantly increase compile time if folded. This is checked by the `SlowOperationAlarm` mechanism in the `HloConstantFolding` optimization pass.

If the model meets these characteristics, the `HloConstantFolding` optimization pass will be triggered, and the `Run` function will return `true`, indicating that changes have been made to the model.

# Model
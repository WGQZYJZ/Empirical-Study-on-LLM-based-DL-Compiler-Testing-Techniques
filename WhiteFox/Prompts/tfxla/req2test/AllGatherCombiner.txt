### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `ReshapeReshapeForwarding` in TensorFlow XLA.

# Description
The model should contain the following pattern:
```
t1 = tf.reshape(input_tensor, ...)
t2 = tf.reshape(t1, input_tensor.shape)
```
The pattern describes that there are two reshape operators in the model. The first `reshape` operator transforms a tensor input `input_tensor` from `input_tensor.shape` to any new shape, and the second `reshape` operator transforms the output of first `reshape` back to `input_tensor.shape`.


# Model
class Model(tf.keras.Model):

  def __init__(self):
    super(Model, self).__init__()

  def call(self, x1):
    x2 = tf.reshape(x1, [2,2])
    return tf.reshape(x2, [4])

# Initializing the model
m = Model()

# Inputs to the model
input_shape = [4]
x1 = tf.constant([4.,5.,6.,7.], shape=input_shape)

# Call model
y = m(x1)


### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `AllGatherCombiner` in TensorFlow XLA.

# Description
The model should contain the following pattern:
```
t1 = tf.distribute.AllGather(input_tensor1, ...)
t2 = tf.distribute.AllGather(input_tensor2, ...)
...
tn = tf.distribute.AllGather(input_tensorN, ...)
```
The pattern describes that there are multiple AllGather operations in the model. Each AllGather operation has exactly one operand and the same all_gather_dimension. The operands of these AllGather operations are different tensors. 

The optimization pass `AllGatherCombiner` is triggered when the total size of the operands of these AllGather operations exceeds a certain threshold (`combine_threshold_in_bytes_` or `combine_threshold_count_`). 

Also, the AllGather operations should not have layout constraints. If the module contains all-gather with constrained layouts, the optimization pass will be skipped. 

The optimization pass combines these AllGather operations into a single AllGather operation, which gathers all the operands of the smaller AllGather operations. The output of this combined AllGather operation is a tuple. 

After the combination, the smaller AllGather operations are replaced with elements of the tuple output of the single bigger AllGather.

# Model
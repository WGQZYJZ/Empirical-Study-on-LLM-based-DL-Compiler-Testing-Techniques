### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `ReshapeReshapeForwarding` in TensorFlow XLA.

# Description
The model should contain the following pattern:
```
t1 = tf.reshape(input_tensor, ...)
t2 = tf.reshape(t1, input_tensor.shape)
```
The pattern describes that there are two reshape operators in the model. The first `reshape` operator transforms a tensor input `input_tensor` from `input_tensor.shape` to any new shape, and the second `reshape` operator transforms the output of first `reshape` back to `input_tensor.shape`.


# Model
class Model(tf.keras.Model):

  def __init__(self):
    super(Model, self).__init__()

  def call(self, x1):
    x2 = tf.reshape(x1, [2,2])
    return tf.reshape(x2, [4])

# Initializing the model
m = Model()

# Inputs to the model
input_shape = [4]
x1 = tf.constant([4.,5.,6.,7.], shape=input_shape)

# Call model
y = m(x1)


### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `HloDce` in TensorFlow XLA.

# Description
The model should contain the following characteristics:

1. The model contains computations or instructions that are not used or referenced by any other computations or instructions. These are considered "dead" computations or instructions. 

2. The model may contain computations that are called multiple times. The optimization pass will decrement the count of these calls and if the count reaches zero, the computation is considered dead and will be removed.

3. The model may contain `while` loops that do not have any side effects or collective operations with constrained layout. These are considered removable and will be removed by the optimization pass.

4. The model may contain collective operations. If the `remove_cross_partition_collective_ops` flag is set to true, these operations will be removed if they do not have a constrained layout.

Here is an example of a dead computation in a model:

```python
def dead_computation(x):
    y = tf.add(x, x)  # This computation is not used anywhere
    return tf.multiply(x, x)
```

In this example, the `tf.add(x, x)` computation is not used anywhere and will be removed by the `HloDCE` optimization pass.

# Model
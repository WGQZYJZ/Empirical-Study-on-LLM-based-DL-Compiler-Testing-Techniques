### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `ReshapeReshapeForwarding` in TensorFlow XLA.

# Description
The model should contain the following pattern:
```
t1 = tf.reshape(input_tensor, ...)
t2 = tf.reshape(t1, input_tensor.shape)
```
The pattern describes that there are two reshape operators in the model. The first `reshape` operator transforms a tensor input `input_tensor` from `input_tensor.shape` to any new shape, and the second `reshape` operator transforms the output of first `reshape` back to `input_tensor.shape`.


# Model
class Model(tf.keras.Model):

  def __init__(self):
    super(Model, self).__init__()

  def call(self, x1):
    x2 = tf.reshape(x1, [2,2])
    return tf.reshape(x2, [4])

# Initializing the model
m = Model()

# Inputs to the model
input_shape = [4]
x1 = tf.constant([4.,5.,6.,7.], shape=input_shape)

# Call model
y = m(x1)


### Please generate one valid TensorFlow model that satisfies requirements below.
You should only use public TensorFlow APIs. The model can be used as the input to trigger the optimization pass `AllGatherDecomposer` in TensorFlow XLA.

# Description
The model should contain an `AllGather` operation that meets the conditions specified by the `should_decompose_` function. The `AllGather` operation is a collective operation that gathers values from all participating replicas and combines them into a single tensor.

The `should_decompose_` function is not shown in the provided code, but it is a predicate function that determines whether a given `AllGather` operation should be decomposed. The specific conditions that trigger the `AllGatherDecomposer` optimization pass would depend on the implementation of this function.

In general, the `AllGatherDecomposer` optimization pass is triggered when the model contains an `AllGather` operation that can be decomposed into a sequence of other operations for more efficient execution. The decomposition typically involves replacing the `AllGather` operation with a combination of other operations such as `DynamicUpdateSlice` and `AllReduce`.

# Model

class Model(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.convTranspose = torch.nn.ConvTranspose2d(in_channels=16, out_channels=16, kernel_size=3, stride=4, padding=1)
        self.convTranspose2 = torch.nn.ConvTranspose2d(in_channels=16, out_channels=32, kernel_size=3, stride=1, padding=1)
        self.convTranspose3 = torch.nn.ConvTranspose2d(in_channels=32, out_channels=64, kernel_size=3, stride=4, padding=1)
        self.convTranspose4 = torch.nn.ConvTranspose2d(in_channels=64, out_channels=128, kernel_size=3, stride=1, padding=1)
        self.convTranspose5 = torch.nn.ConvTranspose2d(in_channels=128, out_channels=64, kernel_size=3, stride=4, padding=1)
        self.convTranspose6 = torch.nn.ConvTranspose2d(in_channels=64, out_channels=32, kernel_size=3, stride=1, padding=1)
        self.convTranspose7 = torch.nn.ConvTranspose2d(in_channels=32, out_channels=16, kernel_size=3, stride=4, padding=1)
        self.convTranspose8 = torch.nn.ConvTranspose2d(in_channels=16, out_channels=8, kernel_size=(10, 10), padding=2)
    def forward(self, x1):
        v1 = self.convTranspose(x1)
        v2 = torch.tanh(v1)
        v3 = self.convTranspose2(v2)
        v4 = torch.tanh(v3)
        v5 = self.convTranspose3(v4)
        v6 = torch.tanh(v5)
        v7 = self.convTranspose4(v6)
        v8 = torch.tanh(v7)
        v9 = self.convTranspose5(v8)
        v10 = torch.tanh(v9)
        v11 = self.convTranspose6(v10)
        v12 = torch.tanh(v11)
        v13 = self.convTranspose7(v12)
        v14 = torch.tanh(v13)
        v15 = self.convTranspose8(v14)
        v16 = torch.tanh(v15)
        v17 = torch.softmax(v16)
        v18 = torch.tanh(v17)
        v19 = torch.bmm(v18, v17)
        v20 = torch.tanh(v19)
        v21 = torch.bmm(v20, v19)
        v22 = torch.tanh(v21)
        v23 = torch.bmm(v22, v21)
        v24 = torch.tanh(v23)
        return v24
# Inputs to the model
x1 = torch.randn(1, 16, 15, 15)

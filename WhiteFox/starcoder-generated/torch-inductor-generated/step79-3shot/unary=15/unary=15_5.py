
class Model(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.conv1 = torch.nn.Conv2d(1, 7, 1, stride=1, padding=0)
        self.conv2 = torch.nn.Conv2d(7, 3, 1, stride=1, padding=0)
        self.conv3 = torch.nn.Conv2d(3, 28, 1, stride=1, padding=0)
        self.conv4 = torch.nn.Conv2d(28, 27, 1, stride=1, padding=0)
        self.conv5 = torch.nn.Conv2d(27, 21, 1, stride=1, padding=0)
        self.conv6 = torch.nn.Conv2d(21, 21, 1, stride=1, padding=0)
        self.conv7 = torch.nn.Conv2d(21, 4, 1, stride=1, padding=0)
        self.conv8 = torch.nn.Conv2d(4, 13, 1, stride=1, padding=0)
        self.conv9 = torch.nn.Conv2d(13, 6, 1, stride=1, padding=0)
        self.conv10 = torch.nn.Conv2d(6, 3, 1, stride=1, padding=0)
        self.conv11 = torch.nn.Conv2d(3, 21, 1, stride=1, padding=0)
        self.conv12 = torch.nn.Conv2d(21, 21, 1, stride=1, padding=0)
        self.conv13 = torch.nn.Conv2d(21, 26, 1, stride=1, padding=0)
        self.conv14 = torch.nn.Conv2d(26, 9, 1, stride=1, padding=0)
        self.conv15 = torch.nn.Conv2d(9, 9, 1, stride=1, padding=0)
        self.conv16 = torch.nn.Conv2d(9, 27, 1, stride=1, padding=0)
        self.conv17 = torch.nn.Conv2d(27, 8, 1, stride=1, padding=0)
        self.conv18 = torch.nn.Conv2d(8, 6, 1, stride=1, padding=0)
        self.conv19 = torch.nn.Conv2d(6, 9, 1, stride=1, padding=0)
        self.conv20 = torch.nn.Conv2d(9, 9, 1, stride=1, padding=0)
        self.conv21 = torch.nn.Conv2d(9, 23, 1, stride=1, padding=0)
        self.conv22 = torch.nn.Conv2d(23, 8, 1, stride=1, padding=0)
        self.conv23 = torch.nn.Conv2d(8, 10, 1, stride=1, padding=0)
        self.conv24 = torch.nn.Conv2d(10, 1, 1, stride=1, padding=0)
    def forward(self, x1):
        v1 = self.conv1(x1)
        v2 = torch.relu(v1)
        v3 = self.conv2(v2)
        v4 = torch.relu(v3)
        v4_pool = self.pool(v4, kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
        v5 = self.conv3(v4_pool)
        v6 = self.conv4(v5)
        v7 = self.conv5(v6)
        v7_pool = self.pool(v7, kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
        v8 = self.conv6(v7_pool)
        v9 = self.conv7(v8)
        v10 = self.conv8(v9)
        v11 = self.conv9(v10)
        v12 = self.conv10(v11)
        v13 = self.conv11(v12)
        v14 = self.conv12(v13)
        v14_pool = self.pool(v14, kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
        v15 = self.conv13(v14_pool)
        v16 = self.conv14(v15)
        v17 = self.conv15(v16)
        v17_pool = self.pool(v17, kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
        v18 = self.conv16(v17_pool)
        v19 = self.conv17(v18)
        v20 = self.conv18(v19)
        v21 = self.conv19(v20)
        v21_pool = self.pool(v21, kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
        v22 = self.conv20(v21_pool)
        v23 = self.conv21(v22)
        v24 = self.conv22(v23)
        v25 = self.conv23(v24)
        v25_pool = self.pool(v25, kernel_size=2, stride=2, padding=0, ceil_mode=False, count_include_pad=True)
        v26 = self.conv24(v25_pool)
        v27 = torch.relu(v26)
        return v27
    def pool(self, x, kernel_size, stride, padding, ceil_mode=False, count_include_pad=True):
        result = F.avg_pool2d(F.pad(x, (padding, padding, padding, padding)), (kernel_size, kernel_size), stride=stride, padding=(0, 0), ceil_mode=ceil_mode, count_include_pad=count_include_pad)
        return result
# Inputs to the model
x1 = torch.randn(1, 1, 128, 128)

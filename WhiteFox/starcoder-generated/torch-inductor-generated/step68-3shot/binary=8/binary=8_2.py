
class Model(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.conv1 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.conv2 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.conv3 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.conv4 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.bn1 = torch.nn.BatchNorm2d(4)
        self.conv5 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.conv6 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.conv7 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.conv8 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.fc1 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.fc2 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.fc3 = torch.nn.Conv2d(3, 4, 1, stride=2)
        self.fc4 = torch.nn.Conv2d(3, 4, 1, stride=2)
    def forward(self, x1, x2):
        v1 = self.conv1(x1)
        v2 = self.conv2(x2)
        v3 = self.bn1(v1)
        v4 = self.bn1(v2)
        v5 = torch.nn.functional.mul(v3, v4)
        v6 = self.conv3(x1)
        v7 = self.conv4(x2)
        v8 = torch.nn.functional.add(v6, v7)
        v9 = self.conv5(x1)
        v10 = self.conv6(x2)
        v11 = self.fc1(x1)
        v12 = self.fc2(x2)
        v13 = torch.nn.functional.mul(v11, v12)
        v14 = self.conv7(x1)
        v15 = self.conv8(x2)
        v16 = self.fc3(x1)
        v17 = self.fc4(x2)
        v18 = torch.nn.functional.add(v16, v17)
        return (v5, v8, v13, v18)
# Inputs to the model
x1 = torch.randn(1, 3, 32, 32)
x2 = torch.randn(1, 3, 32, 32)

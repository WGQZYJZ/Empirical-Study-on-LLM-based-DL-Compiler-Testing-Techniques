
class Model(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.module1 = torch.nn.Conv2d(in_channels=3, out_channels=6, kernel_size=11, stride=5, padding=2)
        self.tanh = torch.nn.Tanh()
        self.module2 = torch.nn.Conv2d(in_channels=6, out_channels=12, kernel_size=8, stride=2, padding=2)
        self.sigmoid = torch.nn.Sigmoid()
        self.module3 = torch.nn.Conv2d(in_channels=12, out_channels=24, kernel_size=4, stride=1, padding=1)
        self.tanh1 = torch.nn.Tanh()
        self.module4 = torch.nn.Conv2d(in_channels=24, out_channels=16, kernel_size=12, stride=2, padding=2)
        self.relu = torch.nn.ReLU()
        self.module5 = torch.nn.Conv2d(in_channels=16, out_channels=6, kernel_size=13, stride=2, padding=1)
        self.module6 = torch.nn.Conv2d(in_channels=6, out_channels=6, kernel_size=2, stride=1, padding=0)
        self.sigmoid1 = torch.nn.Sigmoid()
    def forward(self, input0):
        opt_conv2d_0 = self.module1(input0)
        opt_tanh_0 = self.tanh(opt_conv2d_0)
        opt_conv2d_1 = self.module2(opt_tanh_0)
        opt_conv2d_2 = self.sigmoid(opt_conv2d_1)
        opt_conv2d_3 = self.module3(opt_tanh_0)
        opt_tanh_1 = self.tanh1(opt_conv2d_3)
        opt_conv2d_4 = self.module4(opt_conv2d_2)
        opt_conv2d_5 = self.relu(opt_conv2d_4)
        opt_conv2d_6 = self.module5(opt_conv2d_2)
        opt_tanh_2 = self.tanh1(opt_conv2d_6)
        opt_conv2d_7 = self.module6(opt_tanh_2)
        opt_conv2d_8 = self.sigmoid1(opt_conv2d_7)
        return (opt_conv2d_8)
class Model2(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.conv1_0 = torch.nn.Conv2d(in_channels=3, out_channels=6, kernel_size=(11, 11), stride=(5, 5), padding=2)
        self.tanh = torch.nn.Tanh()
        self.conv1_3 = torch.nn.Conv2d(in_channels=6, out_channels=12, kernel_size=(8, 8), stride=(2, 2), padding=2)
        self.sigmoid = torch.nn.Sigmoid()
        self.conv1_6 = torch.nn.Conv2d(in_channels=12, out_channels=24, kernel_size=(4, 4), stride=(1, 1), padding=1)
        self.tanh1 = torch.nn.Tanh()
        self.conv1_9 = torch.nn.Conv2d(in_channels=24, out_channels=16, kernel_size=(12, 12), stride=(2, 2), padding=2)
        self.relu = torch.nn.ReLU()
        self.conv1_12 = torch.nn.Conv2d(in_channels=16, out_channels=6, kernel_size=(13, 13), stride=(2, 2), padding=1)
        self.conv1_15 = torch.nn.Conv2d(in_channels=6, out_channels=6, kernel_size=(2, 2), stride=(1, 1), padding=0)
        self.sigmoid1 = torch.nn.Sigmoid()
    def forward(self, input0):
        opt_conv2d_0 = self.conv1_0(input0)
        opt_tanh_0 = self.tanh(opt_conv2d_0)
        opt_conv2d_1 = self.conv1_3(opt_tanh_0)
        opt_conv2d_2 = self.sigmoid(opt_conv2d_1)
        opt_conv2d_3 = self.conv1_6(opt_tanh_0)
        opt_tanh_1 = self.tanh1(opt_conv2d_3)
        opt_conv2d_4 = self.conv1_9(opt_conv2d_2)
        opt_conv2d_5 = self.relu(opt_conv2d_4)
        opt_conv2d_6 = self.conv1_12(opt_conv2d_2)
        opt_tanh_2 = self.tanh1(opt_conv2d_6)
        opt_conv2d_7 = self.conv1_15(opt_tanh_2)
        opt_conv2d_8 = self.sigmoid1(opt_conv2d_7)
        return (opt_conv2d_8)
# Inputs to the model
x = torch.randn(1, 3, 64, 64)

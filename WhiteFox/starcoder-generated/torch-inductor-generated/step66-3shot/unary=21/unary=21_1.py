
class ModelTanh(torch.nn.Module):
    def __init__(self):
        super().__init__()
        self.conv1 = torch.nn.Conv2d(2, 8, 1, stride=1, padding=0)
        self.conv2 = torch.nn.Conv2d(8, 8, 1, stride=1, padding=0)
        self.conv6 = torch.nn.Conv2d(32, 1, 1, stride=1, padding=0)
        self.conv3 = torch.nn.Conv2d(8, 16, 1, stride=1, padding=1)
        self.conv4 = torch.nn.Conv2d(16, 32, 1, stride=1, padding=1)
        self.conv5 = torch.nn.Conv2d(32, 32, 1, stride=1, padding=0)
    def forward(self, x1):
        _inp__x1_nn_conv2d = self.conv1(x1)
        v0 = torch.tanh(_inp__x1_nn_conv2d)
        v1 = self.conv2(v0)
        v2 = torch.tanh(v1)
        v3 = torch.reshape(v2, (-1, 1, 64, 64))
        v4 = self.conv6(v3)
        v5 = torch.reshape(v4, (-1, 64))
        v6 = torch.tanh(v5)
        v7 = self.conv3(v0)
        v8 = torch.tanh(v7)
        v9 = torch.reshape(v8, (-1, 1, 64, 64))
        v10 = self.conv4(v9)
        v11 = torch.reshape(v10, (-1, 64))
        v12 = torch.tanh(v11)
        v13 = self.conv5(v10)
        v14 = torch.reshape(v13, (-1, 64))
        v15 = torch.tanh(v6)
        v16 = torch.tanh(v12)
        v17 = torch.reshape(v16, (-1, 1, 64, 64))
        v18 = self.conv6(v17)
        v19 = torch.reshape(v18, (-1, 64))
        v20 = torch.tanh(v19)
        v21 = torch.tanh(v20)
        v22 = torch.reshape(v21, (-1, 1, 64, 64))
        v23 = self.conv6(v22)
        v24 = torch.reshape(v23, (-1, 64))
        v25 = torch.tanh(v24)
        v26 = torch.tanh(v25)
        return v14
# Inputs to the model
x1 = torch.randn(1, 2, 10, 10)

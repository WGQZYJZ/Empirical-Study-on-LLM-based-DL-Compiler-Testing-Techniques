1
Cov: 0 -> 203
Cov: 203 -> 203
2
Cov: 203 -> 203
Cov: 203 -> 203
3
Cov: 203 -> 206
Cov: 206 -> 206
4
Cov: 206 -> 229
Cov: 229 -> 229
5
Cov: 229 -> 249
Cov: 249 -> 249
6
Cov: 249 -> 249
Cov: 249 -> 249
7
Cov: 249 -> 249
Cov: 249 -> 249
8
Cov: 249 -> 249
Cov: 249 -> 249
9
{"exception": "NameError", "msg": "name 'args' is not defined"}
10
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'arg1' and 'arg2'"}
11
Cov: 249 -> 273
Cov: 273 -> 273
12
Cov: 273 -> 273
Cov: 273 -> 273
13
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'bias'"}
14
Cov: 273 -> 279
Cov: 279 -> 279
15
Cov: 279 -> 279
Cov: 279 -> 279
16
Cov: 279 -> 279
Cov: 279 -> 279
17
Cov: 279 -> 279
Cov: 279 -> 279
18
Cov: 279 -> 279
Cov: 279 -> 279
19
Cov: 279 -> 279
Cov: 279 -> 279
20
Cov: 279 -> 279
Cov: 279 -> 279
21
Cov: 279 -> 279
Cov: 279 -> 279
22
Cov: 279 -> 284
Cov: 284 -> 284
23
Cov: 284 -> 284
Cov: 284 -> 284
24
Cov: 284 -> 285
Cov: 285 -> 285
25
Cov: 285 -> 285
Cov: 285 -> 285
26
Cov: 285 -> 301
Cov: 301 -> 301
27
{"exception": "NameError", "msg": "name 'Model' is not defined"}
28
{"exception": "AttributeError", "msg": "cannot assign module before Module.__init__() call"}
29
Cov: 301 -> 306
Cov: 306 -> 306
30
{"exception": "NameError", "msg": "name 'Tensor' is not defined"}
31
Cov: 306 -> 306
Cov: 306 -> 306
32
{"exception": "RuntimeError", "msg": "Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [3, 3]"}
33
Cov: 306 -> 314
Cov: 314 -> 314
34
Cov: 314 -> 314
Cov: 314 -> 314
35
Cov: 314 -> 314
Cov: 314 -> 314
36
Cov: 314 -> 314
Cov: 314 -> 314
37
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Conv'"}
38
Cov: 314 -> 387
Cov: 387 -> 387
39
Cov: 387 -> 387
Cov: 387 -> 387
40
Cov: 387 -> 387
Cov: 387 -> 387
41
Cov: 387 -> 387
Cov: 387 -> 387
42
Cov: 387 -> 387
Cov: 387 -> 387
43
Cov: 387 -> 387
Cov: 387 -> 387
44
Cov: 387 -> 387
Cov: 387 -> 387
45
Cov: 387 -> 387
Cov: 387 -> 387
46
Cov: 387 -> 387
Cov: 387 -> 387
47
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
48
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
49
{"exception": "NameError", "msg": "name 'State' is not defined"}
50
{"exception": "NameError", "msg": "name 'math' is not defined"}
51
Cov: 387 -> 388
Cov: 388 -> 388
52
Cov: 388 -> 388
Cov: 388 -> 388
53
Cov: 388 -> 388
Cov: 388 -> 388
54
Cov: 388 -> 388
Cov: 388 -> 388
55
Cov: 388 -> 388
Cov: 388 -> 388
56
Cov: 388 -> 388
Cov: 388 -> 388
57
Cov: 388 -> 389
Cov: 389 -> 389
58
{"exception": "NameError", "msg": "name '__input_tensors__' is not defined"}
59
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 21)"}
60
{"exception": "AttributeError", "msg": "'int' object has no attribute 'detach'"}
61
Cov: 389 -> 391
Cov: 391 -> 391
62
Cov: 391 -> 391
Cov: 391 -> 391
63
Cov: 391 -> 391
Cov: 391 -> 391
64
Cov: 391 -> 391
Cov: 391 -> 391
65
Cov: 391 -> 391
Cov: 391 -> 391
66
Cov: 391 -> 391
Cov: 391 -> 391
67
Cov: 391 -> 391
Cov: 391 -> 391
68
Cov: 391 -> 391
Cov: 391 -> 391
69
Cov: 391 -> 391
Cov: 391 -> 391
70
Cov: 391 -> 391
Cov: 391 -> 391
71
Cov: 391 -> 420
Cov: 420 -> 420
72
Cov: 420 -> 421
Cov: 421 -> 421
73
Cov: 421 -> 421
Cov: 421 -> 421
74
Cov: 421 -> 421
Cov: 421 -> 421
75
{"exception": "NameError", "msg": "name 'math' is not defined"}
76
Cov: 421 -> 422
Cov: 422 -> 422
77
Cov: 422 -> 422
Cov: 422 -> 422
78
Cov: 422 -> 422
Cov: 422 -> 422
79
Cov: 422 -> 422
Cov: 422 -> 422
80
Cov: 422 -> 422
Cov: 422 -> 422
81
Cov: 422 -> 422
Cov: 422 -> 422
82
Cov: 422 -> 427
Cov: 427 -> 427
83
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'dropout_p', 'num_heads', 'd_k', 'dropout_q', and 'dropout_v'"}
84
{"exception": "NameError", "msg": "name 'y' is not defined"}
85
Cov: 427 -> 432
Cov: 432 -> 432
86
Cov: 432 -> 432
Cov: 432 -> 432
87
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 32)"}
88
Cov: 432 -> 439
Cov: 439 -> 439
89
Cov: 439 -> 440
Cov: 440 -> 440
90
Cov: 440 -> 440
Cov: 440 -> 440
91
Cov: 440 -> 440
Cov: 440 -> 440
92
Cov: 440 -> 440
Cov: 440 -> 440
93
Cov: 440 -> 440
Cov: 440 -> 440
94
Cov: 440 -> 440
Cov: 440 -> 440
95
{"exception": "NameError", "msg": "name 'Model' is not defined"}
96
Cov: 440 -> 440
Cov: 440 -> 440
97
Cov: 440 -> 440
Cov: 440 -> 440
98
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
99
Cov: 440 -> 440
Cov: 440 -> 440
100
Cov: 440 -> 440
Cov: 440 -> 440
101
Cov: 440 -> 440
Cov: 440 -> 440
102
Cov: 440 -> 440
Cov: 440 -> 440
103
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 36)"}
104
Cov: 440 -> 440
Cov: 440 -> 440
105
{"exception": "NameError", "msg": "name 'nn' is not defined"}
106
Cov: 440 -> 440
Cov: 440 -> 440
107
Cov: 440 -> 440
Cov: 440 -> 440
108
Cov: 440 -> 440
Cov: 440 -> 440
109
Cov: 440 -> 440
Cov: 440 -> 440
110
Cov: 440 -> 440
Cov: 440 -> 440
111
Cov: 440 -> 440
Cov: 440 -> 440
112
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'value'"}
113
Cov: 440 -> 440
Cov: 440 -> 440
114
Cov: 440 -> 456
Cov: 456 -> 456
115
Cov: 456 -> 456
Cov: 456 -> 456
116
Cov: 456 -> 456
Cov: 456 -> 456
117
Cov: 456 -> 456
Cov: 456 -> 456
118
{"exception": "TypeError", "msg": "unsupported operand type(s) for +: 'Identity' and 'int'"}
119
Cov: 456 -> 458
Cov: 458 -> 458
120
Cov: 458 -> 458
Cov: 458 -> 458
121
Cov: 458 -> 458
Cov: 458 -> 458
122
Cov: 458 -> 458
Cov: 458 -> 458
123
Cov: 458 -> 458
Cov: 458 -> 458
124
Cov: 458 -> 458
Cov: 458 -> 458
125
{"exception": "AttributeError", "msg": "'Model' object has no attribute 'linear'"}
126
Cov: 458 -> 460
Cov: 460 -> 460
127
Cov: 460 -> 460
Cov: 460 -> 460
128
Cov: 460 -> 460
Cov: 460 -> 460
129
Cov: 460 -> 460
Cov: 460 -> 460
130
Cov: 460 -> 460
Cov: 460 -> 460
131
{"exception": "NameError", "msg": "name 'Model' is not defined"}
132
Cov: 460 -> 460
Cov: 460 -> 460
133
Cov: 460 -> 460
Cov: 460 -> 460
134
Cov: 460 -> 460
Cov: 460 -> 460
135
Cov: 460 -> 460
Cov: 460 -> 460
136
{"exception": "NameError", "msg": "name 'v' is not defined"}
137
Cov: 460 -> 472
Cov: 472 -> 472
138
Cov: 472 -> 472
Cov: 472 -> 472
139
Cov: 472 -> 472
Cov: 472 -> 472
140
Cov: 472 -> 476
Cov: 476 -> 476
141
Cov: 476 -> 476
Cov: 476 -> 476
142
Cov: 476 -> 476
Cov: 476 -> 476
143
Cov: 476 -> 476
Cov: 476 -> 476
144
Cov: 476 -> 476
Cov: 476 -> 476
145
Cov: 476 -> 476
Cov: 476 -> 476
146
Cov: 476 -> 476
Cov: 476 -> 476
147
Cov: 476 -> 476
Cov: 476 -> 476
148
Cov: 476 -> 476
Cov: 476 -> 476
149
Cov: 476 -> 476
Cov: 476 -> 476
150
Cov: 476 -> 476
Cov: 476 -> 476
151
Cov: 476 -> 509
Cov: 509 -> 509
152
{"exception": "TypeError", "msg": "__init__() missing 7 required positional arguments: 'n_head', 'dim_q', 'dim_k', 'dim_v', 'dim_o', 'dropout', and 'attn_mask'"}
153
Cov: 509 -> 509
Cov: 509 -> 509
154
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
155
Cov: 509 -> 509
Cov: 509 -> 509
156
Cov: 509 -> 521
Cov: 521 -> 521
157
Cov: 521 -> 522
Cov: 522 -> 522
158
Cov: 522 -> 522
Cov: 522 -> 522
159
Cov: 522 -> 522
Cov: 522 -> 522
160
Cov: 522 -> 536
Cov: 536 -> 536
161
Cov: 536 -> 536
Cov: 536 -> 536
162
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
163
Cov: 536 -> 538
Cov: 538 -> 538
164
Cov: 538 -> 538
Cov: 538 -> 538
165
{"exception": "ValueError", "msg": "Only \"zeros\" padding mode is supported for ConvTranspose2d"}
166
Cov: 538 -> 542
Cov: 542 -> 542
167
Cov: 542 -> 543
Cov: 543 -> 543
168
Cov: 543 -> 557
Cov: 557 -> 557
169
Cov: 557 -> 557
Cov: 557 -> 557
170
Cov: 557 -> 557
Cov: 557 -> 557
171
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'multihead_attention_forward'"}
172
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden_size'"}
173
Cov: 557 -> 557
Cov: 557 -> 557
174
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'conv_op'"}
175
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[1, 9223372036854775807]"}
176
Cov: 557 -> 557
Cov: 557 -> 557
177
Cov: 557 -> 557
Cov: 557 -> 557
178
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
179
{"exception": "NameError", "msg": "name 'Model' is not defined"}
180
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dtype'"}
181
Cov: 557 -> 557
Cov: 557 -> 557
182
Cov: 557 -> 557
Cov: 557 -> 557
183
Cov: 557 -> 557
Cov: 557 -> 557
184
Cov: 557 -> 557
Cov: 557 -> 557
185
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 5)"}
186
Cov: 557 -> 557
Cov: 557 -> 557
187
Cov: 557 -> 557
Cov: 557 -> 557
188
Cov: 557 -> 557
Cov: 557 -> 557
189
Cov: 557 -> 557
Cov: 557 -> 557
190
Cov: 557 -> 557
Cov: 557 -> 557
191
Cov: 557 -> 557
Cov: 557 -> 557
192
Cov: 557 -> 557
Cov: 557 -> 557
193
{"exception": "NameError", "msg": "name 'Model' is not defined"}
194
{"exception": "NameError", "msg": "name 'Model' is not defined"}
195
Cov: 557 -> 557
Cov: 557 -> 557
196
Cov: 557 -> 557
Cov: 557 -> 557
197
{"exception": "NameError", "msg": "name 'nn' is not defined"}
198
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'dim_head', 'num_heads', and 'dropout_p'"}
199
Cov: 557 -> 559
Cov: 559 -> 559
200
Cov: 559 -> 559
Cov: 559 -> 559
201
Cov: 559 -> 559
Cov: 559 -> 559
202
Cov: 559 -> 559
Cov: 559 -> 559
203
Cov: 559 -> 559
Cov: 559 -> 559
204
Cov: 559 -> 559
Cov: 559 -> 559
205
{"exception": "TypeError", "msg": "rand() received an invalid combination of arguments - got (), but expected one of:\n * (tuple of ints size, *, torch.Generator generator, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, torch.Generator generator, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n"}
206
Cov: 559 -> 559
Cov: 559 -> 559
207
Cov: 559 -> 559
Cov: 559 -> 559
208
Cov: 559 -> 559
Cov: 559 -> 559
209
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'n_head', 'd_model', and 'dropout_p'"}
210
Cov: 559 -> 559
Cov: 559 -> 559
211
Cov: 559 -> 559
Cov: 559 -> 559
212
Cov: 559 -> 559
Cov: 559 -> 559
213
Cov: 559 -> 559
Cov: 559 -> 559
214
{"exception": "TypeError", "msg": "Model.__init__() takes 1 positional argument but 2 were given"}
215
Cov: 559 -> 561
Cov: 561 -> 561
216
Cov: 561 -> 561
Cov: 561 -> 561
217
Cov: 561 -> 562
Cov: 562 -> 562
218
Cov: 562 -> 562
Cov: 562 -> 562
219
Cov: 562 -> 562
Cov: 562 -> 562
220
Cov: 562 -> 562
Cov: 562 -> 562
221
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'bias'"}
222
Cov: 562 -> 562
Cov: 562 -> 562
223
Cov: 562 -> 562
Cov: 562 -> 562
224
Cov: 562 -> 562
Cov: 562 -> 562
225
Cov: 562 -> 562
Cov: 562 -> 562
226
Cov: 562 -> 562
Cov: 562 -> 562
227
Cov: 562 -> 562
Cov: 562 -> 562
228
Cov: 562 -> 562
Cov: 562 -> 562
229
Cov: 562 -> 562
Cov: 562 -> 562
230
Cov: 562 -> 562
Cov: 562 -> 562
231
Cov: 562 -> 562
Cov: 562 -> 562
232
Cov: 562 -> 562
Cov: 562 -> 562
233
Cov: 562 -> 562
Cov: 562 -> 562
234
Cov: 562 -> 562
Cov: 562 -> 562
235
Cov: 562 -> 562
Cov: 562 -> 562
236
Cov: 562 -> 562
Cov: 562 -> 562
237
Cov: 562 -> 562
Cov: 562 -> 562
238
Cov: 562 -> 562
Cov: 562 -> 562
239
Cov: 562 -> 562
Cov: 562 -> 562
240
Cov: 562 -> 562
Cov: 562 -> 562
241
Cov: 562 -> 562
Cov: 562 -> 562
242
Cov: 562 -> 562
Cov: 562 -> 562
243
Cov: 562 -> 562
Cov: 562 -> 562
244
Cov: 562 -> 562
Cov: 562 -> 562
245
Cov: 562 -> 562
Cov: 562 -> 562
246
Cov: 562 -> 562
Cov: 562 -> 562
247
{"exception": "TypeError", "msg": "__init__() takes 0 positional arguments but 1 was given"}
248
Cov: 562 -> 562
Cov: 562 -> 562
249
Cov: 562 -> 562
Cov: 562 -> 562
250
Cov: 562 -> 562
Cov: 562 -> 562
251
Cov: 562 -> 562
Cov: 562 -> 562
252
Cov: 562 -> 562
Cov: 562 -> 562
253
Cov: 562 -> 562
Cov: 562 -> 562
254
Cov: 562 -> 562
Cov: 562 -> 562
255
Cov: 562 -> 562
Cov: 562 -> 562
256
Cov: 562 -> 562
Cov: 562 -> 562
257
Cov: 562 -> 562
Cov: 562 -> 562
258
Cov: 562 -> 562
Cov: 562 -> 562
259
{"exception": "NameError", "msg": "name 'Model' is not defined"}
260
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'arg'"}
261
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
262
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
263
Cov: 562 -> 562
Cov: 562 -> 562
264
Cov: 562 -> 562
Cov: 562 -> 562
265
Cov: 562 -> 566
Cov: 566 -> 566
266
Cov: 566 -> 566
Cov: 566 -> 566
267
Cov: 566 -> 566
Cov: 566 -> 566
268
Cov: 566 -> 566
Cov: 566 -> 566
269
Cov: 566 -> 566
Cov: 566 -> 566
270
Cov: 566 -> 566
Cov: 566 -> 566
271
Cov: 566 -> 566
Cov: 566 -> 566
272
Cov: 566 -> 566
Cov: 566 -> 566
273
Cov: 566 -> 566
Cov: 566 -> 566
274
Cov: 566 -> 566
Cov: 566 -> 566
275
Cov: 566 -> 566
Cov: 566 -> 566
276
Cov: 566 -> 566
Cov: 566 -> 566
277
{"exception": "NameError", "msg": "name 'math' is not defined"}
278
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'N' and 'D'"}
279
Cov: 566 -> 566
Cov: 566 -> 566
280
Cov: 566 -> 566
Cov: 566 -> 566
281
Cov: 566 -> 566
Cov: 566 -> 566
282
Cov: 566 -> 567
Cov: 567 -> 567
283
Cov: 567 -> 567
Cov: 567 -> 567
284
Cov: 567 -> 567
Cov: 567 -> 567
285
Cov: 567 -> 567
Cov: 567 -> 567
286
Cov: 567 -> 567
Cov: 567 -> 567
287
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
288
Cov: 567 -> 567
Cov: 567 -> 567
289
Cov: 567 -> 567
Cov: 567 -> 567
290
Cov: 567 -> 567
Cov: 567 -> 567
291
Cov: 567 -> 567
Cov: 567 -> 567
292
Cov: 567 -> 567
Cov: 567 -> 567
293
{"exception": "NameError", "msg": "name 'math' is not defined"}
294
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'n_head', 'd_model', 'hidden_size', and 'dropout_p'"}
295
Cov: 567 -> 567
Cov: 567 -> 567
296
Cov: 567 -> 567
Cov: 567 -> 567
297
{"exception": "RuntimeError", "msg": "Only Tensors of floating point and complex dtype can require gradients"}
298
Cov: 567 -> 568
Cov: 568 -> 568
299
Cov: 568 -> 568
Cov: 568 -> 568
300
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'linear'"}
301
Cov: 568 -> 568
Cov: 568 -> 568
302
Cov: 568 -> 568
Cov: 568 -> 568
303
Cov: 568 -> 568
Cov: 568 -> 568
304
{"exception": "NameError", "msg": "name 'Model' is not defined"}
305
Cov: 568 -> 568
Cov: 568 -> 568
306
Cov: 568 -> 568
Cov: 568 -> 568
307
Cov: 568 -> 568
Cov: 568 -> 568
308
Cov: 568 -> 568
Cov: 568 -> 568
309
Cov: 568 -> 568
Cov: 568 -> 568
310
Cov: 568 -> 568
Cov: 568 -> 568
311
Cov: 568 -> 569
Cov: 569 -> 569
312
{"exception": "NameError", "msg": "name 'Model' is not defined"}
313
Cov: 569 -> 569
Cov: 569 -> 569
314
Cov: 569 -> 569
Cov: 569 -> 569
315
{"exception": "NameError", "msg": "name 'Model' is not defined"}
316
{"exception": "NameError", "msg": "name 'Model' is not defined"}
317
Cov: 569 -> 569
Cov: 569 -> 569
318
Cov: 569 -> 569
Cov: 569 -> 569
319
Cov: 569 -> 569
Cov: 569 -> 569
320
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'hidden_size', 'num_heads', and 'dropout_p'"}
321
Cov: 569 -> 569
Cov: 569 -> 569
322
Cov: 569 -> 569
Cov: 569 -> 569
323
Cov: 569 -> 569
Cov: 569 -> 569
324
Cov: 569 -> 570
Cov: 570 -> 570
325
Cov: 570 -> 570
Cov: 570 -> 570
326
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
327
{"exception": "SyntaxError", "msg": "unexpected EOF while parsing (<string>, line 5)"}
328
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'p1'"}
329
Cov: 570 -> 570
Cov: 570 -> 570
330
Cov: 570 -> 570
Cov: 570 -> 570
331
Cov: 570 -> 570
Cov: 570 -> 570
332
Cov: 570 -> 570
Cov: 570 -> 570
333
Cov: 570 -> 570
Cov: 570 -> 570
334
Cov: 570 -> 570
Cov: 570 -> 570
335
Cov: 570 -> 573
Cov: 573 -> 573
336
Cov: 573 -> 573
Cov: 573 -> 573
337
Cov: 573 -> 573
Cov: 573 -> 573
338
Cov: 573 -> 573
Cov: 573 -> 573
339
Cov: 573 -> 575
Cov: 575 -> 575
340
Cov: 575 -> 575
Cov: 575 -> 575
341
Cov: 575 -> 575
Cov: 575 -> 575
342
Cov: 575 -> 575
Cov: 575 -> 575
343
Cov: 575 -> 575
Cov: 575 -> 575
344
Cov: 575 -> 575
Cov: 575 -> 575
345
{"exception": "TypeError", "msg": "__init__() takes 0 positional arguments but 1 was given"}
346
Cov: 575 -> 575
Cov: 575 -> 575
347
Cov: 575 -> 575
Cov: 575 -> 575
348
Cov: 575 -> 575
Cov: 575 -> 575
349
Cov: 575 -> 575
Cov: 575 -> 575
350
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_feature' and 'out_feature'"}
351
Cov: 575 -> 575
Cov: 575 -> 575
352
Cov: 575 -> 575
Cov: 575 -> 575
353
Cov: 575 -> 575
Cov: 575 -> 575
354
Cov: 575 -> 575
Cov: 575 -> 575
355
Cov: 575 -> 575
Cov: 575 -> 575
356
Cov: 575 -> 575
Cov: 575 -> 575
357
Cov: 575 -> 575
Cov: 575 -> 575
358
Cov: 575 -> 575
Cov: 575 -> 575
359
Cov: 575 -> 575
Cov: 575 -> 575
360
Cov: 575 -> 575
Cov: 575 -> 575
361
Cov: 575 -> 580
Cov: 580 -> 580
362
{"exception": "RuntimeError", "msg": "shape '[3, 3, 1]' is invalid for input of size 27"}
363
Cov: 580 -> 580
Cov: 580 -> 580
364
Cov: 580 -> 580
Cov: 580 -> 580
365
Cov: 580 -> 580
Cov: 580 -> 580
366
Cov: 580 -> 580
Cov: 580 -> 580
367
Cov: 580 -> 580
Cov: 580 -> 580
368
Cov: 580 -> 580
Cov: 580 -> 580
369
Cov: 580 -> 580
Cov: 580 -> 580
370
Cov: 580 -> 581
Cov: 581 -> 581
371
Cov: 581 -> 581
Cov: 581 -> 581
372
Cov: 581 -> 582
Cov: 582 -> 582
373
Cov: 582 -> 582
Cov: 582 -> 582
374
Cov: 582 -> 582
Cov: 582 -> 582
375
Cov: 582 -> 582
Cov: 582 -> 582
376
Cov: 582 -> 582
Cov: 582 -> 582
377
Cov: 582 -> 582
Cov: 582 -> 582
378
Cov: 582 -> 582
Cov: 582 -> 582
379
Cov: 582 -> 582
Cov: 582 -> 582
380
Cov: 582 -> 582
Cov: 582 -> 582
381
{"exception": "NameError", "msg": "name 'Model' is not defined"}
382
{"exception": "NameError", "msg": "name 'nn' is not defined"}
383
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
384
Cov: 582 -> 583
Cov: 583 -> 583
385
Cov: 583 -> 583
Cov: 583 -> 583
386
Cov: 583 -> 584
Cov: 584 -> 584
387
Cov: 584 -> 584
Cov: 584 -> 584
388
Cov: 584 -> 584
Cov: 584 -> 584
389
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
390
Cov: 584 -> 584
Cov: 584 -> 584
391
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
392
Cov: 584 -> 584
Cov: 584 -> 584
393
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
394
Cov: 584 -> 586
Cov: 586 -> 586
395
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'emb_size' and 'block_size'"}
396
{"exception": "NameError", "msg": "name 'Model' is not defined"}
397
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
398
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
399
Cov: 586 -> 586
Cov: 586 -> 586
400
Cov: 586 -> 586
Cov: 586 -> 586
401
Cov: 586 -> 586
Cov: 586 -> 586
402
Cov: 586 -> 586
Cov: 586 -> 586
403
Cov: 586 -> 586
Cov: 586 -> 586
404
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'ConvTransfom'"}
405
Cov: 586 -> 586
Cov: 586 -> 586
406
Cov: 586 -> 586
Cov: 586 -> 586
407
Cov: 586 -> 586
Cov: 586 -> 586
408
Cov: 586 -> 586
Cov: 586 -> 586
409
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
410
{"exception": "NameError", "msg": "name 'Model' is not defined"}
411
Cov: 586 -> 587
Cov: 587 -> 587
412
Cov: 587 -> 587
Cov: 587 -> 587
413
{"exception": "NameError", "msg": "name 'Model' is not defined"}
414
{"exception": "NameError", "msg": "name '__init__' is not defined"}
415
Cov: 587 -> 587
Cov: 587 -> 587
416
Cov: 587 -> 587
Cov: 587 -> 587
417
Cov: 587 -> 587
Cov: 587 -> 587
418
Cov: 587 -> 587
Cov: 587 -> 587
419
Cov: 587 -> 587
Cov: 587 -> 587
420
Cov: 587 -> 587
Cov: 587 -> 587
421
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
422
Cov: 587 -> 587
Cov: 587 -> 587
423
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
424
Cov: 587 -> 587
Cov: 587 -> 587
425
Cov: 587 -> 587
Cov: 587 -> 587
426
Cov: 587 -> 587
Cov: 587 -> 587
427
Cov: 587 -> 587
Cov: 587 -> 587
428
Cov: 587 -> 587
Cov: 587 -> 587
429
Cov: 587 -> 587
Cov: 587 -> 587
430
Cov: 587 -> 587
Cov: 587 -> 587
431
Cov: 587 -> 587
Cov: 587 -> 587
432
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
433
Cov: 587 -> 587
Cov: 587 -> 587
434
Cov: 587 -> 587
Cov: 587 -> 587
435
Cov: 587 -> 587
Cov: 587 -> 587
436
Cov: 587 -> 587
Cov: 587 -> 587
437
{"exception": "NameError", "msg": "name 'Model' is not defined"}
438
{"exception": "NameError", "msg": "name 'Model' is not defined"}
439
Cov: 587 -> 587
Cov: 587 -> 587
440
Cov: 587 -> 587
Cov: 587 -> 587
441
Cov: 587 -> 587
Cov: 587 -> 587
442
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query_dim', 'key_dim', 'value_dim', 'num_head', and 'dropout'"}
443
Cov: 587 -> 587
Cov: 587 -> 587
444
Cov: 587 -> 587
Cov: 587 -> 587
445
Cov: 587 -> 587
Cov: 587 -> 587
446
Cov: 587 -> 587
Cov: 587 -> 587
447
Cov: 587 -> 587
Cov: 587 -> 587
448
Cov: 587 -> 587
Cov: 587 -> 587
449
{"exception": "NameError", "msg": "name 'TBD' is not defined"}
450
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden_dim'"}
451
Cov: 587 -> 587
Cov: 587 -> 587
452
Cov: 587 -> 587
Cov: 587 -> 587
453
Cov: 587 -> 587
Cov: 587 -> 587
454
{"exception": "NameError", "msg": "name 'math' is not defined"}
455
Cov: 587 -> 587
Cov: 587 -> 587
456
Cov: 587 -> 587
Cov: 587 -> 587
457
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 12)"}
458
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
459
Cov: 587 -> 587
Cov: 587 -> 587
460
Cov: 587 -> 587
Cov: 587 -> 587
461
Cov: 587 -> 587
Cov: 587 -> 587
462
Cov: 587 -> 587
Cov: 587 -> 587
463
Cov: 587 -> 587
Cov: 587 -> 587
464
Cov: 587 -> 589
Cov: 589 -> 589
465
Cov: 589 -> 589
Cov: 589 -> 589
466
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 9)"}
467
Cov: 589 -> 589
Cov: 589 -> 589
468
Cov: 589 -> 589
Cov: 589 -> 589
469
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 17)"}
470
{"exception": "NameError", "msg": "name 'Model' is not defined"}
471
Cov: 589 -> 589
Cov: 589 -> 589
472
Cov: 589 -> 589
Cov: 589 -> 589
473
Cov: 589 -> 589
Cov: 589 -> 589
474
Cov: 589 -> 589
Cov: 589 -> 589
475
Cov: 589 -> 589
Cov: 589 -> 589
476
Cov: 589 -> 589
Cov: 589 -> 589
477
Cov: 589 -> 589
Cov: 589 -> 589
478
Cov: 589 -> 589
Cov: 589 -> 589
479
Cov: 589 -> 589
Cov: 589 -> 589
480
Cov: 589 -> 589
Cov: 589 -> 589
481
Cov: 589 -> 589
Cov: 589 -> 589
482
Cov: 589 -> 589
Cov: 589 -> 589
483
Cov: 589 -> 589
Cov: 589 -> 589
484
Cov: 589 -> 589
Cov: 589 -> 589
485
Cov: 589 -> 589
Cov: 589 -> 589
486
Cov: 589 -> 589
Cov: 589 -> 589
487
Cov: 589 -> 589
Cov: 589 -> 589
488
Cov: 589 -> 589
Cov: 589 -> 589
489
Cov: 589 -> 589
Cov: 589 -> 589
490
Cov: 589 -> 591
Cov: 591 -> 591
491
Cov: 591 -> 591
Cov: 591 -> 591
492
Cov: 591 -> 591
Cov: 591 -> 591
493
Cov: 591 -> 591
Cov: 591 -> 591
494
Cov: 591 -> 591
Cov: 591 -> 591
495
Cov: 591 -> 591
Cov: 591 -> 591
496
Cov: 591 -> 591
Cov: 591 -> 591
497
Cov: 591 -> 591
Cov: 591 -> 591
498
Cov: 591 -> 591
Cov: 591 -> 591
499
Cov: 591 -> 591
Cov: 591 -> 591
500
Cov: 591 -> 591
Cov: 591 -> 591
501
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Split'"}
502
Cov: 591 -> 591
Cov: 591 -> 591
503
Cov: 591 -> 591
Cov: 591 -> 591
504
Cov: 591 -> 591
Cov: 591 -> 591
505
Cov: 591 -> 591
Cov: 591 -> 591
506
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
507
Cov: 591 -> 591
Cov: 591 -> 591
508
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'N' and 'M'"}
509
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: '__other__'"}
510
Cov: 591 -> 591
Cov: 591 -> 591
511
Cov: 591 -> 606
Cov: 606 -> 606
512
Cov: 606 -> 606
Cov: 606 -> 606
513
Cov: 606 -> 606
Cov: 606 -> 606
514
Cov: 606 -> 606
Cov: 606 -> 606
515
Cov: 606 -> 606
Cov: 606 -> 606
516
Cov: 606 -> 606
Cov: 606 -> 606
517
Cov: 606 -> 606
Cov: 606 -> 606
518
Cov: 606 -> 671
Cov: 671 -> 671
519
Cov: 671 -> 671
Cov: 671 -> 671
520
Cov: 671 -> 671
Cov: 671 -> 671
521
{"exception": "NameError", "msg": "name 'ScaledDotProductAttention' is not defined"}
522
{"exception": "NameError", "msg": "name 'd_q' is not defined"}
523
Cov: 671 -> 671
Cov: 671 -> 671
524
Cov: 671 -> 671
Cov: 671 -> 671
525
{"exception": "NameError", "msg": "name 'nn' is not defined"}
526
Cov: 671 -> 679
Cov: 679 -> 679
527
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 95)"}
528
Cov: 679 -> 679
Cov: 679 -> 679
529
{"exception": "NameError", "msg": "name 'Model' is not defined"}
530
Cov: 679 -> 679
Cov: 679 -> 679
531
Cov: 679 -> 696
Cov: 696 -> 696
532
Cov: 696 -> 696
Cov: 696 -> 696
533
Cov: 696 -> 696
Cov: 696 -> 696
534
Cov: 696 -> 696
Cov: 696 -> 696
535
Cov: 696 -> 696
Cov: 696 -> 696
536
Cov: 696 -> 696
Cov: 696 -> 696
537
Cov: 696 -> 696
Cov: 696 -> 696
538
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 15)"}
539
Cov: 696 -> 696
Cov: 696 -> 696
540
{"exception": "NameError", "msg": "name 'np' is not defined"}
541
Cov: 696 -> 696
Cov: 696 -> 696
542
Cov: 696 -> 696
Cov: 696 -> 696
543
Cov: 696 -> 696
Cov: 696 -> 696
544
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim1' and 'dim2'"}
545
Cov: 696 -> 696
Cov: 696 -> 696
546
Cov: 696 -> 696
Cov: 696 -> 696
547
Cov: 696 -> 696
Cov: 696 -> 696
548
Cov: 696 -> 696
Cov: 696 -> 696
549
Cov: 696 -> 696
Cov: 696 -> 696
550
Cov: 696 -> 696
Cov: 696 -> 696
551
Cov: 696 -> 696
Cov: 696 -> 696
552
Cov: 696 -> 696
Cov: 696 -> 696
553
Cov: 696 -> 696
Cov: 696 -> 696
554
Cov: 696 -> 696
Cov: 696 -> 696
555
Cov: 696 -> 696
Cov: 696 -> 696
556
Cov: 696 -> 696
Cov: 696 -> 696
557
{"exception": "RuntimeError", "msg": "Can't call numpy() on Tensor that requires grad. Use tensor.detach().numpy() instead."}
558
{"exception": "NameError", "msg": "name 'Model' is not defined"}
559
{"exception": "NameError", "msg": "name 'Model' is not defined"}
560
{"exception": "ValueError", "msg": "padding_mode must be one of {'zeros', 'replicate', 'circular', 'reflect'}, but got padding_mode='True'"}
561
Cov: 696 -> 703
Cov: 703 -> 703
562
Cov: 703 -> 703
Cov: 703 -> 703
563
Cov: 703 -> 703
Cov: 703 -> 703
564
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'd_model'"}
565
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 4)"}
566
Cov: 703 -> 703
Cov: 703 -> 703
567
Cov: 703 -> 707
Cov: 707 -> 707
568
Cov: 707 -> 707
Cov: 707 -> 707
569
Cov: 707 -> 707
Cov: 707 -> 707
570
Cov: 707 -> 707
Cov: 707 -> 707
571
{"exception": "NameError", "msg": "name 'np' is not defined"}
572
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'n_head', 'd_qkv', and 'dropout_p'"}
573
Cov: 707 -> 707
Cov: 707 -> 707
574
Cov: 707 -> 707
Cov: 707 -> 707
575
Cov: 707 -> 932
Cov: 932 -> 932
576
Cov: 932 -> 932
Cov: 932 -> 932
577
Cov: 932 -> 932
Cov: 932 -> 932
578
Cov: 932 -> 932
Cov: 932 -> 932
579
Cov: 932 -> 932
Cov: 932 -> 932
580
Cov: 932 -> 932
Cov: 932 -> 932
581
Cov: 932 -> 932
Cov: 932 -> 932
582
Cov: 932 -> 932
Cov: 932 -> 932
583
Cov: 932 -> 932
Cov: 932 -> 932
584
Cov: 932 -> 932
Cov: 932 -> 932
585
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
586
Cov: 932 -> 932
Cov: 932 -> 932
587
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
588
Cov: 932 -> 932
Cov: 932 -> 932
589
Cov: 932 -> 932
Cov: 932 -> 932
590
Cov: 932 -> 932
Cov: 932 -> 932
591
Cov: 932 -> 932
Cov: 932 -> 932
592
Cov: 932 -> 932
Cov: 932 -> 932
593
Cov: 932 -> 932
Cov: 932 -> 932
594
Cov: 932 -> 932
Cov: 932 -> 932
595
Cov: 932 -> 932
Cov: 932 -> 932
596
Cov: 932 -> 932
Cov: 932 -> 932
597
Cov: 932 -> 932
Cov: 932 -> 932
598
Cov: 932 -> 932
Cov: 932 -> 932
599
Cov: 932 -> 932
Cov: 932 -> 932
600
Cov: 932 -> 932
Cov: 932 -> 932
601
Cov: 932 -> 932
Cov: 932 -> 932
602
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'w' and 'b'"}
603
Cov: 932 -> 932
Cov: 932 -> 932
604
Cov: 932 -> 932
Cov: 932 -> 932
605
Cov: 932 -> 932
Cov: 932 -> 932
606
Cov: 932 -> 932
Cov: 932 -> 932
607
Cov: 932 -> 932
Cov: 932 -> 932
608
Cov: 932 -> 932
Cov: 932 -> 932
609
Cov: 932 -> 932
Cov: 932 -> 932
610
Cov: 932 -> 932
Cov: 932 -> 932
611
Cov: 932 -> 940
Cov: 940 -> 940
612
Cov: 940 -> 940
Cov: 940 -> 940
613
Cov: 940 -> 940
Cov: 940 -> 940
614
Cov: 940 -> 940
Cov: 940 -> 940
615
Cov: 940 -> 940
Cov: 940 -> 940
616
Cov: 940 -> 940
Cov: 940 -> 940
617
Cov: 940 -> 940
Cov: 940 -> 940
618
Cov: 940 -> 940
Cov: 940 -> 940
619
Cov: 940 -> 940
Cov: 940 -> 940
620
Cov: 940 -> 940
Cov: 940 -> 940
621
Cov: 940 -> 940
Cov: 940 -> 940
622
Cov: 940 -> 940
Cov: 940 -> 940
623
{"exception": "NameError", "msg": "name 'Model' is not defined"}
624
Cov: 940 -> 940
Cov: 940 -> 940
625
Cov: 940 -> 940
Cov: 940 -> 940
626
Cov: 940 -> 940
Cov: 940 -> 940
627
Cov: 940 -> 940
Cov: 940 -> 940
628
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
629
Cov: 940 -> 940
Cov: 940 -> 940
630
{"exception": "NameError", "msg": "name 'Dataset' is not defined"}
631
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden_size'"}
632
Cov: 940 -> 940
Cov: 940 -> 940
633
Cov: 940 -> 940
Cov: 940 -> 940
634
Cov: 940 -> 940
Cov: 940 -> 940
635
Cov: 940 -> 940
Cov: 940 -> 940
636
Cov: 940 -> 940
Cov: 940 -> 940
637
Cov: 940 -> 940
Cov: 940 -> 940
638
Cov: 940 -> 940
Cov: 940 -> 940
639
Cov: 940 -> 940
Cov: 940 -> 940
640
Cov: 940 -> 940
Cov: 940 -> 940
641
Cov: 940 -> 940
Cov: 940 -> 940
642
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
643
Cov: 940 -> 940
Cov: 940 -> 940
644
{"exception": "NameError", "msg": "name 'MultiheadAttention' is not defined"}
645
Cov: 940 -> 940
Cov: 940 -> 940
646
Cov: 940 -> 940
Cov: 940 -> 940
647
Cov: 940 -> 940
Cov: 940 -> 940
648
Cov: 940 -> 956
Cov: 956 -> 956
649
Cov: 956 -> 956
Cov: 956 -> 956
650
Cov: 956 -> 956
Cov: 956 -> 956
651
Cov: 956 -> 956
Cov: 956 -> 956
652
Cov: 956 -> 956
Cov: 956 -> 956
653
Cov: 956 -> 956
Cov: 956 -> 956
654
Cov: 956 -> 956
Cov: 956 -> 956
655
Cov: 956 -> 956
Cov: 956 -> 956
656
Cov: 956 -> 956
Cov: 956 -> 956
657
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
658
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
659
Cov: 956 -> 956
Cov: 956 -> 956
660
Cov: 956 -> 956
Cov: 956 -> 956
661
Cov: 956 -> 956
Cov: 956 -> 956
662
Cov: 956 -> 956
Cov: 956 -> 956
663
Cov: 956 -> 956
Cov: 956 -> 956
664
Cov: 956 -> 956
Cov: 956 -> 956
665
Cov: 956 -> 956
Cov: 956 -> 956
666
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
667
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
668
Cov: 956 -> 956
Cov: 956 -> 956
669
Cov: 956 -> 956
Cov: 956 -> 956
670
Cov: 956 -> 956
Cov: 956 -> 956
671
Cov: 956 -> 956
Cov: 956 -> 956
672
Cov: 956 -> 956
Cov: 956 -> 956
673
Cov: 956 -> 956
Cov: 956 -> 956
674
Cov: 956 -> 956
Cov: 956 -> 956
675
Cov: 956 -> 956
Cov: 956 -> 956
676
Cov: 956 -> 956
Cov: 956 -> 956
677
Cov: 956 -> 956
Cov: 956 -> 956
678
{"exception": "NameError", "msg": "name 'Model' is not defined"}
679
Cov: 956 -> 956
Cov: 956 -> 956
680
Cov: 956 -> 956
Cov: 956 -> 956
681
{"exception": "NameError", "msg": "name 'Model' is not defined"}
682
{"exception": "NameError", "msg": "name 'Model' is not defined"}
683
Cov: 956 -> 962
Cov: 962 -> 962
684
Cov: 962 -> 962
Cov: 962 -> 962
685
Cov: 962 -> 962
Cov: 962 -> 962
686
Cov: 962 -> 962
Cov: 962 -> 962
687
Cov: 962 -> 962
Cov: 962 -> 962
688
Cov: 962 -> 962
Cov: 962 -> 962
689
Cov: 962 -> 962
Cov: 962 -> 962
690
Cov: 962 -> 962
Cov: 962 -> 962
691
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
692
Cov: 962 -> 962
Cov: 962 -> 962
693
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'in_dim', 'num_heads', 'ffn_hidden_dim', 'dropout_p', and 'device'"}
694
Cov: 962 -> 962
Cov: 962 -> 962
695
Cov: 962 -> 962
Cov: 962 -> 962
696
Cov: 962 -> 962
Cov: 962 -> 962
697
{"exception": "NameError", "msg": "name 'Model' is not defined"}
698
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'hidden_size', 'num_heads', and 'dropout_p'"}
699
Cov: 962 -> 962
Cov: 962 -> 962
700
Cov: 962 -> 962
Cov: 962 -> 962
701
Cov: 962 -> 962
Cov: 962 -> 962
702
Cov: 962 -> 962
Cov: 962 -> 962
703
Cov: 962 -> 962
Cov: 962 -> 962
704
Cov: 962 -> 962
Cov: 962 -> 962
705
Cov: 962 -> 962
Cov: 962 -> 962
706
Cov: 962 -> 962
Cov: 962 -> 962
707
Cov: 962 -> 962
Cov: 962 -> 962
708
Cov: 962 -> 962
Cov: 962 -> 962
709
Cov: 962 -> 975
Cov: 975 -> 975
710
Cov: 975 -> 975
Cov: 975 -> 975
711
Cov: 975 -> 975
Cov: 975 -> 975
712
Cov: 975 -> 975
Cov: 975 -> 975
713
Cov: 975 -> 975
Cov: 975 -> 975
714
Cov: 975 -> 975
Cov: 975 -> 975
715
Cov: 975 -> 975
Cov: 975 -> 975
716
Cov: 975 -> 975
Cov: 975 -> 975
717
Cov: 975 -> 975
Cov: 975 -> 975
718
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
719
Cov: 975 -> 975
Cov: 975 -> 975
720
Cov: 975 -> 975
Cov: 975 -> 975
721
Cov: 975 -> 975
Cov: 975 -> 975
722
Cov: 975 -> 975
Cov: 975 -> 975
723
{"exception": "ModuleNotFoundError", "msg": "No module named 'IPython'"}
724
Cov: 975 -> 975
Cov: 975 -> 975
725
Cov: 975 -> 975
Cov: 975 -> 975
726
Cov: 975 -> 975
Cov: 975 -> 975
727
Cov: 975 -> 975
Cov: 975 -> 975
728
Cov: 975 -> 975
Cov: 975 -> 975
729
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'output_padding'"}
730
Cov: 975 -> 975
Cov: 975 -> 975
731
Cov: 975 -> 975
Cov: 975 -> 975
732
Cov: 975 -> 975
Cov: 975 -> 975
733
Cov: 975 -> 1075
Cov: 1075 -> 1075
734
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_channels' and 'out_channels'"}
735
Cov: 1075 -> 1075
Cov: 1075 -> 1075
736
Cov: 1075 -> 1075
Cov: 1075 -> 1075
737
Cov: 1075 -> 1075
Cov: 1075 -> 1075
738
Cov: 1075 -> 1075
Cov: 1075 -> 1075
739
Cov: 1075 -> 1075
Cov: 1075 -> 1075
740
Cov: 1075 -> 1075
Cov: 1075 -> 1075
741
Cov: 1075 -> 1075
Cov: 1075 -> 1075
742
Cov: 1075 -> 1075
Cov: 1075 -> 1075
743
Cov: 1075 -> 1075
Cov: 1075 -> 1075
744
Cov: 1075 -> 1075
Cov: 1075 -> 1075
745
Cov: 1075 -> 1075
Cov: 1075 -> 1075
746
Cov: 1075 -> 1075
Cov: 1075 -> 1075
747
{"exception": "NameError", "msg": "name 'Model' is not defined"}
748
Cov: 1075 -> 1075
Cov: 1075 -> 1075
749
Cov: 1075 -> 1075
Cov: 1075 -> 1075
750
Cov: 1075 -> 1075
Cov: 1075 -> 1075
751
Cov: 1075 -> 1075
Cov: 1075 -> 1075
752
Cov: 1075 -> 1075
Cov: 1075 -> 1075
753
Cov: 1075 -> 1075
Cov: 1075 -> 1075
754
Cov: 1075 -> 1075
Cov: 1075 -> 1075
755
Cov: 1075 -> 1075
Cov: 1075 -> 1075
756
Cov: 1075 -> 1075
Cov: 1075 -> 1075
757
Cov: 1075 -> 1075
Cov: 1075 -> 1075
758
Cov: 1075 -> 1075
Cov: 1075 -> 1075
759
Cov: 1075 -> 1075
Cov: 1075 -> 1075
760
Cov: 1075 -> 1075
Cov: 1075 -> 1075
761
Cov: 1075 -> 1075
Cov: 1075 -> 1075
762
Cov: 1075 -> 1075
Cov: 1075 -> 1075
763
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
764
Cov: 1075 -> 1075
Cov: 1075 -> 1075
765
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim_input' and 'dim_hidden'"}
766
Cov: 1075 -> 1075
Cov: 1075 -> 1075
767
Cov: 1075 -> 1075
Cov: 1075 -> 1075
768
Cov: 1075 -> 1075
Cov: 1075 -> 1075
769
{"exception": "NameError", "msg": "name 'Model' is not defined"}
770
{"exception": "NameError", "msg": "name 'nn' is not defined"}
771
Cov: 1075 -> 1092
Cov: 1092 -> 1092
772
Cov: 1092 -> 1093
Cov: 1093 -> 1093
773
Cov: 1093 -> 1093
Cov: 1093 -> 1093
774
Cov: 1093 -> 1093
Cov: 1093 -> 1093
775
Cov: 1093 -> 1093
Cov: 1093 -> 1093
776
Cov: 1093 -> 1093
Cov: 1093 -> 1093
777
Cov: 1093 -> 1093
Cov: 1093 -> 1093
778
Cov: 1093 -> 1093
Cov: 1093 -> 1093
779
Cov: 1093 -> 1093
Cov: 1093 -> 1093
780
Cov: 1093 -> 1093
Cov: 1093 -> 1093
781
Cov: 1093 -> 1093
Cov: 1093 -> 1093
782
Cov: 1093 -> 1093
Cov: 1093 -> 1093
783
Cov: 1093 -> 1093
Cov: 1093 -> 1093
784
Cov: 1093 -> 1093
Cov: 1093 -> 1093
785
Cov: 1093 -> 1093
Cov: 1093 -> 1093
786
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 10)"}
787
Cov: 1093 -> 1093
Cov: 1093 -> 1093
788
Cov: 1093 -> 1093
Cov: 1093 -> 1093
789
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
790
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
791
Cov: 1093 -> 1093
Cov: 1093 -> 1093
792
Cov: 1093 -> 1093
Cov: 1093 -> 1093
793
Cov: 1093 -> 1093
Cov: 1093 -> 1093
794
Cov: 1093 -> 1093
Cov: 1093 -> 1093
795
{"exception": "NameError", "msg": "name 'Model' is not defined"}
796
Cov: 1093 -> 1093
Cov: 1093 -> 1093
797
Cov: 1093 -> 1093
Cov: 1093 -> 1093
798
Cov: 1093 -> 1093
Cov: 1093 -> 1093
799
Cov: 1093 -> 1093
Cov: 1093 -> 1093
800
Cov: 1093 -> 1093
Cov: 1093 -> 1093
801
Cov: 1093 -> 1093
Cov: 1093 -> 1093
802
Cov: 1093 -> 1093
Cov: 1093 -> 1093
803
{"exception": "NameError", "msg": "name 'Model' is not defined"}
804
{"exception": "NameError", "msg": "name 'Model' is not defined"}
805
Cov: 1093 -> 1093
Cov: 1093 -> 1093
806
Cov: 1093 -> 1093
Cov: 1093 -> 1093
807
Cov: 1093 -> 1093
Cov: 1093 -> 1093
808
{"exception": "NameError", "msg": "name 'DotProductAttention' is not defined"}
809
Cov: 1093 -> 1094
Cov: 1094 -> 1094
810
Cov: 1094 -> 1094
Cov: 1094 -> 1094
811
Cov: 1094 -> 1094
Cov: 1094 -> 1094
812
Cov: 1094 -> 1094
Cov: 1094 -> 1094
813
Cov: 1094 -> 1094
Cov: 1094 -> 1094
814
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
815
{"exception": "NameError", "msg": "name 'math' is not defined"}
816
Cov: 1094 -> 1094
Cov: 1094 -> 1094
817
Cov: 1094 -> 1094
Cov: 1094 -> 1094
818
Cov: 1094 -> 1094
Cov: 1094 -> 1094
819
{"exception": "NameError", "msg": "name 'Optional' is not defined"}
820
Cov: 1094 -> 1094
Cov: 1094 -> 1094
821
Cov: 1094 -> 1094
Cov: 1094 -> 1094
822
Cov: 1094 -> 1094
Cov: 1094 -> 1094
823
Cov: 1094 -> 1094
Cov: 1094 -> 1094
824
{"exception": "NameError", "msg": "name 'Model' is not defined"}
825
Cov: 1094 -> 1094
Cov: 1094 -> 1094
826
Cov: 1094 -> 1094
Cov: 1094 -> 1094
827
Cov: 1094 -> 1094
Cov: 1094 -> 1094
828
Cov: 1094 -> 1094
Cov: 1094 -> 1094
829
Cov: 1094 -> 1094
Cov: 1094 -> 1094
830
Cov: 1094 -> 1094
Cov: 1094 -> 1094
831
Cov: 1094 -> 1094
Cov: 1094 -> 1094
832
Cov: 1094 -> 1094
Cov: 1094 -> 1094
833
Cov: 1094 -> 1094
Cov: 1094 -> 1094
834
Cov: 1094 -> 1094
Cov: 1094 -> 1094
835
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 17)"}
836
Cov: 1094 -> 1094
Cov: 1094 -> 1094
837
Cov: 1094 -> 1094
Cov: 1094 -> 1094
838
Cov: 1094 -> 1094
Cov: 1094 -> 1094
839
Cov: 1094 -> 1094
Cov: 1094 -> 1094
840
Cov: 1094 -> 1094
Cov: 1094 -> 1094
841
Cov: 1094 -> 1094
Cov: 1094 -> 1094
842
Cov: 1094 -> 1094
Cov: 1094 -> 1094
843
Cov: 1094 -> 1094
Cov: 1094 -> 1094
844
Cov: 1094 -> 1094
Cov: 1094 -> 1094
845
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 't1'"}
846
Cov: 1094 -> 1094
Cov: 1094 -> 1094
847
Cov: 1094 -> 1094
Cov: 1094 -> 1094
848
Cov: 1094 -> 1094
Cov: 1094 -> 1094
849
Cov: 1094 -> 1094
Cov: 1094 -> 1094
850
Cov: 1094 -> 1094
Cov: 1094 -> 1094
851
Cov: 1094 -> 1094
Cov: 1094 -> 1094
852
Cov: 1094 -> 1094
Cov: 1094 -> 1094
853
Cov: 1094 -> 1094
Cov: 1094 -> 1094
854
Cov: 1094 -> 1094
Cov: 1094 -> 1094
855
Cov: 1094 -> 1094
Cov: 1094 -> 1094
856
{"exception": "NameError", "msg": "name 'Model' is not defined"}
857
Cov: 1094 -> 1094
Cov: 1094 -> 1094
858
Cov: 1094 -> 1094
Cov: 1094 -> 1094
859
Cov: 1094 -> 1094
Cov: 1094 -> 1094
860
Cov: 1094 -> 1094
Cov: 1094 -> 1094
861
Cov: 1094 -> 1094
Cov: 1094 -> 1094
862
Cov: 1094 -> 1094
Cov: 1094 -> 1094
863
Cov: 1094 -> 1094
Cov: 1094 -> 1094
864
Cov: 1094 -> 1094
Cov: 1094 -> 1094
865
Cov: 1094 -> 1094
Cov: 1094 -> 1094
866
Cov: 1094 -> 1094
Cov: 1094 -> 1094
867
Cov: 1094 -> 1094
Cov: 1094 -> 1094
868
Cov: 1094 -> 1094
Cov: 1094 -> 1094
869
Cov: 1094 -> 1094
Cov: 1094 -> 1094
870
Cov: 1094 -> 1094
Cov: 1094 -> 1094
871
Cov: 1094 -> 1094
Cov: 1094 -> 1094
872
{"exception": "NameError", "msg": "name 'Optional' is not defined"}
873
Cov: 1094 -> 1094
Cov: 1094 -> 1094
874
Cov: 1094 -> 1094
Cov: 1094 -> 1094
875
Cov: 1094 -> 1094
Cov: 1094 -> 1094
876
Cov: 1094 -> 1094
Cov: 1094 -> 1094
877
Cov: 1094 -> 1094
Cov: 1094 -> 1094
878
Cov: 1094 -> 1094
Cov: 1094 -> 1094
879
Cov: 1094 -> 1094
Cov: 1094 -> 1094
880
Cov: 1094 -> 1094
Cov: 1094 -> 1094
881
Cov: 1094 -> 1094
Cov: 1094 -> 1094
882
Cov: 1094 -> 1094
Cov: 1094 -> 1094
883
{"exception": "NameError", "msg": "name '_' is not defined"}
884
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'n_head', 'd_model', 'd_k', 'd_v', 'd', and 'dropout'"}
885
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 16)"}
886
Cov: 1094 -> 1094
Cov: 1094 -> 1094
887
Cov: 1094 -> 1094
Cov: 1094 -> 1094
888
{"exception": "RuntimeError", "msg": "mat1 and mat2 shapes cannot be multiplied (30x200 and 3x30)"}
889
Cov: 1094 -> 1102
Cov: 1102 -> 1102
890
Cov: 1102 -> 1102
Cov: 1102 -> 1102
891
{"exception": "NameError", "msg": "name 'nn' is not defined"}
892
Cov: 1102 -> 1117
Cov: 1117 -> 1117
893
Cov: 1117 -> 1117
Cov: 1117 -> 1117
894
Cov: 1117 -> 1117
Cov: 1117 -> 1117
895
{"exception": "NameError", "msg": "name 'self' is not defined"}
896
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 11)"}
897
Cov: 1117 -> 1117
Cov: 1117 -> 1117
898
Cov: 1117 -> 1117
Cov: 1117 -> 1117
899
Cov: 1117 -> 1117
Cov: 1117 -> 1117
900
Cov: 1117 -> 1117
Cov: 1117 -> 1117
901
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
902
Cov: 1117 -> 1117
Cov: 1117 -> 1117
903
{"exception": "NameError", "msg": "name 'math' is not defined"}
904
Cov: 1117 -> 1117
Cov: 1117 -> 1117
905
Cov: 1117 -> 1117
Cov: 1117 -> 1117
906
Cov: 1117 -> 1117
Cov: 1117 -> 1117
907
Cov: 1117 -> 1117
Cov: 1117 -> 1117
908
Cov: 1117 -> 1117
Cov: 1117 -> 1117
909
Cov: 1117 -> 1117
Cov: 1117 -> 1117
910
{"exception": "NameError", "msg": "name 'nn' is not defined"}
911
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
912
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
913
Cov: 1117 -> 1117
Cov: 1117 -> 1117
914
Cov: 1117 -> 1117
Cov: 1117 -> 1117
915
Cov: 1117 -> 1117
Cov: 1117 -> 1117
916
Cov: 1117 -> 1117
Cov: 1117 -> 1117
917
Cov: 1117 -> 1117
Cov: 1117 -> 1117
918
Cov: 1117 -> 1117
Cov: 1117 -> 1117
919
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
920
Cov: 1117 -> 1117
Cov: 1117 -> 1117
921
Cov: 1117 -> 1117
Cov: 1117 -> 1117
922
Cov: 1117 -> 1117
Cov: 1117 -> 1117
923
Cov: 1117 -> 1117
Cov: 1117 -> 1117
924
Cov: 1117 -> 1117
Cov: 1117 -> 1117
925
{"exception": "NameError", "msg": "name 'Model' is not defined"}
926
{"exception": "NameError", "msg": "name 'Model' is not defined"}
927
Cov: 1117 -> 1117
Cov: 1117 -> 1117
928
Cov: 1117 -> 1117
Cov: 1117 -> 1117
929
Cov: 1117 -> 1117
Cov: 1117 -> 1117
930
Cov: 1117 -> 1117
Cov: 1117 -> 1117
931
Cov: 1117 -> 1117
Cov: 1117 -> 1117
932
Cov: 1117 -> 1117
Cov: 1117 -> 1117
933
Cov: 1117 -> 1117
Cov: 1117 -> 1117
934
Cov: 1117 -> 1117
Cov: 1117 -> 1117
935
Cov: 1117 -> 1117
Cov: 1117 -> 1117
936
Cov: 1117 -> 1117
Cov: 1117 -> 1117
937
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 4)"}
938
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query', 'key', and 'value'"}
939
{"exception": "NameError", "msg": "name 'device' is not defined"}
940
Cov: 1117 -> 1117
Cov: 1117 -> 1117
941
{"exception": "NameError", "msg": "name 'Model' is not defined"}
942
{"exception": "NameError", "msg": "name 'batch_size' is not defined"}
943
Cov: 1117 -> 1117
Cov: 1117 -> 1117
944
Cov: 1117 -> 1117
Cov: 1117 -> 1117
945
Cov: 1117 -> 1117
Cov: 1117 -> 1117
946
Cov: 1117 -> 1117
Cov: 1117 -> 1117
947
Cov: 1117 -> 1117
Cov: 1117 -> 1117
948
Cov: 1117 -> 1117
Cov: 1117 -> 1117
949
Cov: 1117 -> 1117
Cov: 1117 -> 1117
950
Cov: 1117 -> 1117
Cov: 1117 -> 1117
951
Cov: 1117 -> 1117
Cov: 1117 -> 1117
952
Cov: 1117 -> 1117
Cov: 1117 -> 1117
953
Cov: 1117 -> 1117
Cov: 1117 -> 1117
954
Cov: 1117 -> 1117
Cov: 1117 -> 1117
955
Cov: 1117 -> 1117
Cov: 1117 -> 1117
956
Cov: 1117 -> 1117
Cov: 1117 -> 1117
957
Cov: 1117 -> 1117
Cov: 1117 -> 1117
958
Cov: 1117 -> 1117
Cov: 1117 -> 1117
959
Cov: 1117 -> 1117
Cov: 1117 -> 1117
960
Cov: 1117 -> 1117
Cov: 1117 -> 1117
961
Cov: 1117 -> 1117
Cov: 1117 -> 1117
962
{"exception": "TypeError", "msg": "empty(): argument 'size' failed to unpack the object at pos 2 with error \"type must be tuple of ints,but got tuple\""}
963
Cov: 1117 -> 1118
Cov: 1118 -> 1118
964
Cov: 1118 -> 1118
Cov: 1118 -> 1118
965
Cov: 1118 -> 1118
Cov: 1118 -> 1118
966
Cov: 1118 -> 1118
Cov: 1118 -> 1118
967
Cov: 1118 -> 1118
Cov: 1118 -> 1118
968
Cov: 1118 -> 1119
Cov: 1119 -> 1119
969
Cov: 1119 -> 1119
Cov: 1119 -> 1119
970
Cov: 1119 -> 1119
Cov: 1119 -> 1119
971
Cov: 1119 -> 1119
Cov: 1119 -> 1119
972
Cov: 1119 -> 1119
Cov: 1119 -> 1119
973
Cov: 1119 -> 1119
Cov: 1119 -> 1119
974
Cov: 1119 -> 1119
Cov: 1119 -> 1119
975
Cov: 1119 -> 1119
Cov: 1119 -> 1119
976
Cov: 1119 -> 1119
Cov: 1119 -> 1119
977
Cov: 1119 -> 1119
Cov: 1119 -> 1119
978
Cov: 1119 -> 1119
Cov: 1119 -> 1119
979
Cov: 1119 -> 1119
Cov: 1119 -> 1119
980
Cov: 1119 -> 1119
Cov: 1119 -> 1119
981
Cov: 1119 -> 1119
Cov: 1119 -> 1119
982
Cov: 1119 -> 1119
Cov: 1119 -> 1119
983
Cov: 1119 -> 1119
Cov: 1119 -> 1119
984
Cov: 1119 -> 1119
Cov: 1119 -> 1119
985
Cov: 1119 -> 1119
Cov: 1119 -> 1119
986
Cov: 1119 -> 1119
Cov: 1119 -> 1119
987
Cov: 1119 -> 1119
Cov: 1119 -> 1119
988
Cov: 1119 -> 1119
Cov: 1119 -> 1119
989
Cov: 1119 -> 1119
Cov: 1119 -> 1119
990
Cov: 1119 -> 1120
Cov: 1120 -> 1120
991
Cov: 1120 -> 1120
Cov: 1120 -> 1120
992
Cov: 1120 -> 1120
Cov: 1120 -> 1120
993
Cov: 1120 -> 1120
Cov: 1120 -> 1120
994
Cov: 1120 -> 1120
Cov: 1120 -> 1120
995
Cov: 1120 -> 1120
Cov: 1120 -> 1120
996
Cov: 1120 -> 1120
Cov: 1120 -> 1120
997
Cov: 1120 -> 1120
Cov: 1120 -> 1120
998
Cov: 1120 -> 1120
Cov: 1120 -> 1120
999
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1000
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1001
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1002
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1003
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1004
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1005
{"exception": "NameError", "msg": "name 'math' is not defined"}
1006
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'd_model', 'nhead', and 'dropout'"}
1007
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1008
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1009
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1010
{"exception": "NameError", "msg": "name 'math' is not defined"}
1011
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1012
Cov: 1120 -> 1120
Cov: 1120 -> 1120
1013
Cov: 1120 -> 1121
Cov: 1121 -> 1121
1014
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1015
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1016
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1017
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1018
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1019
{"exception": "ValueError", "msg": "Only \"zeros\" padding mode is supported for ConvTranspose2d"}
1020
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'weight_norm'"}
1021
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1022
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1023
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1024
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1025
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
1026
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1027
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1028
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1029
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
1030
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1031
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1032
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
1033
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1034
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1035
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1036
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1037
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1038
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1039
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1040
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1041
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1042
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1043
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1044
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1045
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1046
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1047
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1048
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1049
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1050
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1051
Cov: 1121 -> 1121
Cov: 1121 -> 1121
1052
Cov: 1121 -> 1122
Cov: 1122 -> 1122
1053
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1054
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1055
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1056
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1057
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1058
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1059
{"exception": "TypeError", "msg": "__init__() missing 7 required positional arguments: 'query_size', 'key_size', 'value_size', 'input_size', 'n_heads', 'dropout_p', and 'scale_factor'"}
1060
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query_size', 'key_size', and 'value_size'"}
1061
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1062
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1063
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'd_model', 'n_head', 'd_k', 'd_v', 'dropout_p', and 'input_tensor'"}
1064
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1065
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1066
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1067
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1068
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
1069
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1070
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1071
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1072
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 9)"}
1073
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
1074
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1075
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1076
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1077
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1078
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1079
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1080
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1081
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1082
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1083
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1084
{"exception": "NameError", "msg": "name 'self' is not defined"}
1085
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1086
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1087
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1088
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1089
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1090
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1091
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1092
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1093
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1094
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1095
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1096
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1097
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1098
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1099
Cov: 1122 -> 1122
Cov: 1122 -> 1122
1100
{"exception": "TypeError", "msg": "unsupported operand type(s) for %: 'tuple' and 'int'"}
1101
Cov: 1122 -> 1123
Cov: 1123 -> 1123
1102
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1103
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1104
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1105
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1106
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1107
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1108
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1109
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1110
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1111
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1112
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1113
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1114
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1115
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1116
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1117
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1118
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1119
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1120
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1121
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
1122
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1123
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1124
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1125
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1126
Cov: 1123 -> 1123
Cov: 1123 -> 1123
1127
Cov: 1123 -> 1128
Cov: 1128 -> 1128
1128
Cov: 1128 -> 1128
Cov: 1128 -> 1128
1129
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'min_r', 'max_r', 'min_g', 'max_g', 'min_b', and 'max_b'"}
1130
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1131
Cov: 1128 -> 1128
Cov: 1128 -> 1128
1132
Cov: 1128 -> 1128
Cov: 1128 -> 1128
1133
Cov: 1128 -> 1128
Cov: 1128 -> 1128
1134
Cov: 1128 -> 1128
Cov: 1128 -> 1128
1135
Cov: 1128 -> 1142
Cov: 1142 -> 1142
1136
Cov: 1142 -> 1143
Cov: 1143 -> 1143
1137
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1138
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1139
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1140
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1141
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1142
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1143
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1144
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1145
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1146
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1147
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1148
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1149
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1150
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1151
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1152
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
1153
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1154
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1155
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1156
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1157
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1158
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1159
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1160
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1161
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1162
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1163
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1164
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
1165
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1166
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1167
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1168
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1169
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1170
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1171
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1172
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1173
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'num_attention_heads' and 'input_shape'"}
1174
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
1175
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1176
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1177
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1178
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1179
{"exception": "TypeError", "msg": "forward() got an unexpected keyword argument 'other'"}
1180
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1181
{"exception": "NameError", "msg": "name 'math' is not defined"}
1182
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1183
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1184
Cov: 1143 -> 1143
Cov: 1143 -> 1143
1185
{"exception": "ValueError", "msg": "dropout probability has to be between 0 and 1, but got 128"}
1186
{"exception": "AttributeError", "msg": "'list' object has no attribute 'detach'"}
1187
Cov: 1143 -> 1146
Cov: 1146 -> 1146
1188
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1189
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1190
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1191
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1192
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1193
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1194
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1195
{"exception": "NameError", "msg": "name 'Exporter' is not defined"}
1196
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1197
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1198
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1199
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1200
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1201
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1202
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1203
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1204
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1205
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1206
{"exception": "NameError", "msg": "name 'module' is not defined"}
1207
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1208
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1209
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1210
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1211
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1212
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1213
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1214
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1215
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1216
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1217
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1218
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1219
{"exception": "NameError", "msg": "name 'size' is not defined"}
1220
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1221
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1222
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1223
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1224
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1225
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1226
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1227
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1228
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1229
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1230
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1231
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
1232
Cov: 1146 -> 1146
Cov: 1146 -> 1146
1233
Cov: 1146 -> 1147
Cov: 1147 -> 1147
1234
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1235
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1236
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1237
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1238
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1239
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1240
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1241
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 6)"}
1242
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1243
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1244
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1245
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1246
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1247
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1248
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1249
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1250
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'n' and 'nhead'"}
1251
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1252
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
1253
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1254
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1255
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1256
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1257
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1258
Cov: 1147 -> 1147
Cov: 1147 -> 1147
1259
Cov: 1147 -> 1148
Cov: 1148 -> 1148
1260
Cov: 1148 -> 1148
Cov: 1148 -> 1148
1261
Cov: 1148 -> 1148
Cov: 1148 -> 1148
1262
Cov: 1148 -> 1148
Cov: 1148 -> 1148
1263
Cov: 1148 -> 1148
Cov: 1148 -> 1148
1264
Cov: 1148 -> 1148
Cov: 1148 -> 1148
1265
Cov: 1148 -> 1149
Cov: 1149 -> 1149
1266
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1267
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1268
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1269
{"exception": "NameError", "msg": "name 'head_dim' is not defined"}
1270
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 8)"}
1271
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1272
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1273
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1274
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1275
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1276
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1277
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1278
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1279
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1280
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1281
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1282
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1283
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1284
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1285
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1286
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1287
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1288
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1289
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1290
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1291
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1292
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1293
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1294
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1295
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1296
{"exception": "TypeError", "msg": "__init__() missing 7 required positional arguments: 'query_dim', 'key_dim', 'value_dim', 'feature_dim', 'num_heads', 'inv_scale_factor', and 'dropout_p'"}
1297
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1298
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1299
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1300
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1301
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1302
{"exception": "RuntimeError", "msg": "The size of tensor a (66) must match the size of tensor b (64) at non-singleton dimension 3"}
1303
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1304
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'hidden_dim' and 'dropout_p'"}
1305
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1306
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1307
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1308
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'dim', 'nb_head', and 'dropout_p'"}
1309
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1310
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1311
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
1312
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1313
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1314
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1315
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1316
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1317
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1318
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1319
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1320
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1321
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1322
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1323
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1324
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1325
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1326
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1327
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1328
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1329
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1330
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1331
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1332
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1333
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1334
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1335
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1336
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1337
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1338
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1339
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1340
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1341
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1342
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1343
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1344
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'in_channels'"}
1345
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1346
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1347
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1348
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1349
Cov: 1149 -> 1149
Cov: 1149 -> 1149
1350
Cov: 1149 -> 1152
Cov: 1152 -> 1152
1351
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
1352
Cov: 1152 -> 21
Cov: 21 -> 21
1353
Cov: 21 -> 203
Cov: 203 -> 203
1354
Cov: 203 -> 204
Cov: 204 -> 204
1355
Cov: 204 -> 204
Cov: 204 -> 204
1356
Cov: 204 -> 256
Cov: 256 -> 256
1357
Cov: 256 -> 256
Cov: 256 -> 256
1358
Cov: 256 -> 256
Cov: 256 -> 256
1359
Cov: 256 -> 256
Cov: 256 -> 256
1360
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1361
Cov: 256 -> 279
Cov: 279 -> 279
1362
Cov: 279 -> 279
Cov: 279 -> 279
1363
Cov: 279 -> 279
Cov: 279 -> 279
1364
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden_size'"}
1365
Cov: 279 -> 280
Cov: 280 -> 280
1366
Cov: 280 -> 280
Cov: 280 -> 280
1367
Cov: 280 -> 280
Cov: 280 -> 280
1368
Cov: 280 -> 280
Cov: 280 -> 280
1369
Cov: 280 -> 297
Cov: 297 -> 297
1370
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
1371
Cov: 297 -> 298
Cov: 298 -> 298
1372
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'd_model', 'num_heads', and 'hidden_dim'"}
1373
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1374
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1375
Cov: 298 -> 300
Cov: 300 -> 300
1376
Cov: 300 -> 301
Cov: 301 -> 301
1377
Cov: 301 -> 301
Cov: 301 -> 301
1378
Cov: 301 -> 301
Cov: 301 -> 301
1379
Cov: 301 -> 379
Cov: 379 -> 379
1380
{"exception": "TypeError", "msg": "'Conv2d' object is not subscriptable"}
1381
Cov: 379 -> 383
Cov: 383 -> 383
1382
Cov: 383 -> 383
Cov: 383 -> 383
1383
Cov: 383 -> 383
Cov: 383 -> 383
1384
Cov: 383 -> 383
Cov: 383 -> 383
1385
Cov: 383 -> 384
Cov: 384 -> 384
1386
Cov: 384 -> 384
Cov: 384 -> 384
1387
Cov: 384 -> 384
Cov: 384 -> 384
1388
Cov: 384 -> 384
Cov: 384 -> 384
1389
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1390
Cov: 384 -> 384
Cov: 384 -> 384
1391
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dropout_p'"}
1392
Cov: 384 -> 384
Cov: 384 -> 384
1393
Cov: 384 -> 391
Cov: 391 -> 391
1394
Cov: 391 -> 391
Cov: 391 -> 391
1395
Cov: 391 -> 391
Cov: 391 -> 391
1396
{"exception": "RuntimeError", "msg": "[enforce fail at alloc_cpu.cpp:83] err == 0. DefaultCPUAllocator: can't allocate memory: you tried to allocate 4259840000000 bytes. Error code 12 (Cannot allocate memory)"}
1397
Cov: 391 -> 391
Cov: 391 -> 391
1398
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim'"}
1399
Cov: 391 -> 392
Cov: 392 -> 392
1400
Cov: 392 -> 392
Cov: 392 -> 392
1401
Cov: 392 -> 392
Cov: 392 -> 392
1402
Cov: 392 -> 392
Cov: 392 -> 392
1403
Cov: 392 -> 395
Cov: 395 -> 395
1404
Cov: 395 -> 395
Cov: 395 -> 395
1405
Cov: 395 -> 395
Cov: 395 -> 395
1406
Cov: 395 -> 395
Cov: 395 -> 395
1407
Cov: 395 -> 397
Cov: 397 -> 397
1408
Cov: 397 -> 399
Cov: 399 -> 399
1409
Cov: 399 -> 400
Cov: 400 -> 400
1410
Cov: 400 -> 400
Cov: 400 -> 400
1411
Cov: 400 -> 400
Cov: 400 -> 400
1412
Cov: 400 -> 400
Cov: 400 -> 400
1413
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1414
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1415
Cov: 400 -> 401
Cov: 401 -> 401
1416
Cov: 401 -> 401
Cov: 401 -> 401
1417
Cov: 401 -> 401
Cov: 401 -> 401
1418
Cov: 401 -> 401
Cov: 401 -> 401
1419
Cov: 401 -> 402
Cov: 402 -> 402
1420
Cov: 402 -> 403
Cov: 403 -> 403
1421
Cov: 403 -> 403
Cov: 403 -> 403
1422
Cov: 403 -> 403
Cov: 403 -> 403
1423
Cov: 403 -> 403
Cov: 403 -> 403
1424
Cov: 403 -> 403
Cov: 403 -> 403
1425
Cov: 403 -> 403
Cov: 403 -> 403
1426
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1427
Cov: 403 -> 408
Cov: 408 -> 408
1428
Cov: 408 -> 408
Cov: 408 -> 408
1429
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'hidden_size', 'num_attention_heads', 'attention_probs_dropout_prob', and 'layer_norm_eps'"}
1430
{"exception": "NameError", "msg": "name 'Tensor' is not defined"}
1431
Cov: 408 -> 408
Cov: 408 -> 408
1432
Cov: 408 -> 408
Cov: 408 -> 408
1433
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
1434
Cov: 408 -> 408
Cov: 408 -> 408
1435
Cov: 408 -> 408
Cov: 408 -> 408
1436
Cov: 408 -> 408
Cov: 408 -> 408
1437
Cov: 408 -> 408
Cov: 408 -> 408
1438
Cov: 408 -> 408
Cov: 408 -> 408
1439
Cov: 408 -> 408
Cov: 408 -> 408
1440
Cov: 408 -> 408
Cov: 408 -> 408
1441
Cov: 408 -> 408
Cov: 408 -> 408
1442
Cov: 408 -> 408
Cov: 408 -> 408
1443
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1444
Cov: 408 -> 408
Cov: 408 -> 408
1445
Cov: 408 -> 408
Cov: 408 -> 408
1446
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
1447
Cov: 408 -> 408
Cov: 408 -> 408
1448
Cov: 408 -> 408
Cov: 408 -> 408
1449
Cov: 408 -> 408
Cov: 408 -> 408
1450
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
1451
Cov: 408 -> 408
Cov: 408 -> 408
1452
Cov: 408 -> 408
Cov: 408 -> 408
1453
Cov: 408 -> 408
Cov: 408 -> 408
1454
Cov: 408 -> 408
Cov: 408 -> 408
1455
Cov: 408 -> 411
Cov: 411 -> 411
1456
Cov: 411 -> 411
Cov: 411 -> 411
1457
Cov: 411 -> 411
Cov: 411 -> 411
1458
Cov: 411 -> 411
Cov: 411 -> 411
1459
Cov: 411 -> 411
Cov: 411 -> 411
1460
Cov: 411 -> 411
Cov: 411 -> 411
1461
Cov: 411 -> 411
Cov: 411 -> 411
1462
Cov: 411 -> 411
Cov: 411 -> 411
1463
Cov: 411 -> 411
Cov: 411 -> 411
1464
Cov: 411 -> 411
Cov: 411 -> 411
1465
Cov: 411 -> 411
Cov: 411 -> 411
1466
Cov: 411 -> 411
Cov: 411 -> 411
1467
Cov: 411 -> 411
Cov: 411 -> 411
1468
Cov: 411 -> 411
Cov: 411 -> 411
1469
Cov: 411 -> 411
Cov: 411 -> 411
1470
Cov: 411 -> 411
Cov: 411 -> 411
1471
Cov: 411 -> 411
Cov: 411 -> 411
1472
Cov: 411 -> 411
Cov: 411 -> 411
1473
Cov: 411 -> 411
Cov: 411 -> 411
1474
Cov: 411 -> 411
Cov: 411 -> 411
1475
Cov: 411 -> 411
Cov: 411 -> 411
1476
Cov: 411 -> 411
Cov: 411 -> 411
1477
Cov: 411 -> 414
Cov: 414 -> 414
1478
Cov: 414 -> 414
Cov: 414 -> 414
1479
Cov: 414 -> 414
Cov: 414 -> 414
1480
Cov: 414 -> 414
Cov: 414 -> 414
1481
Cov: 414 -> 418
Cov: 418 -> 418
1482
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
1483
Cov: 418 -> 420
Cov: 420 -> 420
1484
Cov: 420 -> 420
Cov: 420 -> 420
1485
Cov: 420 -> 420
Cov: 420 -> 420
1486
Cov: 420 -> 420
Cov: 420 -> 420
1487
Cov: 420 -> 420
Cov: 420 -> 420
1488
Cov: 420 -> 420
Cov: 420 -> 420
1489
Cov: 420 -> 420
Cov: 420 -> 420
1490
Cov: 420 -> 420
Cov: 420 -> 420
1491
Cov: 420 -> 420
Cov: 420 -> 420
1492
Cov: 420 -> 420
Cov: 420 -> 420
1493
Cov: 420 -> 421
Cov: 421 -> 421
1494
{"exception": "NameError", "msg": "name 'math' is not defined"}
1495
Cov: 421 -> 432
Cov: 432 -> 432
1496
Cov: 432 -> 432
Cov: 432 -> 432
1497
Cov: 432 -> 432
Cov: 432 -> 432
1498
Cov: 432 -> 432
Cov: 432 -> 432
1499
Cov: 432 -> 432
Cov: 432 -> 432
1500
Cov: 432 -> 432
Cov: 432 -> 432
1501
Cov: 432 -> 432
Cov: 432 -> 432
1502
Cov: 432 -> 433
Cov: 433 -> 433
1503
Cov: 433 -> 433
Cov: 433 -> 433
1504
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'stride'"}
1505
Cov: 433 -> 433
Cov: 433 -> 433
1506
Cov: 433 -> 433
Cov: 433 -> 433
1507
Cov: 433 -> 433
Cov: 433 -> 433
1508
Cov: 433 -> 433
Cov: 433 -> 433
1509
Cov: 433 -> 433
Cov: 433 -> 433
1510
Cov: 433 -> 450
Cov: 450 -> 450
1511
Cov: 450 -> 450
Cov: 450 -> 450
1512
Cov: 450 -> 450
Cov: 450 -> 450
1513
{"exception": "NameError", "msg": "name 'Parameter' is not defined"}
1514
Cov: 450 -> 450
Cov: 450 -> 450
1515
Cov: 450 -> 450
Cov: 450 -> 450
1516
Cov: 450 -> 450
Cov: 450 -> 450
1517
Cov: 450 -> 450
Cov: 450 -> 450
1518
Cov: 450 -> 450
Cov: 450 -> 450
1519
{"exception": "NameError", "msg": "name 'Linear' is not defined"}
1520
Cov: 450 -> 458
Cov: 458 -> 458
1521
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'group'"}
1522
Cov: 458 -> 458
Cov: 458 -> 458
1523
Cov: 458 -> 458
Cov: 458 -> 458
1524
Cov: 458 -> 458
Cov: 458 -> 458
1525
Cov: 458 -> 458
Cov: 458 -> 458
1526
Cov: 458 -> 458
Cov: 458 -> 458
1527
Cov: 458 -> 458
Cov: 458 -> 458
1528
Cov: 458 -> 458
Cov: 458 -> 458
1529
Cov: 458 -> 458
Cov: 458 -> 458
1530
Cov: 458 -> 458
Cov: 458 -> 458
1531
Cov: 458 -> 458
Cov: 458 -> 458
1532
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
1533
Cov: 458 -> 458
Cov: 458 -> 458
1534
Cov: 458 -> 458
Cov: 458 -> 458
1535
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1536
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1537
Cov: 458 -> 458
Cov: 458 -> 458
1538
Cov: 458 -> 471
Cov: 471 -> 471
1539
Cov: 471 -> 471
Cov: 471 -> 471
1540
Cov: 471 -> 471
Cov: 471 -> 471
1541
Cov: 471 -> 472
Cov: 472 -> 472
1542
Cov: 472 -> 472
Cov: 472 -> 472
1543
Cov: 472 -> 472
Cov: 472 -> 472
1544
Cov: 472 -> 472
Cov: 472 -> 472
1545
Cov: 472 -> 472
Cov: 472 -> 472
1546
Cov: 472 -> 472
Cov: 472 -> 472
1547
Cov: 472 -> 472
Cov: 472 -> 472
1548
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'inv_scale_factor' and 'dropout_p'"}
1549
Cov: 472 -> 472
Cov: 472 -> 472
1550
Cov: 472 -> 472
Cov: 472 -> 472
1551
Cov: 472 -> 472
Cov: 472 -> 472
1552
Cov: 472 -> 472
Cov: 472 -> 472
1553
Cov: 472 -> 472
Cov: 472 -> 472
1554
Cov: 472 -> 472
Cov: 472 -> 472
1555
Cov: 472 -> 472
Cov: 472 -> 472
1556
Cov: 472 -> 472
Cov: 472 -> 472
1557
Cov: 472 -> 472
Cov: 472 -> 472
1558
Cov: 472 -> 472
Cov: 472 -> 472
1559
Cov: 472 -> 472
Cov: 472 -> 472
1560
Cov: 472 -> 472
Cov: 472 -> 472
1561
Cov: 472 -> 472
Cov: 472 -> 472
1562
Cov: 472 -> 472
Cov: 472 -> 472
1563
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1564
Cov: 472 -> 472
Cov: 472 -> 472
1565
Cov: 472 -> 472
Cov: 472 -> 472
1566
Cov: 472 -> 472
Cov: 472 -> 472
1567
Cov: 472 -> 472
Cov: 472 -> 472
1568
Cov: 472 -> 472
Cov: 472 -> 472
1569
Cov: 472 -> 472
Cov: 472 -> 472
1570
Cov: 472 -> 472
Cov: 472 -> 472
1571
Cov: 472 -> 472
Cov: 472 -> 472
1572
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
1573
Cov: 472 -> 472
Cov: 472 -> 472
1574
Cov: 472 -> 472
Cov: 472 -> 472
1575
Cov: 472 -> 472
Cov: 472 -> 472
1576
Cov: 472 -> 472
Cov: 472 -> 472
1577
Cov: 472 -> 472
Cov: 472 -> 472
1578
Cov: 472 -> 472
Cov: 472 -> 472
1579
Cov: 472 -> 472
Cov: 472 -> 472
1580
Cov: 472 -> 472
Cov: 472 -> 472
1581
Cov: 472 -> 472
Cov: 472 -> 472
1582
Cov: 472 -> 472
Cov: 472 -> 472
1583
Cov: 472 -> 472
Cov: 472 -> 472
1584
Cov: 472 -> 472
Cov: 472 -> 472
1585
Cov: 472 -> 472
Cov: 472 -> 472
1586
Cov: 472 -> 472
Cov: 472 -> 472
1587
Cov: 472 -> 472
Cov: 472 -> 472
1588
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'in_channel'"}
1589
Cov: 472 -> 472
Cov: 472 -> 472
1590
Cov: 472 -> 472
Cov: 472 -> 472
1591
Cov: 472 -> 472
Cov: 472 -> 472
1592
Cov: 472 -> 472
Cov: 472 -> 472
1593
{"exception": "AttributeError", "msg": "'int' object has no attribute 'requires_grad'"}
1594
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 12)"}
1595
Cov: 472 -> 473
Cov: 473 -> 473
1596
Cov: 473 -> 473
Cov: 473 -> 473
1597
Cov: 473 -> 473
Cov: 473 -> 473
1598
Cov: 473 -> 473
Cov: 473 -> 473
1599
Cov: 473 -> 474
Cov: 474 -> 474
1600
Cov: 474 -> 474
Cov: 474 -> 474
1601
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1602
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1603
Cov: 474 -> 474
Cov: 474 -> 474
1604
Cov: 474 -> 474
Cov: 474 -> 474
1605
Cov: 474 -> 474
Cov: 474 -> 474
1606
Cov: 474 -> 474
Cov: 474 -> 474
1607
Cov: 474 -> 474
Cov: 474 -> 474
1608
Cov: 474 -> 474
Cov: 474 -> 474
1609
Cov: 474 -> 474
Cov: 474 -> 474
1610
Cov: 474 -> 474
Cov: 474 -> 474
1611
Cov: 474 -> 474
Cov: 474 -> 474
1612
Cov: 474 -> 474
Cov: 474 -> 474
1613
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
1614
Cov: 474 -> 474
Cov: 474 -> 474
1615
Cov: 474 -> 474
Cov: 474 -> 474
1616
{"exception": "RuntimeError", "msg": "Expected size for first two dimensions of batch2 tensor to be: [1, 512] but got: [1, 128]."}
1617
Cov: 474 -> 476
Cov: 476 -> 476
1618
Cov: 476 -> 476
Cov: 476 -> 476
1619
Cov: 476 -> 476
Cov: 476 -> 476
1620
Cov: 476 -> 476
Cov: 476 -> 476
1621
Cov: 476 -> 476
Cov: 476 -> 476
1622
Cov: 476 -> 476
Cov: 476 -> 476
1623
Cov: 476 -> 476
Cov: 476 -> 476
1624
Cov: 476 -> 476
Cov: 476 -> 476
1625
Cov: 476 -> 476
Cov: 476 -> 476
1626
Cov: 476 -> 476
Cov: 476 -> 476
1627
Cov: 476 -> 476
Cov: 476 -> 476
1628
Cov: 476 -> 476
Cov: 476 -> 476
1629
Cov: 476 -> 476
Cov: 476 -> 476
1630
Cov: 476 -> 476
Cov: 476 -> 476
1631
Cov: 476 -> 477
Cov: 477 -> 477
1632
Cov: 477 -> 478
Cov: 478 -> 478
1633
Cov: 478 -> 478
Cov: 478 -> 478
1634
Cov: 478 -> 478
Cov: 478 -> 478
1635
{"exception": "NameError", "msg": "name 'math' is not defined"}
1636
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'D_key', 'D_val', 'N', 'D_model', 'H', and 'D_inner'"}
1637
Cov: 478 -> 478
Cov: 478 -> 478
1638
Cov: 478 -> 478
Cov: 478 -> 478
1639
Cov: 478 -> 478
Cov: 478 -> 478
1640
Cov: 478 -> 478
Cov: 478 -> 478
1641
Cov: 478 -> 478
Cov: 478 -> 478
1642
Cov: 478 -> 478
Cov: 478 -> 478
1643
Cov: 478 -> 478
Cov: 478 -> 478
1644
Cov: 478 -> 478
Cov: 478 -> 478
1645
Cov: 478 -> 478
Cov: 478 -> 478
1646
{"exception": "SyntaxError", "msg": "'return' outside function (<string>, line 8)"}
1647
Cov: 478 -> 478
Cov: 478 -> 478
1648
Cov: 478 -> 478
Cov: 478 -> 478
1649
Cov: 478 -> 478
Cov: 478 -> 478
1650
Cov: 478 -> 478
Cov: 478 -> 478
1651
Cov: 478 -> 478
Cov: 478 -> 478
1652
Cov: 478 -> 478
Cov: 478 -> 478
1653
Cov: 478 -> 478
Cov: 478 -> 478
1654
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
1655
Cov: 478 -> 478
Cov: 478 -> 478
1656
Cov: 478 -> 478
Cov: 478 -> 478
1657
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1658
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1659
Cov: 478 -> 478
Cov: 478 -> 478
1660
Cov: 478 -> 478
Cov: 478 -> 478
1661
Cov: 478 -> 478
Cov: 478 -> 478
1662
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1663
Cov: 478 -> 480
Cov: 480 -> 480
1664
Cov: 480 -> 480
Cov: 480 -> 480
1665
Cov: 480 -> 480
Cov: 480 -> 480
1666
Cov: 480 -> 480
Cov: 480 -> 480
1667
Cov: 480 -> 480
Cov: 480 -> 480
1668
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
1669
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'd_model', 'nhead', and 'dropout_p'"}
1670
Cov: 480 -> 480
Cov: 480 -> 480
1671
Cov: 480 -> 480
Cov: 480 -> 480
1672
Cov: 480 -> 480
Cov: 480 -> 480
1673
Cov: 480 -> 480
Cov: 480 -> 480
1674
Cov: 480 -> 480
Cov: 480 -> 480
1675
Cov: 480 -> 480
Cov: 480 -> 480
1676
Cov: 480 -> 480
Cov: 480 -> 480
1677
Cov: 480 -> 480
Cov: 480 -> 480
1678
Cov: 480 -> 480
Cov: 480 -> 480
1679
Cov: 480 -> 480
Cov: 480 -> 480
1680
Cov: 480 -> 480
Cov: 480 -> 480
1681
Cov: 480 -> 480
Cov: 480 -> 480
1682
Cov: 480 -> 480
Cov: 480 -> 480
1683
{"exception": "RuntimeError", "msg": "Trying to create tensor with negative dimension -1: [5, -1]"}
1684
Cov: 480 -> 481
Cov: 481 -> 481
1685
Cov: 481 -> 481
Cov: 481 -> 481
1686
Cov: 481 -> 481
Cov: 481 -> 481
1687
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1688
Cov: 481 -> 481
Cov: 481 -> 481
1689
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1690
Cov: 481 -> 481
Cov: 481 -> 481
1691
Cov: 481 -> 481
Cov: 481 -> 481
1692
Cov: 481 -> 481
Cov: 481 -> 481
1693
Cov: 481 -> 481
Cov: 481 -> 481
1694
Cov: 481 -> 481
Cov: 481 -> 481
1695
Cov: 481 -> 481
Cov: 481 -> 481
1696
Cov: 481 -> 481
Cov: 481 -> 481
1697
Cov: 481 -> 481
Cov: 481 -> 481
1698
Cov: 481 -> 481
Cov: 481 -> 481
1699
Cov: 481 -> 481
Cov: 481 -> 481
1700
Cov: 481 -> 481
Cov: 481 -> 481
1701
Cov: 481 -> 481
Cov: 481 -> 481
1702
Cov: 481 -> 481
Cov: 481 -> 481
1703
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'training'"}
1704
Cov: 481 -> 481
Cov: 481 -> 481
1705
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
1706
Cov: 481 -> 481
Cov: 481 -> 481
1707
Cov: 481 -> 481
Cov: 481 -> 481
1708
Cov: 481 -> 481
Cov: 481 -> 481
1709
Cov: 481 -> 481
Cov: 481 -> 481
1710
Cov: 481 -> 481
Cov: 481 -> 481
1711
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'input_channels'"}
1712
Cov: 481 -> 481
Cov: 481 -> 481
1713
Cov: 481 -> 481
Cov: 481 -> 481
1714
Cov: 481 -> 481
Cov: 481 -> 481
1715
Cov: 481 -> 481
Cov: 481 -> 481
1716
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'in_channels', 'out_channels', 'kernel_size', 'stride', and 'padding'"}
1717
Cov: 481 -> 481
Cov: 481 -> 481
1718
Cov: 481 -> 481
Cov: 481 -> 481
1719
Cov: 481 -> 481
Cov: 481 -> 481
1720
Cov: 481 -> 481
Cov: 481 -> 481
1721
Cov: 481 -> 481
Cov: 481 -> 481
1722
{"exception": "TypeError", "msg": "list is not a Module subclass"}
1723
Cov: 481 -> 491
Cov: 491 -> 491
1724
Cov: 491 -> 491
Cov: 491 -> 491
1725
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1726
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1727
Cov: 491 -> 491
Cov: 491 -> 491
1728
Cov: 491 -> 491
Cov: 491 -> 491
1729
Cov: 491 -> 491
Cov: 491 -> 491
1730
Cov: 491 -> 491
Cov: 491 -> 491
1731
Cov: 491 -> 491
Cov: 491 -> 491
1732
Cov: 491 -> 491
Cov: 491 -> 491
1733
Cov: 491 -> 491
Cov: 491 -> 491
1734
Cov: 491 -> 491
Cov: 491 -> 491
1735
Cov: 491 -> 491
Cov: 491 -> 491
1736
Cov: 491 -> 491
Cov: 491 -> 491
1737
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1738
Cov: 491 -> 491
Cov: 491 -> 491
1739
Cov: 491 -> 491
Cov: 491 -> 491
1740
Cov: 491 -> 491
Cov: 491 -> 491
1741
Cov: 491 -> 491
Cov: 491 -> 491
1742
Cov: 491 -> 491
Cov: 491 -> 491
1743
Cov: 491 -> 491
Cov: 491 -> 491
1744
Cov: 491 -> 491
Cov: 491 -> 491
1745
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1746
Cov: 491 -> 491
Cov: 491 -> 491
1747
Cov: 491 -> 491
Cov: 491 -> 491
1748
Cov: 491 -> 491
Cov: 491 -> 491
1749
Cov: 491 -> 491
Cov: 491 -> 491
1750
Cov: 491 -> 491
Cov: 491 -> 491
1751
Cov: 491 -> 491
Cov: 491 -> 491
1752
Cov: 491 -> 491
Cov: 491 -> 491
1753
Cov: 491 -> 491
Cov: 491 -> 491
1754
Cov: 491 -> 491
Cov: 491 -> 491
1755
Cov: 491 -> 491
Cov: 491 -> 491
1756
Cov: 491 -> 491
Cov: 491 -> 491
1757
{"exception": "AttributeError", "msg": "'Model' object has no attribute 'n_head'"}
1758
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
1759
Cov: 491 -> 493
Cov: 493 -> 493
1760
Cov: 493 -> 493
Cov: 493 -> 493
1761
Cov: 493 -> 493
Cov: 493 -> 493
1762
Cov: 493 -> 493
Cov: 493 -> 493
1763
Cov: 493 -> 493
Cov: 493 -> 493
1764
Cov: 493 -> 493
Cov: 493 -> 493
1765
Cov: 493 -> 493
Cov: 493 -> 493
1766
Cov: 493 -> 493
Cov: 493 -> 493
1767
Cov: 493 -> 493
Cov: 493 -> 493
1768
Cov: 493 -> 493
Cov: 493 -> 493
1769
Cov: 493 -> 493
Cov: 493 -> 493
1770
Cov: 493 -> 493
Cov: 493 -> 493
1771
Cov: 493 -> 493
Cov: 493 -> 493
1772
Cov: 493 -> 521
Cov: 521 -> 521
1773
Cov: 521 -> 522
Cov: 522 -> 522
1774
Cov: 522 -> 523
Cov: 523 -> 523
1775
Cov: 523 -> 523
Cov: 523 -> 523
1776
Cov: 523 -> 523
Cov: 523 -> 523
1777
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1778
Cov: 523 -> 523
Cov: 523 -> 523
1779
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1780
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1781
Cov: 523 -> 523
Cov: 523 -> 523
1782
Cov: 523 -> 523
Cov: 523 -> 523
1783
Cov: 523 -> 523
Cov: 523 -> 523
1784
Cov: 523 -> 523
Cov: 523 -> 523
1785
Cov: 523 -> 523
Cov: 523 -> 523
1786
Cov: 523 -> 523
Cov: 523 -> 523
1787
Cov: 523 -> 523
Cov: 523 -> 523
1788
Cov: 523 -> 523
Cov: 523 -> 523
1789
Cov: 523 -> 523
Cov: 523 -> 523
1790
Cov: 523 -> 523
Cov: 523 -> 523
1791
Cov: 523 -> 523
Cov: 523 -> 523
1792
{"exception": "RuntimeError", "msg": "Expected size for first two dimensions of batch2 tensor to be: [2, 2] but got: [2, 4]."}
1793
Cov: 523 -> 523
Cov: 523 -> 523
1794
Cov: 523 -> 523
Cov: 523 -> 523
1795
Cov: 523 -> 523
Cov: 523 -> 523
1796
Cov: 523 -> 523
Cov: 523 -> 523
1797
Cov: 523 -> 523
Cov: 523 -> 523
1798
Cov: 523 -> 523
Cov: 523 -> 523
1799
{"exception": "RuntimeError", "msg": "shape '[1, 1024]' is invalid for input of size 8192"}
1800
Cov: 523 -> 524
Cov: 524 -> 524
1801
Cov: 524 -> 524
Cov: 524 -> 524
1802
Cov: 524 -> 524
Cov: 524 -> 524
1803
Cov: 524 -> 524
Cov: 524 -> 524
1804
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1805
Cov: 524 -> 524
Cov: 524 -> 524
1806
Cov: 524 -> 524
Cov: 524 -> 524
1807
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Linera'"}
1808
Cov: 524 -> 524
Cov: 524 -> 524
1809
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1810
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1811
Cov: 524 -> 524
Cov: 524 -> 524
1812
Cov: 524 -> 524
Cov: 524 -> 524
1813
Cov: 524 -> 524
Cov: 524 -> 524
1814
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 13)"}
1815
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
1816
Cov: 524 -> 524
Cov: 524 -> 524
1817
Cov: 524 -> 524
Cov: 524 -> 524
1818
Cov: 524 -> 524
Cov: 524 -> 524
1819
Cov: 524 -> 528
Cov: 528 -> 528
1820
Cov: 528 -> 528
Cov: 528 -> 528
1821
Cov: 528 -> 528
Cov: 528 -> 528
1822
Cov: 528 -> 528
Cov: 528 -> 528
1823
Cov: 528 -> 528
Cov: 528 -> 528
1824
Cov: 528 -> 528
Cov: 528 -> 528
1825
Cov: 528 -> 528
Cov: 528 -> 528
1826
Cov: 528 -> 528
Cov: 528 -> 528
1827
Cov: 528 -> 528
Cov: 528 -> 528
1828
Cov: 528 -> 528
Cov: 528 -> 528
1829
{"exception": "TypeError", "msg": "randn() received an invalid combination of arguments - got (int, int, padding=int, stride=int), but expected one of:\n * (tuple of ints size, *, torch.Generator generator, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, torch.Generator generator, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n"}
1830
Cov: 528 -> 528
Cov: 528 -> 528
1831
Cov: 528 -> 528
Cov: 528 -> 528
1832
Cov: 528 -> 528
Cov: 528 -> 528
1833
Cov: 528 -> 528
Cov: 528 -> 528
1834
Cov: 528 -> 528
Cov: 528 -> 528
1835
Cov: 528 -> 528
Cov: 528 -> 528
1836
Cov: 528 -> 528
Cov: 528 -> 528
1837
Cov: 528 -> 535
Cov: 535 -> 535
1838
Cov: 535 -> 535
Cov: 535 -> 535
1839
Cov: 535 -> 535
Cov: 535 -> 535
1840
Cov: 535 -> 535
Cov: 535 -> 535
1841
Cov: 535 -> 535
Cov: 535 -> 535
1842
Cov: 535 -> 535
Cov: 535 -> 535
1843
Cov: 535 -> 535
Cov: 535 -> 535
1844
Cov: 535 -> 535
Cov: 535 -> 535
1845
Cov: 535 -> 535
Cov: 535 -> 535
1846
Cov: 535 -> 535
Cov: 535 -> 535
1847
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
1848
Cov: 535 -> 662
Cov: 662 -> 662
1849
Cov: 662 -> 662
Cov: 662 -> 662
1850
Cov: 662 -> 662
Cov: 662 -> 662
1851
Cov: 662 -> 662
Cov: 662 -> 662
1852
Cov: 662 -> 662
Cov: 662 -> 662
1853
Cov: 662 -> 676
Cov: 676 -> 676
1854
Cov: 676 -> 676
Cov: 676 -> 676
1855
Cov: 676 -> 676
Cov: 676 -> 676
1856
Cov: 676 -> 676
Cov: 676 -> 676
1857
Cov: 676 -> 676
Cov: 676 -> 676
1858
Cov: 676 -> 676
Cov: 676 -> 676
1859
Cov: 676 -> 676
Cov: 676 -> 676
1860
Cov: 676 -> 676
Cov: 676 -> 676
1861
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1862
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'min', 'max', and 'kernel_size'"}
1863
Cov: 676 -> 676
Cov: 676 -> 676
1864
Cov: 676 -> 676
Cov: 676 -> 676
1865
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1866
Cov: 676 -> 676
Cov: 676 -> 676
1867
{"exception": "OSError", "msg": "Can't get source for <function Model.foo at 0x7a69bb3701f0>. TorchScript requires source access in order to carry out compilation, make sure original .py files are available."}
1868
{"exception": "NameError", "msg": "name 'F' is not defined"}
1869
Cov: 676 -> 717
Cov: 717 -> 717
1870
Cov: 717 -> 717
Cov: 717 -> 717
1871
Cov: 717 -> 717
Cov: 717 -> 717
1872
Cov: 717 -> 717
Cov: 717 -> 717
1873
Cov: 717 -> 717
Cov: 717 -> 717
1874
Cov: 717 -> 717
Cov: 717 -> 717
1875
Cov: 717 -> 717
Cov: 717 -> 717
1876
Cov: 717 -> 717
Cov: 717 -> 717
1877
Cov: 717 -> 717
Cov: 717 -> 717
1878
Cov: 717 -> 717
Cov: 717 -> 717
1879
Cov: 717 -> 717
Cov: 717 -> 717
1880
Cov: 717 -> 717
Cov: 717 -> 717
1881
Cov: 717 -> 717
Cov: 717 -> 717
1882
Cov: 717 -> 717
Cov: 717 -> 717
1883
Cov: 717 -> 717
Cov: 717 -> 717
1884
Cov: 717 -> 717
Cov: 717 -> 717
1885
Cov: 717 -> 717
Cov: 717 -> 717
1886
Cov: 717 -> 717
Cov: 717 -> 717
1887
Cov: 717 -> 717
Cov: 717 -> 717
1888
Cov: 717 -> 717
Cov: 717 -> 717
1889
Cov: 717 -> 717
Cov: 717 -> 717
1890
Cov: 717 -> 717
Cov: 717 -> 717
1891
Cov: 717 -> 717
Cov: 717 -> 717
1892
Cov: 717 -> 717
Cov: 717 -> 717
1893
Cov: 717 -> 717
Cov: 717 -> 717
1894
Cov: 717 -> 717
Cov: 717 -> 717
1895
Cov: 717 -> 717
Cov: 717 -> 717
1896
Cov: 717 -> 717
Cov: 717 -> 717
1897
Cov: 717 -> 717
Cov: 717 -> 717
1898
Cov: 717 -> 717
Cov: 717 -> 717
1899
Cov: 717 -> 717
Cov: 717 -> 717
1900
Cov: 717 -> 717
Cov: 717 -> 717
1901
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1902
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1903
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1904
Cov: 717 -> 717
Cov: 717 -> 717
1905
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'num_q', 'num_k', 'num_v', 'dropout_p', and 'inv_scale_factor'"}
1906
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden_size'"}
1907
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'dtype'"}
1908
Cov: 717 -> 732
Cov: 732 -> 732
1909
Cov: 732 -> 732
Cov: 732 -> 732
1910
Cov: 732 -> 732
Cov: 732 -> 732
1911
Cov: 732 -> 732
Cov: 732 -> 732
1912
Cov: 732 -> 732
Cov: 732 -> 732
1913
Cov: 732 -> 732
Cov: 732 -> 732
1914
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dropout_p'"}
1915
Cov: 732 -> 732
Cov: 732 -> 732
1916
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 16)"}
1917
Cov: 732 -> 732
Cov: 732 -> 732
1918
Cov: 732 -> 732
Cov: 732 -> 732
1919
Cov: 732 -> 732
Cov: 732 -> 732
1920
Cov: 732 -> 732
Cov: 732 -> 732
1921
Cov: 732 -> 732
Cov: 732 -> 732
1922
Cov: 732 -> 732
Cov: 732 -> 732
1923
Cov: 732 -> 732
Cov: 732 -> 732
1924
Cov: 732 -> 732
Cov: 732 -> 732
1925
Cov: 732 -> 732
Cov: 732 -> 732
1926
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'pad_mode'"}
1927
Cov: 732 -> 732
Cov: 732 -> 732
1928
Cov: 732 -> 732
Cov: 732 -> 732
1929
Cov: 732 -> 732
Cov: 732 -> 732
1930
Cov: 732 -> 732
Cov: 732 -> 732
1931
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1932
{"exception": "NameError", "msg": "name 'nn' is not defined"}
1933
Cov: 732 -> 732
Cov: 732 -> 732
1934
Cov: 732 -> 732
Cov: 732 -> 732
1935
Cov: 732 -> 732
Cov: 732 -> 732
1936
Cov: 732 -> 732
Cov: 732 -> 732
1937
Cov: 732 -> 732
Cov: 732 -> 732
1938
Cov: 732 -> 732
Cov: 732 -> 732
1939
Cov: 732 -> 732
Cov: 732 -> 732
1940
Cov: 732 -> 732
Cov: 732 -> 732
1941
Cov: 732 -> 732
Cov: 732 -> 732
1942
Cov: 732 -> 732
Cov: 732 -> 732
1943
Cov: 732 -> 732
Cov: 732 -> 732
1944
Cov: 732 -> 732
Cov: 732 -> 732
1945
Cov: 732 -> 732
Cov: 732 -> 732
1946
Cov: 732 -> 732
Cov: 732 -> 732
1947
Cov: 732 -> 732
Cov: 732 -> 732
1948
Cov: 732 -> 732
Cov: 732 -> 732
1949
Cov: 732 -> 732
Cov: 732 -> 732
1950
Cov: 732 -> 732
Cov: 732 -> 732
1951
{"exception": "NameError", "msg": "name 'x1' is not defined"}
1952
Cov: 732 -> 732
Cov: 732 -> 732
1953
Cov: 732 -> 732
Cov: 732 -> 732
1954
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1955
Cov: 732 -> 732
Cov: 732 -> 732
1956
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
1957
Cov: 732 -> 732
Cov: 732 -> 732
1958
Cov: 732 -> 732
Cov: 732 -> 732
1959
Cov: 732 -> 749
Cov: 749 -> 749
1960
Cov: 749 -> 749
Cov: 749 -> 749
1961
Cov: 749 -> 749
Cov: 749 -> 749
1962
Cov: 749 -> 749
Cov: 749 -> 749
1963
Cov: 749 -> 749
Cov: 749 -> 749
1964
Cov: 749 -> 749
Cov: 749 -> 749
1965
Cov: 749 -> 749
Cov: 749 -> 749
1966
Cov: 749 -> 749
Cov: 749 -> 749
1967
Cov: 749 -> 749
Cov: 749 -> 749
1968
Cov: 749 -> 749
Cov: 749 -> 749
1969
Cov: 749 -> 749
Cov: 749 -> 749
1970
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'conv_transpose'"}
1971
Cov: 749 -> 749
Cov: 749 -> 749
1972
Cov: 749 -> 749
Cov: 749 -> 749
1973
Cov: 749 -> 749
Cov: 749 -> 749
1974
Cov: 749 -> 749
Cov: 749 -> 749
1975
Cov: 749 -> 749
Cov: 749 -> 749
1976
Cov: 749 -> 749
Cov: 749 -> 749
1977
Cov: 749 -> 749
Cov: 749 -> 749
1978
Cov: 749 -> 749
Cov: 749 -> 749
1979
Cov: 749 -> 749
Cov: 749 -> 749
1980
Cov: 749 -> 749
Cov: 749 -> 749
1981
Cov: 749 -> 753
Cov: 753 -> 753
1982
{"exception": "NameError", "msg": "name 'MultiheadAttentionIdentity' is not defined"}
1983
Cov: 753 -> 753
Cov: 753 -> 753
1984
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
1985
Cov: 753 -> 753
Cov: 753 -> 753
1986
Cov: 753 -> 753
Cov: 753 -> 753
1987
Cov: 753 -> 753
Cov: 753 -> 753
1988
Cov: 753 -> 753
Cov: 753 -> 753
1989
Cov: 753 -> 753
Cov: 753 -> 753
1990
{"exception": "NameError", "msg": "name 'Model' is not defined"}
1991
Cov: 753 -> 753
Cov: 753 -> 753
1992
Cov: 753 -> 753
Cov: 753 -> 753
1993
Cov: 753 -> 753
Cov: 753 -> 753
1994
Cov: 753 -> 753
Cov: 753 -> 753
1995
Cov: 753 -> 753
Cov: 753 -> 753
1996
Cov: 753 -> 753
Cov: 753 -> 753
1997
Cov: 753 -> 753
Cov: 753 -> 753
1998
Cov: 753 -> 753
Cov: 753 -> 753
1999
Cov: 753 -> 753
Cov: 753 -> 753
2000
Cov: 753 -> 753
Cov: 753 -> 753
2001
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 6)"}
2002
Cov: 753 -> 753
Cov: 753 -> 753
2003
Cov: 753 -> 753
Cov: 753 -> 753
2004
Cov: 753 -> 753
Cov: 753 -> 753
2005
Cov: 753 -> 753
Cov: 753 -> 753
2006
Cov: 753 -> 753
Cov: 753 -> 753
2007
Cov: 753 -> 753
Cov: 753 -> 753
2008
Cov: 753 -> 753
Cov: 753 -> 753
2009
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
2010
Cov: 753 -> 753
Cov: 753 -> 753
2011
{"exception": "OnnxExporterError", "msg": "Module onnx is not installed!"}
2012
Cov: 753 -> 10248
Cov: 10248 -> 10248
2013
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2014
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2015
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2016
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2017
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2018
{"exception": "NameError", "msg": "name 'n_features' is not defined"}
2019
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2020
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'input_size'"}
2021
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2022
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2023
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2024
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2025
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2026
Cov: 10248 -> 10248
Cov: 10248 -> 10248
2027
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'd_model'"}
2028
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
2029
Cov: 10248 -> 10249
Cov: 10249 -> 10249
2030
Cov: 10249 -> 10255
Cov: 10255 -> 10255
2031
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2032
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2033
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2034
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2035
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2036
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'inv_scale_factor'"}
2037
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2038
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2039
{"exception": "NameError", "msg": "name 'randint' is not defined"}
2040
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2041
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2042
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2043
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2044
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2045
{"exception": "AttributeError", "msg": "module 'torch.nn.functional' has no attribute 'add'"}
2046
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2047
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2048
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2049
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2050
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2051
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2052
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2053
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2054
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2055
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2056
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2057
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2058
Cov: 10255 -> 10255
Cov: 10255 -> 10255
2059
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
2060
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
2061
Cov: 10255 -> 10266
Cov: 10266 -> 10266
2062
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2063
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2064
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2065
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2066
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2067
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2068
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2069
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2070
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2071
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2072
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2073
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2074
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2075
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2076
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2077
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2078
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2079
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2080
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2081
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2082
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2083
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2084
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2085
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2086
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2087
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2088
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2089
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2090
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2091
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2092
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2093
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2094
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2095
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2096
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
2097
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2098
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2099
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2100
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2101
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
2102
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2103
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'num_heads', 'hidden_dim', and 'num_positions'"}
2104
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2105
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2106
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2107
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2108
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2109
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2110
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2111
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2112
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2113
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2114
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2115
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2116
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2117
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
2118
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2119
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2120
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2121
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2122
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2123
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2124
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2125
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2126
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2127
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2128
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
2129
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2130
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2131
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2132
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2133
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2134
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2135
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2136
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2137
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2138
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2139
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2140
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2141
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2142
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2143
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2144
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2145
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2146
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2147
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2148
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2149
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2150
Cov: 10266 -> 10266
Cov: 10266 -> 10266
2151
Cov: 10266 -> 10267
Cov: 10267 -> 10267
2152
Cov: 10267 -> 10268
Cov: 10268 -> 10268
2153
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2154
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2155
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2156
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2157
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 9)"}
2158
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2159
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2160
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2161
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2162
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2163
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2164
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2165
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2166
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2167
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2168
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2169
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2170
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2171
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2172
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2173
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
2174
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2175
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2176
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2177
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2178
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2179
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2180
Cov: 10268 -> 10268
Cov: 10268 -> 10268
2181
{"exception": "TypeError", "msg": "clamp_min() received an invalid combination of arguments - got (Tensor, min_value=float), but expected one of:\n * (Tensor input, Tensor min, *, Tensor out)\n * (Tensor input, Number min, *, Tensor out)\n"}
2182
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
2183
Cov: 10268 -> 10270
Cov: 10270 -> 10270
2184
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2185
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2186
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2187
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2188
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2189
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2190
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2191
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2192
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2193
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2194
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2195
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2196
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2197
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2198
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2199
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2200
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2201
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2202
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2203
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2204
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2205
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2206
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2207
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2208
Cov: 10270 -> 10270
Cov: 10270 -> 10270
2209
Cov: 10270 -> 10271
Cov: 10271 -> 10271
2210
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'QuantizePermute2d'"}
2211
Cov: 10271 -> 10274
Cov: 10274 -> 10274
2212
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2213
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
2214
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
2215
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2216
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2217
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2218
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2219
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2220
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2221
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2222
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2223
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2224
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2225
{"exception": "TypeError", "msg": "__init__() missing 7 required positional arguments: 'd_model', 'num_heads', 'd_key', 'd_value', 'd_inner_hid', 'num_layers', and 'dropout'"}
2226
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'attn_mask'"}
2227
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
2228
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2229
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2230
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2231
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2232
Cov: 10274 -> 10274
Cov: 10274 -> 10274
2233
Cov: 10274 -> 10280
Cov: 10280 -> 10280
2234
Cov: 10280 -> 10296
Cov: 10296 -> 10296
2235
Cov: 10296 -> 10296
Cov: 10296 -> 10296
2236
Cov: 10296 -> 10296
Cov: 10296 -> 10296
2237
Cov: 10296 -> 10296
Cov: 10296 -> 10296
2238
Cov: 10296 -> 10296
Cov: 10296 -> 10296
2239
Cov: 10296 -> 10297
Cov: 10297 -> 10297
2240
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2241
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2242
{"exception": "TypeError", "msg": "empty(): argument 'size' failed to unpack the object at pos 2 with error \"type must be tuple of ints,but got float\""}
2243
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2244
{"exception": "NameError", "msg": "name 's' is not defined"}
2245
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'num_heads', 'embedding_size', and 'dropout_p'"}
2246
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2247
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2248
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2249
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2250
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2251
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2252
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2253
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2254
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2255
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'in_size', 'h1_size', 'h2_size', and 'num_classes'"}
2256
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2257
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2258
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2259
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2260
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2261
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2262
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2263
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2264
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2265
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2266
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2267
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2268
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2269
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2270
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2271
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2272
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2273
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2274
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2275
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2276
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2277
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2278
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2279
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2280
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2281
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2282
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2283
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2284
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2285
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2286
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2287
Cov: 10297 -> 10297
Cov: 10297 -> 10297
2288
Cov: 10297 -> 10298
Cov: 10298 -> 10298
2289
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2290
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2291
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2292
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2293
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2294
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2295
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2296
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2297
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2298
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2299
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2300
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2301
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2302
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2303
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2304
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2305
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2306
Cov: 10298 -> 10298
Cov: 10298 -> 10298
2307
Cov: 10298 -> 10302
Cov: 10302 -> 10302
2308
Cov: 10302 -> 10302
Cov: 10302 -> 10302
2309
Cov: 10302 -> 10305
Cov: 10305 -> 10305
2310
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2311
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2312
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2313
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2314
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2315
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2316
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2317
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2318
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 4)"}
2319
Cov: 10305 -> 10305
Cov: 10305 -> 10305
2320
Cov: 10305 -> 10306
Cov: 10306 -> 10306
2321
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2322
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2323
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
2324
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2325
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2326
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2327
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2328
Cov: 10306 -> 10306
Cov: 10306 -> 10306
2329
Cov: 10306 -> 10307
Cov: 10307 -> 10307
2330
Cov: 10307 -> 10307
Cov: 10307 -> 10307
2331
Cov: 10307 -> 10307
Cov: 10307 -> 10307
2332
Cov: 10307 -> 10308
Cov: 10308 -> 10308
2333
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2334
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2335
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'stride', 'padding', and 'dilation'"}
2336
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2337
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2338
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2339
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2340
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2341
{"exception": "AttributeError", "msg": "'super' object has no attribute 'init'"}
2342
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2343
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2344
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2345
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'running_var'"}
2346
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2347
Cov: 10308 -> 10308
Cov: 10308 -> 10308
2348
{"exception": "NameError", "msg": "name 'F' is not defined"}
2349
Cov: 10308 -> 10338
Cov: 10338 -> 10338
2350
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2351
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2352
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2353
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2354
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2355
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2356
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2357
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2358
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2359
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2360
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2361
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
2362
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
2363
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2364
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2365
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2366
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2367
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'scaling_factor' and 'dropout'"}
2368
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
2369
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2370
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2371
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2372
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2373
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2374
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2375
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2376
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
2377
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2378
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2379
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2380
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2381
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2382
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2383
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2384
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2385
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2386
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2387
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2388
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2389
{"exception": "SyntaxError", "msg": "'return' outside function (<string>, line 11)"}
2390
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2391
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2392
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2393
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'num_heads', 'batch_size', and 'dropout_p'"}
2394
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2395
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2396
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2397
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2398
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2399
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2400
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2401
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 11)"}
2402
{"exception": "SyntaxError", "msg": "unexpected EOF while parsing (<string>, line 27)"}
2403
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2404
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2405
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2406
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2407
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2408
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2409
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2410
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2411
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2412
Cov: 10338 -> 10338
Cov: 10338 -> 10338
2413
Cov: 10338 -> 10339
Cov: 10339 -> 10339
2414
Cov: 10339 -> 10355
Cov: 10355 -> 10355
2415
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2416
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2417
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2418
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2419
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2420
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2421
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2422
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2423
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2424
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2425
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2426
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2427
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2428
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2429
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2430
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2431
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2432
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2433
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2434
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2435
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2436
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2437
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2438
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2439
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2440
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2441
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2442
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2443
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2444
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2445
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2446
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2447
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2448
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2449
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2450
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2451
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2452
Cov: 10355 -> 10355
Cov: 10355 -> 10355
2453
Cov: 10355 -> 10366
Cov: 10366 -> 10366
2454
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2455
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2456
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2457
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2458
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2459
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2460
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2461
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2462
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2463
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2464
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2465
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2466
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2467
Cov: 10366 -> 10366
Cov: 10366 -> 10366
2468
Cov: 10366 -> 10389
Cov: 10389 -> 10389
2469
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2470
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2471
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2472
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
2473
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2474
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2475
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2476
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2477
Cov: 10389 -> 10389
Cov: 10389 -> 10389
2478
Cov: 10389 -> 10396
Cov: 10396 -> 10396
2479
Cov: 10396 -> 10396
Cov: 10396 -> 10396
2480
Cov: 10396 -> 10396
Cov: 10396 -> 10396
2481
Cov: 10396 -> 10396
Cov: 10396 -> 10396
2482
Cov: 10396 -> 10396
Cov: 10396 -> 10396
2483
Cov: 10396 -> 10396
Cov: 10396 -> 10396
2484
Cov: 10396 -> 10396
Cov: 10396 -> 10396
2485
Cov: 10396 -> 10397
Cov: 10397 -> 10397
2486
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2487
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2488
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2489
{"exception": "NameError", "msg": "name 'query' is not defined"}
2490
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2491
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2492
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2493
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2494
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2495
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2496
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2497
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2498
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2499
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2500
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2501
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2502
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2503
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2504
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2505
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2506
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2507
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2508
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2509
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2510
{"exception": "NameError", "msg": "name 'np' is not defined"}
2511
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2512
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2513
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2514
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2515
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'scale_factor' and 'dropout_p'"}
2516
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2517
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2518
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2519
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2520
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2521
{"exception": "NameError", "msg": "name 'model_type' is not defined"}
2522
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2523
Cov: 10397 -> 10397
Cov: 10397 -> 10397
2524
{"exception": "AttributeError", "msg": "'_OpNamespace' 'aten' object has no attribute 'dropout_backward'"}
2525
Cov: 10397 -> 10410
Cov: 10410 -> 10410
2526
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2527
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2528
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2529
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2530
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2531
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2532
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2533
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2534
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2535
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2536
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2537
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2538
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2539
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2540
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2541
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2542
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2543
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2544
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2545
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2546
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2547
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2548
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2549
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2550
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2551
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2552
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2553
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2554
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2555
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2556
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2557
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2558
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2559
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2560
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2561
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'out_features'"}
2562
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2563
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2564
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2565
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2566
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2567
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2568
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
2569
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2570
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2571
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2572
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2573
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2574
Cov: 10410 -> 10410
Cov: 10410 -> 10410
2575
Cov: 10410 -> 10411
Cov: 10411 -> 10411
2576
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2577
{"exception": "AttributeError", "msg": "module 'torch.nn.functional' has no attribute 'permute'"}
2578
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2579
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2580
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
2581
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2582
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2583
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2584
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2585
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2586
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2587
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2588
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2589
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2590
Cov: 10411 -> 10411
Cov: 10411 -> 10411
2591
Cov: 10411 -> 10417
Cov: 10417 -> 10417
2592
{"exception": "NameError", "msg": "name 'd_k' is not defined"}
2593
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2594
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2595
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2596
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2597
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2598
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2599
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2600
Cov: 10417 -> 10417
Cov: 10417 -> 10417
2601
Cov: 10417 -> 10418
Cov: 10418 -> 10418
2602
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2603
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2604
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2605
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2606
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2607
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2608
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2609
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2610
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2611
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2612
{"exception": "RuntimeError", "msg": "Expected size for first two dimensions of batch2 tensor to be: [4, 64] but got: [4, 128]."}
2613
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2614
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2615
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2616
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2617
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2618
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2619
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2620
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2621
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2622
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2623
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2624
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2625
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2626
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2627
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2628
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2629
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2630
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2631
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2632
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2633
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2634
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2635
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2636
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2637
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim' and 'num_heads'"}
2638
{"exception": "NameError", "msg": "name 'math' is not defined"}
2639
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2640
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'ModuleDouble'"}
2641
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2642
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2643
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2644
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2645
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2646
{"exception": "NameError", "msg": "name 'np' is not defined"}
2647
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2648
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2649
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2650
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2651
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2652
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2653
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2654
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2655
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2656
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2657
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2658
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2659
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2660
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2661
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2662
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2663
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2664
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2665
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2666
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2667
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2668
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2669
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2670
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
2671
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2672
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2673
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2674
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2675
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2676
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2677
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2678
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2679
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 7)"}
2680
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2681
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2682
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2683
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2684
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2685
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2686
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2687
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2688
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2689
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2690
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2691
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2692
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2693
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2694
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2695
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2696
Cov: 10418 -> 10418
Cov: 10418 -> 10418
2697
Cov: 10418 -> 10423
Cov: 10423 -> 10423
2698
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2699
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2700
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2701
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2702
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
2703
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2704
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2705
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2706
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2707
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2708
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2709
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2710
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2711
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'ConvTranpose2d'"}
2712
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2713
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2714
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2715
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'min_r', 'max_r', 'min_g', 'max_g', 'min_b', and 'max_b'"}
2716
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 7)"}
2717
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2718
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2719
{"exception": "TypeError", "msg": "expected Tensor as element 0 in argument 0, but got NoneType"}
2720
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2721
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2722
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2723
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2724
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2725
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2726
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2727
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2728
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2729
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2730
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2731
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2732
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2733
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim' and 'heads'"}
2734
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2735
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2736
Cov: 10423 -> 10423
Cov: 10423 -> 10423
2737
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
2738
Cov: 10423 -> 22
Cov: 22 -> 22
2739
Cov: 22 -> 144
Cov: 144 -> 144
2740
Cov: 144 -> 144
Cov: 144 -> 144
2741
Cov: 144 -> 219
Cov: 219 -> 219
2742
Cov: 219 -> 219
Cov: 219 -> 219
2743
Cov: 219 -> 219
Cov: 219 -> 219
2744
Cov: 219 -> 219
Cov: 219 -> 219
2745
Cov: 219 -> 219
Cov: 219 -> 219
2746
Cov: 219 -> 219
Cov: 219 -> 219
2747
Cov: 219 -> 219
Cov: 219 -> 219
2748
Cov: 219 -> 219
Cov: 219 -> 219
2749
Cov: 219 -> 248
Cov: 248 -> 248
2750
Cov: 248 -> 248
Cov: 248 -> 248
2751
Cov: 248 -> 248
Cov: 248 -> 248
2752
Cov: 248 -> 248
Cov: 248 -> 248
2753
Cov: 248 -> 248
Cov: 248 -> 248
2754
Cov: 248 -> 249
Cov: 249 -> 249
2755
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2756
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2757
Cov: 249 -> 250
Cov: 250 -> 250
2758
Cov: 250 -> 250
Cov: 250 -> 250
2759
Cov: 250 -> 266
Cov: 266 -> 266
2760
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
2761
Cov: 266 -> 270
Cov: 270 -> 270
2762
Cov: 270 -> 370
Cov: 370 -> 370
2763
Cov: 370 -> 370
Cov: 370 -> 370
2764
Cov: 370 -> 370
Cov: 370 -> 370
2765
Cov: 370 -> 370
Cov: 370 -> 370
2766
Cov: 370 -> 370
Cov: 370 -> 370
2767
Cov: 370 -> 372
Cov: 372 -> 372
2768
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dropout_p'"}
2769
Cov: 372 -> 372
Cov: 372 -> 372
2770
Cov: 372 -> 372
Cov: 372 -> 372
2771
Cov: 372 -> 372
Cov: 372 -> 372
2772
Cov: 372 -> 372
Cov: 372 -> 372
2773
Cov: 372 -> 372
Cov: 372 -> 372
2774
Cov: 372 -> 372
Cov: 372 -> 372
2775
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2776
Cov: 372 -> 372
Cov: 372 -> 372
2777
Cov: 372 -> 372
Cov: 372 -> 372
2778
Cov: 372 -> 372
Cov: 372 -> 372
2779
Cov: 372 -> 372
Cov: 372 -> 372
2780
Cov: 372 -> 372
Cov: 372 -> 372
2781
Cov: 372 -> 372
Cov: 372 -> 372
2782
Cov: 372 -> 372
Cov: 372 -> 372
2783
Cov: 372 -> 388
Cov: 388 -> 388
2784
Cov: 388 -> 388
Cov: 388 -> 388
2785
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2786
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2787
Cov: 388 -> 388
Cov: 388 -> 388
2788
Cov: 388 -> 388
Cov: 388 -> 388
2789
Cov: 388 -> 388
Cov: 388 -> 388
2790
Cov: 388 -> 388
Cov: 388 -> 388
2791
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
2792
Cov: 388 -> 388
Cov: 388 -> 388
2793
Cov: 388 -> 388
Cov: 388 -> 388
2794
Cov: 388 -> 388
Cov: 388 -> 388
2795
Cov: 388 -> 388
Cov: 388 -> 388
2796
Cov: 388 -> 388
Cov: 388 -> 388
2797
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2798
{"exception": "TypeError", "msg": "normal() received an invalid combination of arguments - got (int, int), but expected one of:\n * (Tensor mean, Tensor std, *, torch.Generator generator, Tensor out)\n * (Tensor mean, float std, *, torch.Generator generator, Tensor out)\n * (float mean, Tensor std, *, torch.Generator generator, Tensor out)\n * (float mean, float std, tuple of ints size, *, torch.Generator generator, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n"}
2799
Cov: 388 -> 388
Cov: 388 -> 388
2800
Cov: 388 -> 388
Cov: 388 -> 388
2801
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 7)"}
2802
Cov: 388 -> 389
Cov: 389 -> 389
2803
Cov: 389 -> 405
Cov: 405 -> 405
2804
Cov: 405 -> 421
Cov: 421 -> 421
2805
Cov: 421 -> 421
Cov: 421 -> 421
2806
Cov: 421 -> 421
Cov: 421 -> 421
2807
Cov: 421 -> 425
Cov: 425 -> 425
2808
Cov: 425 -> 442
Cov: 442 -> 442
2809
Cov: 442 -> 442
Cov: 442 -> 442
2810
Cov: 442 -> 442
Cov: 442 -> 442
2811
Cov: 442 -> 442
Cov: 442 -> 442
2812
Cov: 442 -> 442
Cov: 442 -> 442
2813
Cov: 442 -> 442
Cov: 442 -> 442
2814
Cov: 442 -> 442
Cov: 442 -> 442
2815
Cov: 442 -> 442
Cov: 442 -> 442
2816
Cov: 442 -> 442
Cov: 442 -> 442
2817
Cov: 442 -> 443
Cov: 443 -> 443
2818
Cov: 443 -> 443
Cov: 443 -> 443
2819
Cov: 443 -> 445
Cov: 445 -> 445
2820
Cov: 445 -> 457
Cov: 457 -> 457
2821
Cov: 457 -> 457
Cov: 457 -> 457
2822
Cov: 457 -> 457
Cov: 457 -> 457
2823
Cov: 457 -> 457
Cov: 457 -> 457
2824
Cov: 457 -> 458
Cov: 458 -> 458
2825
Cov: 458 -> 458
Cov: 458 -> 458
2826
Cov: 458 -> 458
Cov: 458 -> 458
2827
Cov: 458 -> 458
Cov: 458 -> 458
2828
Cov: 458 -> 458
Cov: 458 -> 458
2829
Cov: 458 -> 458
Cov: 458 -> 458
2830
Cov: 458 -> 458
Cov: 458 -> 458
2831
Cov: 458 -> 458
Cov: 458 -> 458
2832
Cov: 458 -> 458
Cov: 458 -> 458
2833
Cov: 458 -> 458
Cov: 458 -> 458
2834
Cov: 458 -> 458
Cov: 458 -> 458
2835
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'embed_dim' and 'num_heads'"}
2836
{"exception": "RuntimeError", "msg": "shape '[4, 5, 4, 8]' is invalid for input of size 160"}
2837
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'min'"}
2838
Cov: 458 -> 468
Cov: 468 -> 468
2839
Cov: 468 -> 469
Cov: 469 -> 469
2840
Cov: 469 -> 469
Cov: 469 -> 469
2841
Cov: 469 -> 472
Cov: 472 -> 472
2842
Cov: 472 -> 472
Cov: 472 -> 472
2843
Cov: 472 -> 472
Cov: 472 -> 472
2844
Cov: 472 -> 472
Cov: 472 -> 472
2845
Cov: 472 -> 472
Cov: 472 -> 472
2846
Cov: 472 -> 489
Cov: 489 -> 489
2847
Cov: 489 -> 489
Cov: 489 -> 489
2848
Cov: 489 -> 489
Cov: 489 -> 489
2849
Cov: 489 -> 489
Cov: 489 -> 489
2850
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
2851
Cov: 489 -> 491
Cov: 491 -> 491
2852
Cov: 491 -> 491
Cov: 491 -> 491
2853
Cov: 491 -> 491
Cov: 491 -> 491
2854
Cov: 491 -> 491
Cov: 491 -> 491
2855
Cov: 491 -> 493
Cov: 493 -> 493
2856
Cov: 493 -> 494
Cov: 494 -> 494
2857
Cov: 494 -> 494
Cov: 494 -> 494
2858
Cov: 494 -> 494
Cov: 494 -> 494
2859
Cov: 494 -> 494
Cov: 494 -> 494
2860
Cov: 494 -> 494
Cov: 494 -> 494
2861
Cov: 494 -> 494
Cov: 494 -> 494
2862
Cov: 494 -> 494
Cov: 494 -> 494
2863
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_dim' and 'out_dim'"}
2864
Cov: 494 -> 499
Cov: 499 -> 499
2865
Cov: 499 -> 500
Cov: 500 -> 500
2866
Cov: 500 -> 500
Cov: 500 -> 500
2867
Cov: 500 -> 500
Cov: 500 -> 500
2868
Cov: 500 -> 500
Cov: 500 -> 500
2869
Cov: 500 -> 500
Cov: 500 -> 500
2870
Cov: 500 -> 500
Cov: 500 -> 500
2871
Cov: 500 -> 500
Cov: 500 -> 500
2872
Cov: 500 -> 500
Cov: 500 -> 500
2873
Cov: 500 -> 500
Cov: 500 -> 500
2874
Cov: 500 -> 501
Cov: 501 -> 501
2875
Cov: 501 -> 501
Cov: 501 -> 501
2876
Cov: 501 -> 501
Cov: 501 -> 501
2877
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2878
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2879
Cov: 501 -> 501
Cov: 501 -> 501
2880
Cov: 501 -> 501
Cov: 501 -> 501
2881
Cov: 501 -> 501
Cov: 501 -> 501
2882
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
2883
Cov: 501 -> 501
Cov: 501 -> 501
2884
{"exception": "NameError", "msg": "name 'min_value' is not defined"}
2885
Cov: 501 -> 503
Cov: 503 -> 503
2886
Cov: 503 -> 505
Cov: 505 -> 505
2887
Cov: 505 -> 505
Cov: 505 -> 505
2888
Cov: 505 -> 505
Cov: 505 -> 505
2889
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
2890
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'query_channels', 'key_channels', 'value_channels', 'n_heads', 'input_resolution', and 'dropout_p'"}
2891
Cov: 505 -> 505
Cov: 505 -> 505
2892
Cov: 505 -> 505
Cov: 505 -> 505
2893
Cov: 505 -> 505
Cov: 505 -> 505
2894
Cov: 505 -> 505
Cov: 505 -> 505
2895
Cov: 505 -> 505
Cov: 505 -> 505
2896
Cov: 505 -> 505
Cov: 505 -> 505
2897
Cov: 505 -> 506
Cov: 506 -> 506
2898
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
2899
Cov: 506 -> 506
Cov: 506 -> 506
2900
Cov: 506 -> 506
Cov: 506 -> 506
2901
Cov: 506 -> 506
Cov: 506 -> 506
2902
Cov: 506 -> 506
Cov: 506 -> 506
2903
Cov: 506 -> 506
Cov: 506 -> 506
2904
Cov: 506 -> 506
Cov: 506 -> 506
2905
Cov: 506 -> 506
Cov: 506 -> 506
2906
Cov: 506 -> 506
Cov: 506 -> 506
2907
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2908
{"exception": "NameError", "msg": "name 'nn' is not defined"}
2909
Cov: 506 -> 506
Cov: 506 -> 506
2910
Cov: 506 -> 506
Cov: 506 -> 506
2911
Cov: 506 -> 506
Cov: 506 -> 506
2912
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
2913
Cov: 506 -> 506
Cov: 506 -> 506
2914
Cov: 506 -> 506
Cov: 506 -> 506
2915
Cov: 506 -> 506
Cov: 506 -> 506
2916
Cov: 506 -> 506
Cov: 506 -> 506
2917
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 3)"}
2918
Cov: 506 -> 506
Cov: 506 -> 506
2919
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
2920
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2921
Cov: 506 -> 506
Cov: 506 -> 506
2922
Cov: 506 -> 506
Cov: 506 -> 506
2923
Cov: 506 -> 506
Cov: 506 -> 506
2924
Cov: 506 -> 506
Cov: 506 -> 506
2925
Cov: 506 -> 506
Cov: 506 -> 506
2926
Cov: 506 -> 506
Cov: 506 -> 506
2927
Cov: 506 -> 506
Cov: 506 -> 506
2928
Cov: 506 -> 506
Cov: 506 -> 506
2929
Cov: 506 -> 506
Cov: 506 -> 506
2930
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2931
Cov: 506 -> 506
Cov: 506 -> 506
2932
Cov: 506 -> 506
Cov: 506 -> 506
2933
Cov: 506 -> 506
Cov: 506 -> 506
2934
Cov: 506 -> 506
Cov: 506 -> 506
2935
Cov: 506 -> 506
Cov: 506 -> 506
2936
Cov: 506 -> 506
Cov: 506 -> 506
2937
Cov: 506 -> 506
Cov: 506 -> 506
2938
Cov: 506 -> 506
Cov: 506 -> 506
2939
Cov: 506 -> 506
Cov: 506 -> 506
2940
Cov: 506 -> 506
Cov: 506 -> 506
2941
Cov: 506 -> 507
Cov: 507 -> 507
2942
Cov: 507 -> 519
Cov: 519 -> 519
2943
Cov: 519 -> 519
Cov: 519 -> 519
2944
Cov: 519 -> 519
Cov: 519 -> 519
2945
Cov: 519 -> 519
Cov: 519 -> 519
2946
Cov: 519 -> 519
Cov: 519 -> 519
2947
Cov: 519 -> 519
Cov: 519 -> 519
2948
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'linear'"}
2949
{"exception": "NameError", "msg": "name 'size_1' is not defined"}
2950
Cov: 519 -> 519
Cov: 519 -> 519
2951
Cov: 519 -> 519
Cov: 519 -> 519
2952
Cov: 519 -> 519
Cov: 519 -> 519
2953
Cov: 519 -> 519
Cov: 519 -> 519
2954
Cov: 519 -> 519
Cov: 519 -> 519
2955
Cov: 519 -> 519
Cov: 519 -> 519
2956
Cov: 519 -> 519
Cov: 519 -> 519
2957
Cov: 519 -> 519
Cov: 519 -> 519
2958
{"exception": "NameError", "msg": "name 'Model' is not defined"}
2959
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
2960
Cov: 519 -> 520
Cov: 520 -> 520
2961
Cov: 520 -> 520
Cov: 520 -> 520
2962
Cov: 520 -> 520
Cov: 520 -> 520
2963
Cov: 520 -> 520
Cov: 520 -> 520
2964
Cov: 520 -> 520
Cov: 520 -> 520
2965
Cov: 520 -> 521
Cov: 521 -> 521
2966
Cov: 521 -> 521
Cov: 521 -> 521
2967
Cov: 521 -> 521
Cov: 521 -> 521
2968
Cov: 521 -> 521
Cov: 521 -> 521
2969
{"exception": "NameError", "msg": "name 'model' is not defined"}
2970
Cov: 521 -> 521
Cov: 521 -> 521
2971
Cov: 521 -> 521
Cov: 521 -> 521
2972
Cov: 521 -> 521
Cov: 521 -> 521
2973
Cov: 521 -> 521
Cov: 521 -> 521
2974
Cov: 521 -> 521
Cov: 521 -> 521
2975
Cov: 521 -> 521
Cov: 521 -> 521
2976
Cov: 521 -> 521
Cov: 521 -> 521
2977
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'num_heads', 'dim_qk', 'dim_v', and 'dropout_p'"}
2978
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'config'"}
2979
Cov: 521 -> 521
Cov: 521 -> 521
2980
Cov: 521 -> 521
Cov: 521 -> 521
2981
Cov: 521 -> 521
Cov: 521 -> 521
2982
Cov: 521 -> 521
Cov: 521 -> 521
2983
Cov: 521 -> 521
Cov: 521 -> 521
2984
Cov: 521 -> 521
Cov: 521 -> 521
2985
Cov: 521 -> 521
Cov: 521 -> 521
2986
Cov: 521 -> 521
Cov: 521 -> 521
2987
Cov: 521 -> 521
Cov: 521 -> 521
2988
Cov: 521 -> 521
Cov: 521 -> 521
2989
Cov: 521 -> 521
Cov: 521 -> 521
2990
Cov: 521 -> 521
Cov: 521 -> 521
2991
Cov: 521 -> 521
Cov: 521 -> 521
2992
Cov: 521 -> 521
Cov: 521 -> 521
2993
Cov: 521 -> 535
Cov: 535 -> 535
2994
Cov: 535 -> 536
Cov: 536 -> 536
2995
Cov: 536 -> 536
Cov: 536 -> 536
2996
Cov: 536 -> 536
Cov: 536 -> 536
2997
Cov: 536 -> 536
Cov: 536 -> 536
2998
Cov: 536 -> 536
Cov: 536 -> 536
2999
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3000
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3001
Cov: 536 -> 536
Cov: 536 -> 536
3002
Cov: 536 -> 536
Cov: 536 -> 536
3003
Cov: 536 -> 536
Cov: 536 -> 536
3004
Cov: 536 -> 536
Cov: 536 -> 536
3005
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3006
{"exception": "NameError", "msg": "name 'min_value' is not defined"}
3007
Cov: 536 -> 536
Cov: 536 -> 536
3008
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_channel' and 'out_channel'"}
3009
Cov: 536 -> 536
Cov: 536 -> 536
3010
Cov: 536 -> 536
Cov: 536 -> 536
3011
Cov: 536 -> 536
Cov: 536 -> 536
3012
Cov: 536 -> 536
Cov: 536 -> 536
3013
Cov: 536 -> 536
Cov: 536 -> 536
3014
Cov: 536 -> 536
Cov: 536 -> 536
3015
Cov: 536 -> 536
Cov: 536 -> 536
3016
Cov: 536 -> 536
Cov: 536 -> 536
3017
Cov: 536 -> 536
Cov: 536 -> 536
3018
Cov: 536 -> 536
Cov: 536 -> 536
3019
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
3020
Cov: 536 -> 536
Cov: 536 -> 536
3021
Cov: 536 -> 536
Cov: 536 -> 536
3022
Cov: 536 -> 536
Cov: 536 -> 536
3023
Cov: 536 -> 536
Cov: 536 -> 536
3024
Cov: 536 -> 536
Cov: 536 -> 536
3025
Cov: 536 -> 536
Cov: 536 -> 536
3026
Cov: 536 -> 536
Cov: 536 -> 536
3027
Cov: 536 -> 536
Cov: 536 -> 536
3028
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
3029
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3030
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3031
Cov: 536 -> 536
Cov: 536 -> 536
3032
Cov: 536 -> 540
Cov: 540 -> 540
3033
Cov: 540 -> 540
Cov: 540 -> 540
3034
{"exception": "TabError", "msg": "inconsistent use of tabs and spaces in indentation (<string>, line 8)"}
3035
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
3036
Cov: 540 -> 540
Cov: 540 -> 540
3037
Cov: 540 -> 540
Cov: 540 -> 540
3038
Cov: 540 -> 540
Cov: 540 -> 540
3039
Cov: 540 -> 540
Cov: 540 -> 540
3040
Cov: 540 -> 540
Cov: 540 -> 540
3041
Cov: 540 -> 540
Cov: 540 -> 540
3042
Cov: 540 -> 540
Cov: 540 -> 540
3043
Cov: 540 -> 540
Cov: 540 -> 540
3044
Cov: 540 -> 540
Cov: 540 -> 540
3045
Cov: 540 -> 540
Cov: 540 -> 540
3046
Cov: 540 -> 540
Cov: 540 -> 540
3047
Cov: 540 -> 540
Cov: 540 -> 540
3048
Cov: 540 -> 540
Cov: 540 -> 540
3049
Cov: 540 -> 540
Cov: 540 -> 540
3050
Cov: 540 -> 540
Cov: 540 -> 540
3051
Cov: 540 -> 540
Cov: 540 -> 540
3052
Cov: 540 -> 540
Cov: 540 -> 540
3053
Cov: 540 -> 540
Cov: 540 -> 540
3054
Cov: 540 -> 540
Cov: 540 -> 540
3055
Cov: 540 -> 540
Cov: 540 -> 540
3056
Cov: 540 -> 541
Cov: 541 -> 541
3057
Cov: 541 -> 541
Cov: 541 -> 541
3058
Cov: 541 -> 541
Cov: 541 -> 541
3059
Cov: 541 -> 541
Cov: 541 -> 541
3060
Cov: 541 -> 541
Cov: 541 -> 541
3061
Cov: 541 -> 541
Cov: 541 -> 541
3062
Cov: 541 -> 541
Cov: 541 -> 541
3063
Cov: 541 -> 543
Cov: 543 -> 543
3064
Cov: 543 -> 550
Cov: 550 -> 550
3065
Cov: 550 -> 550
Cov: 550 -> 550
3066
Cov: 550 -> 550
Cov: 550 -> 550
3067
Cov: 550 -> 550
Cov: 550 -> 550
3068
Cov: 550 -> 550
Cov: 550 -> 550
3069
Cov: 550 -> 550
Cov: 550 -> 550
3070
Cov: 550 -> 550
Cov: 550 -> 550
3071
Cov: 550 -> 550
Cov: 550 -> 550
3072
Cov: 550 -> 550
Cov: 550 -> 550
3073
Cov: 550 -> 550
Cov: 550 -> 550
3074
Cov: 550 -> 550
Cov: 550 -> 550
3075
Cov: 550 -> 550
Cov: 550 -> 550
3076
Cov: 550 -> 550
Cov: 550 -> 550
3077
Cov: 550 -> 550
Cov: 550 -> 550
3078
Cov: 550 -> 550
Cov: 550 -> 550
3079
{"exception": "NameError", "msg": "name 'PosEncoding' is not defined"}
3080
Cov: 550 -> 550
Cov: 550 -> 550
3081
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3082
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3083
Cov: 550 -> 550
Cov: 550 -> 550
3084
Cov: 550 -> 550
Cov: 550 -> 550
3085
Cov: 550 -> 550
Cov: 550 -> 550
3086
Cov: 550 -> 550
Cov: 550 -> 550
3087
Cov: 550 -> 581
Cov: 581 -> 581
3088
Cov: 581 -> 581
Cov: 581 -> 581
3089
Cov: 581 -> 581
Cov: 581 -> 581
3090
Cov: 581 -> 581
Cov: 581 -> 581
3091
Cov: 581 -> 581
Cov: 581 -> 581
3092
Cov: 581 -> 581
Cov: 581 -> 581
3093
Cov: 581 -> 581
Cov: 581 -> 581
3094
Cov: 581 -> 585
Cov: 585 -> 585
3095
Cov: 585 -> 585
Cov: 585 -> 585
3096
Cov: 585 -> 585
Cov: 585 -> 585
3097
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3098
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3099
Cov: 585 -> 585
Cov: 585 -> 585
3100
{"exception": "NameError", "msg": "name 'np' is not defined"}
3101
Cov: 585 -> 585
Cov: 585 -> 585
3102
Cov: 585 -> 585
Cov: 585 -> 585
3103
Cov: 585 -> 585
Cov: 585 -> 585
3104
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
3105
Cov: 585 -> 585
Cov: 585 -> 585
3106
Cov: 585 -> 585
Cov: 585 -> 585
3107
Cov: 585 -> 585
Cov: 585 -> 585
3108
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3109
Cov: 585 -> 585
Cov: 585 -> 585
3110
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3111
{"exception": "ModuleNotFoundError", "msg": "No module named 'torchvision'"}
3112
Cov: 585 -> 585
Cov: 585 -> 585
3113
Cov: 585 -> 585
Cov: 585 -> 585
3114
Cov: 585 -> 585
Cov: 585 -> 585
3115
Cov: 585 -> 585
Cov: 585 -> 585
3116
Cov: 585 -> 585
Cov: 585 -> 585
3117
Cov: 585 -> 585
Cov: 585 -> 585
3118
Cov: 585 -> 587
Cov: 587 -> 587
3119
Cov: 587 -> 587
Cov: 587 -> 587
3120
Cov: 587 -> 587
Cov: 587 -> 587
3121
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3122
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3123
Cov: 587 -> 587
Cov: 587 -> 587
3124
Cov: 587 -> 587
Cov: 587 -> 587
3125
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dropout'"}
3126
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query', 'key', 'value', 'scale_factor', and 'dropout_p'"}
3127
Cov: 587 -> 587
Cov: 587 -> 587
3128
Cov: 587 -> 587
Cov: 587 -> 587
3129
Cov: 587 -> 587
Cov: 587 -> 587
3130
Cov: 587 -> 587
Cov: 587 -> 587
3131
Cov: 587 -> 587
Cov: 587 -> 587
3132
Cov: 587 -> 587
Cov: 587 -> 587
3133
Cov: 587 -> 587
Cov: 587 -> 587
3134
Cov: 587 -> 587
Cov: 587 -> 587
3135
Cov: 587 -> 587
Cov: 587 -> 587
3136
Cov: 587 -> 587
Cov: 587 -> 587
3137
Cov: 587 -> 587
Cov: 587 -> 587
3138
Cov: 587 -> 587
Cov: 587 -> 587
3139
Cov: 587 -> 587
Cov: 587 -> 587
3140
Cov: 587 -> 587
Cov: 587 -> 587
3141
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
3142
Cov: 587 -> 587
Cov: 587 -> 587
3143
Cov: 587 -> 587
Cov: 587 -> 587
3144
Cov: 587 -> 587
Cov: 587 -> 587
3145
Cov: 587 -> 587
Cov: 587 -> 587
3146
Cov: 587 -> 587
Cov: 587 -> 587
3147
Cov: 587 -> 587
Cov: 587 -> 587
3148
Cov: 587 -> 587
Cov: 587 -> 587
3149
Cov: 587 -> 587
Cov: 587 -> 587
3150
Cov: 587 -> 587
Cov: 587 -> 587
3151
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3152
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3153
Cov: 587 -> 587
Cov: 587 -> 587
3154
Cov: 587 -> 587
Cov: 587 -> 587
3155
Cov: 587 -> 587
Cov: 587 -> 587
3156
{"exception": "NameError", "msg": "name 'self' is not defined"}
3157
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
3158
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
3159
Cov: 587 -> 587
Cov: 587 -> 587
3160
Cov: 587 -> 587
Cov: 587 -> 587
3161
Cov: 587 -> 587
Cov: 587 -> 587
3162
Cov: 587 -> 587
Cov: 587 -> 587
3163
Cov: 587 -> 587
Cov: 587 -> 587
3164
Cov: 587 -> 587
Cov: 587 -> 587
3165
Cov: 587 -> 587
Cov: 587 -> 587
3166
Cov: 587 -> 587
Cov: 587 -> 587
3167
Cov: 587 -> 723
Cov: 723 -> 723
3168
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 's'"}
3169
Cov: 723 -> 723
Cov: 723 -> 723
3170
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3171
Cov: 723 -> 725
Cov: 725 -> 725
3172
Cov: 725 -> 725
Cov: 725 -> 725
3173
Cov: 725 -> 725
Cov: 725 -> 725
3174
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3175
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'out_features'"}
3176
Cov: 725 -> 725
Cov: 725 -> 725
3177
Cov: 725 -> 725
Cov: 725 -> 725
3178
Cov: 725 -> 725
Cov: 725 -> 725
3179
Cov: 725 -> 726
Cov: 726 -> 726
3180
Cov: 726 -> 726
Cov: 726 -> 726
3181
Cov: 726 -> 726
Cov: 726 -> 726
3182
Cov: 726 -> 726
Cov: 726 -> 726
3183
Cov: 726 -> 726
Cov: 726 -> 726
3184
Cov: 726 -> 726
Cov: 726 -> 726
3185
Cov: 726 -> 740
Cov: 740 -> 740
3186
Cov: 740 -> 741
Cov: 741 -> 741
3187
Cov: 741 -> 741
Cov: 741 -> 741
3188
Cov: 741 -> 741
Cov: 741 -> 741
3189
Cov: 741 -> 741
Cov: 741 -> 741
3190
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3191
Cov: 741 -> 741
Cov: 741 -> 741
3192
Cov: 741 -> 741
Cov: 741 -> 741
3193
Cov: 741 -> 741
Cov: 741 -> 741
3194
Cov: 741 -> 741
Cov: 741 -> 741
3195
Cov: 741 -> 741
Cov: 741 -> 741
3196
Cov: 741 -> 741
Cov: 741 -> 741
3197
Cov: 741 -> 741
Cov: 741 -> 741
3198
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3199
{"exception": "ValueError", "msg": "num_channels must be divisible by num_groups"}
3200
Cov: 741 -> 747
Cov: 747 -> 747
3201
Cov: 747 -> 747
Cov: 747 -> 747
3202
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'heads', 'q_dim', 'k_dim', and 'v_dim'"}
3203
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3204
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3205
Cov: 747 -> 747
Cov: 747 -> 747
3206
Cov: 747 -> 747
Cov: 747 -> 747
3207
Cov: 747 -> 747
Cov: 747 -> 747
3208
Cov: 747 -> 747
Cov: 747 -> 747
3209
Cov: 747 -> 747
Cov: 747 -> 747
3210
Cov: 747 -> 748
Cov: 748 -> 748
3211
Cov: 748 -> 748
Cov: 748 -> 748
3212
{"exception": "TypeError", "msg": "unsupported operand type(s) for %: 'tuple' and 'int'"}
3213
Cov: 748 -> 749
Cov: 749 -> 749
3214
Cov: 749 -> 749
Cov: 749 -> 749
3215
Cov: 749 -> 749
Cov: 749 -> 749
3216
Cov: 749 -> 749
Cov: 749 -> 749
3217
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3218
Cov: 749 -> 749
Cov: 749 -> 749
3219
{"exception": "NameError", "msg": "name 'args' is not defined"}
3220
Cov: 749 -> 749
Cov: 749 -> 749
3221
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3222
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3223
Cov: 749 -> 749
Cov: 749 -> 749
3224
Cov: 749 -> 749
Cov: 749 -> 749
3225
Cov: 749 -> 749
Cov: 749 -> 749
3226
Cov: 749 -> 749
Cov: 749 -> 749
3227
Cov: 749 -> 749
Cov: 749 -> 749
3228
Cov: 749 -> 749
Cov: 749 -> 749
3229
Cov: 749 -> 749
Cov: 749 -> 749
3230
Cov: 749 -> 749
Cov: 749 -> 749
3231
Cov: 749 -> 749
Cov: 749 -> 749
3232
Cov: 749 -> 749
Cov: 749 -> 749
3233
Cov: 749 -> 749
Cov: 749 -> 749
3234
Cov: 749 -> 749
Cov: 749 -> 749
3235
Cov: 749 -> 749
Cov: 749 -> 749
3236
Cov: 749 -> 749
Cov: 749 -> 749
3237
Cov: 749 -> 749
Cov: 749 -> 749
3238
Cov: 749 -> 749
Cov: 749 -> 749
3239
Cov: 749 -> 749
Cov: 749 -> 749
3240
Cov: 749 -> 749
Cov: 749 -> 749
3241
Cov: 749 -> 767
Cov: 767 -> 767
3242
Cov: 767 -> 767
Cov: 767 -> 767
3243
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3244
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3245
Cov: 767 -> 767
Cov: 767 -> 767
3246
Cov: 767 -> 767
Cov: 767 -> 767
3247
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3248
Cov: 767 -> 767
Cov: 767 -> 767
3249
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3250
Cov: 767 -> 767
Cov: 767 -> 767
3251
Cov: 767 -> 767
Cov: 767 -> 767
3252
Cov: 767 -> 767
Cov: 767 -> 767
3253
Cov: 767 -> 767
Cov: 767 -> 767
3254
Cov: 767 -> 767
Cov: 767 -> 767
3255
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query_size', 'key_size', 'value_size', 'd_model', and 'num_head'"}
3256
Cov: 767 -> 767
Cov: 767 -> 767
3257
Cov: 767 -> 767
Cov: 767 -> 767
3258
Cov: 767 -> 767
Cov: 767 -> 767
3259
Cov: 767 -> 767
Cov: 767 -> 767
3260
Cov: 767 -> 767
Cov: 767 -> 767
3261
Cov: 767 -> 767
Cov: 767 -> 767
3262
Cov: 767 -> 767
Cov: 767 -> 767
3263
Cov: 767 -> 767
Cov: 767 -> 767
3264
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
3265
Cov: 767 -> 767
Cov: 767 -> 767
3266
Cov: 767 -> 767
Cov: 767 -> 767
3267
Cov: 767 -> 767
Cov: 767 -> 767
3268
Cov: 767 -> 767
Cov: 767 -> 767
3269
{"exception": "NameError", "msg": "name 's' is not defined"}
3270
Cov: 767 -> 767
Cov: 767 -> 767
3271
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
3272
Cov: 767 -> 767
Cov: 767 -> 767
3273
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3274
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3275
Cov: 767 -> 767
Cov: 767 -> 767
3276
Cov: 767 -> 767
Cov: 767 -> 767
3277
Cov: 767 -> 767
Cov: 767 -> 767
3278
Cov: 767 -> 767
Cov: 767 -> 767
3279
Cov: 767 -> 767
Cov: 767 -> 767
3280
Cov: 767 -> 767
Cov: 767 -> 767
3281
Cov: 767 -> 767
Cov: 767 -> 767
3282
Cov: 767 -> 767
Cov: 767 -> 767
3283
Cov: 767 -> 767
Cov: 767 -> 767
3284
Cov: 767 -> 767
Cov: 767 -> 767
3285
Cov: 767 -> 767
Cov: 767 -> 767
3286
Cov: 767 -> 767
Cov: 767 -> 767
3287
Cov: 767 -> 767
Cov: 767 -> 767
3288
Cov: 767 -> 767
Cov: 767 -> 767
3289
Cov: 767 -> 767
Cov: 767 -> 767
3290
Cov: 767 -> 767
Cov: 767 -> 767
3291
Cov: 767 -> 767
Cov: 767 -> 767
3292
Cov: 767 -> 767
Cov: 767 -> 767
3293
Cov: 767 -> 767
Cov: 767 -> 767
3294
Cov: 767 -> 767
Cov: 767 -> 767
3295
Cov: 767 -> 770
Cov: 770 -> 770
3296
Cov: 770 -> 770
Cov: 770 -> 770
3297
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3298
Cov: 770 -> 770
Cov: 770 -> 770
3299
Cov: 770 -> 770
Cov: 770 -> 770
3300
Cov: 770 -> 770
Cov: 770 -> 770
3301
Cov: 770 -> 770
Cov: 770 -> 770
3302
Cov: 770 -> 774
Cov: 774 -> 774
3303
Cov: 774 -> 774
Cov: 774 -> 774
3304
Cov: 774 -> 774
Cov: 774 -> 774
3305
Cov: 774 -> 774
Cov: 774 -> 774
3306
Cov: 774 -> 774
Cov: 774 -> 774
3307
{"exception": "NameError", "msg": "name 'OrderedDict' is not defined"}
3308
{"exception": "TypeError", "msg": "unsupported operand type(s) for %: 'list' and 'int'"}
3309
Cov: 774 -> 775
Cov: 775 -> 775
3310
Cov: 775 -> 775
Cov: 775 -> 775
3311
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3312
Cov: 775 -> 775
Cov: 775 -> 775
3313
Cov: 775 -> 775
Cov: 775 -> 775
3314
Cov: 775 -> 775
Cov: 775 -> 775
3315
Cov: 775 -> 775
Cov: 775 -> 775
3316
Cov: 775 -> 775
Cov: 775 -> 775
3317
Cov: 775 -> 775
Cov: 775 -> 775
3318
Cov: 775 -> 775
Cov: 775 -> 775
3319
Cov: 775 -> 775
Cov: 775 -> 775
3320
Cov: 775 -> 775
Cov: 775 -> 775
3321
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3322
Cov: 775 -> 775
Cov: 775 -> 775
3323
Cov: 775 -> 809
Cov: 809 -> 809
3324
Cov: 809 -> 809
Cov: 809 -> 809
3325
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3326
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3327
Cov: 809 -> 809
Cov: 809 -> 809
3328
Cov: 809 -> 809
Cov: 809 -> 809
3329
Cov: 809 -> 809
Cov: 809 -> 809
3330
Cov: 809 -> 809
Cov: 809 -> 809
3331
Cov: 809 -> 809
Cov: 809 -> 809
3332
Cov: 809 -> 809
Cov: 809 -> 809
3333
Cov: 809 -> 809
Cov: 809 -> 809
3334
Cov: 809 -> 809
Cov: 809 -> 809
3335
Cov: 809 -> 809
Cov: 809 -> 809
3336
Cov: 809 -> 809
Cov: 809 -> 809
3337
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3338
Cov: 809 -> 809
Cov: 809 -> 809
3339
Cov: 809 -> 809
Cov: 809 -> 809
3340
Cov: 809 -> 809
Cov: 809 -> 809
3341
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3342
Cov: 809 -> 809
Cov: 809 -> 809
3343
Cov: 809 -> 809
Cov: 809 -> 809
3344
Cov: 809 -> 809
Cov: 809 -> 809
3345
Cov: 809 -> 809
Cov: 809 -> 809
3346
{"exception": "ModuleNotFoundError", "msg": "No module named 'torchvision'"}
3347
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'size1' and 'size2'"}
3348
{"exception": "NameError", "msg": "name 'device' is not defined"}
3349
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3350
Cov: 809 -> 809
Cov: 809 -> 809
3351
Cov: 809 -> 809
Cov: 809 -> 809
3352
Cov: 809 -> 809
Cov: 809 -> 809
3353
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3354
Cov: 809 -> 809
Cov: 809 -> 809
3355
Cov: 809 -> 809
Cov: 809 -> 809
3356
{"exception": "RuntimeError", "msg": "Only Tensors of floating point and complex dtype can require gradients"}
3357
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
3358
Cov: 809 -> 809
Cov: 809 -> 809
3359
Cov: 809 -> 809
Cov: 809 -> 809
3360
Cov: 809 -> 809
Cov: 809 -> 809
3361
Cov: 809 -> 809
Cov: 809 -> 809
3362
Cov: 809 -> 809
Cov: 809 -> 809
3363
Cov: 809 -> 809
Cov: 809 -> 809
3364
Cov: 809 -> 809
Cov: 809 -> 809
3365
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3366
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3367
Cov: 809 -> 809
Cov: 809 -> 809
3368
Cov: 809 -> 809
Cov: 809 -> 809
3369
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'in_channels', 'out_channels', 'key_dim', and 'value_dim'"}
3370
Cov: 809 -> 809
Cov: 809 -> 809
3371
Cov: 809 -> 809
Cov: 809 -> 809
3372
Cov: 809 -> 809
Cov: 809 -> 809
3373
Cov: 809 -> 809
Cov: 809 -> 809
3374
Cov: 809 -> 809
Cov: 809 -> 809
3375
Cov: 809 -> 809
Cov: 809 -> 809
3376
Cov: 809 -> 809
Cov: 809 -> 809
3377
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
3378
Cov: 809 -> 809
Cov: 809 -> 809
3379
Cov: 809 -> 809
Cov: 809 -> 809
3380
Cov: 809 -> 809
Cov: 809 -> 809
3381
Cov: 809 -> 809
Cov: 809 -> 809
3382
Cov: 809 -> 809
Cov: 809 -> 809
3383
Cov: 809 -> 809
Cov: 809 -> 809
3384
Cov: 809 -> 809
Cov: 809 -> 809
3385
Cov: 809 -> 809
Cov: 809 -> 809
3386
Cov: 809 -> 809
Cov: 809 -> 809
3387
Cov: 809 -> 809
Cov: 809 -> 809
3388
Cov: 809 -> 809
Cov: 809 -> 809
3389
Cov: 809 -> 809
Cov: 809 -> 809
3390
Cov: 809 -> 809
Cov: 809 -> 809
3391
Cov: 809 -> 809
Cov: 809 -> 809
3392
Cov: 809 -> 809
Cov: 809 -> 809
3393
Cov: 809 -> 809
Cov: 809 -> 809
3394
Cov: 809 -> 809
Cov: 809 -> 809
3395
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3396
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3397
Cov: 809 -> 809
Cov: 809 -> 809
3398
Cov: 809 -> 809
Cov: 809 -> 809
3399
Cov: 809 -> 809
Cov: 809 -> 809
3400
Cov: 809 -> 809
Cov: 809 -> 809
3401
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
3402
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'min_value'"}
3403
Cov: 809 -> 809
Cov: 809 -> 809
3404
Cov: 809 -> 809
Cov: 809 -> 809
3405
Cov: 809 -> 809
Cov: 809 -> 809
3406
Cov: 809 -> 809
Cov: 809 -> 809
3407
Cov: 809 -> 809
Cov: 809 -> 809
3408
Cov: 809 -> 809
Cov: 809 -> 809
3409
Cov: 809 -> 809
Cov: 809 -> 809
3410
Cov: 809 -> 809
Cov: 809 -> 809
3411
{"exception": "NameError", "msg": "name 'Any' is not defined"}
3412
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3413
Cov: 809 -> 809
Cov: 809 -> 809
3414
Cov: 809 -> 809
Cov: 809 -> 809
3415
Cov: 809 -> 809
Cov: 809 -> 809
3416
Cov: 809 -> 809
Cov: 809 -> 809
3417
Cov: 809 -> 809
Cov: 809 -> 809
3418
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'padding'"}
3419
Cov: 809 -> 809
Cov: 809 -> 809
3420
Cov: 809 -> 809
Cov: 809 -> 809
3421
Cov: 809 -> 809
Cov: 809 -> 809
3422
Cov: 809 -> 809
Cov: 809 -> 809
3423
Cov: 809 -> 809
Cov: 809 -> 809
3424
Cov: 809 -> 809
Cov: 809 -> 809
3425
Cov: 809 -> 809
Cov: 809 -> 809
3426
Cov: 809 -> 809
Cov: 809 -> 809
3427
Cov: 809 -> 809
Cov: 809 -> 809
3428
Cov: 809 -> 809
Cov: 809 -> 809
3429
Cov: 809 -> 810
Cov: 810 -> 810
3430
Cov: 810 -> 810
Cov: 810 -> 810
3431
Cov: 810 -> 810
Cov: 810 -> 810
3432
Cov: 810 -> 810
Cov: 810 -> 810
3433
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3434
Cov: 810 -> 810
Cov: 810 -> 810
3435
Cov: 810 -> 810
Cov: 810 -> 810
3436
Cov: 810 -> 810
Cov: 810 -> 810
3437
Cov: 810 -> 810
Cov: 810 -> 810
3438
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'w'"}
3439
Cov: 810 -> 810
Cov: 810 -> 810
3440
Cov: 810 -> 810
Cov: 810 -> 810
3441
Cov: 810 -> 810
Cov: 810 -> 810
3442
Cov: 810 -> 810
Cov: 810 -> 810
3443
Cov: 810 -> 810
Cov: 810 -> 810
3444
Cov: 810 -> 810
Cov: 810 -> 810
3445
Cov: 810 -> 810
Cov: 810 -> 810
3446
Cov: 810 -> 810
Cov: 810 -> 810
3447
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3448
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3449
Cov: 810 -> 810
Cov: 810 -> 810
3450
Cov: 810 -> 810
Cov: 810 -> 810
3451
Cov: 810 -> 823
Cov: 823 -> 823
3452
Cov: 823 -> 823
Cov: 823 -> 823
3453
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 7)"}
3454
Cov: 823 -> 826
Cov: 826 -> 826
3455
Cov: 826 -> 826
Cov: 826 -> 826
3456
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3457
Cov: 826 -> 826
Cov: 826 -> 826
3458
Cov: 826 -> 826
Cov: 826 -> 826
3459
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'bias'"}
3460
Cov: 826 -> 826
Cov: 826 -> 826
3461
Cov: 826 -> 826
Cov: 826 -> 826
3462
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Lineari'"}
3463
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3464
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3465
Cov: 826 -> 826
Cov: 826 -> 826
3466
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 5)"}
3467
Cov: 826 -> 826
Cov: 826 -> 826
3468
Cov: 826 -> 826
Cov: 826 -> 826
3469
Cov: 826 -> 826
Cov: 826 -> 826
3470
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'size', 'offset', 'size1', and 'offset1'"}
3471
Cov: 826 -> 826
Cov: 826 -> 826
3472
Cov: 826 -> 826
Cov: 826 -> 826
3473
Cov: 826 -> 826
Cov: 826 -> 826
3474
Cov: 826 -> 826
Cov: 826 -> 826
3475
Cov: 826 -> 826
Cov: 826 -> 826
3476
Cov: 826 -> 826
Cov: 826 -> 826
3477
Cov: 826 -> 826
Cov: 826 -> 826
3478
Cov: 826 -> 826
Cov: 826 -> 826
3479
Cov: 826 -> 826
Cov: 826 -> 826
3480
Cov: 826 -> 826
Cov: 826 -> 826
3481
Cov: 826 -> 826
Cov: 826 -> 826
3482
Cov: 826 -> 827
Cov: 827 -> 827
3483
Cov: 827 -> 827
Cov: 827 -> 827
3484
Cov: 827 -> 827
Cov: 827 -> 827
3485
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3486
Cov: 827 -> 827
Cov: 827 -> 827
3487
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3488
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3489
Cov: 827 -> 827
Cov: 827 -> 827
3490
Cov: 827 -> 827
Cov: 827 -> 827
3491
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query_size', 'key_size', 'value_size', 'dropout_p', and 'scale_factor'"}
3492
{"exception": "NameError", "msg": "name '_PipelinedPipelinedBertAttention' is not defined"}
3493
Cov: 827 -> 827
Cov: 827 -> 827
3494
Cov: 827 -> 827
Cov: 827 -> 827
3495
Cov: 827 -> 827
Cov: 827 -> 827
3496
Cov: 827 -> 827
Cov: 827 -> 827
3497
Cov: 827 -> 827
Cov: 827 -> 827
3498
Cov: 827 -> 827
Cov: 827 -> 827
3499
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'inv_scale_dim' and 'dropout_p'"}
3500
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim_k'"}
3501
Cov: 827 -> 827
Cov: 827 -> 827
3502
Cov: 827 -> 827
Cov: 827 -> 827
3503
Cov: 827 -> 827
Cov: 827 -> 827
3504
Cov: 827 -> 827
Cov: 827 -> 827
3505
Cov: 827 -> 827
Cov: 827 -> 827
3506
Cov: 827 -> 827
Cov: 827 -> 827
3507
Cov: 827 -> 827
Cov: 827 -> 827
3508
Cov: 827 -> 827
Cov: 827 -> 827
3509
Cov: 827 -> 827
Cov: 827 -> 827
3510
Cov: 827 -> 827
Cov: 827 -> 827
3511
Cov: 827 -> 827
Cov: 827 -> 827
3512
Cov: 827 -> 827
Cov: 827 -> 827
3513
Cov: 827 -> 827
Cov: 827 -> 827
3514
Cov: 827 -> 827
Cov: 827 -> 827
3515
Cov: 827 -> 831
Cov: 831 -> 831
3516
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3517
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3518
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3519
Cov: 831 -> 831
Cov: 831 -> 831
3520
Cov: 831 -> 831
Cov: 831 -> 831
3521
Cov: 831 -> 831
Cov: 831 -> 831
3522
Cov: 831 -> 831
Cov: 831 -> 831
3523
Cov: 831 -> 831
Cov: 831 -> 831
3524
Cov: 831 -> 831
Cov: 831 -> 831
3525
Cov: 831 -> 831
Cov: 831 -> 831
3526
Cov: 831 -> 831
Cov: 831 -> 831
3527
Cov: 831 -> 831
Cov: 831 -> 831
3528
Cov: 831 -> 831
Cov: 831 -> 831
3529
Cov: 831 -> 831
Cov: 831 -> 831
3530
Cov: 831 -> 831
Cov: 831 -> 831
3531
Cov: 831 -> 831
Cov: 831 -> 831
3532
Cov: 831 -> 831
Cov: 831 -> 831
3533
Cov: 831 -> 831
Cov: 831 -> 831
3534
Cov: 831 -> 831
Cov: 831 -> 831
3535
Cov: 831 -> 831
Cov: 831 -> 831
3536
Cov: 831 -> 831
Cov: 831 -> 831
3537
Cov: 831 -> 831
Cov: 831 -> 831
3538
Cov: 831 -> 831
Cov: 831 -> 831
3539
Cov: 831 -> 831
Cov: 831 -> 831
3540
Cov: 831 -> 831
Cov: 831 -> 831
3541
Cov: 831 -> 831
Cov: 831 -> 831
3542
Cov: 831 -> 831
Cov: 831 -> 831
3543
Cov: 831 -> 831
Cov: 831 -> 831
3544
Cov: 831 -> 832
Cov: 832 -> 832
3545
Cov: 832 -> 832
Cov: 832 -> 832
3546
Cov: 832 -> 832
Cov: 832 -> 832
3547
Cov: 832 -> 832
Cov: 832 -> 832
3548
Cov: 832 -> 832
Cov: 832 -> 832
3549
Cov: 832 -> 832
Cov: 832 -> 832
3550
Cov: 832 -> 832
Cov: 832 -> 832
3551
Cov: 832 -> 832
Cov: 832 -> 832
3552
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'padding'"}
3553
Cov: 832 -> 832
Cov: 832 -> 832
3554
Cov: 832 -> 832
Cov: 832 -> 832
3555
Cov: 832 -> 832
Cov: 832 -> 832
3556
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3557
Cov: 832 -> 832
Cov: 832 -> 832
3558
{"exception": "ValueError", "msg": "not enough values to unpack (expected 2, got 1)"}
3559
Cov: 832 -> 836
Cov: 836 -> 836
3560
Cov: 836 -> 836
Cov: 836 -> 836
3561
Cov: 836 -> 836
Cov: 836 -> 836
3562
Cov: 836 -> 836
Cov: 836 -> 836
3563
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3564
Cov: 836 -> 836
Cov: 836 -> 836
3565
Cov: 836 -> 836
Cov: 836 -> 836
3566
Cov: 836 -> 836
Cov: 836 -> 836
3567
Cov: 836 -> 836
Cov: 836 -> 836
3568
Cov: 836 -> 836
Cov: 836 -> 836
3569
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3570
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3571
Cov: 836 -> 836
Cov: 836 -> 836
3572
Cov: 836 -> 836
Cov: 836 -> 836
3573
Cov: 836 -> 836
Cov: 836 -> 836
3574
Cov: 836 -> 836
Cov: 836 -> 836
3575
Cov: 836 -> 836
Cov: 836 -> 836
3576
Cov: 836 -> 836
Cov: 836 -> 836
3577
Cov: 836 -> 836
Cov: 836 -> 836
3578
Cov: 836 -> 836
Cov: 836 -> 836
3579
Cov: 836 -> 836
Cov: 836 -> 836
3580
Cov: 836 -> 836
Cov: 836 -> 836
3581
Cov: 836 -> 836
Cov: 836 -> 836
3582
{"exception": "RuntimeError", "msg": "The expanded size of the tensor (64) must match the existing size (4) at non-singleton dimension 0.  Target sizes: [64, 5, 3, 3].  Tensor sizes: [4, 5, 1, 1]"}
3583
Cov: 836 -> 836
Cov: 836 -> 836
3584
Cov: 836 -> 836
Cov: 836 -> 836
3585
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3586
Cov: 836 -> 836
Cov: 836 -> 836
3587
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 3)"}
3588
Cov: 836 -> 836
Cov: 836 -> 836
3589
Cov: 836 -> 836
Cov: 836 -> 836
3590
Cov: 836 -> 836
Cov: 836 -> 836
3591
Cov: 836 -> 836
Cov: 836 -> 836
3592
Cov: 836 -> 836
Cov: 836 -> 836
3593
Cov: 836 -> 836
Cov: 836 -> 836
3594
Cov: 836 -> 836
Cov: 836 -> 836
3595
Cov: 836 -> 836
Cov: 836 -> 836
3596
Cov: 836 -> 836
Cov: 836 -> 836
3597
Cov: 836 -> 836
Cov: 836 -> 836
3598
Cov: 836 -> 836
Cov: 836 -> 836
3599
Cov: 836 -> 836
Cov: 836 -> 836
3600
Cov: 836 -> 836
Cov: 836 -> 836
3601
Cov: 836 -> 836
Cov: 836 -> 836
3602
Cov: 836 -> 836
Cov: 836 -> 836
3603
Cov: 836 -> 836
Cov: 836 -> 836
3604
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
3605
Cov: 836 -> 836
Cov: 836 -> 836
3606
Cov: 836 -> 836
Cov: 836 -> 836
3607
Cov: 836 -> 836
Cov: 836 -> 836
3608
Cov: 836 -> 836
Cov: 836 -> 836
3609
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3610
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3611
Cov: 836 -> 836
Cov: 836 -> 836
3612
Cov: 836 -> 836
Cov: 836 -> 836
3613
Cov: 836 -> 836
Cov: 836 -> 836
3614
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'dim', 'n_head', and 'dropout_p'"}
3615
Cov: 836 -> 836
Cov: 836 -> 836
3616
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3617
Cov: 836 -> 836
Cov: 836 -> 836
3618
Cov: 836 -> 836
Cov: 836 -> 836
3619
Cov: 836 -> 846
Cov: 846 -> 846
3620
Cov: 846 -> 847
Cov: 847 -> 847
3621
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hparams'"}
3622
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'drop_p'"}
3623
Cov: 847 -> 847
Cov: 847 -> 847
3624
Cov: 847 -> 847
Cov: 847 -> 847
3625
Cov: 847 -> 847
Cov: 847 -> 847
3626
Cov: 847 -> 847
Cov: 847 -> 847
3627
Cov: 847 -> 847
Cov: 847 -> 847
3628
Cov: 847 -> 847
Cov: 847 -> 847
3629
Cov: 847 -> 847
Cov: 847 -> 847
3630
Cov: 847 -> 847
Cov: 847 -> 847
3631
Cov: 847 -> 847
Cov: 847 -> 847
3632
Cov: 847 -> 847
Cov: 847 -> 847
3633
Cov: 847 -> 847
Cov: 847 -> 847
3634
Cov: 847 -> 847
Cov: 847 -> 847
3635
Cov: 847 -> 847
Cov: 847 -> 847
3636
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
3637
Cov: 847 -> 847
Cov: 847 -> 847
3638
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_channels' and 'out_features'"}
3639
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3640
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3641
Cov: 847 -> 847
Cov: 847 -> 847
3642
Cov: 847 -> 847
Cov: 847 -> 847
3643
Cov: 847 -> 847
Cov: 847 -> 847
3644
Cov: 847 -> 847
Cov: 847 -> 847
3645
Cov: 847 -> 847
Cov: 847 -> 847
3646
Cov: 847 -> 847
Cov: 847 -> 847
3647
Cov: 847 -> 847
Cov: 847 -> 847
3648
Cov: 847 -> 847
Cov: 847 -> 847
3649
Cov: 847 -> 847
Cov: 847 -> 847
3650
Cov: 847 -> 847
Cov: 847 -> 847
3651
Cov: 847 -> 847
Cov: 847 -> 847
3652
{"exception": "TypeError", "msg": "forward() got an unexpected keyword argument 'other'"}
3653
Cov: 847 -> 847
Cov: 847 -> 847
3654
Cov: 847 -> 847
Cov: 847 -> 847
3655
Cov: 847 -> 847
Cov: 847 -> 847
3656
Cov: 847 -> 847
Cov: 847 -> 847
3657
Cov: 847 -> 847
Cov: 847 -> 847
3658
Cov: 847 -> 847
Cov: 847 -> 847
3659
Cov: 847 -> 847
Cov: 847 -> 847
3660
Cov: 847 -> 847
Cov: 847 -> 847
3661
Cov: 847 -> 847
Cov: 847 -> 847
3662
Cov: 847 -> 847
Cov: 847 -> 847
3663
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3664
Cov: 847 -> 847
Cov: 847 -> 847
3665
Cov: 847 -> 848
Cov: 848 -> 848
3666
Cov: 848 -> 848
Cov: 848 -> 848
3667
Cov: 848 -> 848
Cov: 848 -> 848
3668
Cov: 848 -> 848
Cov: 848 -> 848
3669
Cov: 848 -> 848
Cov: 848 -> 848
3670
Cov: 848 -> 854
Cov: 854 -> 854
3671
Cov: 854 -> 854
Cov: 854 -> 854
3672
Cov: 854 -> 854
Cov: 854 -> 854
3673
Cov: 854 -> 854
Cov: 854 -> 854
3674
Cov: 854 -> 855
Cov: 855 -> 855
3675
Cov: 855 -> 855
Cov: 855 -> 855
3676
Cov: 855 -> 855
Cov: 855 -> 855
3677
Cov: 855 -> 855
Cov: 855 -> 855
3678
Cov: 855 -> 856
Cov: 856 -> 856
3679
Cov: 856 -> 856
Cov: 856 -> 856
3680
Cov: 856 -> 856
Cov: 856 -> 856
3681
Cov: 856 -> 856
Cov: 856 -> 856
3682
Cov: 856 -> 856
Cov: 856 -> 856
3683
Cov: 856 -> 856
Cov: 856 -> 856
3684
Cov: 856 -> 856
Cov: 856 -> 856
3685
Cov: 856 -> 856
Cov: 856 -> 856
3686
Cov: 856 -> 856
Cov: 856 -> 856
3687
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3688
Cov: 856 -> 856
Cov: 856 -> 856
3689
Cov: 856 -> 856
Cov: 856 -> 856
3690
Cov: 856 -> 856
Cov: 856 -> 856
3691
Cov: 856 -> 856
Cov: 856 -> 856
3692
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3693
Cov: 856 -> 856
Cov: 856 -> 856
3694
Cov: 856 -> 856
Cov: 856 -> 856
3695
Cov: 856 -> 856
Cov: 856 -> 856
3696
Cov: 856 -> 856
Cov: 856 -> 856
3697
Cov: 856 -> 856
Cov: 856 -> 856
3698
Cov: 856 -> 856
Cov: 856 -> 856
3699
Cov: 856 -> 856
Cov: 856 -> 856
3700
Cov: 856 -> 856
Cov: 856 -> 856
3701
Cov: 856 -> 856
Cov: 856 -> 856
3702
Cov: 856 -> 856
Cov: 856 -> 856
3703
Cov: 856 -> 856
Cov: 856 -> 856
3704
Cov: 856 -> 856
Cov: 856 -> 856
3705
Cov: 856 -> 856
Cov: 856 -> 856
3706
Cov: 856 -> 856
Cov: 856 -> 856
3707
{"exception": "RuntimeError", "msg": "Trying to create tensor with negative dimension -1: [-1, 3]"}
3708
Cov: 856 -> 857
Cov: 857 -> 857
3709
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
3710
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 7)"}
3711
Cov: 857 -> 857
Cov: 857 -> 857
3712
Cov: 857 -> 857
Cov: 857 -> 857
3713
Cov: 857 -> 857
Cov: 857 -> 857
3714
Cov: 857 -> 857
Cov: 857 -> 857
3715
Cov: 857 -> 857
Cov: 857 -> 857
3716
Cov: 857 -> 857
Cov: 857 -> 857
3717
Cov: 857 -> 857
Cov: 857 -> 857
3718
Cov: 857 -> 857
Cov: 857 -> 857
3719
Cov: 857 -> 857
Cov: 857 -> 857
3720
Cov: 857 -> 857
Cov: 857 -> 857
3721
Cov: 857 -> 857
Cov: 857 -> 857
3722
Cov: 857 -> 857
Cov: 857 -> 857
3723
Cov: 857 -> 857
Cov: 857 -> 857
3724
Cov: 857 -> 857
Cov: 857 -> 857
3725
Cov: 857 -> 857
Cov: 857 -> 857
3726
Cov: 857 -> 857
Cov: 857 -> 857
3727
Cov: 857 -> 857
Cov: 857 -> 857
3728
Cov: 857 -> 857
Cov: 857 -> 857
3729
Cov: 857 -> 857
Cov: 857 -> 857
3730
Cov: 857 -> 857
Cov: 857 -> 857
3731
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3732
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3733
Cov: 857 -> 857
Cov: 857 -> 857
3734
Cov: 857 -> 857
Cov: 857 -> 857
3735
{"exception": "TypeError", "msg": "__init__() missing 6 required positional arguments: 'batch_size', 'dim_q', 'dim_k', 'dim_v', 'num_heads', and 'dropout_p'"}
3736
{"exception": "NameError", "msg": "name 'dim_hidden' is not defined"}
3737
Cov: 857 -> 857
Cov: 857 -> 857
3738
Cov: 857 -> 857
Cov: 857 -> 857
3739
Cov: 857 -> 857
Cov: 857 -> 857
3740
Cov: 857 -> 857
Cov: 857 -> 857
3741
Cov: 857 -> 857
Cov: 857 -> 857
3742
Cov: 857 -> 857
Cov: 857 -> 857
3743
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'dim_query', 'dim_key', 'dim_value', 'dropout_p', and 'inv_scale_factor'"}
3744
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim'"}
3745
Cov: 857 -> 857
Cov: 857 -> 857
3746
Cov: 857 -> 857
Cov: 857 -> 857
3747
Cov: 857 -> 857
Cov: 857 -> 857
3748
Cov: 857 -> 857
Cov: 857 -> 857
3749
Cov: 857 -> 857
Cov: 857 -> 857
3750
Cov: 857 -> 857
Cov: 857 -> 857
3751
Cov: 857 -> 857
Cov: 857 -> 857
3752
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
3753
Cov: 857 -> 857
Cov: 857 -> 857
3754
Cov: 857 -> 857
Cov: 857 -> 857
3755
Cov: 857 -> 857
Cov: 857 -> 857
3756
Cov: 857 -> 857
Cov: 857 -> 857
3757
Cov: 857 -> 857
Cov: 857 -> 857
3758
Cov: 857 -> 857
Cov: 857 -> 857
3759
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
3760
Cov: 857 -> 857
Cov: 857 -> 857
3761
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3762
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3763
Cov: 857 -> 857
Cov: 857 -> 857
3764
Cov: 857 -> 857
Cov: 857 -> 857
3765
Cov: 857 -> 857
Cov: 857 -> 857
3766
Cov: 857 -> 857
Cov: 857 -> 857
3767
Cov: 857 -> 857
Cov: 857 -> 857
3768
{"exception": "NameError", "msg": "name 'Initializer' is not defined"}
3769
Cov: 857 -> 857
Cov: 857 -> 857
3770
Cov: 857 -> 857
Cov: 857 -> 857
3771
Cov: 857 -> 857
Cov: 857 -> 857
3772
Cov: 857 -> 857
Cov: 857 -> 857
3773
Cov: 857 -> 857
Cov: 857 -> 857
3774
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'a'"}
3775
Cov: 857 -> 857
Cov: 857 -> 857
3776
Cov: 857 -> 857
Cov: 857 -> 857
3777
Cov: 857 -> 857
Cov: 857 -> 857
3778
Cov: 857 -> 857
Cov: 857 -> 857
3779
Cov: 857 -> 857
Cov: 857 -> 857
3780
Cov: 857 -> 857
Cov: 857 -> 857
3781
Cov: 857 -> 862
Cov: 862 -> 862
3782
Cov: 862 -> 863
Cov: 863 -> 863
3783
Cov: 863 -> 863
Cov: 863 -> 863
3784
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3785
Cov: 863 -> 863
Cov: 863 -> 863
3786
Cov: 863 -> 863
Cov: 863 -> 863
3787
Cov: 863 -> 863
Cov: 863 -> 863
3788
Cov: 863 -> 863
Cov: 863 -> 863
3789
Cov: 863 -> 863
Cov: 863 -> 863
3790
Cov: 863 -> 863
Cov: 863 -> 863
3791
Cov: 863 -> 863
Cov: 863 -> 863
3792
Cov: 863 -> 863
Cov: 863 -> 863
3793
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3794
Cov: 863 -> 863
Cov: 863 -> 863
3795
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 12)"}
3796
Cov: 863 -> 870
Cov: 870 -> 870
3797
Cov: 870 -> 870
Cov: 870 -> 870
3798
Cov: 870 -> 870
Cov: 870 -> 870
3799
Cov: 870 -> 870
Cov: 870 -> 870
3800
Cov: 870 -> 870
Cov: 870 -> 870
3801
Cov: 870 -> 870
Cov: 870 -> 870
3802
Cov: 870 -> 870
Cov: 870 -> 870
3803
Cov: 870 -> 870
Cov: 870 -> 870
3804
Cov: 870 -> 870
Cov: 870 -> 870
3805
Cov: 870 -> 870
Cov: 870 -> 870
3806
Cov: 870 -> 870
Cov: 870 -> 870
3807
Cov: 870 -> 870
Cov: 870 -> 870
3808
Cov: 870 -> 870
Cov: 870 -> 870
3809
Cov: 870 -> 870
Cov: 870 -> 870
3810
Cov: 870 -> 870
Cov: 870 -> 870
3811
Cov: 870 -> 870
Cov: 870 -> 870
3812
Cov: 870 -> 870
Cov: 870 -> 870
3813
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3814
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3815
Cov: 870 -> 870
Cov: 870 -> 870
3816
Cov: 870 -> 870
Cov: 870 -> 870
3817
Cov: 870 -> 870
Cov: 870 -> 870
3818
Cov: 870 -> 870
Cov: 870 -> 870
3819
Cov: 870 -> 870
Cov: 870 -> 870
3820
Cov: 870 -> 871
Cov: 871 -> 871
3821
Cov: 871 -> 871
Cov: 871 -> 871
3822
Cov: 871 -> 871
Cov: 871 -> 871
3823
Cov: 871 -> 871
Cov: 871 -> 871
3824
Cov: 871 -> 871
Cov: 871 -> 871
3825
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3826
Cov: 871 -> 871
Cov: 871 -> 871
3827
Cov: 871 -> 871
Cov: 871 -> 871
3828
Cov: 871 -> 871
Cov: 871 -> 871
3829
Cov: 871 -> 871
Cov: 871 -> 871
3830
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3831
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 117)"}
3832
Cov: 871 -> 871
Cov: 871 -> 871
3833
Cov: 871 -> 871
Cov: 871 -> 871
3834
Cov: 871 -> 871
Cov: 871 -> 871
3835
Cov: 871 -> 871
Cov: 871 -> 871
3836
Cov: 871 -> 871
Cov: 871 -> 871
3837
Cov: 871 -> 871
Cov: 871 -> 871
3838
Cov: 871 -> 871
Cov: 871 -> 871
3839
Cov: 871 -> 871
Cov: 871 -> 871
3840
Cov: 871 -> 871
Cov: 871 -> 871
3841
Cov: 871 -> 871
Cov: 871 -> 871
3842
Cov: 871 -> 871
Cov: 871 -> 871
3843
Cov: 871 -> 871
Cov: 871 -> 871
3844
Cov: 871 -> 871
Cov: 871 -> 871
3845
Cov: 871 -> 871
Cov: 871 -> 871
3846
Cov: 871 -> 871
Cov: 871 -> 871
3847
Cov: 871 -> 871
Cov: 871 -> 871
3848
Cov: 871 -> 871
Cov: 871 -> 871
3849
Cov: 871 -> 871
Cov: 871 -> 871
3850
Cov: 871 -> 871
Cov: 871 -> 871
3851
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3852
Cov: 871 -> 871
Cov: 871 -> 871
3853
{"exception": "SyntaxError", "msg": "unexpected EOF while parsing (<string>, line 123)"}
3854
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3855
Cov: 871 -> 871
Cov: 871 -> 871
3856
Cov: 871 -> 871
Cov: 871 -> 871
3857
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query', 'key', and 'value'"}
3858
Cov: 871 -> 871
Cov: 871 -> 871
3859
Cov: 871 -> 871
Cov: 871 -> 871
3860
Cov: 871 -> 871
Cov: 871 -> 871
3861
Cov: 871 -> 871
Cov: 871 -> 871
3862
Cov: 871 -> 871
Cov: 871 -> 871
3863
Cov: 871 -> 871
Cov: 871 -> 871
3864
Cov: 871 -> 871
Cov: 871 -> 871
3865
Cov: 871 -> 871
Cov: 871 -> 871
3866
Cov: 871 -> 871
Cov: 871 -> 871
3867
Cov: 871 -> 871
Cov: 871 -> 871
3868
Cov: 871 -> 872
Cov: 872 -> 872
3869
Cov: 872 -> 872
Cov: 872 -> 872
3870
Cov: 872 -> 872
Cov: 872 -> 872
3871
Cov: 872 -> 872
Cov: 872 -> 872
3872
Cov: 872 -> 872
Cov: 872 -> 872
3873
Cov: 872 -> 872
Cov: 872 -> 872
3874
Cov: 872 -> 872
Cov: 872 -> 872
3875
Cov: 872 -> 872
Cov: 872 -> 872
3876
Cov: 872 -> 872
Cov: 872 -> 872
3877
Cov: 872 -> 872
Cov: 872 -> 872
3878
Cov: 872 -> 872
Cov: 872 -> 872
3879
Cov: 872 -> 872
Cov: 872 -> 872
3880
Cov: 872 -> 872
Cov: 872 -> 872
3881
Cov: 872 -> 872
Cov: 872 -> 872
3882
Cov: 872 -> 872
Cov: 872 -> 872
3883
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3884
{"exception": "NameError", "msg": "name 'nn' is not defined"}
3885
Cov: 872 -> 872
Cov: 872 -> 872
3886
Cov: 872 -> 872
Cov: 872 -> 872
3887
Cov: 872 -> 872
Cov: 872 -> 872
3888
Cov: 872 -> 872
Cov: 872 -> 872
3889
Cov: 872 -> 872
Cov: 872 -> 872
3890
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
3891
Cov: 872 -> 872
Cov: 872 -> 872
3892
Cov: 872 -> 872
Cov: 872 -> 872
3893
Cov: 872 -> 872
Cov: 872 -> 872
3894
Cov: 872 -> 872
Cov: 872 -> 872
3895
Cov: 872 -> 872
Cov: 872 -> 872
3896
{"exception": "NameError", "msg": "name 'Linear' is not defined"}
3897
Cov: 872 -> 872
Cov: 872 -> 872
3898
Cov: 872 -> 872
Cov: 872 -> 872
3899
Cov: 872 -> 872
Cov: 872 -> 872
3900
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3901
{"exception": "TypeError", "msg": "randn(): argument 'size' failed to unpack the object at pos 3 with error \"type must be tuple of ints,but got float\""}
3902
Cov: 872 -> 872
Cov: 872 -> 872
3903
Cov: 872 -> 872
Cov: 872 -> 872
3904
Cov: 872 -> 872
Cov: 872 -> 872
3905
Cov: 872 -> 872
Cov: 872 -> 872
3906
Cov: 872 -> 872
Cov: 872 -> 872
3907
Cov: 872 -> 872
Cov: 872 -> 872
3908
{"exception": "NameError", "msg": "name 'Net1' is not defined"}
3909
Cov: 872 -> 872
Cov: 872 -> 872
3910
Cov: 872 -> 872
Cov: 872 -> 872
3911
Cov: 872 -> 872
Cov: 872 -> 872
3912
Cov: 872 -> 872
Cov: 872 -> 872
3913
Cov: 872 -> 872
Cov: 872 -> 872
3914
{"exception": "RuntimeError", "msg": "\"normal_kernel_cpu\" not implemented for 'Long'"}
3915
Cov: 872 -> 872
Cov: 872 -> 872
3916
Cov: 872 -> 872
Cov: 872 -> 872
3917
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3918
{"exception": "TypeError", "msg": "unsupported operand type(s) for %: 'tuple' and 'int'"}
3919
Cov: 872 -> 873
Cov: 873 -> 873
3920
Cov: 873 -> 873
Cov: 873 -> 873
3921
Cov: 873 -> 873
Cov: 873 -> 873
3922
Cov: 873 -> 873
Cov: 873 -> 873
3923
Cov: 873 -> 873
Cov: 873 -> 873
3924
Cov: 873 -> 873
Cov: 873 -> 873
3925
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 4)"}
3926
Cov: 873 -> 873
Cov: 873 -> 873
3927
Cov: 873 -> 873
Cov: 873 -> 873
3928
Cov: 873 -> 873
Cov: 873 -> 873
3929
Cov: 873 -> 873
Cov: 873 -> 873
3930
Cov: 873 -> 873
Cov: 873 -> 873
3931
Cov: 873 -> 873
Cov: 873 -> 873
3932
Cov: 873 -> 873
Cov: 873 -> 873
3933
Cov: 873 -> 873
Cov: 873 -> 873
3934
Cov: 873 -> 873
Cov: 873 -> 873
3935
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3936
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
3937
Cov: 873 -> 873
Cov: 873 -> 873
3938
Cov: 873 -> 873
Cov: 873 -> 873
3939
Cov: 873 -> 873
Cov: 873 -> 873
3940
Cov: 873 -> 873
Cov: 873 -> 873
3941
Cov: 873 -> 873
Cov: 873 -> 873
3942
Cov: 873 -> 873
Cov: 873 -> 873
3943
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3944
Cov: 873 -> 873
Cov: 873 -> 873
3945
Cov: 873 -> 873
Cov: 873 -> 873
3946
Cov: 873 -> 873
Cov: 873 -> 873
3947
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
3948
Cov: 873 -> 873
Cov: 873 -> 873
3949
Cov: 873 -> 873
Cov: 873 -> 873
3950
Cov: 873 -> 873
Cov: 873 -> 873
3951
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3952
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
3953
Cov: 873 -> 873
Cov: 873 -> 873
3954
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'scale_factor' and 'dropout_p'"}
3955
Cov: 873 -> 873
Cov: 873 -> 873
3956
Cov: 873 -> 873
Cov: 873 -> 873
3957
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
3958
Cov: 873 -> 873
Cov: 873 -> 873
3959
Cov: 873 -> 873
Cov: 873 -> 873
3960
Cov: 873 -> 873
Cov: 873 -> 873
3961
Cov: 873 -> 873
Cov: 873 -> 873
3962
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
3963
Cov: 873 -> 873
Cov: 873 -> 873
3964
Cov: 873 -> 873
Cov: 873 -> 873
3965
Cov: 873 -> 873
Cov: 873 -> 873
3966
Cov: 873 -> 873
Cov: 873 -> 873
3967
Cov: 873 -> 873
Cov: 873 -> 873
3968
Cov: 873 -> 873
Cov: 873 -> 873
3969
Cov: 873 -> 873
Cov: 873 -> 873
3970
Cov: 873 -> 873
Cov: 873 -> 873
3971
Cov: 873 -> 873
Cov: 873 -> 873
3972
Cov: 873 -> 873
Cov: 873 -> 873
3973
Cov: 873 -> 873
Cov: 873 -> 873
3974
Cov: 873 -> 873
Cov: 873 -> 873
3975
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3976
{"exception": "NameError", "msg": "name 'Model' is not defined"}
3977
Cov: 873 -> 874
Cov: 874 -> 874
3978
Cov: 874 -> 874
Cov: 874 -> 874
3979
Cov: 874 -> 874
Cov: 874 -> 874
3980
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'num_heads', 'query_size', 'key_size', 'hidden_size', and 'dropout_p'"}
3981
Cov: 874 -> 874
Cov: 874 -> 874
3982
Cov: 874 -> 874
Cov: 874 -> 874
3983
Cov: 874 -> 874
Cov: 874 -> 874
3984
Cov: 874 -> 874
Cov: 874 -> 874
3985
Cov: 874 -> 874
Cov: 874 -> 874
3986
Cov: 874 -> 874
Cov: 874 -> 874
3987
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'query_size', 'key_size', 'value_size', and 'dropout_p'"}
3988
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'input_tensor'"}
3989
Cov: 874 -> 874
Cov: 874 -> 874
3990
Cov: 874 -> 874
Cov: 874 -> 874
3991
Cov: 874 -> 874
Cov: 874 -> 874
3992
Cov: 874 -> 874
Cov: 874 -> 874
3993
Cov: 874 -> 874
Cov: 874 -> 874
3994
Cov: 874 -> 874
Cov: 874 -> 874
3995
Cov: 874 -> 874
Cov: 874 -> 874
3996
Cov: 874 -> 874
Cov: 874 -> 874
3997
Cov: 874 -> 874
Cov: 874 -> 874
3998
Cov: 874 -> 874
Cov: 874 -> 874
3999
Cov: 874 -> 874
Cov: 874 -> 874
4000
Cov: 874 -> 874
Cov: 874 -> 874
4001
Cov: 874 -> 874
Cov: 874 -> 874
4002
Cov: 874 -> 874
Cov: 874 -> 874
4003
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
4004
Cov: 874 -> 874
Cov: 874 -> 874
4005
Cov: 874 -> 874
Cov: 874 -> 874
4006
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4007
Cov: 874 -> 874
Cov: 874 -> 874
4008
Cov: 874 -> 874
Cov: 874 -> 874
4009
Cov: 874 -> 874
Cov: 874 -> 874
4010
{"exception": "NameError", "msg": "name 'd_model' is not defined"}
4011
{"exception": "SyntaxError", "msg": "invalid decimal literal (<string>, line 16)"}
4012
Cov: 874 -> 874
Cov: 874 -> 874
4013
{"exception": "TabError", "msg": "inconsistent use of tabs and spaces in indentation (<string>, line 8)"}
4014
Cov: 874 -> 874
Cov: 874 -> 874
4015
Cov: 874 -> 874
Cov: 874 -> 874
4016
Cov: 874 -> 874
Cov: 874 -> 874
4017
Cov: 874 -> 874
Cov: 874 -> 874
4018
Cov: 874 -> 874
Cov: 874 -> 874
4019
Cov: 874 -> 874
Cov: 874 -> 874
4020
Cov: 874 -> 874
Cov: 874 -> 874
4021
Cov: 874 -> 874
Cov: 874 -> 874
4022
Cov: 874 -> 874
Cov: 874 -> 874
4023
Cov: 874 -> 874
Cov: 874 -> 874
4024
Cov: 874 -> 874
Cov: 874 -> 874
4025
Cov: 874 -> 874
Cov: 874 -> 874
4026
Cov: 874 -> 874
Cov: 874 -> 874
4027
Cov: 874 -> 874
Cov: 874 -> 874
4028
Cov: 874 -> 874
Cov: 874 -> 874
4029
Cov: 874 -> 874
Cov: 874 -> 874
4030
Cov: 874 -> 874
Cov: 874 -> 874
4031
Cov: 874 -> 874
Cov: 874 -> 874
4032
Cov: 874 -> 874
Cov: 874 -> 874
4033
Cov: 874 -> 874
Cov: 874 -> 874
4034
Cov: 874 -> 874
Cov: 874 -> 874
4035
Cov: 874 -> 874
Cov: 874 -> 874
4036
Cov: 874 -> 874
Cov: 874 -> 874
4037
Cov: 874 -> 874
Cov: 874 -> 874
4038
Cov: 874 -> 874
Cov: 874 -> 874
4039
Cov: 874 -> 874
Cov: 874 -> 874
4040
Cov: 874 -> 874
Cov: 874 -> 874
4041
Cov: 874 -> 874
Cov: 874 -> 874
4042
Cov: 874 -> 874
Cov: 874 -> 874
4043
Cov: 874 -> 874
Cov: 874 -> 874
4044
{"exception": "NameError", "msg": "name 'device' is not defined"}
4045
Cov: 874 -> 874
Cov: 874 -> 874
4046
Cov: 874 -> 874
Cov: 874 -> 874
4047
Cov: 874 -> 874
Cov: 874 -> 874
4048
Cov: 874 -> 874
Cov: 874 -> 874
4049
Cov: 874 -> 874
Cov: 874 -> 874
4050
Cov: 874 -> 874
Cov: 874 -> 874
4051
Cov: 874 -> 874
Cov: 874 -> 874
4052
Cov: 874 -> 874
Cov: 874 -> 874
4053
Cov: 874 -> 874
Cov: 874 -> 874
4054
Cov: 874 -> 874
Cov: 874 -> 874
4055
Cov: 874 -> 874
Cov: 874 -> 874
4056
Cov: 874 -> 874
Cov: 874 -> 874
4057
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4058
Cov: 874 -> 874
Cov: 874 -> 874
4059
Cov: 874 -> 874
Cov: 874 -> 874
4060
Cov: 874 -> 874
Cov: 874 -> 874
4061
Cov: 874 -> 874
Cov: 874 -> 874
4062
Cov: 874 -> 874
Cov: 874 -> 874
4063
Cov: 874 -> 874
Cov: 874 -> 874
4064
Cov: 874 -> 874
Cov: 874 -> 874
4065
Cov: 874 -> 874
Cov: 874 -> 874
4066
Cov: 874 -> 874
Cov: 874 -> 874
4067
Cov: 874 -> 874
Cov: 874 -> 874
4068
Cov: 874 -> 874
Cov: 874 -> 874
4069
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'padding'"}
4070
Cov: 874 -> 874
Cov: 874 -> 874
4071
Cov: 874 -> 874
Cov: 874 -> 874
4072
Cov: 874 -> 874
Cov: 874 -> 874
4073
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
4074
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
4075
{"exception": "NameError", "msg": "name 'math' is not defined"}
4076
Cov: 874 -> 874
Cov: 874 -> 874
4077
Cov: 874 -> 874
Cov: 874 -> 874
4078
Cov: 874 -> 874
Cov: 874 -> 874
4079
Cov: 874 -> 874
Cov: 874 -> 874
4080
Cov: 874 -> 874
Cov: 874 -> 874
4081
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'linear' and 'bias'"}
4082
Cov: 874 -> 874
Cov: 874 -> 874
4083
Cov: 874 -> 874
Cov: 874 -> 874
4084
Cov: 874 -> 874
Cov: 874 -> 874
4085
Cov: 874 -> 874
Cov: 874 -> 874
4086
Cov: 874 -> 874
Cov: 874 -> 874
4087
Cov: 874 -> 881
Cov: 881 -> 881
4088
Cov: 881 -> 881
Cov: 881 -> 881
4089
Cov: 881 -> 881
Cov: 881 -> 881
4090
Cov: 881 -> 881
Cov: 881 -> 881
4091
Cov: 881 -> 881
Cov: 881 -> 881
4092
Cov: 881 -> 881
Cov: 881 -> 881
4093
Cov: 881 -> 881
Cov: 881 -> 881
4094
Cov: 881 -> 881
Cov: 881 -> 881
4095
Cov: 881 -> 881
Cov: 881 -> 881
4096
Cov: 881 -> 881
Cov: 881 -> 881
4097
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4098
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4099
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Squeeze'"}
4100
Cov: 881 -> 882
Cov: 882 -> 882
4101
{"exception": "NameError", "msg": "name 'math' is not defined"}
4102
{"exception": "NameError", "msg": "name 'math' is not defined"}
4103
Cov: 882 -> 882
Cov: 882 -> 882
4104
Cov: 882 -> 891
Cov: 891 -> 891
4105
Cov: 891 -> 891
Cov: 891 -> 891
4106
Cov: 891 -> 891
Cov: 891 -> 891
4107
Cov: 891 -> 891
Cov: 891 -> 891
4108
Cov: 891 -> 891
Cov: 891 -> 891
4109
Cov: 891 -> 891
Cov: 891 -> 891
4110
Cov: 891 -> 891
Cov: 891 -> 891
4111
Cov: 891 -> 891
Cov: 891 -> 891
4112
Cov: 891 -> 891
Cov: 891 -> 891
4113
Cov: 891 -> 891
Cov: 891 -> 891
4114
Cov: 891 -> 891
Cov: 891 -> 891
4115
Cov: 891 -> 891
Cov: 891 -> 891
4116
Cov: 891 -> 891
Cov: 891 -> 891
4117
Cov: 891 -> 891
Cov: 891 -> 891
4118
Cov: 891 -> 891
Cov: 891 -> 891
4119
Cov: 891 -> 891
Cov: 891 -> 891
4120
Cov: 891 -> 891
Cov: 891 -> 891
4121
Cov: 891 -> 891
Cov: 891 -> 891
4122
Cov: 891 -> 891
Cov: 891 -> 891
4123
Cov: 891 -> 891
Cov: 891 -> 891
4124
{"exception": "RuntimeError", "msg": "The size of tensor a (672) must match the size of tensor b (200) at non-singleton dimension 1"}
4125
Cov: 891 -> 893
Cov: 893 -> 893
4126
Cov: 893 -> 893
Cov: 893 -> 893
4127
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4128
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4129
Cov: 893 -> 893
Cov: 893 -> 893
4130
Cov: 893 -> 893
Cov: 893 -> 893
4131
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'd_model' and 'd_ff'"}
4132
Cov: 893 -> 893
Cov: 893 -> 893
4133
Cov: 893 -> 894
Cov: 894 -> 894
4134
Cov: 894 -> 894
Cov: 894 -> 894
4135
Cov: 894 -> 894
Cov: 894 -> 894
4136
Cov: 894 -> 894
Cov: 894 -> 894
4137
Cov: 894 -> 894
Cov: 894 -> 894
4138
Cov: 894 -> 894
Cov: 894 -> 894
4139
Cov: 894 -> 894
Cov: 894 -> 894
4140
Cov: 894 -> 894
Cov: 894 -> 894
4141
Cov: 894 -> 894
Cov: 894 -> 894
4142
Cov: 894 -> 894
Cov: 894 -> 894
4143
Cov: 894 -> 894
Cov: 894 -> 894
4144
Cov: 894 -> 894
Cov: 894 -> 894
4145
Cov: 894 -> 895
Cov: 895 -> 895
4146
Cov: 895 -> 895
Cov: 895 -> 895
4147
Cov: 895 -> 895
Cov: 895 -> 895
4148
Cov: 895 -> 895
Cov: 895 -> 895
4149
Cov: 895 -> 896
Cov: 896 -> 896
4150
Cov: 896 -> 896
Cov: 896 -> 896
4151
Cov: 896 -> 896
Cov: 896 -> 896
4152
Cov: 896 -> 896
Cov: 896 -> 896
4153
Cov: 896 -> 896
Cov: 896 -> 896
4154
Cov: 896 -> 896
Cov: 896 -> 896
4155
Cov: 896 -> 896
Cov: 896 -> 896
4156
Cov: 896 -> 896
Cov: 896 -> 896
4157
Cov: 896 -> 896
Cov: 896 -> 896
4158
{"exception": "RuntimeError", "msg": "shape '[3, 3]' is invalid for input of size 18"}
4159
Cov: 896 -> 896
Cov: 896 -> 896
4160
Cov: 896 -> 896
Cov: 896 -> 896
4161
Cov: 896 -> 896
Cov: 896 -> 896
4162
Cov: 896 -> 896
Cov: 896 -> 896
4163
Cov: 896 -> 896
Cov: 896 -> 896
4164
Cov: 896 -> 896
Cov: 896 -> 896
4165
Cov: 896 -> 896
Cov: 896 -> 896
4166
Cov: 896 -> 896
Cov: 896 -> 896
4167
Cov: 896 -> 896
Cov: 896 -> 896
4168
Cov: 896 -> 896
Cov: 896 -> 896
4169
Cov: 896 -> 896
Cov: 896 -> 896
4170
Cov: 896 -> 896
Cov: 896 -> 896
4171
Cov: 896 -> 896
Cov: 896 -> 896
4172
Cov: 896 -> 896
Cov: 896 -> 896
4173
Cov: 896 -> 896
Cov: 896 -> 896
4174
Cov: 896 -> 896
Cov: 896 -> 896
4175
Cov: 896 -> 897
Cov: 897 -> 897
4176
Cov: 897 -> 897
Cov: 897 -> 897
4177
Cov: 897 -> 897
Cov: 897 -> 897
4178
Cov: 897 -> 897
Cov: 897 -> 897
4179
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4180
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4181
Cov: 897 -> 897
Cov: 897 -> 897
4182
Cov: 897 -> 897
Cov: 897 -> 897
4183
Cov: 897 -> 897
Cov: 897 -> 897
4184
Cov: 897 -> 897
Cov: 897 -> 897
4185
Cov: 897 -> 897
Cov: 897 -> 897
4186
Cov: 897 -> 897
Cov: 897 -> 897
4187
{"exception": "NameError", "msg": "name 'num_classes' is not defined"}
4188
Cov: 897 -> 897
Cov: 897 -> 897
4189
Cov: 897 -> 897
Cov: 897 -> 897
4190
Cov: 897 -> 897
Cov: 897 -> 897
4191
Cov: 897 -> 897
Cov: 897 -> 897
4192
Cov: 897 -> 897
Cov: 897 -> 897
4193
Cov: 897 -> 897
Cov: 897 -> 897
4194
Cov: 897 -> 897
Cov: 897 -> 897
4195
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
4196
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
4197
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_heads'"}
4198
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'input1' and 'input2'"}
4199
Cov: 897 -> 897
Cov: 897 -> 897
4200
Cov: 897 -> 897
Cov: 897 -> 897
4201
Cov: 897 -> 897
Cov: 897 -> 897
4202
Cov: 897 -> 897
Cov: 897 -> 897
4203
Cov: 897 -> 897
Cov: 897 -> 897
4204
Cov: 897 -> 897
Cov: 897 -> 897
4205
Cov: 897 -> 897
Cov: 897 -> 897
4206
Cov: 897 -> 897
Cov: 897 -> 897
4207
Cov: 897 -> 897
Cov: 897 -> 897
4208
Cov: 897 -> 897
Cov: 897 -> 897
4209
Cov: 897 -> 897
Cov: 897 -> 897
4210
Cov: 897 -> 897
Cov: 897 -> 897
4211
Cov: 897 -> 897
Cov: 897 -> 897
4212
Cov: 897 -> 897
Cov: 897 -> 897
4213
Cov: 897 -> 897
Cov: 897 -> 897
4214
Cov: 897 -> 897
Cov: 897 -> 897
4215
Cov: 897 -> 897
Cov: 897 -> 897
4216
Cov: 897 -> 897
Cov: 897 -> 897
4217
Cov: 897 -> 897
Cov: 897 -> 897
4218
Cov: 897 -> 897
Cov: 897 -> 897
4219
Cov: 897 -> 897
Cov: 897 -> 897
4220
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4221
Cov: 897 -> 897
Cov: 897 -> 897
4222
Cov: 897 -> 897
Cov: 897 -> 897
4223
Cov: 897 -> 897
Cov: 897 -> 897
4224
Cov: 897 -> 897
Cov: 897 -> 897
4225
Cov: 897 -> 897
Cov: 897 -> 897
4226
Cov: 897 -> 897
Cov: 897 -> 897
4227
Cov: 897 -> 897
Cov: 897 -> 897
4228
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
4229
Cov: 897 -> 897
Cov: 897 -> 897
4230
Cov: 897 -> 897
Cov: 897 -> 897
4231
Cov: 897 -> 897
Cov: 897 -> 897
4232
Cov: 897 -> 897
Cov: 897 -> 897
4233
Cov: 897 -> 897
Cov: 897 -> 897
4234
Cov: 897 -> 897
Cov: 897 -> 897
4235
Cov: 897 -> 897
Cov: 897 -> 897
4236
Cov: 897 -> 897
Cov: 897 -> 897
4237
Cov: 897 -> 897
Cov: 897 -> 897
4238
Cov: 897 -> 897
Cov: 897 -> 897
4239
Cov: 897 -> 897
Cov: 897 -> 897
4240
Cov: 897 -> 897
Cov: 897 -> 897
4241
Cov: 897 -> 897
Cov: 897 -> 897
4242
Cov: 897 -> 897
Cov: 897 -> 897
4243
Cov: 897 -> 897
Cov: 897 -> 897
4244
Cov: 897 -> 897
Cov: 897 -> 897
4245
Cov: 897 -> 897
Cov: 897 -> 897
4246
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
4247
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
4248
Cov: 897 -> 897
Cov: 897 -> 897
4249
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4250
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4251
Cov: 897 -> 897
Cov: 897 -> 897
4252
Cov: 897 -> 897
Cov: 897 -> 897
4253
Cov: 897 -> 897
Cov: 897 -> 897
4254
Cov: 897 -> 897
Cov: 897 -> 897
4255
Cov: 897 -> 897
Cov: 897 -> 897
4256
Cov: 897 -> 897
Cov: 897 -> 897
4257
Cov: 897 -> 897
Cov: 897 -> 897
4258
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4259
Cov: 897 -> 897
Cov: 897 -> 897
4260
Cov: 897 -> 897
Cov: 897 -> 897
4261
Cov: 897 -> 897
Cov: 897 -> 897
4262
Cov: 897 -> 897
Cov: 897 -> 897
4263
Cov: 897 -> 897
Cov: 897 -> 897
4264
Cov: 897 -> 897
Cov: 897 -> 897
4265
Cov: 897 -> 897
Cov: 897 -> 897
4266
Cov: 897 -> 897
Cov: 897 -> 897
4267
Cov: 897 -> 897
Cov: 897 -> 897
4268
Cov: 897 -> 897
Cov: 897 -> 897
4269
Cov: 897 -> 897
Cov: 897 -> 897
4270
Cov: 897 -> 897
Cov: 897 -> 897
4271
Cov: 897 -> 897
Cov: 897 -> 897
4272
Cov: 897 -> 897
Cov: 897 -> 897
4273
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 't1'"}
4274
Cov: 897 -> 897
Cov: 897 -> 897
4275
Cov: 897 -> 897
Cov: 897 -> 897
4276
Cov: 897 -> 897
Cov: 897 -> 897
4277
Cov: 897 -> 897
Cov: 897 -> 897
4278
Cov: 897 -> 897
Cov: 897 -> 897
4279
Cov: 897 -> 897
Cov: 897 -> 897
4280
Cov: 897 -> 897
Cov: 897 -> 897
4281
Cov: 897 -> 897
Cov: 897 -> 897
4282
Cov: 897 -> 897
Cov: 897 -> 897
4283
Cov: 897 -> 897
Cov: 897 -> 897
4284
Cov: 897 -> 897
Cov: 897 -> 897
4285
Cov: 897 -> 897
Cov: 897 -> 897
4286
Cov: 897 -> 897
Cov: 897 -> 897
4287
Cov: 897 -> 897
Cov: 897 -> 897
4288
Cov: 897 -> 897
Cov: 897 -> 897
4289
Cov: 897 -> 897
Cov: 897 -> 897
4290
Cov: 897 -> 897
Cov: 897 -> 897
4291
Cov: 897 -> 897
Cov: 897 -> 897
4292
Cov: 897 -> 897
Cov: 897 -> 897
4293
Cov: 897 -> 897
Cov: 897 -> 897
4294
Cov: 897 -> 897
Cov: 897 -> 897
4295
Cov: 897 -> 897
Cov: 897 -> 897
4296
Cov: 897 -> 897
Cov: 897 -> 897
4297
Cov: 897 -> 897
Cov: 897 -> 897
4298
Cov: 897 -> 897
Cov: 897 -> 897
4299
Cov: 897 -> 897
Cov: 897 -> 897
4300
Cov: 897 -> 897
Cov: 897 -> 897
4301
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4302
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4303
Cov: 897 -> 897
Cov: 897 -> 897
4304
Cov: 897 -> 897
Cov: 897 -> 897
4305
Cov: 897 -> 897
Cov: 897 -> 897
4306
Cov: 897 -> 897
Cov: 897 -> 897
4307
{"exception": "ModuleNotFoundError", "msg": "No module named 'torchvision'"}
4308
Cov: 897 -> 897
Cov: 897 -> 897
4309
Cov: 897 -> 897
Cov: 897 -> 897
4310
Cov: 897 -> 897
Cov: 897 -> 897
4311
Cov: 897 -> 897
Cov: 897 -> 897
4312
Cov: 897 -> 897
Cov: 897 -> 897
4313
Cov: 897 -> 897
Cov: 897 -> 897
4314
Cov: 897 -> 897
Cov: 897 -> 897
4315
Cov: 897 -> 897
Cov: 897 -> 897
4316
Cov: 897 -> 897
Cov: 897 -> 897
4317
Cov: 897 -> 897
Cov: 897 -> 897
4318
Cov: 897 -> 897
Cov: 897 -> 897
4319
{"exception": "SyntaxError", "msg": "unexpected EOF while parsing (<string>, line 6)"}
4320
Cov: 897 -> 897
Cov: 897 -> 897
4321
Cov: 897 -> 897
Cov: 897 -> 897
4322
Cov: 897 -> 897
Cov: 897 -> 897
4323
Cov: 897 -> 897
Cov: 897 -> 897
4324
Cov: 897 -> 897
Cov: 897 -> 897
4325
Cov: 897 -> 897
Cov: 897 -> 897
4326
Cov: 897 -> 897
Cov: 897 -> 897
4327
Cov: 897 -> 897
Cov: 897 -> 897
4328
Cov: 897 -> 897
Cov: 897 -> 897
4329
Cov: 897 -> 897
Cov: 897 -> 897
4330
Cov: 897 -> 897
Cov: 897 -> 897
4331
Cov: 897 -> 897
Cov: 897 -> 897
4332
Cov: 897 -> 923
Cov: 923 -> 923
4333
Cov: 923 -> 923
Cov: 923 -> 923
4334
Cov: 923 -> 923
Cov: 923 -> 923
4335
Cov: 923 -> 923
Cov: 923 -> 923
4336
Cov: 923 -> 923
Cov: 923 -> 923
4337
Cov: 923 -> 924
Cov: 924 -> 924
4338
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
4339
Cov: 924 -> 194
Cov: 194 -> 194
4340
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
4341
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4342
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4343
Cov: 194 -> 221
Cov: 221 -> 221
4344
Cov: 221 -> 221
Cov: 221 -> 221
4345
Cov: 221 -> 222
Cov: 222 -> 222
4346
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim'"}
4347
Cov: 222 -> 253
Cov: 253 -> 253
4348
Cov: 253 -> 268
Cov: 268 -> 268
4349
Cov: 268 -> 268
Cov: 268 -> 268
4350
Cov: 268 -> 268
Cov: 268 -> 268
4351
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 3)"}
4352
Cov: 268 -> 268
Cov: 268 -> 268
4353
Cov: 268 -> 268
Cov: 268 -> 268
4354
Cov: 268 -> 268
Cov: 268 -> 268
4355
Cov: 268 -> 268
Cov: 268 -> 268
4356
Cov: 268 -> 268
Cov: 268 -> 268
4357
Cov: 268 -> 269
Cov: 269 -> 269
4358
Cov: 269 -> 269
Cov: 269 -> 269
4359
Cov: 269 -> 269
Cov: 269 -> 269
4360
Cov: 269 -> 269
Cov: 269 -> 269
4361
Cov: 269 -> 269
Cov: 269 -> 269
4362
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
4363
Cov: 269 -> 269
Cov: 269 -> 269
4364
Cov: 269 -> 269
Cov: 269 -> 269
4365
Cov: 269 -> 269
Cov: 269 -> 269
4366
Cov: 269 -> 270
Cov: 270 -> 270
4367
Cov: 270 -> 270
Cov: 270 -> 270
4368
Cov: 270 -> 270
Cov: 270 -> 270
4369
Cov: 270 -> 270
Cov: 270 -> 270
4370
Cov: 270 -> 270
Cov: 270 -> 270
4371
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4372
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4373
Cov: 270 -> 270
Cov: 270 -> 270
4374
Cov: 270 -> 270
Cov: 270 -> 270
4375
Cov: 270 -> 270
Cov: 270 -> 270
4376
Cov: 270 -> 270
Cov: 270 -> 270
4377
Cov: 270 -> 270
Cov: 270 -> 270
4378
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4379
Cov: 270 -> 270
Cov: 270 -> 270
4380
Cov: 270 -> 270
Cov: 270 -> 270
4381
Cov: 270 -> 270
Cov: 270 -> 270
4382
Cov: 270 -> 270
Cov: 270 -> 270
4383
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4384
Cov: 270 -> 270
Cov: 270 -> 270
4385
Cov: 270 -> 270
Cov: 270 -> 270
4386
Cov: 270 -> 270
Cov: 270 -> 270
4387
Cov: 270 -> 277
Cov: 277 -> 277
4388
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'a'"}
4389
Cov: 277 -> 277
Cov: 277 -> 277
4390
Cov: 277 -> 277
Cov: 277 -> 277
4391
Cov: 277 -> 277
Cov: 277 -> 277
4392
Cov: 277 -> 277
Cov: 277 -> 277
4393
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
4394
Cov: 277 -> 283
Cov: 283 -> 283
4395
Cov: 283 -> 283
Cov: 283 -> 283
4396
Cov: 283 -> 283
Cov: 283 -> 283
4397
Cov: 283 -> 283
Cov: 283 -> 283
4398
Cov: 283 -> 360
Cov: 360 -> 360
4399
Cov: 360 -> 360
Cov: 360 -> 360
4400
Cov: 360 -> 360
Cov: 360 -> 360
4401
Cov: 360 -> 360
Cov: 360 -> 360
4402
Cov: 360 -> 360
Cov: 360 -> 360
4403
Cov: 360 -> 360
Cov: 360 -> 360
4404
Cov: 360 -> 360
Cov: 360 -> 360
4405
Cov: 360 -> 383
Cov: 383 -> 383
4406
Cov: 383 -> 384
Cov: 384 -> 384
4407
Cov: 384 -> 384
Cov: 384 -> 384
4408
Cov: 384 -> 384
Cov: 384 -> 384
4409
Cov: 384 -> 389
Cov: 389 -> 389
4410
Cov: 389 -> 389
Cov: 389 -> 389
4411
Cov: 389 -> 389
Cov: 389 -> 389
4412
Cov: 389 -> 389
Cov: 389 -> 389
4413
Cov: 389 -> 389
Cov: 389 -> 389
4414
Cov: 389 -> 389
Cov: 389 -> 389
4415
Cov: 389 -> 389
Cov: 389 -> 389
4416
Cov: 389 -> 389
Cov: 389 -> 389
4417
Cov: 389 -> 389
Cov: 389 -> 389
4418
Cov: 389 -> 389
Cov: 389 -> 389
4419
Cov: 389 -> 389
Cov: 389 -> 389
4420
Cov: 389 -> 389
Cov: 389 -> 389
4421
Cov: 389 -> 389
Cov: 389 -> 389
4422
Cov: 389 -> 389
Cov: 389 -> 389
4423
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4424
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4425
Cov: 389 -> 390
Cov: 390 -> 390
4426
Cov: 390 -> 391
Cov: 391 -> 391
4427
Cov: 391 -> 391
Cov: 391 -> 391
4428
Cov: 391 -> 391
Cov: 391 -> 391
4429
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
4430
Cov: 391 -> 392
Cov: 392 -> 392
4431
Cov: 392 -> 396
Cov: 396 -> 396
4432
Cov: 396 -> 396
Cov: 396 -> 396
4433
Cov: 396 -> 396
Cov: 396 -> 396
4434
Cov: 396 -> 396
Cov: 396 -> 396
4435
Cov: 396 -> 413
Cov: 413 -> 413
4436
Cov: 413 -> 413
Cov: 413 -> 413
4437
Cov: 413 -> 413
Cov: 413 -> 413
4438
Cov: 413 -> 414
Cov: 414 -> 414
4439
Cov: 414 -> 415
Cov: 415 -> 415
4440
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
4441
{"exception": "NameError", "msg": "name 'math' is not defined"}
4442
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
4443
Cov: 415 -> 416
Cov: 416 -> 416
4444
Cov: 416 -> 416
Cov: 416 -> 416
4445
Cov: 416 -> 416
Cov: 416 -> 416
4446
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[4611686018427387903, 16]"}
4447
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 7)"}
4448
Cov: 416 -> 416
Cov: 416 -> 416
4449
Cov: 416 -> 416
Cov: 416 -> 416
4450
Cov: 416 -> 416
Cov: 416 -> 416
4451
Cov: 416 -> 416
Cov: 416 -> 416
4452
Cov: 416 -> 416
Cov: 416 -> 416
4453
Cov: 416 -> 416
Cov: 416 -> 416
4454
Cov: 416 -> 416
Cov: 416 -> 416
4455
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
4456
Cov: 416 -> 416
Cov: 416 -> 416
4457
Cov: 416 -> 416
Cov: 416 -> 416
4458
Cov: 416 -> 416
Cov: 416 -> 416
4459
Cov: 416 -> 416
Cov: 416 -> 416
4460
Cov: 416 -> 416
Cov: 416 -> 416
4461
Cov: 416 -> 416
Cov: 416 -> 416
4462
Cov: 416 -> 419
Cov: 419 -> 419
4463
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4464
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4465
Cov: 419 -> 419
Cov: 419 -> 419
4466
Cov: 419 -> 419
Cov: 419 -> 419
4467
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'config'"}
4468
Cov: 419 -> 419
Cov: 419 -> 419
4469
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Sqrt'"}
4470
{"exception": "SyntaxError", "msg": "closing parenthesis ']' does not match opening parenthesis '(' (<string>, line 5)"}
4471
Cov: 419 -> 419
Cov: 419 -> 419
4472
Cov: 419 -> 419
Cov: 419 -> 419
4473
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
4474
{"exception": "RuntimeError", "msg": "The size of tensor a (66) must match the size of tensor b (64) at non-singleton dimension 3"}
4475
Cov: 419 -> 1425
Cov: 1425 -> 1425
4476
Cov: 1425 -> 1462
Cov: 1462 -> 1462
4477
Cov: 1462 -> 1462
Cov: 1462 -> 1462
4478
Cov: 1462 -> 1462
Cov: 1462 -> 1462
4479
Cov: 1462 -> 1462
Cov: 1462 -> 1462
4480
{"exception": "ZeroDivisionError", "msg": "integer division or modulo by zero"}
4481
{"exception": "TypeError", "msg": "unsupported operand type(s) for %: 'tuple' and 'int'"}
4482
Cov: 1462 -> 1463
Cov: 1463 -> 1463
4483
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4484
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4485
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4486
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4487
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4488
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4489
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4490
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
4491
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4492
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4493
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4494
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4495
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4496
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4497
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4498
Cov: 1463 -> 1463
Cov: 1463 -> 1463
4499
{"exception": "NameError", "msg": "name 'math' is not defined"}
4500
Cov: 1463 -> 1468
Cov: 1468 -> 1468
4501
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4502
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4503
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4504
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4505
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4506
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4507
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4508
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4509
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4510
{"exception": "NameError", "msg": "name 'm1' is not defined"}
4511
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4512
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4513
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4514
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4515
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4516
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4517
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
4518
Cov: 1468 -> 1468
Cov: 1468 -> 1468
4519
Cov: 1468 -> 1469
Cov: 1469 -> 1469
4520
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4521
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4522
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4523
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4524
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4525
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4526
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4527
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4528
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4529
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4530
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4531
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4532
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4533
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4534
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4535
Cov: 1469 -> 1469
Cov: 1469 -> 1469
4536
{"exception": "NameError", "msg": "name 'init_weights' is not defined"}
4537
Cov: 1469 -> 1476
Cov: 1476 -> 1476
4538
Cov: 1476 -> 1493
Cov: 1493 -> 1493
4539
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4540
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4541
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4542
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4543
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4544
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4545
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4546
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4547
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4548
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4549
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4550
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4551
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4552
Cov: 1493 -> 1493
Cov: 1493 -> 1493
4553
Cov: 1493 -> 1503
Cov: 1503 -> 1503
4554
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'kernel_size'"}
4555
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4556
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4557
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4558
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4559
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4560
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4561
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4562
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4563
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4564
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'n'"}
4565
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4566
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4567
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4568
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4569
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4570
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4571
Cov: 1503 -> 1503
Cov: 1503 -> 1503
4572
Cov: 1503 -> 1504
Cov: 1504 -> 1504
4573
Cov: 1504 -> 1504
Cov: 1504 -> 1504
4574
Cov: 1504 -> 1504
Cov: 1504 -> 1504
4575
Cov: 1504 -> 1504
Cov: 1504 -> 1504
4576
Cov: 1504 -> 1531
Cov: 1531 -> 1531
4577
Cov: 1531 -> 1531
Cov: 1531 -> 1531
4578
Cov: 1531 -> 1545
Cov: 1545 -> 1545
4579
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4580
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4581
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4582
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4583
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4584
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4585
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4586
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4587
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4588
Cov: 1545 -> 1545
Cov: 1545 -> 1545
4589
Cov: 1545 -> 1549
Cov: 1549 -> 1549
4590
{"exception": "NameError", "msg": "name 'np' is not defined"}
4591
Cov: 1549 -> 1552
Cov: 1552 -> 1552
4592
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4593
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4594
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4595
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4596
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4597
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4598
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'num_queries', 'num_keys', and 'num_values'"}
4599
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4600
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4601
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4602
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4603
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4604
Cov: 1552 -> 1552
Cov: 1552 -> 1552
4605
Cov: 1552 -> 1565
Cov: 1565 -> 1565
4606
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4607
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4608
{"exception": "NameError", "msg": "name 'Conv2d' is not defined"}
4609
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4610
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4611
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4612
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4613
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4614
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4615
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4616
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4617
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4618
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4619
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4620
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4621
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4622
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4623
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4624
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4625
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4626
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4627
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4628
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4629
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4630
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4631
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4632
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4633
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
4634
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4635
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4636
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4637
Cov: 1565 -> 1565
Cov: 1565 -> 1565
4638
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
4639
Cov: 1565 -> 1582
Cov: 1582 -> 1582
4640
Cov: 1582 -> 1582
Cov: 1582 -> 1582
4641
Cov: 1582 -> 1583
Cov: 1583 -> 1583
4642
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4643
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4644
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4645
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4646
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4647
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4648
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4649
Cov: 1583 -> 1583
Cov: 1583 -> 1583
4650
Cov: 1583 -> 1595
Cov: 1595 -> 1595
4651
Cov: 1595 -> 1595
Cov: 1595 -> 1595
4652
Cov: 1595 -> 1595
Cov: 1595 -> 1595
4653
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
4654
Cov: 1595 -> 1597
Cov: 1597 -> 1597
4655
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'n'"}
4656
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4657
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4658
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4659
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4660
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4661
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4662
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4663
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4664
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4665
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4666
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4667
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4668
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'min', 'max', 'min_2', and 'max_2'"}
4669
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4670
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4671
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4672
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4673
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4674
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4675
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4676
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4677
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4678
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4679
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4680
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4681
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4682
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4683
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4684
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4685
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'n_head'"}
4686
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4687
{"exception": "NameError", "msg": "name 'v1' is not defined"}
4688
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4689
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4690
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4691
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4692
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4693
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4694
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4695
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4696
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4697
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4698
Cov: 1597 -> 1597
Cov: 1597 -> 1597
4699
{"exception": "AssertionError", "msg": "The values for attribute 'shape' do not match: torch.Size([1, 3]) != torch.Size([1, 1])."}
4700
Cov: 1597 -> 1989
Cov: 1989 -> 1989
4701
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4702
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
4703
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4704
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4705
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4706
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4707
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4708
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4709
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4710
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4711
{"exception": "NameError", "msg": "name 'seq_length' is not defined"}
4712
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4713
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4714
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4715
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4716
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4717
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4718
Cov: 1989 -> 1989
Cov: 1989 -> 1989
4719
{"exception": "NameError", "msg": "name 'SelfAttention' is not defined"}
4720
Cov: 1989 -> 1990
Cov: 1990 -> 1990
4721
Cov: 1990 -> 1990
Cov: 1990 -> 1990
4722
Cov: 1990 -> 1990
Cov: 1990 -> 1990
4723
Cov: 1990 -> 1990
Cov: 1990 -> 1990
4724
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
4725
Cov: 1990 -> 194
Cov: 194 -> 194
4726
Cov: 194 -> 195
Cov: 195 -> 195
4727
Cov: 195 -> 218
Cov: 218 -> 218
4728
Cov: 218 -> 218
Cov: 218 -> 218
4729
Cov: 218 -> 218
Cov: 218 -> 218
4730
Cov: 218 -> 218
Cov: 218 -> 218
4731
Cov: 218 -> 222
Cov: 222 -> 222
4732
Cov: 222 -> 222
Cov: 222 -> 222
4733
Cov: 222 -> 222
Cov: 222 -> 222
4734
Cov: 222 -> 222
Cov: 222 -> 222
4735
Cov: 222 -> 222
Cov: 222 -> 222
4736
Cov: 222 -> 222
Cov: 222 -> 222
4737
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4738
Cov: 222 -> 223
Cov: 223 -> 223
4739
Cov: 223 -> 223
Cov: 223 -> 223
4740
Cov: 223 -> 223
Cov: 223 -> 223
4741
Cov: 223 -> 228
Cov: 228 -> 228
4742
Cov: 228 -> 228
Cov: 228 -> 228
4743
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
4744
Cov: 228 -> 228
Cov: 228 -> 228
4745
Cov: 228 -> 228
Cov: 228 -> 228
4746
Cov: 228 -> 228
Cov: 228 -> 228
4747
Cov: 228 -> 228
Cov: 228 -> 228
4748
Cov: 228 -> 228
Cov: 228 -> 228
4749
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 5)"}
4750
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4751
Cov: 228 -> 228
Cov: 228 -> 228
4752
Cov: 228 -> 228
Cov: 228 -> 228
4753
Cov: 228 -> 228
Cov: 228 -> 228
4754
Cov: 228 -> 228
Cov: 228 -> 228
4755
Cov: 228 -> 228
Cov: 228 -> 228
4756
Cov: 228 -> 228
Cov: 228 -> 228
4757
Cov: 228 -> 241
Cov: 241 -> 241
4758
Cov: 241 -> 241
Cov: 241 -> 241
4759
Cov: 241 -> 273
Cov: 273 -> 273
4760
Cov: 273 -> 273
Cov: 273 -> 273
4761
Cov: 273 -> 273
Cov: 273 -> 273
4762
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'weight' and 'bias'"}
4763
Cov: 273 -> 288
Cov: 288 -> 288
4764
Cov: 288 -> 292
Cov: 292 -> 292
4765
Cov: 292 -> 308
Cov: 308 -> 308
4766
Cov: 308 -> 308
Cov: 308 -> 308
4767
Cov: 308 -> 308
Cov: 308 -> 308
4768
Cov: 308 -> 308
Cov: 308 -> 308
4769
Cov: 308 -> 308
Cov: 308 -> 308
4770
Cov: 308 -> 308
Cov: 308 -> 308
4771
Cov: 308 -> 414
Cov: 414 -> 414
4772
Cov: 414 -> 429
Cov: 429 -> 429
4773
Cov: 429 -> 429
Cov: 429 -> 429
4774
Cov: 429 -> 429
Cov: 429 -> 429
4775
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4776
Cov: 429 -> 429
Cov: 429 -> 429
4777
Cov: 429 -> 429
Cov: 429 -> 429
4778
Cov: 429 -> 429
Cov: 429 -> 429
4779
Cov: 429 -> 429
Cov: 429 -> 429
4780
Cov: 429 -> 429
Cov: 429 -> 429
4781
Cov: 429 -> 429
Cov: 429 -> 429
4782
Cov: 429 -> 429
Cov: 429 -> 429
4783
Cov: 429 -> 429
Cov: 429 -> 429
4784
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4785
Cov: 429 -> 429
Cov: 429 -> 429
4786
Cov: 429 -> 430
Cov: 430 -> 430
4787
Cov: 430 -> 430
Cov: 430 -> 430
4788
Cov: 430 -> 430
Cov: 430 -> 430
4789
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4790
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4791
Cov: 430 -> 431
Cov: 431 -> 431
4792
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
4793
Cov: 431 -> 21
Cov: 21 -> 21
4794
Cov: 21 -> 22
Cov: 22 -> 22
4795
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'running_mean'"}
4796
Cov: 22 -> 247
Cov: 247 -> 247
4797
Cov: 247 -> 278
Cov: 278 -> 278
4798
Cov: 278 -> 295
Cov: 295 -> 295
4799
Cov: 295 -> 318
Cov: 318 -> 318
4800
Cov: 318 -> 318
Cov: 318 -> 318
4801
Cov: 318 -> 320
Cov: 320 -> 320
4802
Cov: 320 -> 320
Cov: 320 -> 320
4803
{"exception": "TypeError", "msg": "reshape(): argument 'input' (position 1) must be Tensor, not int"}
4804
Cov: 320 -> 321
Cov: 321 -> 321
4805
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'N'"}
4806
{"exception": "NameError", "msg": "name 'negative_slope' is not defined"}
4807
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'input_dim'"}
4808
Cov: 321 -> 321
Cov: 321 -> 321
4809
Cov: 321 -> 321
Cov: 321 -> 321
4810
Cov: 321 -> 321
Cov: 321 -> 321
4811
Cov: 321 -> 321
Cov: 321 -> 321
4812
Cov: 321 -> 321
Cov: 321 -> 321
4813
Cov: 321 -> 321
Cov: 321 -> 321
4814
Cov: 321 -> 321
Cov: 321 -> 321
4815
Cov: 321 -> 321
Cov: 321 -> 321
4816
Cov: 321 -> 321
Cov: 321 -> 321
4817
Cov: 321 -> 321
Cov: 321 -> 321
4818
Cov: 321 -> 321
Cov: 321 -> 321
4819
Cov: 321 -> 326
Cov: 326 -> 326
4820
Cov: 326 -> 353
Cov: 353 -> 353
4821
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
4822
Cov: 353 -> 353
Cov: 353 -> 353
4823
Cov: 353 -> 354
Cov: 354 -> 354
4824
Cov: 354 -> 354
Cov: 354 -> 354
4825
Cov: 354 -> 354
Cov: 354 -> 354
4826
Cov: 354 -> 354
Cov: 354 -> 354
4827
Cov: 354 -> 355
Cov: 355 -> 355
4828
Cov: 355 -> 355
Cov: 355 -> 355
4829
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4830
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4831
Cov: 355 -> 355
Cov: 355 -> 355
4832
Cov: 355 -> 366
Cov: 366 -> 366
4833
Cov: 366 -> 400
Cov: 400 -> 400
4834
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim_model'"}
4835
Cov: 400 -> 415
Cov: 415 -> 415
4836
Cov: 415 -> 416
Cov: 416 -> 416
4837
Cov: 416 -> 416
Cov: 416 -> 416
4838
Cov: 416 -> 416
Cov: 416 -> 416
4839
Cov: 416 -> 489
Cov: 489 -> 489
4840
Cov: 489 -> 490
Cov: 490 -> 490
4841
Cov: 490 -> 490
Cov: 490 -> 490
4842
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'input_shape'"}
4843
Cov: 490 -> 490
Cov: 490 -> 490
4844
Cov: 490 -> 490
Cov: 490 -> 490
4845
Cov: 490 -> 490
Cov: 490 -> 490
4846
Cov: 490 -> 490
Cov: 490 -> 490
4847
Cov: 490 -> 490
Cov: 490 -> 490
4848
Cov: 490 -> 490
Cov: 490 -> 490
4849
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'k'"}
4850
Cov: 490 -> 493
Cov: 493 -> 493
4851
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
4852
Cov: 493 -> 495
Cov: 495 -> 495
4853
Cov: 495 -> 495
Cov: 495 -> 495
4854
Cov: 495 -> 495
Cov: 495 -> 495
4855
Cov: 495 -> 495
Cov: 495 -> 495
4856
Cov: 495 -> 495
Cov: 495 -> 495
4857
Cov: 495 -> 495
Cov: 495 -> 495
4858
Cov: 495 -> 495
Cov: 495 -> 495
4859
Cov: 495 -> 495
Cov: 495 -> 495
4860
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4861
Cov: 495 -> 495
Cov: 495 -> 495
4862
Cov: 495 -> 495
Cov: 495 -> 495
4863
Cov: 495 -> 495
Cov: 495 -> 495
4864
Cov: 495 -> 495
Cov: 495 -> 495
4865
Cov: 495 -> 495
Cov: 495 -> 495
4866
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
4867
Cov: 495 -> 495
Cov: 495 -> 495
4868
Cov: 495 -> 495
Cov: 495 -> 495
4869
Cov: 495 -> 495
Cov: 495 -> 495
4870
Cov: 495 -> 495
Cov: 495 -> 495
4871
Cov: 495 -> 495
Cov: 495 -> 495
4872
Cov: 495 -> 495
Cov: 495 -> 495
4873
Cov: 495 -> 495
Cov: 495 -> 495
4874
Cov: 495 -> 495
Cov: 495 -> 495
4875
Cov: 495 -> 495
Cov: 495 -> 495
4876
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'a'"}
4877
Cov: 495 -> 495
Cov: 495 -> 495
4878
Cov: 495 -> 495
Cov: 495 -> 495
4879
Cov: 495 -> 495
Cov: 495 -> 495
4880
Cov: 495 -> 495
Cov: 495 -> 495
4881
Cov: 495 -> 495
Cov: 495 -> 495
4882
Cov: 495 -> 495
Cov: 495 -> 495
4883
Cov: 495 -> 495
Cov: 495 -> 495
4884
Cov: 495 -> 495
Cov: 495 -> 495
4885
Cov: 495 -> 496
Cov: 496 -> 496
4886
Cov: 496 -> 497
Cov: 497 -> 497
4887
Cov: 497 -> 497
Cov: 497 -> 497
4888
Cov: 497 -> 497
Cov: 497 -> 497
4889
Cov: 497 -> 497
Cov: 497 -> 497
4890
Cov: 497 -> 497
Cov: 497 -> 497
4891
Cov: 497 -> 497
Cov: 497 -> 497
4892
Cov: 497 -> 498
Cov: 498 -> 498
4893
Cov: 498 -> 512
Cov: 512 -> 512
4894
Cov: 512 -> 515
Cov: 515 -> 515
4895
Cov: 515 -> 515
Cov: 515 -> 515
4896
Cov: 515 -> 515
Cov: 515 -> 515
4897
Cov: 515 -> 515
Cov: 515 -> 515
4898
Cov: 515 -> 515
Cov: 515 -> 515
4899
{"exception": "NameError", "msg": "name 'Linear' is not defined"}
4900
Cov: 515 -> 515
Cov: 515 -> 515
4901
Cov: 515 -> 515
Cov: 515 -> 515
4902
Cov: 515 -> 515
Cov: 515 -> 515
4903
Cov: 515 -> 515
Cov: 515 -> 515
4904
Cov: 515 -> 515
Cov: 515 -> 515
4905
Cov: 515 -> 515
Cov: 515 -> 515
4906
Cov: 515 -> 515
Cov: 515 -> 515
4907
Cov: 515 -> 515
Cov: 515 -> 515
4908
Cov: 515 -> 515
Cov: 515 -> 515
4909
Cov: 515 -> 515
Cov: 515 -> 515
4910
Cov: 515 -> 515
Cov: 515 -> 515
4911
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4912
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
4913
Cov: 515 -> 516
Cov: 516 -> 516
4914
Cov: 516 -> 517
Cov: 517 -> 517
4915
Cov: 517 -> 517
Cov: 517 -> 517
4916
Cov: 517 -> 517
Cov: 517 -> 517
4917
Cov: 517 -> 517
Cov: 517 -> 517
4918
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4919
Cov: 517 -> 517
Cov: 517 -> 517
4920
Cov: 517 -> 517
Cov: 517 -> 517
4921
Cov: 517 -> 517
Cov: 517 -> 517
4922
Cov: 517 -> 517
Cov: 517 -> 517
4923
Cov: 517 -> 517
Cov: 517 -> 517
4924
Cov: 517 -> 517
Cov: 517 -> 517
4925
Cov: 517 -> 517
Cov: 517 -> 517
4926
Cov: 517 -> 517
Cov: 517 -> 517
4927
Cov: 517 -> 517
Cov: 517 -> 517
4928
Cov: 517 -> 517
Cov: 517 -> 517
4929
Cov: 517 -> 517
Cov: 517 -> 517
4930
Cov: 517 -> 517
Cov: 517 -> 517
4931
Cov: 517 -> 517
Cov: 517 -> 517
4932
Cov: 517 -> 517
Cov: 517 -> 517
4933
{"exception": "ValueError", "msg": "not enough values to unpack (expected 5, got 1)"}
4934
Cov: 517 -> 534
Cov: 534 -> 534
4935
Cov: 534 -> 534
Cov: 534 -> 534
4936
Cov: 534 -> 534
Cov: 534 -> 534
4937
Cov: 534 -> 534
Cov: 534 -> 534
4938
Cov: 534 -> 534
Cov: 534 -> 534
4939
Cov: 534 -> 534
Cov: 534 -> 534
4940
Cov: 534 -> 534
Cov: 534 -> 534
4941
Cov: 534 -> 534
Cov: 534 -> 534
4942
Cov: 534 -> 534
Cov: 534 -> 534
4943
Cov: 534 -> 534
Cov: 534 -> 534
4944
Cov: 534 -> 534
Cov: 534 -> 534
4945
Cov: 534 -> 549
Cov: 549 -> 549
4946
Cov: 549 -> 549
Cov: 549 -> 549
4947
Cov: 549 -> 549
Cov: 549 -> 549
4948
Cov: 549 -> 549
Cov: 549 -> 549
4949
Cov: 549 -> 549
Cov: 549 -> 549
4950
Cov: 549 -> 549
Cov: 549 -> 549
4951
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4952
{"exception": "NameError", "msg": "name 'Model' is not defined"}
4953
Cov: 549 -> 549
Cov: 549 -> 549
4954
Cov: 549 -> 549
Cov: 549 -> 549
4955
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim' and 'num_heads'"}
4956
{"exception": "NameError", "msg": "name 'Param' is not defined"}
4957
Cov: 549 -> 549
Cov: 549 -> 549
4958
Cov: 549 -> 549
Cov: 549 -> 549
4959
Cov: 549 -> 549
Cov: 549 -> 549
4960
Cov: 549 -> 549
Cov: 549 -> 549
4961
Cov: 549 -> 549
Cov: 549 -> 549
4962
Cov: 549 -> 549
Cov: 549 -> 549
4963
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'm'"}
4964
{"exception": "NameError", "msg": "name 'SoftmaxDotAttention' is not defined"}
4965
Cov: 549 -> 549
Cov: 549 -> 549
4966
Cov: 549 -> 549
Cov: 549 -> 549
4967
Cov: 549 -> 549
Cov: 549 -> 549
4968
Cov: 549 -> 549
Cov: 549 -> 549
4969
Cov: 549 -> 549
Cov: 549 -> 549
4970
Cov: 549 -> 549
Cov: 549 -> 549
4971
Cov: 549 -> 549
Cov: 549 -> 549
4972
Cov: 549 -> 549
Cov: 549 -> 549
4973
Cov: 549 -> 549
Cov: 549 -> 549
4974
Cov: 549 -> 549
Cov: 549 -> 549
4975
Cov: 549 -> 549
Cov: 549 -> 549
4976
Cov: 549 -> 549
Cov: 549 -> 549
4977
Cov: 549 -> 549
Cov: 549 -> 549
4978
Cov: 549 -> 549
Cov: 549 -> 549
4979
Cov: 549 -> 549
Cov: 549 -> 549
4980
Cov: 549 -> 549
Cov: 549 -> 549
4981
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4982
{"exception": "NameError", "msg": "name 'nn' is not defined"}
4983
Cov: 549 -> 549
Cov: 549 -> 549
4984
Cov: 549 -> 549
Cov: 549 -> 549
4985
Cov: 549 -> 549
Cov: 549 -> 549
4986
Cov: 549 -> 549
Cov: 549 -> 549
4987
Cov: 549 -> 549
Cov: 549 -> 549
4988
Cov: 549 -> 549
Cov: 549 -> 549
4989
Cov: 549 -> 549
Cov: 549 -> 549
4990
Cov: 549 -> 549
Cov: 549 -> 549
4991
Cov: 549 -> 549
Cov: 549 -> 549
4992
Cov: 549 -> 549
Cov: 549 -> 549
4993
Cov: 549 -> 549
Cov: 549 -> 549
4994
Cov: 549 -> 549
Cov: 549 -> 549
4995
Cov: 549 -> 549
Cov: 549 -> 549
4996
Cov: 549 -> 549
Cov: 549 -> 549
4997
Cov: 549 -> 549
Cov: 549 -> 549
4998
{"exception": "NameError", "msg": "name 'self' is not defined"}
4999
Cov: 549 -> 549
Cov: 549 -> 549
5000
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5001
Cov: 549 -> 549
Cov: 549 -> 549
5002
Cov: 549 -> 549
Cov: 549 -> 549
5003
Cov: 549 -> 549
Cov: 549 -> 549
5004
Cov: 549 -> 549
Cov: 549 -> 549
5005
{"exception": "TypeError", "msg": "must be real number, not ellipsis"}
5006
Cov: 549 -> 549
Cov: 549 -> 549
5007
Cov: 549 -> 549
Cov: 549 -> 549
5008
Cov: 549 -> 549
Cov: 549 -> 549
5009
Cov: 549 -> 571
Cov: 571 -> 571
5010
Cov: 571 -> 572
Cov: 572 -> 572
5011
Cov: 572 -> 572
Cov: 572 -> 572
5012
Cov: 572 -> 572
Cov: 572 -> 572
5013
Cov: 572 -> 589
Cov: 589 -> 589
5014
Cov: 589 -> 589
Cov: 589 -> 589
5015
{"exception": "NameError", "msg": "name 'Layer1' is not defined"}
5016
Cov: 589 -> 603
Cov: 603 -> 603
5017
Cov: 603 -> 603
Cov: 603 -> 603
5018
Cov: 603 -> 603
Cov: 603 -> 603
5019
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
5020
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5021
Cov: 603 -> 603
Cov: 603 -> 603
5022
Cov: 603 -> 603
Cov: 603 -> 603
5023
Cov: 603 -> 603
Cov: 603 -> 603
5024
Cov: 603 -> 603
Cov: 603 -> 603
5025
Cov: 603 -> 603
Cov: 603 -> 603
5026
Cov: 603 -> 603
Cov: 603 -> 603
5027
Cov: 603 -> 603
Cov: 603 -> 603
5028
Cov: 603 -> 603
Cov: 603 -> 603
5029
Cov: 603 -> 603
Cov: 603 -> 603
5030
Cov: 603 -> 603
Cov: 603 -> 603
5031
Cov: 603 -> 603
Cov: 603 -> 603
5032
Cov: 603 -> 603
Cov: 603 -> 603
5033
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5034
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5035
Cov: 603 -> 603
Cov: 603 -> 603
5036
Cov: 603 -> 603
Cov: 603 -> 603
5037
Cov: 603 -> 603
Cov: 603 -> 603
5038
Cov: 603 -> 603
Cov: 603 -> 603
5039
Cov: 603 -> 603
Cov: 603 -> 603
5040
{"exception": "NameError", "msg": "name 'F' is not defined"}
5041
Cov: 603 -> 603
Cov: 603 -> 603
5042
Cov: 603 -> 604
Cov: 604 -> 604
5043
Cov: 604 -> 604
Cov: 604 -> 604
5044
Cov: 604 -> 604
Cov: 604 -> 604
5045
Cov: 604 -> 604
Cov: 604 -> 604
5046
Cov: 604 -> 605
Cov: 605 -> 605
5047
Cov: 605 -> 605
Cov: 605 -> 605
5048
Cov: 605 -> 605
Cov: 605 -> 605
5049
{"exception": "RuntimeError", "msg": "mat1 and mat2 must have the same dtype, but got Long and Float"}
5050
Cov: 605 -> 613
Cov: 613 -> 613
5051
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'dim', 'num_heads', and 'dropout_p'"}
5052
{"exception": "NameError", "msg": "name 'math' is not defined"}
5053
Cov: 613 -> 613
Cov: 613 -> 613
5054
Cov: 613 -> 613
Cov: 613 -> 613
5055
Cov: 613 -> 613
Cov: 613 -> 613
5056
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5057
Cov: 613 -> 613
Cov: 613 -> 613
5058
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_size' and 'out_size'"}
5059
Cov: 613 -> 613
Cov: 613 -> 613
5060
Cov: 613 -> 613
Cov: 613 -> 613
5061
Cov: 613 -> 613
Cov: 613 -> 613
5062
{"exception": "NameError", "msg": "name 'jit' is not defined"}
5063
Cov: 613 -> 613
Cov: 613 -> 613
5064
Cov: 613 -> 613
Cov: 613 -> 613
5065
Cov: 613 -> 613
Cov: 613 -> 613
5066
Cov: 613 -> 613
Cov: 613 -> 613
5067
Cov: 613 -> 613
Cov: 613 -> 613
5068
Cov: 613 -> 613
Cov: 613 -> 613
5069
Cov: 613 -> 613
Cov: 613 -> 613
5070
Cov: 613 -> 613
Cov: 613 -> 613
5071
Cov: 613 -> 613
Cov: 613 -> 613
5072
Cov: 613 -> 613
Cov: 613 -> 613
5073
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5074
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5075
Cov: 613 -> 613
Cov: 613 -> 613
5076
Cov: 613 -> 613
Cov: 613 -> 613
5077
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'config'"}
5078
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'd_model', 'nhead', and 'dim_feedforward'"}
5079
Cov: 613 -> 613
Cov: 613 -> 613
5080
Cov: 613 -> 613
Cov: 613 -> 613
5081
Cov: 613 -> 613
Cov: 613 -> 613
5082
Cov: 613 -> 613
Cov: 613 -> 613
5083
Cov: 613 -> 613
Cov: 613 -> 613
5084
Cov: 613 -> 613
Cov: 613 -> 613
5085
Cov: 613 -> 613
Cov: 613 -> 613
5086
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_heads'"}
5087
Cov: 613 -> 613
Cov: 613 -> 613
5088
Cov: 613 -> 613
Cov: 613 -> 613
5089
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
5090
Cov: 613 -> 35
Cov: 35 -> 35
5091
Cov: 35 -> 197
Cov: 197 -> 197
5092
Cov: 197 -> 198
Cov: 198 -> 198
5093
Cov: 198 -> 221
Cov: 221 -> 221
5094
Cov: 221 -> 221
Cov: 221 -> 221
5095
Cov: 221 -> 221
Cov: 221 -> 221
5096
Cov: 221 -> 221
Cov: 221 -> 221
5097
Cov: 221 -> 252
Cov: 252 -> 252
5098
Cov: 252 -> 254
Cov: 254 -> 254
5099
Cov: 254 -> 255
Cov: 255 -> 255
5100
Cov: 255 -> 255
Cov: 255 -> 255
5101
Cov: 255 -> 255
Cov: 255 -> 255
5102
Cov: 255 -> 255
Cov: 255 -> 255
5103
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5104
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5105
Cov: 255 -> 256
Cov: 256 -> 256
5106
Cov: 256 -> 256
Cov: 256 -> 256
5107
Cov: 256 -> 256
Cov: 256 -> 256
5108
Cov: 256 -> 256
Cov: 256 -> 256
5109
Cov: 256 -> 256
Cov: 256 -> 256
5110
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
5111
Cov: 256 -> 256
Cov: 256 -> 256
5112
Cov: 256 -> 256
Cov: 256 -> 256
5113
Cov: 256 -> 256
Cov: 256 -> 256
5114
Cov: 256 -> 256
Cov: 256 -> 256
5115
{"exception": "NameError", "msg": "name 'n' is not defined"}
5116
Cov: 256 -> 261
Cov: 261 -> 261
5117
Cov: 261 -> 261
Cov: 261 -> 261
5118
Cov: 261 -> 261
Cov: 261 -> 261
5119
Cov: 261 -> 261
Cov: 261 -> 261
5120
Cov: 261 -> 262
Cov: 262 -> 262
5121
Cov: 262 -> 262
Cov: 262 -> 262
5122
Cov: 262 -> 262
Cov: 262 -> 262
5123
Cov: 262 -> 262
Cov: 262 -> 262
5124
Cov: 262 -> 262
Cov: 262 -> 262
5125
Cov: 262 -> 262
Cov: 262 -> 262
5126
Cov: 262 -> 262
Cov: 262 -> 262
5127
Cov: 262 -> 262
Cov: 262 -> 262
5128
Cov: 262 -> 262
Cov: 262 -> 262
5129
Cov: 262 -> 275
Cov: 275 -> 275
5130
Cov: 275 -> 275
Cov: 275 -> 275
5131
Cov: 275 -> 292
Cov: 292 -> 292
5132
Cov: 292 -> 292
Cov: 292 -> 292
5133
Cov: 292 -> 292
Cov: 292 -> 292
5134
Cov: 292 -> 292
Cov: 292 -> 292
5135
Cov: 292 -> 292
Cov: 292 -> 292
5136
Cov: 292 -> 292
Cov: 292 -> 292
5137
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5138
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'stride'"}
5139
Cov: 292 -> 292
Cov: 292 -> 292
5140
Cov: 292 -> 292
Cov: 292 -> 292
5141
Cov: 292 -> 295
Cov: 295 -> 295
5142
Cov: 295 -> 316
Cov: 316 -> 316
5143
Cov: 316 -> 316
Cov: 316 -> 316
5144
Cov: 316 -> 316
Cov: 316 -> 316
5145
Cov: 316 -> 316
Cov: 316 -> 316
5146
Cov: 316 -> 316
Cov: 316 -> 316
5147
Cov: 316 -> 316
Cov: 316 -> 316
5148
Cov: 316 -> 316
Cov: 316 -> 316
5149
Cov: 316 -> 316
Cov: 316 -> 316
5150
Cov: 316 -> 316
Cov: 316 -> 316
5151
Cov: 316 -> 316
Cov: 316 -> 316
5152
Cov: 316 -> 321
Cov: 321 -> 321
5153
Cov: 321 -> 321
Cov: 321 -> 321
5154
Cov: 321 -> 321
Cov: 321 -> 321
5155
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5156
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5157
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
5158
Cov: 321 -> 53
Cov: 53 -> 53
5159
{"exception": "SyntaxError", "msg": "unmatched ')' (<string>, line 9)"}
5160
Cov: 53 -> 54
Cov: 54 -> 54
5161
Cov: 54 -> 299
Cov: 299 -> 299
5162
Cov: 299 -> 335
Cov: 335 -> 335
5163
Cov: 335 -> 370
Cov: 370 -> 370
5164
Cov: 370 -> 372
Cov: 372 -> 372
5165
Cov: 372 -> 396
Cov: 396 -> 396
5166
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 5)"}
5167
Cov: 396 -> 396
Cov: 396 -> 396
5168
Cov: 396 -> 396
Cov: 396 -> 396
5169
Cov: 396 -> 400
Cov: 400 -> 400
5170
Cov: 400 -> 400
Cov: 400 -> 400
5171
Cov: 400 -> 403
Cov: 403 -> 403
5172
Cov: 403 -> 403
Cov: 403 -> 403
5173
{"exception": "NameError", "msg": "name 'np' is not defined"}
5174
{"exception": "NameError", "msg": "name 'math' is not defined"}
5175
Cov: 403 -> 404
Cov: 404 -> 404
5176
Cov: 404 -> 404
Cov: 404 -> 404
5177
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[1, 2305843009213693952, 196608]"}
5178
Cov: 404 -> 404
Cov: 404 -> 404
5179
Cov: 404 -> 418
Cov: 418 -> 418
5180
Cov: 418 -> 419
Cov: 419 -> 419
5181
Cov: 419 -> 421
Cov: 421 -> 421
5182
Cov: 421 -> 421
Cov: 421 -> 421
5183
Cov: 421 -> 421
Cov: 421 -> 421
5184
Cov: 421 -> 421
Cov: 421 -> 421
5185
Cov: 421 -> 421
Cov: 421 -> 421
5186
Cov: 421 -> 421
Cov: 421 -> 421
5187
Cov: 421 -> 421
Cov: 421 -> 421
5188
Cov: 421 -> 421
Cov: 421 -> 421
5189
Cov: 421 -> 421
Cov: 421 -> 421
5190
Cov: 421 -> 421
Cov: 421 -> 421
5191
Cov: 421 -> 421
Cov: 421 -> 421
5192
Cov: 421 -> 421
Cov: 421 -> 421
5193
Cov: 421 -> 421
Cov: 421 -> 421
5194
Cov: 421 -> 421
Cov: 421 -> 421
5195
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5196
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5197
Cov: 421 -> 425
Cov: 425 -> 425
5198
Cov: 425 -> 425
Cov: 425 -> 425
5199
Cov: 425 -> 501
Cov: 501 -> 501
5200
Cov: 501 -> 501
Cov: 501 -> 501
5201
Cov: 501 -> 501
Cov: 501 -> 501
5202
Cov: 501 -> 501
Cov: 501 -> 501
5203
Cov: 501 -> 502
Cov: 502 -> 502
5204
Cov: 502 -> 510
Cov: 510 -> 510
5205
Cov: 510 -> 510
Cov: 510 -> 510
5206
Cov: 510 -> 510
Cov: 510 -> 510
5207
Cov: 510 -> 510
Cov: 510 -> 510
5208
Cov: 510 -> 510
Cov: 510 -> 510
5209
Cov: 510 -> 510
Cov: 510 -> 510
5210
Cov: 510 -> 510
Cov: 510 -> 510
5211
Cov: 510 -> 510
Cov: 510 -> 510
5212
Cov: 510 -> 510
Cov: 510 -> 510
5213
Cov: 510 -> 510
Cov: 510 -> 510
5214
Cov: 510 -> 526
Cov: 526 -> 526
5215
Cov: 526 -> 526
Cov: 526 -> 526
5216
Cov: 526 -> 530
Cov: 530 -> 530
5217
{"exception": "TypeError", "msg": "sigmoid() missing 1 required positional arguments: \"input\""}
5218
Cov: 530 -> 530
Cov: 530 -> 530
5219
Cov: 530 -> 532
Cov: 532 -> 532
5220
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
5221
Cov: 532 -> 532
Cov: 532 -> 532
5222
Cov: 532 -> 532
Cov: 532 -> 532
5223
Cov: 532 -> 533
Cov: 533 -> 533
5224
Cov: 533 -> 533
Cov: 533 -> 533
5225
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5226
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5227
Cov: 533 -> 533
Cov: 533 -> 533
5228
Cov: 533 -> 533
Cov: 533 -> 533
5229
Cov: 533 -> 533
Cov: 533 -> 533
5230
Cov: 533 -> 533
Cov: 533 -> 533
5231
Cov: 533 -> 533
Cov: 533 -> 533
5232
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
5233
Cov: 533 -> 533
Cov: 533 -> 533
5234
Cov: 533 -> 533
Cov: 533 -> 533
5235
Cov: 533 -> 533
Cov: 533 -> 533
5236
Cov: 533 -> 533
Cov: 533 -> 533
5237
Cov: 533 -> 533
Cov: 533 -> 533
5238
Cov: 533 -> 533
Cov: 533 -> 533
5239
Cov: 533 -> 533
Cov: 533 -> 533
5240
Cov: 533 -> 533
Cov: 533 -> 533
5241
Cov: 533 -> 533
Cov: 533 -> 533
5242
Cov: 533 -> 537
Cov: 537 -> 537
5243
Cov: 537 -> 537
Cov: 537 -> 537
5244
Cov: 537 -> 537
Cov: 537 -> 537
5245
Cov: 537 -> 537
Cov: 537 -> 537
5246
Cov: 537 -> 537
Cov: 537 -> 537
5247
Cov: 537 -> 537
Cov: 537 -> 537
5248
Cov: 537 -> 537
Cov: 537 -> 537
5249
Cov: 537 -> 540
Cov: 540 -> 540
5250
Cov: 540 -> 540
Cov: 540 -> 540
5251
Cov: 540 -> 554
Cov: 554 -> 554
5252
Cov: 554 -> 554
Cov: 554 -> 554
5253
Cov: 554 -> 554
Cov: 554 -> 554
5254
Cov: 554 -> 554
Cov: 554 -> 554
5255
Cov: 554 -> 554
Cov: 554 -> 554
5256
Cov: 554 -> 554
Cov: 554 -> 554
5257
Cov: 554 -> 554
Cov: 554 -> 554
5258
Cov: 554 -> 554
Cov: 554 -> 554
5259
{"exception": "NameError", "msg": "name 'Layer1' is not defined"}
5260
{"exception": "NameError", "msg": "name 'Layer1' is not defined"}
5261
Cov: 554 -> 554
Cov: 554 -> 554
5262
Cov: 554 -> 554
Cov: 554 -> 554
5263
Cov: 554 -> 571
Cov: 571 -> 571
5264
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5265
Cov: 571 -> 573
Cov: 573 -> 573
5266
Cov: 573 -> 573
Cov: 573 -> 573
5267
Cov: 573 -> 574
Cov: 574 -> 574
5268
Cov: 574 -> 574
Cov: 574 -> 574
5269
Cov: 574 -> 574
Cov: 574 -> 574
5270
Cov: 574 -> 574
Cov: 574 -> 574
5271
Cov: 574 -> 574
Cov: 574 -> 574
5272
Cov: 574 -> 574
Cov: 574 -> 574
5273
Cov: 574 -> 574
Cov: 574 -> 574
5274
Cov: 574 -> 574
Cov: 574 -> 574
5275
Cov: 574 -> 574
Cov: 574 -> 574
5276
Cov: 574 -> 574
Cov: 574 -> 574
5277
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5278
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5279
Cov: 574 -> 574
Cov: 574 -> 574
5280
Cov: 574 -> 574
Cov: 574 -> 574
5281
Cov: 574 -> 574
Cov: 574 -> 574
5282
Cov: 574 -> 574
Cov: 574 -> 574
5283
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5284
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'encoder_layer' and 'num_layers'"}
5285
Cov: 574 -> 574
Cov: 574 -> 574
5286
Cov: 574 -> 575
Cov: 575 -> 575
5287
Cov: 575 -> 575
Cov: 575 -> 575
5288
Cov: 575 -> 575
Cov: 575 -> 575
5289
Cov: 575 -> 575
Cov: 575 -> 575
5290
Cov: 575 -> 576
Cov: 576 -> 576
5291
Cov: 576 -> 576
Cov: 576 -> 576
5292
Cov: 576 -> 576
Cov: 576 -> 576
5293
Cov: 576 -> 576
Cov: 576 -> 576
5294
Cov: 576 -> 576
Cov: 576 -> 576
5295
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'seq_len', 'heads', 'ff_dim', 'dropout', and 'scale_factor'"}
5296
Cov: 576 -> 576
Cov: 576 -> 576
5297
Cov: 576 -> 577
Cov: 577 -> 577
5298
Cov: 577 -> 577
Cov: 577 -> 577
5299
Cov: 577 -> 577
Cov: 577 -> 577
5300
Cov: 577 -> 577
Cov: 577 -> 577
5301
Cov: 577 -> 577
Cov: 577 -> 577
5302
Cov: 577 -> 577
Cov: 577 -> 577
5303
Cov: 577 -> 578
Cov: 578 -> 578
5304
Cov: 578 -> 578
Cov: 578 -> 578
5305
Cov: 578 -> 578
Cov: 578 -> 578
5306
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'weight1' and 'weight2'"}
5307
Cov: 578 -> 578
Cov: 578 -> 578
5308
Cov: 578 -> 578
Cov: 578 -> 578
5309
Cov: 578 -> 578
Cov: 578 -> 578
5310
Cov: 578 -> 578
Cov: 578 -> 578
5311
Cov: 578 -> 595
Cov: 595 -> 595
5312
Cov: 595 -> 595
Cov: 595 -> 595
5313
Cov: 595 -> 595
Cov: 595 -> 595
5314
Cov: 595 -> 595
Cov: 595 -> 595
5315
Cov: 595 -> 595
Cov: 595 -> 595
5316
Cov: 595 -> 597
Cov: 597 -> 597
5317
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5318
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5319
Cov: 597 -> 597
Cov: 597 -> 597
5320
Cov: 597 -> 597
Cov: 597 -> 597
5321
Cov: 597 -> 597
Cov: 597 -> 597
5322
Cov: 597 -> 598
Cov: 598 -> 598
5323
Cov: 598 -> 598
Cov: 598 -> 598
5324
Cov: 598 -> 598
Cov: 598 -> 598
5325
Cov: 598 -> 598
Cov: 598 -> 598
5326
Cov: 598 -> 598
Cov: 598 -> 598
5327
Cov: 598 -> 598
Cov: 598 -> 598
5328
Cov: 598 -> 598
Cov: 598 -> 598
5329
Cov: 598 -> 598
Cov: 598 -> 598
5330
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_heads'"}
5331
Cov: 598 -> 598
Cov: 598 -> 598
5332
Cov: 598 -> 598
Cov: 598 -> 598
5333
Cov: 598 -> 598
Cov: 598 -> 598
5334
Cov: 598 -> 598
Cov: 598 -> 598
5335
Cov: 598 -> 598
Cov: 598 -> 598
5336
Cov: 598 -> 598
Cov: 598 -> 598
5337
Cov: 598 -> 598
Cov: 598 -> 598
5338
Cov: 598 -> 598
Cov: 598 -> 598
5339
Cov: 598 -> 598
Cov: 598 -> 598
5340
Cov: 598 -> 598
Cov: 598 -> 598
5341
Cov: 598 -> 598
Cov: 598 -> 598
5342
Cov: 598 -> 598
Cov: 598 -> 598
5343
Cov: 598 -> 598
Cov: 598 -> 598
5344
Cov: 598 -> 598
Cov: 598 -> 598
5345
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
5346
Cov: 598 -> 598
Cov: 598 -> 598
5347
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5348
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5349
Cov: 598 -> 598
Cov: 598 -> 598
5350
Cov: 598 -> 598
Cov: 598 -> 598
5351
Cov: 598 -> 598
Cov: 598 -> 598
5352
Cov: 598 -> 598
Cov: 598 -> 598
5353
Cov: 598 -> 598
Cov: 598 -> 598
5354
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
5355
Cov: 598 -> 598
Cov: 598 -> 598
5356
Cov: 598 -> 598
Cov: 598 -> 598
5357
Cov: 598 -> 598
Cov: 598 -> 598
5358
Cov: 598 -> 598
Cov: 598 -> 598
5359
Cov: 598 -> 598
Cov: 598 -> 598
5360
Cov: 598 -> 598
Cov: 598 -> 598
5361
Cov: 598 -> 598
Cov: 598 -> 598
5362
Cov: 598 -> 598
Cov: 598 -> 598
5363
Cov: 598 -> 598
Cov: 598 -> 598
5364
Cov: 598 -> 598
Cov: 598 -> 598
5365
Cov: 598 -> 598
Cov: 598 -> 598
5366
Cov: 598 -> 598
Cov: 598 -> 598
5367
Cov: 598 -> 598
Cov: 598 -> 598
5368
Cov: 598 -> 598
Cov: 598 -> 598
5369
Cov: 598 -> 598
Cov: 598 -> 598
5370
Cov: 598 -> 598
Cov: 598 -> 598
5371
{"exception": "AttributeError", "msg": "'Linear' object has no attribute 'normal_'"}
5372
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
5373
Cov: 598 -> 611
Cov: 611 -> 611
5374
Cov: 611 -> 616
Cov: 616 -> 616
5375
Cov: 616 -> 616
Cov: 616 -> 616
5376
Cov: 616 -> 616
Cov: 616 -> 616
5377
Cov: 616 -> 616
Cov: 616 -> 616
5378
Cov: 616 -> 616
Cov: 616 -> 616
5379
Cov: 616 -> 616
Cov: 616 -> 616
5380
Cov: 616 -> 616
Cov: 616 -> 616
5381
Cov: 616 -> 618
Cov: 618 -> 618
5382
{"exception": "AttributeError", "msg": "'Model' object has no attribute 'features'"}
5383
Cov: 618 -> 623
Cov: 623 -> 623
5384
Cov: 623 -> 623
Cov: 623 -> 623
5385
Cov: 623 -> 623
Cov: 623 -> 623
5386
Cov: 623 -> 623
Cov: 623 -> 623
5387
Cov: 623 -> 623
Cov: 623 -> 623
5388
Cov: 623 -> 623
Cov: 623 -> 623
5389
Cov: 623 -> 623
Cov: 623 -> 623
5390
Cov: 623 -> 623
Cov: 623 -> 623
5391
{"exception": "NameError", "msg": "name 'TinyModel' is not defined"}
5392
Cov: 623 -> 623
Cov: 623 -> 623
5393
Cov: 623 -> 623
Cov: 623 -> 623
5394
Cov: 623 -> 623
Cov: 623 -> 623
5395
Cov: 623 -> 623
Cov: 623 -> 623
5396
Cov: 623 -> 623
Cov: 623 -> 623
5397
Cov: 623 -> 623
Cov: 623 -> 623
5398
Cov: 623 -> 623
Cov: 623 -> 623
5399
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5400
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5401
Cov: 623 -> 623
Cov: 623 -> 623
5402
Cov: 623 -> 623
Cov: 623 -> 623
5403
Cov: 623 -> 623
Cov: 623 -> 623
5404
Cov: 623 -> 623
Cov: 623 -> 623
5405
Cov: 623 -> 623
Cov: 623 -> 623
5406
Cov: 623 -> 625
Cov: 625 -> 625
5407
Cov: 625 -> 626
Cov: 626 -> 626
5408
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5409
Cov: 626 -> 626
Cov: 626 -> 626
5410
Cov: 626 -> 626
Cov: 626 -> 626
5411
Cov: 626 -> 626
Cov: 626 -> 626
5412
Cov: 626 -> 626
Cov: 626 -> 626
5413
Cov: 626 -> 626
Cov: 626 -> 626
5414
Cov: 626 -> 626
Cov: 626 -> 626
5415
Cov: 626 -> 626
Cov: 626 -> 626
5416
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
5417
Cov: 626 -> 626
Cov: 626 -> 626
5418
{"exception": "NameError", "msg": "name 'math' is not defined"}
5419
Cov: 626 -> 626
Cov: 626 -> 626
5420
{"exception": "NameError", "msg": "name 'Conv2dReLU' is not defined"}
5421
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[1, 9223372036854775807, 549755813887, 6]"}
5422
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'param'"}
5423
Cov: 626 -> 626
Cov: 626 -> 626
5424
Cov: 626 -> 626
Cov: 626 -> 626
5425
Cov: 626 -> 626
Cov: 626 -> 626
5426
Cov: 626 -> 626
Cov: 626 -> 626
5427
Cov: 626 -> 626
Cov: 626 -> 626
5428
Cov: 626 -> 626
Cov: 626 -> 626
5429
Cov: 626 -> 626
Cov: 626 -> 626
5430
Cov: 626 -> 626
Cov: 626 -> 626
5431
Cov: 626 -> 626
Cov: 626 -> 626
5432
Cov: 626 -> 626
Cov: 626 -> 626
5433
Cov: 626 -> 626
Cov: 626 -> 626
5434
Cov: 626 -> 626
Cov: 626 -> 626
5435
Cov: 626 -> 626
Cov: 626 -> 626
5436
Cov: 626 -> 627
Cov: 627 -> 627
5437
Cov: 627 -> 627
Cov: 627 -> 627
5438
Cov: 627 -> 627
Cov: 627 -> 627
5439
Cov: 627 -> 627
Cov: 627 -> 627
5440
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5441
Cov: 627 -> 627
Cov: 627 -> 627
5442
Cov: 627 -> 627
Cov: 627 -> 627
5443
Cov: 627 -> 627
Cov: 627 -> 627
5444
Cov: 627 -> 628
Cov: 628 -> 628
5445
Cov: 628 -> 628
Cov: 628 -> 628
5446
Cov: 628 -> 628
Cov: 628 -> 628
5447
Cov: 628 -> 628
Cov: 628 -> 628
5448
Cov: 628 -> 628
Cov: 628 -> 628
5449
Cov: 628 -> 628
Cov: 628 -> 628
5450
Cov: 628 -> 628
Cov: 628 -> 628
5451
Cov: 628 -> 628
Cov: 628 -> 628
5452
Cov: 628 -> 628
Cov: 628 -> 628
5453
Cov: 628 -> 628
Cov: 628 -> 628
5454
Cov: 628 -> 628
Cov: 628 -> 628
5455
Cov: 628 -> 628
Cov: 628 -> 628
5456
Cov: 628 -> 628
Cov: 628 -> 628
5457
Cov: 628 -> 628
Cov: 628 -> 628
5458
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5459
Cov: 628 -> 628
Cov: 628 -> 628
5460
Cov: 628 -> 628
Cov: 628 -> 628
5461
Cov: 628 -> 628
Cov: 628 -> 628
5462
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5463
Cov: 628 -> 628
Cov: 628 -> 628
5464
Cov: 628 -> 628
Cov: 628 -> 628
5465
Cov: 628 -> 628
Cov: 628 -> 628
5466
Cov: 628 -> 628
Cov: 628 -> 628
5467
Cov: 628 -> 628
Cov: 628 -> 628
5468
Cov: 628 -> 628
Cov: 628 -> 628
5469
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5470
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5471
Cov: 628 -> 628
Cov: 628 -> 628
5472
Cov: 628 -> 628
Cov: 628 -> 628
5473
{"exception": "TypeError", "msg": "Model.__init__() takes 1 positional argument but 3 were given"}
5474
Cov: 628 -> 630
Cov: 630 -> 630
5475
Cov: 630 -> 630
Cov: 630 -> 630
5476
Cov: 630 -> 630
Cov: 630 -> 630
5477
Cov: 630 -> 630
Cov: 630 -> 630
5478
Cov: 630 -> 630
Cov: 630 -> 630
5479
Cov: 630 -> 630
Cov: 630 -> 630
5480
Cov: 630 -> 630
Cov: 630 -> 630
5481
Cov: 630 -> 630
Cov: 630 -> 630
5482
Cov: 630 -> 630
Cov: 630 -> 630
5483
Cov: 630 -> 630
Cov: 630 -> 630
5484
Cov: 630 -> 630
Cov: 630 -> 630
5485
Cov: 630 -> 630
Cov: 630 -> 630
5486
Cov: 630 -> 630
Cov: 630 -> 630
5487
Cov: 630 -> 630
Cov: 630 -> 630
5488
Cov: 630 -> 630
Cov: 630 -> 630
5489
Cov: 630 -> 630
Cov: 630 -> 630
5490
Cov: 630 -> 630
Cov: 630 -> 630
5491
Cov: 630 -> 630
Cov: 630 -> 630
5492
Cov: 630 -> 630
Cov: 630 -> 630
5493
Cov: 630 -> 630
Cov: 630 -> 630
5494
Cov: 630 -> 630
Cov: 630 -> 630
5495
Cov: 630 -> 630
Cov: 630 -> 630
5496
Cov: 630 -> 630
Cov: 630 -> 630
5497
Cov: 630 -> 630
Cov: 630 -> 630
5498
Cov: 630 -> 630
Cov: 630 -> 630
5499
Cov: 630 -> 630
Cov: 630 -> 630
5500
Cov: 630 -> 630
Cov: 630 -> 630
5501
Cov: 630 -> 630
Cov: 630 -> 630
5502
Cov: 630 -> 630
Cov: 630 -> 630
5503
{"exception": "NameError", "msg": "name 'Module1' is not defined"}
5504
{"exception": "NameError", "msg": "name 'Layer1' is not defined"}
5505
Cov: 630 -> 630
Cov: 630 -> 630
5506
Cov: 630 -> 630
Cov: 630 -> 630
5507
Cov: 630 -> 630
Cov: 630 -> 630
5508
Cov: 630 -> 630
Cov: 630 -> 630
5509
Cov: 630 -> 630
Cov: 630 -> 630
5510
Cov: 630 -> 630
Cov: 630 -> 630
5511
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 10)"}
5512
Cov: 630 -> 630
Cov: 630 -> 630
5513
Cov: 630 -> 630
Cov: 630 -> 630
5514
Cov: 630 -> 630
Cov: 630 -> 630
5515
Cov: 630 -> 630
Cov: 630 -> 630
5516
Cov: 630 -> 630
Cov: 630 -> 630
5517
Cov: 630 -> 630
Cov: 630 -> 630
5518
Cov: 630 -> 630
Cov: 630 -> 630
5519
{"exception": "NameError", "msg": "name 'Module1' is not defined"}
5520
Cov: 630 -> 630
Cov: 630 -> 630
5521
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5522
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5523
Cov: 630 -> 630
Cov: 630 -> 630
5524
Cov: 630 -> 630
Cov: 630 -> 630
5525
Cov: 630 -> 630
Cov: 630 -> 630
5526
Cov: 630 -> 631
Cov: 631 -> 631
5527
Cov: 631 -> 631
Cov: 631 -> 631
5528
Cov: 631 -> 632
Cov: 632 -> 632
5529
Cov: 632 -> 632
Cov: 632 -> 632
5530
Cov: 632 -> 632
Cov: 632 -> 632
5531
Cov: 632 -> 632
Cov: 632 -> 632
5532
Cov: 632 -> 632
Cov: 632 -> 632
5533
Cov: 632 -> 633
Cov: 633 -> 633
5534
Cov: 633 -> 633
Cov: 633 -> 633
5535
Cov: 633 -> 633
Cov: 633 -> 633
5536
Cov: 633 -> 649
Cov: 649 -> 649
5537
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
5538
Cov: 649 -> 649
Cov: 649 -> 649
5539
Cov: 649 -> 649
Cov: 649 -> 649
5540
Cov: 649 -> 654
Cov: 654 -> 654
5541
Cov: 654 -> 655
Cov: 655 -> 655
5542
Cov: 655 -> 655
Cov: 655 -> 655
5543
Cov: 655 -> 655
Cov: 655 -> 655
5544
Cov: 655 -> 655
Cov: 655 -> 655
5545
Cov: 655 -> 655
Cov: 655 -> 655
5546
Cov: 655 -> 655
Cov: 655 -> 655
5547
Cov: 655 -> 655
Cov: 655 -> 655
5548
Cov: 655 -> 655
Cov: 655 -> 655
5549
Cov: 655 -> 655
Cov: 655 -> 655
5550
Cov: 655 -> 655
Cov: 655 -> 655
5551
Cov: 655 -> 655
Cov: 655 -> 655
5552
Cov: 655 -> 655
Cov: 655 -> 655
5553
Cov: 655 -> 655
Cov: 655 -> 655
5554
Cov: 655 -> 655
Cov: 655 -> 655
5555
Cov: 655 -> 655
Cov: 655 -> 655
5556
Cov: 655 -> 655
Cov: 655 -> 655
5557
Cov: 655 -> 655
Cov: 655 -> 655
5558
Cov: 655 -> 655
Cov: 655 -> 655
5559
Cov: 655 -> 655
Cov: 655 -> 655
5560
Cov: 655 -> 655
Cov: 655 -> 655
5561
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5562
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5563
Cov: 655 -> 655
Cov: 655 -> 655
5564
Cov: 655 -> 655
Cov: 655 -> 655
5565
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'query_value_dimension'"}
5566
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'dropout_p', 'd_model', and 'nhead'"}
5567
Cov: 655 -> 655
Cov: 655 -> 655
5568
Cov: 655 -> 655
Cov: 655 -> 655
5569
Cov: 655 -> 655
Cov: 655 -> 655
5570
Cov: 655 -> 655
Cov: 655 -> 655
5571
Cov: 655 -> 655
Cov: 655 -> 655
5572
Cov: 655 -> 655
Cov: 655 -> 655
5573
Cov: 655 -> 655
Cov: 655 -> 655
5574
{"exception": "TypeError", "msg": "matmul(): argument 'other' (position 1) must be Tensor, not int"}
5575
Cov: 655 -> 655
Cov: 655 -> 655
5576
Cov: 655 -> 655
Cov: 655 -> 655
5577
Cov: 655 -> 655
Cov: 655 -> 655
5578
Cov: 655 -> 655
Cov: 655 -> 655
5579
Cov: 655 -> 655
Cov: 655 -> 655
5580
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5581
Cov: 655 -> 655
Cov: 655 -> 655
5582
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
5583
Cov: 655 -> 655
Cov: 655 -> 655
5584
Cov: 655 -> 655
Cov: 655 -> 655
5585
Cov: 655 -> 655
Cov: 655 -> 655
5586
Cov: 655 -> 655
Cov: 655 -> 655
5587
Cov: 655 -> 655
Cov: 655 -> 655
5588
Cov: 655 -> 655
Cov: 655 -> 655
5589
Cov: 655 -> 655
Cov: 655 -> 655
5590
Cov: 655 -> 655
Cov: 655 -> 655
5591
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5592
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5593
Cov: 655 -> 655
Cov: 655 -> 655
5594
Cov: 655 -> 655
Cov: 655 -> 655
5595
Cov: 655 -> 655
Cov: 655 -> 655
5596
Cov: 655 -> 655
Cov: 655 -> 655
5597
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
5598
Cov: 655 -> 655
Cov: 655 -> 655
5599
Cov: 655 -> 655
Cov: 655 -> 655
5600
Cov: 655 -> 655
Cov: 655 -> 655
5601
Cov: 655 -> 655
Cov: 655 -> 655
5602
Cov: 655 -> 655
Cov: 655 -> 655
5603
Cov: 655 -> 655
Cov: 655 -> 655
5604
Cov: 655 -> 655
Cov: 655 -> 655
5605
Cov: 655 -> 655
Cov: 655 -> 655
5606
Cov: 655 -> 655
Cov: 655 -> 655
5607
Cov: 655 -> 655
Cov: 655 -> 655
5608
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'training'"}
5609
Cov: 655 -> 655
Cov: 655 -> 655
5610
Cov: 655 -> 655
Cov: 655 -> 655
5611
Cov: 655 -> 655
Cov: 655 -> 655
5612
Cov: 655 -> 657
Cov: 657 -> 657
5613
Cov: 657 -> 657
Cov: 657 -> 657
5614
Cov: 657 -> 657
Cov: 657 -> 657
5615
Cov: 657 -> 657
Cov: 657 -> 657
5616
Cov: 657 -> 657
Cov: 657 -> 657
5617
Cov: 657 -> 657
Cov: 657 -> 657
5618
Cov: 657 -> 657
Cov: 657 -> 657
5619
Cov: 657 -> 657
Cov: 657 -> 657
5620
Cov: 657 -> 657
Cov: 657 -> 657
5621
Cov: 657 -> 657
Cov: 657 -> 657
5622
Cov: 657 -> 657
Cov: 657 -> 657
5623
Cov: 657 -> 657
Cov: 657 -> 657
5624
Cov: 657 -> 657
Cov: 657 -> 657
5625
Cov: 657 -> 657
Cov: 657 -> 657
5626
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5627
Cov: 657 -> 657
Cov: 657 -> 657
5628
Cov: 657 -> 657
Cov: 657 -> 657
5629
Cov: 657 -> 657
Cov: 657 -> 657
5630
Cov: 657 -> 657
Cov: 657 -> 657
5631
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'input_channels' and 'input_size'"}
5632
Cov: 657 -> 657
Cov: 657 -> 657
5633
Cov: 657 -> 657
Cov: 657 -> 657
5634
Cov: 657 -> 657
Cov: 657 -> 657
5635
Cov: 657 -> 657
Cov: 657 -> 657
5636
Cov: 657 -> 657
Cov: 657 -> 657
5637
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5638
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 13)"}
5639
Cov: 657 -> 657
Cov: 657 -> 657
5640
Cov: 657 -> 657
Cov: 657 -> 657
5641
Cov: 657 -> 657
Cov: 657 -> 657
5642
Cov: 657 -> 657
Cov: 657 -> 657
5643
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5644
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_factor' and 'max_factor'"}
5645
Cov: 657 -> 657
Cov: 657 -> 657
5646
Cov: 657 -> 657
Cov: 657 -> 657
5647
Cov: 657 -> 657
Cov: 657 -> 657
5648
Cov: 657 -> 657
Cov: 657 -> 657
5649
Cov: 657 -> 657
Cov: 657 -> 657
5650
Cov: 657 -> 657
Cov: 657 -> 657
5651
Cov: 657 -> 657
Cov: 657 -> 657
5652
Cov: 657 -> 657
Cov: 657 -> 657
5653
Cov: 657 -> 657
Cov: 657 -> 657
5654
Cov: 657 -> 657
Cov: 657 -> 657
5655
Cov: 657 -> 657
Cov: 657 -> 657
5656
Cov: 657 -> 657
Cov: 657 -> 657
5657
Cov: 657 -> 660
Cov: 660 -> 660
5658
Cov: 660 -> 660
Cov: 660 -> 660
5659
Cov: 660 -> 661
Cov: 661 -> 661
5660
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
5661
Cov: 661 -> 661
Cov: 661 -> 661
5662
Cov: 661 -> 661
Cov: 661 -> 661
5663
Cov: 661 -> 661
Cov: 661 -> 661
5664
Cov: 661 -> 661
Cov: 661 -> 661
5665
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 7)"}
5666
Cov: 661 -> 661
Cov: 661 -> 661
5667
Cov: 661 -> 661
Cov: 661 -> 661
5668
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'param'"}
5669
Cov: 661 -> 661
Cov: 661 -> 661
5670
Cov: 661 -> 661
Cov: 661 -> 661
5671
Cov: 661 -> 661
Cov: 661 -> 661
5672
Cov: 661 -> 661
Cov: 661 -> 661
5673
Cov: 661 -> 661
Cov: 661 -> 661
5674
Cov: 661 -> 661
Cov: 661 -> 661
5675
Cov: 661 -> 661
Cov: 661 -> 661
5676
Cov: 661 -> 661
Cov: 661 -> 661
5677
{"exception": "NameError", "msg": "name 'torchvision' is not defined"}
5678
Cov: 661 -> 661
Cov: 661 -> 661
5679
Cov: 661 -> 661
Cov: 661 -> 661
5680
Cov: 661 -> 661
Cov: 661 -> 661
5681
Cov: 661 -> 661
Cov: 661 -> 661
5682
Cov: 661 -> 661
Cov: 661 -> 661
5683
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5684
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5685
Cov: 661 -> 661
Cov: 661 -> 661
5686
Cov: 661 -> 661
Cov: 661 -> 661
5687
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim'"}
5688
Cov: 661 -> 661
Cov: 661 -> 661
5689
Cov: 661 -> 661
Cov: 661 -> 661
5690
Cov: 661 -> 661
Cov: 661 -> 661
5691
Cov: 661 -> 661
Cov: 661 -> 661
5692
Cov: 661 -> 661
Cov: 661 -> 661
5693
Cov: 661 -> 661
Cov: 661 -> 661
5694
Cov: 661 -> 661
Cov: 661 -> 661
5695
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'dim'"}
5696
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'attention_head_dim', 'nb_self_attention_layer', and 'nb_self_attention_head'"}
5697
Cov: 661 -> 661
Cov: 661 -> 661
5698
Cov: 661 -> 661
Cov: 661 -> 661
5699
Cov: 661 -> 661
Cov: 661 -> 661
5700
Cov: 661 -> 661
Cov: 661 -> 661
5701
Cov: 661 -> 661
Cov: 661 -> 661
5702
Cov: 661 -> 661
Cov: 661 -> 661
5703
Cov: 661 -> 661
Cov: 661 -> 661
5704
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
5705
Cov: 661 -> 661
Cov: 661 -> 661
5706
Cov: 661 -> 661
Cov: 661 -> 661
5707
Cov: 661 -> 661
Cov: 661 -> 661
5708
Cov: 661 -> 661
Cov: 661 -> 661
5709
Cov: 661 -> 661
Cov: 661 -> 661
5710
Cov: 661 -> 661
Cov: 661 -> 661
5711
Cov: 661 -> 661
Cov: 661 -> 661
5712
Cov: 661 -> 661
Cov: 661 -> 661
5713
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5714
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5715
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 90)"}
5716
Cov: 661 -> 661
Cov: 661 -> 661
5717
Cov: 661 -> 661
Cov: 661 -> 661
5718
Cov: 661 -> 661
Cov: 661 -> 661
5719
Cov: 661 -> 661
Cov: 661 -> 661
5720
Cov: 661 -> 661
Cov: 661 -> 661
5721
Cov: 661 -> 661
Cov: 661 -> 661
5722
Cov: 661 -> 661
Cov: 661 -> 661
5723
Cov: 661 -> 661
Cov: 661 -> 661
5724
Cov: 661 -> 661
Cov: 661 -> 661
5725
Cov: 661 -> 661
Cov: 661 -> 661
5726
Cov: 661 -> 661
Cov: 661 -> 661
5727
Cov: 661 -> 661
Cov: 661 -> 661
5728
{"exception": "TypeError", "msg": "can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first."}
5729
Cov: 661 -> 661
Cov: 661 -> 661
5730
Cov: 661 -> 661
Cov: 661 -> 661
5731
Cov: 661 -> 661
Cov: 661 -> 661
5732
Cov: 661 -> 661
Cov: 661 -> 661
5733
Cov: 661 -> 661
Cov: 661 -> 661
5734
Cov: 661 -> 661
Cov: 661 -> 661
5735
Cov: 661 -> 661
Cov: 661 -> 661
5736
Cov: 661 -> 661
Cov: 661 -> 661
5737
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'n'"}
5738
{"exception": "NameError", "msg": "name 'M' is not defined"}
5739
Cov: 661 -> 661
Cov: 661 -> 661
5740
Cov: 661 -> 674
Cov: 674 -> 674
5741
Cov: 674 -> 674
Cov: 674 -> 674
5742
Cov: 674 -> 674
Cov: 674 -> 674
5743
Cov: 674 -> 674
Cov: 674 -> 674
5744
Cov: 674 -> 674
Cov: 674 -> 674
5745
Cov: 674 -> 674
Cov: 674 -> 674
5746
Cov: 674 -> 674
Cov: 674 -> 674
5747
Cov: 674 -> 675
Cov: 675 -> 675
5748
Cov: 675 -> 675
Cov: 675 -> 675
5749
Cov: 675 -> 675
Cov: 675 -> 675
5750
Cov: 675 -> 675
Cov: 675 -> 675
5751
Cov: 675 -> 675
Cov: 675 -> 675
5752
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'ConvTranpose2d'"}
5753
Cov: 675 -> 675
Cov: 675 -> 675
5754
Cov: 675 -> 675
Cov: 675 -> 675
5755
{"exception": "RuntimeError", "msg": "a view of a leaf Variable that requires grad is being used in an in-place operation."}
5756
Cov: 675 -> 677
Cov: 677 -> 677
5757
Cov: 677 -> 677
Cov: 677 -> 677
5758
Cov: 677 -> 677
Cov: 677 -> 677
5759
{"exception": "AttributeError", "msg": "module 'torch.nn.functional' has no attribute 'clamp'"}
5760
Cov: 677 -> 677
Cov: 677 -> 677
5761
Cov: 677 -> 677
Cov: 677 -> 677
5762
Cov: 677 -> 677
Cov: 677 -> 677
5763
Cov: 677 -> 677
Cov: 677 -> 677
5764
Cov: 677 -> 677
Cov: 677 -> 677
5765
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5766
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5767
Cov: 677 -> 677
Cov: 677 -> 677
5768
Cov: 677 -> 677
Cov: 677 -> 677
5769
Cov: 677 -> 677
Cov: 677 -> 677
5770
Cov: 677 -> 677
Cov: 677 -> 677
5771
Cov: 677 -> 677
Cov: 677 -> 677
5772
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'conv_dim'"}
5773
Cov: 677 -> 677
Cov: 677 -> 677
5774
Cov: 677 -> 677
Cov: 677 -> 677
5775
Cov: 677 -> 677
Cov: 677 -> 677
5776
Cov: 677 -> 677
Cov: 677 -> 677
5777
Cov: 677 -> 679
Cov: 679 -> 679
5778
Cov: 679 -> 679
Cov: 679 -> 679
5779
Cov: 679 -> 679
Cov: 679 -> 679
5780
Cov: 679 -> 680
Cov: 680 -> 680
5781
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
5782
Cov: 680 -> 680
Cov: 680 -> 680
5783
Cov: 680 -> 680
Cov: 680 -> 680
5784
Cov: 680 -> 680
Cov: 680 -> 680
5785
Cov: 680 -> 680
Cov: 680 -> 680
5786
Cov: 680 -> 680
Cov: 680 -> 680
5787
Cov: 680 -> 680
Cov: 680 -> 680
5788
Cov: 680 -> 680
Cov: 680 -> 680
5789
Cov: 680 -> 680
Cov: 680 -> 680
5790
Cov: 680 -> 680
Cov: 680 -> 680
5791
Cov: 680 -> 680
Cov: 680 -> 680
5792
Cov: 680 -> 680
Cov: 680 -> 680
5793
Cov: 680 -> 680
Cov: 680 -> 680
5794
Cov: 680 -> 680
Cov: 680 -> 680
5795
Cov: 680 -> 680
Cov: 680 -> 680
5796
Cov: 680 -> 680
Cov: 680 -> 680
5797
Cov: 680 -> 680
Cov: 680 -> 680
5798
Cov: 680 -> 680
Cov: 680 -> 680
5799
Cov: 680 -> 680
Cov: 680 -> 680
5800
Cov: 680 -> 681
Cov: 681 -> 681
5801
Cov: 681 -> 681
Cov: 681 -> 681
5802
Cov: 681 -> 681
Cov: 681 -> 681
5803
Cov: 681 -> 681
Cov: 681 -> 681
5804
Cov: 681 -> 681
Cov: 681 -> 681
5805
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5806
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5807
Cov: 681 -> 681
Cov: 681 -> 681
5808
Cov: 681 -> 683
Cov: 683 -> 683
5809
Cov: 683 -> 683
Cov: 683 -> 683
5810
Cov: 683 -> 683
Cov: 683 -> 683
5811
Cov: 683 -> 683
Cov: 683 -> 683
5812
Cov: 683 -> 683
Cov: 683 -> 683
5813
Cov: 683 -> 683
Cov: 683 -> 683
5814
Cov: 683 -> 683
Cov: 683 -> 683
5815
Cov: 683 -> 721
Cov: 721 -> 721
5816
Cov: 721 -> 721
Cov: 721 -> 721
5817
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'attn_dim' and 'dropout_p'"}
5818
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'shape'"}
5819
Cov: 721 -> 721
Cov: 721 -> 721
5820
Cov: 721 -> 721
Cov: 721 -> 721
5821
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
5822
Cov: 721 -> 35
Cov: 35 -> 35
5823
Cov: 35 -> 196
Cov: 196 -> 196
5824
Cov: 196 -> 197
Cov: 197 -> 197
5825
Cov: 197 -> 220
Cov: 220 -> 220
5826
Cov: 220 -> 220
Cov: 220 -> 220
5827
Cov: 220 -> 221
Cov: 221 -> 221
5828
Cov: 221 -> 221
Cov: 221 -> 221
5829
Cov: 221 -> 221
Cov: 221 -> 221
5830
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
5831
Cov: 221 -> 224
Cov: 224 -> 224
5832
Cov: 224 -> 224
Cov: 224 -> 224
5833
Cov: 224 -> 224
Cov: 224 -> 224
5834
Cov: 224 -> 224
Cov: 224 -> 224
5835
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5836
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5837
Cov: 224 -> 225
Cov: 225 -> 225
5838
Cov: 225 -> 225
Cov: 225 -> 225
5839
Cov: 225 -> 225
Cov: 225 -> 225
5840
Cov: 225 -> 225
Cov: 225 -> 225
5841
Cov: 225 -> 230
Cov: 230 -> 230
5842
Cov: 230 -> 231
Cov: 231 -> 231
5843
Cov: 231 -> 231
Cov: 231 -> 231
5844
Cov: 231 -> 231
Cov: 231 -> 231
5845
Cov: 231 -> 231
Cov: 231 -> 231
5846
Cov: 231 -> 231
Cov: 231 -> 231
5847
Cov: 231 -> 231
Cov: 231 -> 231
5848
Cov: 231 -> 231
Cov: 231 -> 231
5849
Cov: 231 -> 231
Cov: 231 -> 231
5850
Cov: 231 -> 231
Cov: 231 -> 231
5851
Cov: 231 -> 231
Cov: 231 -> 231
5852
Cov: 231 -> 266
Cov: 266 -> 266
5853
Cov: 266 -> 266
Cov: 266 -> 266
5854
Cov: 266 -> 266
Cov: 266 -> 266
5855
Cov: 266 -> 266
Cov: 266 -> 266
5856
Cov: 266 -> 266
Cov: 266 -> 266
5857
Cov: 266 -> 295
Cov: 295 -> 295
5858
Cov: 295 -> 299
Cov: 299 -> 299
5859
Cov: 299 -> 299
Cov: 299 -> 299
5860
Cov: 299 -> 299
Cov: 299 -> 299
5861
Cov: 299 -> 366
Cov: 366 -> 366
5862
Cov: 366 -> 366
Cov: 366 -> 366
5863
Cov: 366 -> 366
Cov: 366 -> 366
5864
Cov: 366 -> 367
Cov: 367 -> 367
5865
Cov: 367 -> 367
Cov: 367 -> 367
5866
Cov: 367 -> 367
Cov: 367 -> 367
5867
Cov: 367 -> 367
Cov: 367 -> 367
5868
Cov: 367 -> 367
Cov: 367 -> 367
5869
Cov: 367 -> 391
Cov: 391 -> 391
5870
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5871
Cov: 391 -> 391
Cov: 391 -> 391
5872
Cov: 391 -> 391
Cov: 391 -> 391
5873
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5874
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5875
Cov: 391 -> 391
Cov: 391 -> 391
5876
Cov: 391 -> 391
Cov: 391 -> 391
5877
Cov: 391 -> 391
Cov: 391 -> 391
5878
Cov: 391 -> 391
Cov: 391 -> 391
5879
Cov: 391 -> 391
Cov: 391 -> 391
5880
Cov: 391 -> 391
Cov: 391 -> 391
5881
Cov: 391 -> 391
Cov: 391 -> 391
5882
Cov: 391 -> 391
Cov: 391 -> 391
5883
Cov: 391 -> 411
Cov: 411 -> 411
5884
Cov: 411 -> 411
Cov: 411 -> 411
5885
Cov: 411 -> 411
Cov: 411 -> 411
5886
Cov: 411 -> 411
Cov: 411 -> 411
5887
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5888
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
5889
Cov: 411 -> 412
Cov: 412 -> 412
5890
Cov: 412 -> 413
Cov: 413 -> 413
5891
Cov: 413 -> 413
Cov: 413 -> 413
5892
Cov: 413 -> 413
Cov: 413 -> 413
5893
Cov: 413 -> 429
Cov: 429 -> 429
5894
Cov: 429 -> 473
Cov: 473 -> 473
5895
Cov: 473 -> 473
Cov: 473 -> 473
5896
Cov: 473 -> 473
Cov: 473 -> 473
5897
Cov: 473 -> 473
Cov: 473 -> 473
5898
Cov: 473 -> 473
Cov: 473 -> 473
5899
Cov: 473 -> 473
Cov: 473 -> 473
5900
Cov: 473 -> 473
Cov: 473 -> 473
5901
Cov: 473 -> 473
Cov: 473 -> 473
5902
Cov: 473 -> 473
Cov: 473 -> 473
5903
Cov: 473 -> 473
Cov: 473 -> 473
5904
Cov: 473 -> 473
Cov: 473 -> 473
5905
Cov: 473 -> 480
Cov: 480 -> 480
5906
{"exception": "NameError", "msg": "name 'np' is not defined"}
5907
Cov: 480 -> 481
Cov: 481 -> 481
5908
Cov: 481 -> 481
Cov: 481 -> 481
5909
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
5910
Cov: 481 -> 481
Cov: 481 -> 481
5911
Cov: 481 -> 482
Cov: 482 -> 482
5912
Cov: 482 -> 482
Cov: 482 -> 482
5913
Cov: 482 -> 482
Cov: 482 -> 482
5914
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 3)"}
5915
Cov: 482 -> 482
Cov: 482 -> 482
5916
Cov: 482 -> 482
Cov: 482 -> 482
5917
Cov: 482 -> 482
Cov: 482 -> 482
5918
Cov: 482 -> 482
Cov: 482 -> 482
5919
Cov: 482 -> 482
Cov: 482 -> 482
5920
Cov: 482 -> 482
Cov: 482 -> 482
5921
Cov: 482 -> 482
Cov: 482 -> 482
5922
Cov: 482 -> 482
Cov: 482 -> 482
5923
Cov: 482 -> 483
Cov: 483 -> 483
5924
Cov: 483 -> 483
Cov: 483 -> 483
5925
Cov: 483 -> 483
Cov: 483 -> 483
5926
Cov: 483 -> 483
Cov: 483 -> 483
5927
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5928
{"exception": "NameError", "msg": "name 'Model' is not defined"}
5929
Cov: 483 -> 483
Cov: 483 -> 483
5930
Cov: 483 -> 483
Cov: 483 -> 483
5931
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'dim_model', 'num_heads', and 'dropout_p'"}
5932
Cov: 483 -> 483
Cov: 483 -> 483
5933
Cov: 483 -> 483
Cov: 483 -> 483
5934
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'transposed'"}
5935
Cov: 483 -> 483
Cov: 483 -> 483
5936
Cov: 483 -> 483
Cov: 483 -> 483
5937
Cov: 483 -> 483
Cov: 483 -> 483
5938
Cov: 483 -> 483
Cov: 483 -> 483
5939
{"exception": "NameError", "msg": "name 'args' is not defined"}
5940
{"exception": "NameError", "msg": "name 'device' is not defined"}
5941
Cov: 483 -> 483
Cov: 483 -> 483
5942
Cov: 483 -> 483
Cov: 483 -> 483
5943
Cov: 483 -> 483
Cov: 483 -> 483
5944
Cov: 483 -> 483
Cov: 483 -> 483
5945
Cov: 483 -> 483
Cov: 483 -> 483
5946
Cov: 483 -> 483
Cov: 483 -> 483
5947
Cov: 483 -> 483
Cov: 483 -> 483
5948
Cov: 483 -> 483
Cov: 483 -> 483
5949
Cov: 483 -> 483
Cov: 483 -> 483
5950
Cov: 483 -> 483
Cov: 483 -> 483
5951
Cov: 483 -> 483
Cov: 483 -> 483
5952
Cov: 483 -> 483
Cov: 483 -> 483
5953
Cov: 483 -> 483
Cov: 483 -> 483
5954
Cov: 483 -> 483
Cov: 483 -> 483
5955
Cov: 483 -> 483
Cov: 483 -> 483
5956
Cov: 483 -> 483
Cov: 483 -> 483
5957
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5958
{"exception": "NameError", "msg": "name 'nn' is not defined"}
5959
Cov: 483 -> 483
Cov: 483 -> 483
5960
Cov: 483 -> 483
Cov: 483 -> 483
5961
Cov: 483 -> 483
Cov: 483 -> 483
5962
Cov: 483 -> 483
Cov: 483 -> 483
5963
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'in_planes', 'planes', and 'max_value'"}
5964
Cov: 483 -> 483
Cov: 483 -> 483
5965
Cov: 483 -> 483
Cov: 483 -> 483
5966
Cov: 483 -> 483
Cov: 483 -> 483
5967
Cov: 483 -> 483
Cov: 483 -> 483
5968
Cov: 483 -> 483
Cov: 483 -> 483
5969
Cov: 483 -> 483
Cov: 483 -> 483
5970
Cov: 483 -> 483
Cov: 483 -> 483
5971
Cov: 483 -> 483
Cov: 483 -> 483
5972
Cov: 483 -> 483
Cov: 483 -> 483
5973
Cov: 483 -> 483
Cov: 483 -> 483
5974
Cov: 483 -> 483
Cov: 483 -> 483
5975
Cov: 483 -> 483
Cov: 483 -> 483
5976
Cov: 483 -> 483
Cov: 483 -> 483
5977
{"exception": "TabError", "msg": "inconsistent use of tabs and spaces in indentation (<string>, line 11)"}
5978
Cov: 483 -> 483
Cov: 483 -> 483
5979
Cov: 483 -> 500
Cov: 500 -> 500
5980
Cov: 500 -> 500
Cov: 500 -> 500
5981
Cov: 500 -> 501
Cov: 501 -> 501
5982
Cov: 501 -> 501
Cov: 501 -> 501
5983
Cov: 501 -> 515
Cov: 515 -> 515
5984
Cov: 515 -> 516
Cov: 516 -> 516
5985
Cov: 516 -> 516
Cov: 516 -> 516
5986
Cov: 516 -> 522
Cov: 522 -> 522
5987
Cov: 522 -> 522
Cov: 522 -> 522
5988
Cov: 522 -> 522
Cov: 522 -> 522
5989
Cov: 522 -> 522
Cov: 522 -> 522
5990
Cov: 522 -> 522
Cov: 522 -> 522
5991
Cov: 522 -> 528
Cov: 528 -> 528
5992
Cov: 528 -> 528
Cov: 528 -> 528
5993
Cov: 528 -> 528
Cov: 528 -> 528
5994
Cov: 528 -> 528
Cov: 528 -> 528
5995
Cov: 528 -> 528
Cov: 528 -> 528
5996
Cov: 528 -> 528
Cov: 528 -> 528
5997
Cov: 528 -> 528
Cov: 528 -> 528
5998
Cov: 528 -> 528
Cov: 528 -> 528
5999
Cov: 528 -> 528
Cov: 528 -> 528
6000
Cov: 528 -> 528
Cov: 528 -> 528
6001
Cov: 528 -> 528
Cov: 528 -> 528
6002
Cov: 528 -> 528
Cov: 528 -> 528
6003
Cov: 528 -> 528
Cov: 528 -> 528
6004
Cov: 528 -> 528
Cov: 528 -> 528
6005
Cov: 528 -> 535
Cov: 535 -> 535
6006
Cov: 535 -> 535
Cov: 535 -> 535
6007
Cov: 535 -> 535
Cov: 535 -> 535
6008
Cov: 535 -> 535
Cov: 535 -> 535
6009
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6010
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6011
Cov: 535 -> 535
Cov: 535 -> 535
6012
Cov: 535 -> 535
Cov: 535 -> 535
6013
Cov: 535 -> 535
Cov: 535 -> 535
6014
Cov: 535 -> 535
Cov: 535 -> 535
6015
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'conv_op'"}
6016
Cov: 535 -> 535
Cov: 535 -> 535
6017
Cov: 535 -> 535
Cov: 535 -> 535
6018
Cov: 535 -> 535
Cov: 535 -> 535
6019
Cov: 535 -> 535
Cov: 535 -> 535
6020
Cov: 535 -> 535
Cov: 535 -> 535
6021
Cov: 535 -> 535
Cov: 535 -> 535
6022
Cov: 535 -> 536
Cov: 536 -> 536
6023
Cov: 536 -> 536
Cov: 536 -> 536
6024
Cov: 536 -> 536
Cov: 536 -> 536
6025
Cov: 536 -> 536
Cov: 536 -> 536
6026
Cov: 536 -> 536
Cov: 536 -> 536
6027
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6028
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'query_dim'"}
6029
Cov: 536 -> 536
Cov: 536 -> 536
6030
Cov: 536 -> 536
Cov: 536 -> 536
6031
Cov: 536 -> 536
Cov: 536 -> 536
6032
Cov: 536 -> 536
Cov: 536 -> 536
6033
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 10)"}
6034
Cov: 536 -> 536
Cov: 536 -> 536
6035
Cov: 536 -> 536
Cov: 536 -> 536
6036
Cov: 536 -> 536
Cov: 536 -> 536
6037
Cov: 536 -> 536
Cov: 536 -> 536
6038
Cov: 536 -> 536
Cov: 536 -> 536
6039
Cov: 536 -> 536
Cov: 536 -> 536
6040
Cov: 536 -> 536
Cov: 536 -> 536
6041
Cov: 536 -> 536
Cov: 536 -> 536
6042
Cov: 536 -> 536
Cov: 536 -> 536
6043
Cov: 536 -> 536
Cov: 536 -> 536
6044
Cov: 536 -> 536
Cov: 536 -> 536
6045
Cov: 536 -> 536
Cov: 536 -> 536
6046
Cov: 536 -> 536
Cov: 536 -> 536
6047
Cov: 536 -> 536
Cov: 536 -> 536
6048
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6049
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6050
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6051
Cov: 536 -> 536
Cov: 536 -> 536
6052
Cov: 536 -> 536
Cov: 536 -> 536
6053
Cov: 536 -> 540
Cov: 540 -> 540
6054
Cov: 540 -> 540
Cov: 540 -> 540
6055
Cov: 540 -> 540
Cov: 540 -> 540
6056
Cov: 540 -> 540
Cov: 540 -> 540
6057
Cov: 540 -> 540
Cov: 540 -> 540
6058
Cov: 540 -> 540
Cov: 540 -> 540
6059
Cov: 540 -> 540
Cov: 540 -> 540
6060
Cov: 540 -> 540
Cov: 540 -> 540
6061
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_heads'"}
6062
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query_dim', 'key_dim', and 'value_dim'"}
6063
Cov: 540 -> 540
Cov: 540 -> 540
6064
Cov: 540 -> 540
Cov: 540 -> 540
6065
Cov: 540 -> 540
Cov: 540 -> 540
6066
Cov: 540 -> 540
Cov: 540 -> 540
6067
Cov: 540 -> 540
Cov: 540 -> 540
6068
Cov: 540 -> 540
Cov: 540 -> 540
6069
Cov: 540 -> 540
Cov: 540 -> 540
6070
Cov: 540 -> 540
Cov: 540 -> 540
6071
Cov: 540 -> 540
Cov: 540 -> 540
6072
Cov: 540 -> 542
Cov: 542 -> 542
6073
Cov: 542 -> 543
Cov: 543 -> 543
6074
Cov: 543 -> 543
Cov: 543 -> 543
6075
Cov: 543 -> 543
Cov: 543 -> 543
6076
Cov: 543 -> 543
Cov: 543 -> 543
6077
Cov: 543 -> 543
Cov: 543 -> 543
6078
Cov: 543 -> 543
Cov: 543 -> 543
6079
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6080
Cov: 543 -> 543
Cov: 543 -> 543
6081
Cov: 543 -> 543
Cov: 543 -> 543
6082
Cov: 543 -> 543
Cov: 543 -> 543
6083
Cov: 543 -> 543
Cov: 543 -> 543
6084
Cov: 543 -> 543
Cov: 543 -> 543
6085
Cov: 543 -> 543
Cov: 543 -> 543
6086
Cov: 543 -> 543
Cov: 543 -> 543
6087
Cov: 543 -> 543
Cov: 543 -> 543
6088
Cov: 543 -> 543
Cov: 543 -> 543
6089
Cov: 543 -> 543
Cov: 543 -> 543
6090
Cov: 543 -> 543
Cov: 543 -> 543
6091
{"exception": "NameError", "msg": "name 'other' is not defined"}
6092
Cov: 543 -> 557
Cov: 557 -> 557
6093
Cov: 557 -> 557
Cov: 557 -> 557
6094
Cov: 557 -> 557
Cov: 557 -> 557
6095
Cov: 557 -> 557
Cov: 557 -> 557
6096
Cov: 557 -> 557
Cov: 557 -> 557
6097
Cov: 557 -> 557
Cov: 557 -> 557
6098
Cov: 557 -> 557
Cov: 557 -> 557
6099
Cov: 557 -> 557
Cov: 557 -> 557
6100
Cov: 557 -> 557
Cov: 557 -> 557
6101
Cov: 557 -> 557
Cov: 557 -> 557
6102
Cov: 557 -> 557
Cov: 557 -> 557
6103
Cov: 557 -> 557
Cov: 557 -> 557
6104
Cov: 557 -> 557
Cov: 557 -> 557
6105
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 4)"}
6106
Cov: 557 -> 557
Cov: 557 -> 557
6107
Cov: 557 -> 557
Cov: 557 -> 557
6108
Cov: 557 -> 557
Cov: 557 -> 557
6109
Cov: 557 -> 557
Cov: 557 -> 557
6110
Cov: 557 -> 557
Cov: 557 -> 557
6111
Cov: 557 -> 557
Cov: 557 -> 557
6112
Cov: 557 -> 557
Cov: 557 -> 557
6113
Cov: 557 -> 564
Cov: 564 -> 564
6114
Cov: 564 -> 568
Cov: 568 -> 568
6115
Cov: 568 -> 568
Cov: 568 -> 568
6116
Cov: 568 -> 568
Cov: 568 -> 568
6117
{"exception": "TypeError", "msg": "conv_transpose2d(): argument 'input' must be Tensor, not NoneType"}
6118
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6119
Cov: 568 -> 569
Cov: 569 -> 569
6120
Cov: 569 -> 569
Cov: 569 -> 569
6121
Cov: 569 -> 569
Cov: 569 -> 569
6122
Cov: 569 -> 569
Cov: 569 -> 569
6123
Cov: 569 -> 569
Cov: 569 -> 569
6124
Cov: 569 -> 569
Cov: 569 -> 569
6125
Cov: 569 -> 569
Cov: 569 -> 569
6126
Cov: 569 -> 569
Cov: 569 -> 569
6127
Cov: 569 -> 569
Cov: 569 -> 569
6128
Cov: 569 -> 569
Cov: 569 -> 569
6129
Cov: 569 -> 569
Cov: 569 -> 569
6130
Cov: 569 -> 569
Cov: 569 -> 569
6131
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6132
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6133
Cov: 569 -> 569
Cov: 569 -> 569
6134
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
6135
Cov: 569 -> 21
Cov: 21 -> 21
6136
Cov: 21 -> 22
Cov: 22 -> 22
6137
Cov: 22 -> 291
Cov: 291 -> 291
6138
Cov: 291 -> 306
Cov: 306 -> 306
6139
Cov: 306 -> 336
Cov: 336 -> 336
6140
Cov: 336 -> 336
Cov: 336 -> 336
6141
Cov: 336 -> 359
Cov: 359 -> 359
6142
Cov: 359 -> 359
Cov: 359 -> 359
6143
Cov: 359 -> 360
Cov: 360 -> 360
6144
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6145
Cov: 360 -> 360
Cov: 360 -> 360
6146
Cov: 360 -> 360
Cov: 360 -> 360
6147
Cov: 360 -> 365
Cov: 365 -> 365
6148
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
6149
Cov: 365 -> 367
Cov: 367 -> 367
6150
Cov: 367 -> 367
Cov: 367 -> 367
6151
Cov: 367 -> 372
Cov: 372 -> 372
6152
Cov: 372 -> 372
Cov: 372 -> 372
6153
Cov: 372 -> 372
Cov: 372 -> 372
6154
Cov: 372 -> 372
Cov: 372 -> 372
6155
Cov: 372 -> 372
Cov: 372 -> 372
6156
Cov: 372 -> 372
Cov: 372 -> 372
6157
Cov: 372 -> 372
Cov: 372 -> 372
6158
Cov: 372 -> 372
Cov: 372 -> 372
6159
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden'"}
6160
Cov: 372 -> 372
Cov: 372 -> 372
6161
Cov: 372 -> 372
Cov: 372 -> 372
6162
Cov: 372 -> 372
Cov: 372 -> 372
6163
Cov: 372 -> 372
Cov: 372 -> 372
6164
Cov: 372 -> 372
Cov: 372 -> 372
6165
Cov: 372 -> 389
Cov: 389 -> 389
6166
Cov: 389 -> 390
Cov: 390 -> 390
6167
Cov: 390 -> 390
Cov: 390 -> 390
6168
Cov: 390 -> 391
Cov: 391 -> 391
6169
Cov: 391 -> 391
Cov: 391 -> 391
6170
Cov: 391 -> 391
Cov: 391 -> 391
6171
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6172
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6173
Cov: 391 -> 396
Cov: 396 -> 396
6174
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Permute'"}
6175
Cov: 396 -> 403
Cov: 403 -> 403
6176
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dropout_p' and 'scale_factor'"}
6177
Cov: 403 -> 403
Cov: 403 -> 403
6178
Cov: 403 -> 418
Cov: 418 -> 418
6179
Cov: 418 -> 419
Cov: 419 -> 419
6180
Cov: 419 -> 420
Cov: 420 -> 420
6181
Cov: 420 -> 420
Cov: 420 -> 420
6182
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
6183
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'd'"}
6184
Cov: 420 -> 423
Cov: 423 -> 423
6185
Cov: 423 -> 423
Cov: 423 -> 423
6186
Cov: 423 -> 424
Cov: 424 -> 424
6187
Cov: 424 -> 424
Cov: 424 -> 424
6188
Cov: 424 -> 424
Cov: 424 -> 424
6189
Cov: 424 -> 441
Cov: 441 -> 441
6190
Cov: 441 -> 441
Cov: 441 -> 441
6191
Cov: 441 -> 441
Cov: 441 -> 441
6192
Cov: 441 -> 441
Cov: 441 -> 441
6193
Cov: 441 -> 441
Cov: 441 -> 441
6194
Cov: 441 -> 441
Cov: 441 -> 441
6195
Cov: 441 -> 441
Cov: 441 -> 441
6196
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'output_padding'"}
6197
Cov: 441 -> 441
Cov: 441 -> 441
6198
Cov: 441 -> 441
Cov: 441 -> 441
6199
Cov: 441 -> 441
Cov: 441 -> 441
6200
Cov: 441 -> 441
Cov: 441 -> 441
6201
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6202
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6203
Cov: 441 -> 441
Cov: 441 -> 441
6204
Cov: 441 -> 441
Cov: 441 -> 441
6205
Cov: 441 -> 441
Cov: 441 -> 441
6206
Cov: 441 -> 441
Cov: 441 -> 441
6207
Cov: 441 -> 441
Cov: 441 -> 441
6208
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
6209
Cov: 441 -> 441
Cov: 441 -> 441
6210
Cov: 441 -> 441
Cov: 441 -> 441
6211
Cov: 441 -> 441
Cov: 441 -> 441
6212
Cov: 441 -> 441
Cov: 441 -> 441
6213
Cov: 441 -> 441
Cov: 441 -> 441
6214
Cov: 441 -> 441
Cov: 441 -> 441
6215
Cov: 441 -> 441
Cov: 441 -> 441
6216
Cov: 441 -> 441
Cov: 441 -> 441
6217
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'p1'"}
6218
Cov: 441 -> 466
Cov: 466 -> 466
6219
{"exception": "SyntaxError", "msg": "unmatched ')' (<string>, line 77)"}
6220
Cov: 466 -> 466
Cov: 466 -> 466
6221
Cov: 466 -> 466
Cov: 466 -> 466
6222
Cov: 466 -> 466
Cov: 466 -> 466
6223
Cov: 466 -> 467
Cov: 467 -> 467
6224
Cov: 467 -> 467
Cov: 467 -> 467
6225
Cov: 467 -> 467
Cov: 467 -> 467
6226
Cov: 467 -> 467
Cov: 467 -> 467
6227
Cov: 467 -> 467
Cov: 467 -> 467
6228
Cov: 467 -> 467
Cov: 467 -> 467
6229
Cov: 467 -> 467
Cov: 467 -> 467
6230
Cov: 467 -> 467
Cov: 467 -> 467
6231
Cov: 467 -> 467
Cov: 467 -> 467
6232
Cov: 467 -> 467
Cov: 467 -> 467
6233
Cov: 467 -> 467
Cov: 467 -> 467
6234
Cov: 467 -> 467
Cov: 467 -> 467
6235
Cov: 467 -> 494
Cov: 494 -> 494
6236
Cov: 494 -> 495
Cov: 495 -> 495
6237
Cov: 495 -> 495
Cov: 495 -> 495
6238
Cov: 495 -> 495
Cov: 495 -> 495
6239
Cov: 495 -> 495
Cov: 495 -> 495
6240
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
6241
Cov: 495 -> 143
Cov: 143 -> 143
6242
Cov: 143 -> 143
Cov: 143 -> 143
6243
Cov: 143 -> 143
Cov: 143 -> 143
6244
Cov: 143 -> 163
Cov: 163 -> 163
6245
Cov: 163 -> 237
Cov: 237 -> 237
6246
Cov: 237 -> 238
Cov: 238 -> 238
6247
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6248
Cov: 238 -> 239
Cov: 239 -> 239
6249
Cov: 239 -> 268
Cov: 268 -> 268
6250
Cov: 268 -> 268
Cov: 268 -> 268
6251
Cov: 268 -> 268
Cov: 268 -> 268
6252
Cov: 268 -> 268
Cov: 268 -> 268
6253
Cov: 268 -> 341
Cov: 341 -> 341
6254
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6255
Cov: 341 -> 342
Cov: 342 -> 342
6256
Cov: 342 -> 343
Cov: 343 -> 343
6257
Cov: 343 -> 343
Cov: 343 -> 343
6258
Cov: 343 -> 343
Cov: 343 -> 343
6259
Cov: 343 -> 343
Cov: 343 -> 343
6260
Cov: 343 -> 352
Cov: 352 -> 352
6261
Cov: 352 -> 354
Cov: 354 -> 354
6262
Cov: 354 -> 354
Cov: 354 -> 354
6263
Cov: 354 -> 354
Cov: 354 -> 354
6264
Cov: 354 -> 354
Cov: 354 -> 354
6265
Cov: 354 -> 354
Cov: 354 -> 354
6266
Cov: 354 -> 354
Cov: 354 -> 354
6267
Cov: 354 -> 355
Cov: 355 -> 355
6268
Cov: 355 -> 356
Cov: 356 -> 356
6269
Cov: 356 -> 356
Cov: 356 -> 356
6270
Cov: 356 -> 356
Cov: 356 -> 356
6271
Cov: 356 -> 356
Cov: 356 -> 356
6272
Cov: 356 -> 357
Cov: 357 -> 357
6273
Cov: 357 -> 357
Cov: 357 -> 357
6274
Cov: 357 -> 357
Cov: 357 -> 357
6275
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
6276
Cov: 357 -> 357
Cov: 357 -> 357
6277
Cov: 357 -> 357
Cov: 357 -> 357
6278
Cov: 357 -> 357
Cov: 357 -> 357
6279
Cov: 357 -> 357
Cov: 357 -> 357
6280
Cov: 357 -> 359
Cov: 359 -> 359
6281
Cov: 359 -> 359
Cov: 359 -> 359
6282
Cov: 359 -> 359
Cov: 359 -> 359
6283
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'out_features'"}
6284
Cov: 359 -> 359
Cov: 359 -> 359
6285
Cov: 359 -> 374
Cov: 374 -> 374
6286
Cov: 374 -> 375
Cov: 375 -> 375
6287
Cov: 375 -> 375
Cov: 375 -> 375
6288
Cov: 375 -> 375
Cov: 375 -> 375
6289
Cov: 375 -> 375
Cov: 375 -> 375
6290
Cov: 375 -> 375
Cov: 375 -> 375
6291
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6292
{"exception": "NameError", "msg": "name 'conv' is not defined"}
6293
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6294
Cov: 375 -> 375
Cov: 375 -> 375
6295
Cov: 375 -> 392
Cov: 392 -> 392
6296
Cov: 392 -> 407
Cov: 407 -> 407
6297
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 14)"}
6298
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query', 'key', and 'value'"}
6299
Cov: 407 -> 409
Cov: 409 -> 409
6300
Cov: 409 -> 410
Cov: 410 -> 410
6301
Cov: 410 -> 410
Cov: 410 -> 410
6302
Cov: 410 -> 410
Cov: 410 -> 410
6303
Cov: 410 -> 410
Cov: 410 -> 410
6304
{"exception": "NameError", "msg": "name 'Swish' is not defined"}
6305
Cov: 410 -> 417
Cov: 417 -> 417
6306
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'MatMul'"}
6307
Cov: 417 -> 417
Cov: 417 -> 417
6308
Cov: 417 -> 417
Cov: 417 -> 417
6309
Cov: 417 -> 417
Cov: 417 -> 417
6310
Cov: 417 -> 417
Cov: 417 -> 417
6311
Cov: 417 -> 417
Cov: 417 -> 417
6312
Cov: 417 -> 417
Cov: 417 -> 417
6313
Cov: 417 -> 417
Cov: 417 -> 417
6314
Cov: 417 -> 417
Cov: 417 -> 417
6315
Cov: 417 -> 417
Cov: 417 -> 417
6316
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6317
Cov: 417 -> 419
Cov: 419 -> 419
6318
Cov: 419 -> 419
Cov: 419 -> 419
6319
Cov: 419 -> 419
Cov: 419 -> 419
6320
Cov: 419 -> 419
Cov: 419 -> 419
6321
Cov: 419 -> 419
Cov: 419 -> 419
6322
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 12)"}
6323
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6324
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6325
Cov: 419 -> 419
Cov: 419 -> 419
6326
Cov: 419 -> 419
Cov: 419 -> 419
6327
Cov: 419 -> 419
Cov: 419 -> 419
6328
Cov: 419 -> 422
Cov: 422 -> 422
6329
Cov: 422 -> 422
Cov: 422 -> 422
6330
Cov: 422 -> 422
Cov: 422 -> 422
6331
Cov: 422 -> 422
Cov: 422 -> 422
6332
Cov: 422 -> 422
Cov: 422 -> 422
6333
Cov: 422 -> 422
Cov: 422 -> 422
6334
Cov: 422 -> 422
Cov: 422 -> 422
6335
Cov: 422 -> 422
Cov: 422 -> 422
6336
Cov: 422 -> 422
Cov: 422 -> 422
6337
Cov: 422 -> 422
Cov: 422 -> 422
6338
Cov: 422 -> 422
Cov: 422 -> 422
6339
Cov: 422 -> 422
Cov: 422 -> 422
6340
Cov: 422 -> 422
Cov: 422 -> 422
6341
Cov: 422 -> 422
Cov: 422 -> 422
6342
Cov: 422 -> 423
Cov: 423 -> 423
6343
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'bias'"}
6344
Cov: 423 -> 423
Cov: 423 -> 423
6345
Cov: 423 -> 424
Cov: 424 -> 424
6346
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6347
Cov: 424 -> 424
Cov: 424 -> 424
6348
Cov: 424 -> 424
Cov: 424 -> 424
6349
Cov: 424 -> 424
Cov: 424 -> 424
6350
Cov: 424 -> 424
Cov: 424 -> 424
6351
Cov: 424 -> 430
Cov: 430 -> 430
6352
Cov: 430 -> 431
Cov: 431 -> 431
6353
Cov: 431 -> 431
Cov: 431 -> 431
6354
Cov: 431 -> 431
Cov: 431 -> 431
6355
Cov: 431 -> 431
Cov: 431 -> 431
6356
{"exception": "TypeError", "msg": "Model.__init__() takes 1 positional argument but 4 were given"}
6357
Cov: 431 -> 433
Cov: 433 -> 433
6358
Cov: 433 -> 433
Cov: 433 -> 433
6359
Cov: 433 -> 433
Cov: 433 -> 433
6360
Cov: 433 -> 433
Cov: 433 -> 433
6361
Cov: 433 -> 433
Cov: 433 -> 433
6362
Cov: 433 -> 433
Cov: 433 -> 433
6363
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6364
Cov: 433 -> 433
Cov: 433 -> 433
6365
Cov: 433 -> 433
Cov: 433 -> 433
6366
Cov: 433 -> 433
Cov: 433 -> 433
6367
Cov: 433 -> 433
Cov: 433 -> 433
6368
Cov: 433 -> 433
Cov: 433 -> 433
6369
Cov: 433 -> 433
Cov: 433 -> 433
6370
Cov: 433 -> 433
Cov: 433 -> 433
6371
Cov: 433 -> 433
Cov: 433 -> 433
6372
Cov: 433 -> 433
Cov: 433 -> 433
6373
Cov: 433 -> 433
Cov: 433 -> 433
6374
Cov: 433 -> 433
Cov: 433 -> 433
6375
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6376
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6377
Cov: 433 -> 433
Cov: 433 -> 433
6378
Cov: 433 -> 433
Cov: 433 -> 433
6379
Cov: 433 -> 433
Cov: 433 -> 433
6380
Cov: 433 -> 433
Cov: 433 -> 433
6381
Cov: 433 -> 470
Cov: 470 -> 470
6382
Cov: 470 -> 470
Cov: 470 -> 470
6383
Cov: 470 -> 470
Cov: 470 -> 470
6384
Cov: 470 -> 471
Cov: 471 -> 471
6385
Cov: 471 -> 471
Cov: 471 -> 471
6386
Cov: 471 -> 471
Cov: 471 -> 471
6387
Cov: 471 -> 471
Cov: 471 -> 471
6388
Cov: 471 -> 471
Cov: 471 -> 471
6389
Cov: 471 -> 472
Cov: 472 -> 472
6390
Cov: 472 -> 472
Cov: 472 -> 472
6391
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
6392
{"exception": "TypeError", "msg": "empty() received an invalid combination of arguments - got (tuple, dtype=NoneType, device=bool), but expected one of:\n * (tuple of ints size, *, tuple of names names, torch.memory_format memory_format, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, torch.memory_format memory_format, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n"}
6393
Cov: 472 -> 473
Cov: 473 -> 473
6394
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query_dim', 'key_dim', and 'n_head'"}
6395
Cov: 473 -> 473
Cov: 473 -> 473
6396
Cov: 473 -> 473
Cov: 473 -> 473
6397
Cov: 473 -> 473
Cov: 473 -> 473
6398
Cov: 473 -> 473
Cov: 473 -> 473
6399
Cov: 473 -> 473
Cov: 473 -> 473
6400
Cov: 473 -> 473
Cov: 473 -> 473
6401
Cov: 473 -> 473
Cov: 473 -> 473
6402
Cov: 473 -> 473
Cov: 473 -> 473
6403
Cov: 473 -> 473
Cov: 473 -> 473
6404
Cov: 473 -> 473
Cov: 473 -> 473
6405
Cov: 473 -> 473
Cov: 473 -> 473
6406
Cov: 473 -> 473
Cov: 473 -> 473
6407
Cov: 473 -> 473
Cov: 473 -> 473
6408
Cov: 473 -> 473
Cov: 473 -> 473
6409
Cov: 473 -> 473
Cov: 473 -> 473
6410
Cov: 473 -> 473
Cov: 473 -> 473
6411
Cov: 473 -> 473
Cov: 473 -> 473
6412
Cov: 473 -> 473
Cov: 473 -> 473
6413
Cov: 473 -> 486
Cov: 486 -> 486
6414
Cov: 486 -> 486
Cov: 486 -> 486
6415
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6416
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6417
Cov: 486 -> 486
Cov: 486 -> 486
6418
Cov: 486 -> 486
Cov: 486 -> 486
6419
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'num_heads', 'embed_dim', and 'dropout_p'"}
6420
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'hidden_size'"}
6421
Cov: 486 -> 486
Cov: 486 -> 486
6422
Cov: 486 -> 486
Cov: 486 -> 486
6423
Cov: 486 -> 486
Cov: 486 -> 486
6424
Cov: 486 -> 486
Cov: 486 -> 486
6425
Cov: 486 -> 486
Cov: 486 -> 486
6426
Cov: 486 -> 486
Cov: 486 -> 486
6427
{"exception": "RuntimeError", "msg": "mat1 and mat2 shapes cannot be multiplied (256x10 and 256x128)"}
6428
Cov: 486 -> 487
Cov: 487 -> 487
6429
Cov: 487 -> 487
Cov: 487 -> 487
6430
Cov: 487 -> 487
Cov: 487 -> 487
6431
Cov: 487 -> 487
Cov: 487 -> 487
6432
Cov: 487 -> 487
Cov: 487 -> 487
6433
Cov: 487 -> 487
Cov: 487 -> 487
6434
Cov: 487 -> 508
Cov: 508 -> 508
6435
Cov: 508 -> 508
Cov: 508 -> 508
6436
Cov: 508 -> 508
Cov: 508 -> 508
6437
Cov: 508 -> 508
Cov: 508 -> 508
6438
Cov: 508 -> 508
Cov: 508 -> 508
6439
Cov: 508 -> 508
Cov: 508 -> 508
6440
Cov: 508 -> 508
Cov: 508 -> 508
6441
Cov: 508 -> 508
Cov: 508 -> 508
6442
Cov: 508 -> 508
Cov: 508 -> 508
6443
Cov: 508 -> 508
Cov: 508 -> 508
6444
Cov: 508 -> 508
Cov: 508 -> 508
6445
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6446
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6447
Cov: 508 -> 508
Cov: 508 -> 508
6448
Cov: 508 -> 508
Cov: 508 -> 508
6449
Cov: 508 -> 508
Cov: 508 -> 508
6450
Cov: 508 -> 508
Cov: 508 -> 508
6451
Cov: 508 -> 508
Cov: 508 -> 508
6452
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
6453
Cov: 508 -> 508
Cov: 508 -> 508
6454
Cov: 508 -> 508
Cov: 508 -> 508
6455
Cov: 508 -> 508
Cov: 508 -> 508
6456
Cov: 508 -> 508
Cov: 508 -> 508
6457
Cov: 508 -> 508
Cov: 508 -> 508
6458
Cov: 508 -> 508
Cov: 508 -> 508
6459
Cov: 508 -> 508
Cov: 508 -> 508
6460
Cov: 508 -> 508
Cov: 508 -> 508
6461
Cov: 508 -> 508
Cov: 508 -> 508
6462
Cov: 508 -> 508
Cov: 508 -> 508
6463
Cov: 508 -> 508
Cov: 508 -> 508
6464
Cov: 508 -> 508
Cov: 508 -> 508
6465
Cov: 508 -> 508
Cov: 508 -> 508
6466
Cov: 508 -> 508
Cov: 508 -> 508
6467
Cov: 508 -> 508
Cov: 508 -> 508
6468
Cov: 508 -> 508
Cov: 508 -> 508
6469
Cov: 508 -> 508
Cov: 508 -> 508
6470
Cov: 508 -> 508
Cov: 508 -> 508
6471
Cov: 508 -> 508
Cov: 508 -> 508
6472
Cov: 508 -> 508
Cov: 508 -> 508
6473
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6474
Cov: 508 -> 508
Cov: 508 -> 508
6475
Cov: 508 -> 508
Cov: 508 -> 508
6476
Cov: 508 -> 508
Cov: 508 -> 508
6477
Cov: 508 -> 508
Cov: 508 -> 508
6478
Cov: 508 -> 525
Cov: 525 -> 525
6479
Cov: 525 -> 528
Cov: 528 -> 528
6480
Cov: 528 -> 532
Cov: 532 -> 532
6481
Cov: 532 -> 532
Cov: 532 -> 532
6482
Cov: 532 -> 532
Cov: 532 -> 532
6483
Cov: 532 -> 532
Cov: 532 -> 532
6484
Cov: 532 -> 532
Cov: 532 -> 532
6485
Cov: 532 -> 532
Cov: 532 -> 532
6486
Cov: 532 -> 532
Cov: 532 -> 532
6487
Cov: 532 -> 533
Cov: 533 -> 533
6488
Cov: 533 -> 533
Cov: 533 -> 533
6489
Cov: 533 -> 533
Cov: 533 -> 533
6490
Cov: 533 -> 533
Cov: 533 -> 533
6491
Cov: 533 -> 533
Cov: 533 -> 533
6492
Cov: 533 -> 533
Cov: 533 -> 533
6493
Cov: 533 -> 533
Cov: 533 -> 533
6494
Cov: 533 -> 533
Cov: 533 -> 533
6495
Cov: 533 -> 533
Cov: 533 -> 533
6496
Cov: 533 -> 533
Cov: 533 -> 533
6497
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6498
Cov: 533 -> 533
Cov: 533 -> 533
6499
Cov: 533 -> 533
Cov: 533 -> 533
6500
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
6501
Cov: 533 -> 21
Cov: 21 -> 21
6502
Cov: 21 -> 22
Cov: 22 -> 22
6503
Cov: 22 -> 282
Cov: 282 -> 282
6504
Cov: 282 -> 305
Cov: 305 -> 305
6505
Cov: 305 -> 334
Cov: 334 -> 334
6506
Cov: 334 -> 334
Cov: 334 -> 334
6507
Cov: 334 -> 357
Cov: 357 -> 357
6508
Cov: 357 -> 357
Cov: 357 -> 357
6509
Cov: 357 -> 357
Cov: 357 -> 357
6510
Cov: 357 -> 357
Cov: 357 -> 357
6511
Cov: 357 -> 360
Cov: 360 -> 360
6512
Cov: 360 -> 360
Cov: 360 -> 360
6513
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
6514
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'stride'"}
6515
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'num_heads', 'd_model', and 'dropout_p'"}
6516
Cov: 360 -> 361
Cov: 361 -> 361
6517
Cov: 361 -> 361
Cov: 361 -> 361
6518
Cov: 361 -> 366
Cov: 366 -> 366
6519
Cov: 366 -> 366
Cov: 366 -> 366
6520
Cov: 366 -> 366
Cov: 366 -> 366
6521
Cov: 366 -> 369
Cov: 369 -> 369
6522
Cov: 369 -> 369
Cov: 369 -> 369
6523
Cov: 369 -> 369
Cov: 369 -> 369
6524
Cov: 369 -> 369
Cov: 369 -> 369
6525
Cov: 369 -> 369
Cov: 369 -> 369
6526
Cov: 369 -> 369
Cov: 369 -> 369
6527
Cov: 369 -> 370
Cov: 370 -> 370
6528
Cov: 370 -> 370
Cov: 370 -> 370
6529
Cov: 370 -> 370
Cov: 370 -> 370
6530
Cov: 370 -> 370
Cov: 370 -> 370
6531
Cov: 370 -> 370
Cov: 370 -> 370
6532
Cov: 370 -> 372
Cov: 372 -> 372
6533
Cov: 372 -> 372
Cov: 372 -> 372
6534
Cov: 372 -> 372
Cov: 372 -> 372
6535
Cov: 372 -> 372
Cov: 372 -> 372
6536
Cov: 372 -> 372
Cov: 372 -> 372
6537
Cov: 372 -> 372
Cov: 372 -> 372
6538
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
6539
Cov: 372 -> 372
Cov: 372 -> 372
6540
Cov: 372 -> 372
Cov: 372 -> 372
6541
Cov: 372 -> 372
Cov: 372 -> 372
6542
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'weight'"}
6543
Cov: 372 -> 373
Cov: 373 -> 373
6544
Cov: 373 -> 373
Cov: 373 -> 373
6545
Cov: 373 -> 374
Cov: 374 -> 374
6546
Cov: 374 -> 374
Cov: 374 -> 374
6547
Cov: 374 -> 374
Cov: 374 -> 374
6548
Cov: 374 -> 374
Cov: 374 -> 374
6549
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'in_features'"}
6550
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'n_qkv', 'n_head', 'd_qk', and 'd_v'"}
6551
Cov: 374 -> 374
Cov: 374 -> 374
6552
Cov: 374 -> 374
Cov: 374 -> 374
6553
Cov: 374 -> 374
Cov: 374 -> 374
6554
Cov: 374 -> 374
Cov: 374 -> 374
6555
Cov: 374 -> 374
Cov: 374 -> 374
6556
Cov: 374 -> 374
Cov: 374 -> 374
6557
Cov: 374 -> 374
Cov: 374 -> 374
6558
Cov: 374 -> 374
Cov: 374 -> 374
6559
Cov: 374 -> 374
Cov: 374 -> 374
6560
Cov: 374 -> 374
Cov: 374 -> 374
6561
Cov: 374 -> 374
Cov: 374 -> 374
6562
Cov: 374 -> 374
Cov: 374 -> 374
6563
Cov: 374 -> 374
Cov: 374 -> 374
6564
Cov: 374 -> 374
Cov: 374 -> 374
6565
Cov: 374 -> 374
Cov: 374 -> 374
6566
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
6567
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6568
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6569
Cov: 374 -> 374
Cov: 374 -> 374
6570
Cov: 374 -> 374
Cov: 374 -> 374
6571
Cov: 374 -> 374
Cov: 374 -> 374
6572
Cov: 374 -> 374
Cov: 374 -> 374
6573
Cov: 374 -> 374
Cov: 374 -> 374
6574
Cov: 374 -> 374
Cov: 374 -> 374
6575
Cov: 374 -> 374
Cov: 374 -> 374
6576
Cov: 374 -> 374
Cov: 374 -> 374
6577
Cov: 374 -> 374
Cov: 374 -> 374
6578
Cov: 374 -> 374
Cov: 374 -> 374
6579
Cov: 374 -> 374
Cov: 374 -> 374
6580
Cov: 374 -> 374
Cov: 374 -> 374
6581
Cov: 374 -> 374
Cov: 374 -> 374
6582
Cov: 374 -> 374
Cov: 374 -> 374
6583
Cov: 374 -> 374
Cov: 374 -> 374
6584
Cov: 374 -> 374
Cov: 374 -> 374
6585
Cov: 374 -> 374
Cov: 374 -> 374
6586
Cov: 374 -> 374
Cov: 374 -> 374
6587
Cov: 374 -> 374
Cov: 374 -> 374
6588
Cov: 374 -> 374
Cov: 374 -> 374
6589
Cov: 374 -> 374
Cov: 374 -> 374
6590
Cov: 374 -> 374
Cov: 374 -> 374
6591
Cov: 374 -> 374
Cov: 374 -> 374
6592
Cov: 374 -> 374
Cov: 374 -> 374
6593
Cov: 374 -> 374
Cov: 374 -> 374
6594
Cov: 374 -> 374
Cov: 374 -> 374
6595
Cov: 374 -> 374
Cov: 374 -> 374
6596
Cov: 374 -> 374
Cov: 374 -> 374
6597
Cov: 374 -> 374
Cov: 374 -> 374
6598
Cov: 374 -> 374
Cov: 374 -> 374
6599
Cov: 374 -> 374
Cov: 374 -> 374
6600
Cov: 374 -> 374
Cov: 374 -> 374
6601
{"exception": "NameError", "msg": "name 'SimpleModule' is not defined"}
6602
Cov: 374 -> 374
Cov: 374 -> 374
6603
Cov: 374 -> 374
Cov: 374 -> 374
6604
Cov: 374 -> 374
Cov: 374 -> 374
6605
Cov: 374 -> 375
Cov: 375 -> 375
6606
Cov: 375 -> 375
Cov: 375 -> 375
6607
Cov: 375 -> 375
Cov: 375 -> 375
6608
Cov: 375 -> 375
Cov: 375 -> 375
6609
Cov: 375 -> 375
Cov: 375 -> 375
6610
Cov: 375 -> 376
Cov: 376 -> 376
6611
Cov: 376 -> 376
Cov: 376 -> 376
6612
Cov: 376 -> 376
Cov: 376 -> 376
6613
Cov: 376 -> 376
Cov: 376 -> 376
6614
Cov: 376 -> 376
Cov: 376 -> 376
6615
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
6616
Cov: 376 -> 412
Cov: 412 -> 412
6617
Cov: 412 -> 412
Cov: 412 -> 412
6618
Cov: 412 -> 412
Cov: 412 -> 412
6619
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6620
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6621
Cov: 412 -> 413
Cov: 413 -> 413
6622
Cov: 413 -> 414
Cov: 414 -> 414
6623
Cov: 414 -> 414
Cov: 414 -> 414
6624
Cov: 414 -> 414
Cov: 414 -> 414
6625
Cov: 414 -> 414
Cov: 414 -> 414
6626
Cov: 414 -> 414
Cov: 414 -> 414
6627
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6628
Cov: 414 -> 416
Cov: 416 -> 416
6629
Cov: 416 -> 416
Cov: 416 -> 416
6630
Cov: 416 -> 416
Cov: 416 -> 416
6631
Cov: 416 -> 416
Cov: 416 -> 416
6632
Cov: 416 -> 417
Cov: 417 -> 417
6633
Cov: 417 -> 417
Cov: 417 -> 417
6634
Cov: 417 -> 417
Cov: 417 -> 417
6635
Cov: 417 -> 417
Cov: 417 -> 417
6636
Cov: 417 -> 417
Cov: 417 -> 417
6637
{"exception": "RuntimeError", "msg": "\"normal_kernel_cpu\" not implemented for 'Bool'"}
6638
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6639
Cov: 417 -> 425
Cov: 425 -> 425
6640
Cov: 425 -> 425
Cov: 425 -> 425
6641
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'size' and 'dim'"}
6642
{"exception": "NameError", "msg": "name 'shape' is not defined"}
6643
Cov: 425 -> 425
Cov: 425 -> 425
6644
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
6645
Cov: 425 -> 425
Cov: 425 -> 425
6646
Cov: 425 -> 444
Cov: 444 -> 444
6647
Cov: 444 -> 444
Cov: 444 -> 444
6648
Cov: 444 -> 444
Cov: 444 -> 444
6649
Cov: 444 -> 470
Cov: 470 -> 470
6650
Cov: 470 -> 484
Cov: 484 -> 484
6651
Cov: 484 -> 484
Cov: 484 -> 484
6652
Cov: 484 -> 484
Cov: 484 -> 484
6653
Cov: 484 -> 484
Cov: 484 -> 484
6654
Cov: 484 -> 484
Cov: 484 -> 484
6655
Cov: 484 -> 484
Cov: 484 -> 484
6656
Cov: 484 -> 484
Cov: 484 -> 484
6657
Cov: 484 -> 484
Cov: 484 -> 484
6658
Cov: 484 -> 485
Cov: 485 -> 485
6659
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6660
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6661
Cov: 485 -> 487
Cov: 487 -> 487
6662
Cov: 487 -> 487
Cov: 487 -> 487
6663
{"exception": "NameError", "msg": "name 'E_DIM' is not defined"}
6664
Cov: 487 -> 487
Cov: 487 -> 487
6665
Cov: 487 -> 487
Cov: 487 -> 487
6666
Cov: 487 -> 487
Cov: 487 -> 487
6667
Cov: 487 -> 487
Cov: 487 -> 487
6668
Cov: 487 -> 487
Cov: 487 -> 487
6669
Cov: 487 -> 491
Cov: 491 -> 491
6670
Cov: 491 -> 491
Cov: 491 -> 491
6671
{"exception": "RuntimeError", "msg": "a Tensor with 2 elements cannot be converted to Scalar"}
6672
{"exception": "RuntimeError", "msg": "Expected size for first two dimensions of batch2 tensor to be: [2, 10] but got: [2, 20]."}
6673
Cov: 491 -> 504
Cov: 504 -> 504
6674
Cov: 504 -> 504
Cov: 504 -> 504
6675
Cov: 504 -> 504
Cov: 504 -> 504
6676
Cov: 504 -> 504
Cov: 504 -> 504
6677
Cov: 504 -> 504
Cov: 504 -> 504
6678
Cov: 504 -> 504
Cov: 504 -> 504
6679
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
6680
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
6681
Cov: 504 -> 519
Cov: 519 -> 519
6682
Cov: 519 -> 519
Cov: 519 -> 519
6683
Cov: 519 -> 519
Cov: 519 -> 519
6684
Cov: 519 -> 519
Cov: 519 -> 519
6685
Cov: 519 -> 519
Cov: 519 -> 519
6686
Cov: 519 -> 519
Cov: 519 -> 519
6687
Cov: 519 -> 519
Cov: 519 -> 519
6688
Cov: 519 -> 519
Cov: 519 -> 519
6689
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6690
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6691
Cov: 519 -> 519
Cov: 519 -> 519
6692
Cov: 519 -> 519
Cov: 519 -> 519
6693
Cov: 519 -> 519
Cov: 519 -> 519
6694
Cov: 519 -> 519
Cov: 519 -> 519
6695
Cov: 519 -> 519
Cov: 519 -> 519
6696
Cov: 519 -> 519
Cov: 519 -> 519
6697
Cov: 519 -> 519
Cov: 519 -> 519
6698
Cov: 519 -> 519
Cov: 519 -> 519
6699
Cov: 519 -> 519
Cov: 519 -> 519
6700
Cov: 519 -> 519
Cov: 519 -> 519
6701
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
6702
Cov: 519 -> 519
Cov: 519 -> 519
6703
Cov: 519 -> 519
Cov: 519 -> 519
6704
Cov: 519 -> 519
Cov: 519 -> 519
6705
Cov: 519 -> 519
Cov: 519 -> 519
6706
Cov: 519 -> 519
Cov: 519 -> 519
6707
Cov: 519 -> 519
Cov: 519 -> 519
6708
Cov: 519 -> 519
Cov: 519 -> 519
6709
Cov: 519 -> 547
Cov: 547 -> 547
6710
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 17)"}
6711
Cov: 547 -> 550
Cov: 550 -> 550
6712
Cov: 550 -> 550
Cov: 550 -> 550
6713
Cov: 550 -> 550
Cov: 550 -> 550
6714
Cov: 550 -> 550
Cov: 550 -> 550
6715
Cov: 550 -> 550
Cov: 550 -> 550
6716
Cov: 550 -> 550
Cov: 550 -> 550
6717
Cov: 550 -> 550
Cov: 550 -> 550
6718
Cov: 550 -> 550
Cov: 550 -> 550
6719
Cov: 550 -> 550
Cov: 550 -> 550
6720
Cov: 550 -> 550
Cov: 550 -> 550
6721
Cov: 550 -> 550
Cov: 550 -> 550
6722
Cov: 550 -> 550
Cov: 550 -> 550
6723
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6724
{"exception": "NameError", "msg": "name 'Block' is not defined"}
6725
Cov: 550 -> 553
Cov: 553 -> 553
6726
Cov: 553 -> 553
Cov: 553 -> 553
6727
Cov: 553 -> 553
Cov: 553 -> 553
6728
Cov: 553 -> 553
Cov: 553 -> 553
6729
Cov: 553 -> 553
Cov: 553 -> 553
6730
Cov: 553 -> 553
Cov: 553 -> 553
6731
Cov: 553 -> 553
Cov: 553 -> 553
6732
Cov: 553 -> 553
Cov: 553 -> 553
6733
Cov: 553 -> 553
Cov: 553 -> 553
6734
Cov: 553 -> 553
Cov: 553 -> 553
6735
Cov: 553 -> 553
Cov: 553 -> 553
6736
Cov: 553 -> 554
Cov: 554 -> 554
6737
Cov: 554 -> 554
Cov: 554 -> 554
6738
Cov: 554 -> 554
Cov: 554 -> 554
6739
Cov: 554 -> 554
Cov: 554 -> 554
6740
Cov: 554 -> 554
Cov: 554 -> 554
6741
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6742
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6743
Cov: 554 -> 554
Cov: 554 -> 554
6744
Cov: 554 -> 554
Cov: 554 -> 554
6745
Cov: 554 -> 554
Cov: 554 -> 554
6746
Cov: 554 -> 554
Cov: 554 -> 554
6747
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6748
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6749
Cov: 554 -> 554
Cov: 554 -> 554
6750
Cov: 554 -> 556
Cov: 556 -> 556
6751
Cov: 556 -> 556
Cov: 556 -> 556
6752
Cov: 556 -> 556
Cov: 556 -> 556
6753
Cov: 556 -> 556
Cov: 556 -> 556
6754
Cov: 556 -> 556
Cov: 556 -> 556
6755
Cov: 556 -> 556
Cov: 556 -> 556
6756
Cov: 556 -> 556
Cov: 556 -> 556
6757
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_channels'"}
6758
Cov: 556 -> 556
Cov: 556 -> 556
6759
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 33)"}
6760
{"exception": "NameError", "msg": "name 'math' is not defined"}
6761
Cov: 556 -> 556
Cov: 556 -> 556
6762
Cov: 556 -> 556
Cov: 556 -> 556
6763
Cov: 556 -> 556
Cov: 556 -> 556
6764
Cov: 556 -> 556
Cov: 556 -> 556
6765
Cov: 556 -> 556
Cov: 556 -> 556
6766
Cov: 556 -> 556
Cov: 556 -> 556
6767
Cov: 556 -> 556
Cov: 556 -> 556
6768
Cov: 556 -> 556
Cov: 556 -> 556
6769
Cov: 556 -> 556
Cov: 556 -> 556
6770
Cov: 556 -> 556
Cov: 556 -> 556
6771
Cov: 556 -> 556
Cov: 556 -> 556
6772
Cov: 556 -> 556
Cov: 556 -> 556
6773
{"exception": "NameError", "msg": "name 'input_size' is not defined"}
6774
Cov: 556 -> 556
Cov: 556 -> 556
6775
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6776
Cov: 556 -> 556
Cov: 556 -> 556
6777
Cov: 556 -> 556
Cov: 556 -> 556
6778
Cov: 556 -> 556
Cov: 556 -> 556
6779
Cov: 556 -> 556
Cov: 556 -> 556
6780
Cov: 556 -> 556
Cov: 556 -> 556
6781
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6782
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6783
Cov: 556 -> 556
Cov: 556 -> 556
6784
Cov: 556 -> 556
Cov: 556 -> 556
6785
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'd_q', 'd_v', 'n_heads', and 'dropout_p'"}
6786
{"exception": "NameError", "msg": "name 'math' is not defined"}
6787
Cov: 556 -> 556
Cov: 556 -> 556
6788
Cov: 556 -> 556
Cov: 556 -> 556
6789
Cov: 556 -> 556
Cov: 556 -> 556
6790
Cov: 556 -> 556
Cov: 556 -> 556
6791
Cov: 556 -> 556
Cov: 556 -> 556
6792
Cov: 556 -> 557
Cov: 557 -> 557
6793
Cov: 557 -> 557
Cov: 557 -> 557
6794
{"exception": "TypeError", "msg": "__init__() missing 1 required keyword-only argument: 'dropout_p'"}
6795
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6796
Cov: 557 -> 557
Cov: 557 -> 557
6797
Cov: 557 -> 557
Cov: 557 -> 557
6798
Cov: 557 -> 557
Cov: 557 -> 557
6799
Cov: 557 -> 557
Cov: 557 -> 557
6800
Cov: 557 -> 557
Cov: 557 -> 557
6801
Cov: 557 -> 557
Cov: 557 -> 557
6802
Cov: 557 -> 557
Cov: 557 -> 557
6803
Cov: 557 -> 557
Cov: 557 -> 557
6804
Cov: 557 -> 557
Cov: 557 -> 557
6805
Cov: 557 -> 557
Cov: 557 -> 557
6806
Cov: 557 -> 557
Cov: 557 -> 557
6807
Cov: 557 -> 557
Cov: 557 -> 557
6808
Cov: 557 -> 557
Cov: 557 -> 557
6809
Cov: 557 -> 557
Cov: 557 -> 557
6810
Cov: 557 -> 563
Cov: 563 -> 563
6811
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6812
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6813
Cov: 563 -> 563
Cov: 563 -> 563
6814
Cov: 563 -> 563
Cov: 563 -> 563
6815
Cov: 563 -> 563
Cov: 563 -> 563
6816
Cov: 563 -> 563
Cov: 563 -> 563
6817
Cov: 563 -> 563
Cov: 563 -> 563
6818
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
6819
Cov: 563 -> 563
Cov: 563 -> 563
6820
Cov: 563 -> 563
Cov: 563 -> 563
6821
Cov: 563 -> 563
Cov: 563 -> 563
6822
Cov: 563 -> 563
Cov: 563 -> 563
6823
Cov: 563 -> 563
Cov: 563 -> 563
6824
Cov: 563 -> 563
Cov: 563 -> 563
6825
Cov: 563 -> 563
Cov: 563 -> 563
6826
Cov: 563 -> 563
Cov: 563 -> 563
6827
Cov: 563 -> 563
Cov: 563 -> 563
6828
Cov: 563 -> 563
Cov: 563 -> 563
6829
Cov: 563 -> 563
Cov: 563 -> 563
6830
Cov: 563 -> 563
Cov: 563 -> 563
6831
Cov: 563 -> 563
Cov: 563 -> 563
6832
Cov: 563 -> 563
Cov: 563 -> 563
6833
Cov: 563 -> 563
Cov: 563 -> 563
6834
{"exception": "SyntaxError", "msg": "keyword argument repeated (<string>, line 7)"}
6835
Cov: 563 -> 563
Cov: 563 -> 563
6836
Cov: 563 -> 563
Cov: 563 -> 563
6837
Cov: 563 -> 563
Cov: 563 -> 563
6838
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
6839
Cov: 563 -> 563
Cov: 563 -> 563
6840
Cov: 563 -> 563
Cov: 563 -> 563
6841
Cov: 563 -> 563
Cov: 563 -> 563
6842
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 13)"}
6843
Cov: 563 -> 563
Cov: 563 -> 563
6844
Cov: 563 -> 563
Cov: 563 -> 563
6845
Cov: 563 -> 579
Cov: 579 -> 579
6846
Cov: 579 -> 581
Cov: 581 -> 581
6847
Cov: 581 -> 581
Cov: 581 -> 581
6848
Cov: 581 -> 581
Cov: 581 -> 581
6849
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6850
Cov: 581 -> 581
Cov: 581 -> 581
6851
{"exception": "NameError", "msg": "name 'F' is not defined"}
6852
Cov: 581 -> 585
Cov: 585 -> 585
6853
Cov: 585 -> 585
Cov: 585 -> 585
6854
Cov: 585 -> 585
Cov: 585 -> 585
6855
Cov: 585 -> 585
Cov: 585 -> 585
6856
{"exception": "ValueError", "msg": "groups must be a positive integer"}
6857
Cov: 585 -> 587
Cov: 587 -> 587
6858
Cov: 587 -> 587
Cov: 587 -> 587
6859
Cov: 587 -> 587
Cov: 587 -> 587
6860
Cov: 587 -> 587
Cov: 587 -> 587
6861
Cov: 587 -> 587
Cov: 587 -> 587
6862
Cov: 587 -> 587
Cov: 587 -> 587
6863
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6864
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6865
Cov: 587 -> 587
Cov: 587 -> 587
6866
Cov: 587 -> 587
Cov: 587 -> 587
6867
Cov: 587 -> 587
Cov: 587 -> 587
6868
Cov: 587 -> 587
Cov: 587 -> 587
6869
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6870
Cov: 587 -> 588
Cov: 588 -> 588
6871
Cov: 588 -> 588
Cov: 588 -> 588
6872
Cov: 588 -> 588
Cov: 588 -> 588
6873
Cov: 588 -> 588
Cov: 588 -> 588
6874
Cov: 588 -> 588
Cov: 588 -> 588
6875
Cov: 588 -> 588
Cov: 588 -> 588
6876
Cov: 588 -> 588
Cov: 588 -> 588
6877
Cov: 588 -> 588
Cov: 588 -> 588
6878
Cov: 588 -> 588
Cov: 588 -> 588
6879
Cov: 588 -> 588
Cov: 588 -> 588
6880
Cov: 588 -> 589
Cov: 589 -> 589
6881
Cov: 589 -> 590
Cov: 590 -> 590
6882
Cov: 590 -> 590
Cov: 590 -> 590
6883
Cov: 590 -> 590
Cov: 590 -> 590
6884
Cov: 590 -> 590
Cov: 590 -> 590
6885
Cov: 590 -> 590
Cov: 590 -> 590
6886
Cov: 590 -> 591
Cov: 591 -> 591
6887
Cov: 591 -> 592
Cov: 592 -> 592
6888
Cov: 592 -> 592
Cov: 592 -> 592
6889
Cov: 592 -> 592
Cov: 592 -> 592
6890
Cov: 592 -> 592
Cov: 592 -> 592
6891
Cov: 592 -> 592
Cov: 592 -> 592
6892
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
6893
Cov: 592 -> 142
Cov: 142 -> 142
6894
Cov: 142 -> 143
Cov: 143 -> 143
6895
Cov: 143 -> 143
Cov: 143 -> 143
6896
Cov: 143 -> 143
Cov: 143 -> 143
6897
Cov: 143 -> 226
Cov: 226 -> 226
6898
Cov: 226 -> 243
Cov: 243 -> 243
6899
Cov: 243 -> 243
Cov: 243 -> 243
6900
Cov: 243 -> 243
Cov: 243 -> 243
6901
Cov: 243 -> 263
Cov: 263 -> 263
6902
Cov: 263 -> 266
Cov: 266 -> 266
6903
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6904
{"exception": "NameError", "msg": "name 'Model' is not defined"}
6905
Cov: 266 -> 271
Cov: 271 -> 271
6906
Cov: 271 -> 272
Cov: 272 -> 272
6907
Cov: 272 -> 280
Cov: 280 -> 280
6908
Cov: 280 -> 281
Cov: 281 -> 281
6909
Cov: 281 -> 282
Cov: 282 -> 282
6910
Cov: 282 -> 283
Cov: 283 -> 283
6911
Cov: 283 -> 284
Cov: 284 -> 284
6912
Cov: 284 -> 284
Cov: 284 -> 284
6913
Cov: 284 -> 357
Cov: 357 -> 357
6914
Cov: 357 -> 357
Cov: 357 -> 357
6915
{"exception": "NameError", "msg": "name 'configuration' is not defined"}
6916
Cov: 357 -> 363
Cov: 363 -> 363
6917
Cov: 363 -> 363
Cov: 363 -> 363
6918
Cov: 363 -> 363
Cov: 363 -> 363
6919
Cov: 363 -> 363
Cov: 363 -> 363
6920
Cov: 363 -> 363
Cov: 363 -> 363
6921
Cov: 363 -> 363
Cov: 363 -> 363
6922
Cov: 363 -> 363
Cov: 363 -> 363
6923
Cov: 363 -> 363
Cov: 363 -> 363
6924
Cov: 363 -> 363
Cov: 363 -> 363
6925
Cov: 363 -> 363
Cov: 363 -> 363
6926
Cov: 363 -> 363
Cov: 363 -> 363
6927
Cov: 363 -> 364
Cov: 364 -> 364
6928
Cov: 364 -> 364
Cov: 364 -> 364
6929
Cov: 364 -> 364
Cov: 364 -> 364
6930
Cov: 364 -> 364
Cov: 364 -> 364
6931
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
6932
Cov: 364 -> 364
Cov: 364 -> 364
6933
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6934
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6935
Cov: 364 -> 364
Cov: 364 -> 364
6936
Cov: 364 -> 364
Cov: 364 -> 364
6937
Cov: 364 -> 364
Cov: 364 -> 364
6938
Cov: 364 -> 364
Cov: 364 -> 364
6939
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 13)"}
6940
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
6941
Cov: 364 -> 364
Cov: 364 -> 364
6942
Cov: 364 -> 364
Cov: 364 -> 364
6943
Cov: 364 -> 364
Cov: 364 -> 364
6944
Cov: 364 -> 364
Cov: 364 -> 364
6945
Cov: 364 -> 364
Cov: 364 -> 364
6946
Cov: 364 -> 364
Cov: 364 -> 364
6947
Cov: 364 -> 364
Cov: 364 -> 364
6948
Cov: 364 -> 364
Cov: 364 -> 364
6949
Cov: 364 -> 364
Cov: 364 -> 364
6950
Cov: 364 -> 364
Cov: 364 -> 364
6951
Cov: 364 -> 364
Cov: 364 -> 364
6952
Cov: 364 -> 364
Cov: 364 -> 364
6953
Cov: 364 -> 364
Cov: 364 -> 364
6954
Cov: 364 -> 364
Cov: 364 -> 364
6955
Cov: 364 -> 364
Cov: 364 -> 364
6956
Cov: 364 -> 367
Cov: 367 -> 367
6957
Cov: 367 -> 367
Cov: 367 -> 367
6958
Cov: 367 -> 367
Cov: 367 -> 367
6959
Cov: 367 -> 367
Cov: 367 -> 367
6960
Cov: 367 -> 367
Cov: 367 -> 367
6961
Cov: 367 -> 367
Cov: 367 -> 367
6962
{"exception": "NameError", "msg": "name 'nn' is not defined"}
6963
Cov: 367 -> 367
Cov: 367 -> 367
6964
Cov: 367 -> 367
Cov: 367 -> 367
6965
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6966
Cov: 367 -> 369
Cov: 369 -> 369
6967
Cov: 369 -> 369
Cov: 369 -> 369
6968
Cov: 369 -> 369
Cov: 369 -> 369
6969
Cov: 369 -> 369
Cov: 369 -> 369
6970
Cov: 369 -> 369
Cov: 369 -> 369
6971
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'in_channels'"}
6972
Cov: 369 -> 388
Cov: 388 -> 388
6973
Cov: 388 -> 388
Cov: 388 -> 388
6974
Cov: 388 -> 388
Cov: 388 -> 388
6975
Cov: 388 -> 388
Cov: 388 -> 388
6976
Cov: 388 -> 393
Cov: 393 -> 393
6977
Cov: 393 -> 393
Cov: 393 -> 393
6978
Cov: 393 -> 393
Cov: 393 -> 393
6979
Cov: 393 -> 393
Cov: 393 -> 393
6980
Cov: 393 -> 393
Cov: 393 -> 393
6981
Cov: 393 -> 393
Cov: 393 -> 393
6982
Cov: 393 -> 393
Cov: 393 -> 393
6983
Cov: 393 -> 393
Cov: 393 -> 393
6984
Cov: 393 -> 393
Cov: 393 -> 393
6985
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6986
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
6987
Cov: 393 -> 394
Cov: 394 -> 394
6988
Cov: 394 -> 395
Cov: 395 -> 395
6989
Cov: 395 -> 395
Cov: 395 -> 395
6990
Cov: 395 -> 395
Cov: 395 -> 395
6991
Cov: 395 -> 395
Cov: 395 -> 395
6992
Cov: 395 -> 395
Cov: 395 -> 395
6993
Cov: 395 -> 395
Cov: 395 -> 395
6994
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6995
Cov: 395 -> 395
Cov: 395 -> 395
6996
Cov: 395 -> 395
Cov: 395 -> 395
6997
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
6998
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 8)"}
6999
Cov: 395 -> 395
Cov: 395 -> 395
7000
Cov: 395 -> 395
Cov: 395 -> 395
7001
{"exception": "NameError", "msg": "name 'negative_slope' is not defined"}
7002
Cov: 395 -> 395
Cov: 395 -> 395
7003
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query', 'key', 'value', 'scale_factor', and 'dropout_p'"}
7004
Cov: 395 -> 395
Cov: 395 -> 395
7005
{"exception": "NameError", "msg": "name 'v1' is not defined"}
7006
Cov: 395 -> 395
Cov: 395 -> 395
7007
Cov: 395 -> 395
Cov: 395 -> 395
7008
Cov: 395 -> 395
Cov: 395 -> 395
7009
Cov: 395 -> 395
Cov: 395 -> 395
7010
Cov: 395 -> 395
Cov: 395 -> 395
7011
Cov: 395 -> 395
Cov: 395 -> 395
7012
Cov: 395 -> 395
Cov: 395 -> 395
7013
Cov: 395 -> 395
Cov: 395 -> 395
7014
Cov: 395 -> 395
Cov: 395 -> 395
7015
Cov: 395 -> 395
Cov: 395 -> 395
7016
Cov: 395 -> 395
Cov: 395 -> 395
7017
Cov: 395 -> 395
Cov: 395 -> 395
7018
Cov: 395 -> 395
Cov: 395 -> 395
7019
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7020
Cov: 395 -> 395
Cov: 395 -> 395
7021
{"exception": "TypeError", "msg": "empty(): argument 'size' failed to unpack the object at pos 3 with error \"type must be tuple of ints,but got tuple\""}
7022
Cov: 395 -> 399
Cov: 399 -> 399
7023
Cov: 399 -> 399
Cov: 399 -> 399
7024
Cov: 399 -> 399
Cov: 399 -> 399
7025
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7026
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7027
Cov: 399 -> 399
Cov: 399 -> 399
7028
Cov: 399 -> 399
Cov: 399 -> 399
7029
Cov: 399 -> 399
Cov: 399 -> 399
7030
Cov: 399 -> 401
Cov: 401 -> 401
7031
Cov: 401 -> 401
Cov: 401 -> 401
7032
Cov: 401 -> 401
Cov: 401 -> 401
7033
Cov: 401 -> 401
Cov: 401 -> 401
7034
Cov: 401 -> 401
Cov: 401 -> 401
7035
Cov: 401 -> 411
Cov: 411 -> 411
7036
Cov: 411 -> 411
Cov: 411 -> 411
7037
{"exception": "NameError", "msg": "name 'MultiHeadAttention' is not defined"}
7038
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'query_dim'"}
7039
Cov: 411 -> 411
Cov: 411 -> 411
7040
Cov: 411 -> 411
Cov: 411 -> 411
7041
Cov: 411 -> 411
Cov: 411 -> 411
7042
Cov: 411 -> 411
Cov: 411 -> 411
7043
Cov: 411 -> 411
Cov: 411 -> 411
7044
Cov: 411 -> 411
Cov: 411 -> 411
7045
Cov: 411 -> 411
Cov: 411 -> 411
7046
Cov: 411 -> 411
Cov: 411 -> 411
7047
Cov: 411 -> 411
Cov: 411 -> 411
7048
Cov: 411 -> 411
Cov: 411 -> 411
7049
Cov: 411 -> 411
Cov: 411 -> 411
7050
Cov: 411 -> 411
Cov: 411 -> 411
7051
Cov: 411 -> 411
Cov: 411 -> 411
7052
{"exception": "RuntimeError", "msg": "Only Tensors of floating point and complex dtype can require gradients"}
7053
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
7054
Cov: 411 -> 411
Cov: 411 -> 411
7055
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7056
Cov: 411 -> 411
Cov: 411 -> 411
7057
Cov: 411 -> 411
Cov: 411 -> 411
7058
Cov: 411 -> 411
Cov: 411 -> 411
7059
Cov: 411 -> 411
Cov: 411 -> 411
7060
Cov: 411 -> 411
Cov: 411 -> 411
7061
Cov: 411 -> 411
Cov: 411 -> 411
7062
Cov: 411 -> 439
Cov: 439 -> 439
7063
Cov: 439 -> 439
Cov: 439 -> 439
7064
Cov: 439 -> 439
Cov: 439 -> 439
7065
Cov: 439 -> 439
Cov: 439 -> 439
7066
Cov: 439 -> 439
Cov: 439 -> 439
7067
Cov: 439 -> 442
Cov: 442 -> 442
7068
Cov: 442 -> 442
Cov: 442 -> 442
7069
Cov: 442 -> 442
Cov: 442 -> 442
7070
Cov: 442 -> 442
Cov: 442 -> 442
7071
Cov: 442 -> 442
Cov: 442 -> 442
7072
Cov: 442 -> 442
Cov: 442 -> 442
7073
Cov: 442 -> 442
Cov: 442 -> 442
7074
Cov: 442 -> 459
Cov: 459 -> 459
7075
Cov: 459 -> 459
Cov: 459 -> 459
7076
Cov: 459 -> 459
Cov: 459 -> 459
7077
Cov: 459 -> 459
Cov: 459 -> 459
7078
Cov: 459 -> 459
Cov: 459 -> 459
7079
{"exception": "AttributeError", "msg": "module 'torch.nn.utils' has no attribute 'parameters'"}
7080
Cov: 459 -> 459
Cov: 459 -> 459
7081
Cov: 459 -> 459
Cov: 459 -> 459
7082
Cov: 459 -> 459
Cov: 459 -> 459
7083
Cov: 459 -> 459
Cov: 459 -> 459
7084
Cov: 459 -> 459
Cov: 459 -> 459
7085
Cov: 459 -> 459
Cov: 459 -> 459
7086
Cov: 459 -> 459
Cov: 459 -> 459
7087
Cov: 459 -> 459
Cov: 459 -> 459
7088
Cov: 459 -> 459
Cov: 459 -> 459
7089
Cov: 459 -> 474
Cov: 474 -> 474
7090
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7091
Cov: 474 -> 474
Cov: 474 -> 474
7092
Cov: 474 -> 474
Cov: 474 -> 474
7093
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
7094
Cov: 474 -> 474
Cov: 474 -> 474
7095
Cov: 474 -> 474
Cov: 474 -> 474
7096
Cov: 474 -> 474
Cov: 474 -> 474
7097
Cov: 474 -> 474
Cov: 474 -> 474
7098
Cov: 474 -> 474
Cov: 474 -> 474
7099
Cov: 474 -> 474
Cov: 474 -> 474
7100
Cov: 474 -> 474
Cov: 474 -> 474
7101
Cov: 474 -> 474
Cov: 474 -> 474
7102
Cov: 474 -> 474
Cov: 474 -> 474
7103
Cov: 474 -> 474
Cov: 474 -> 474
7104
Cov: 474 -> 474
Cov: 474 -> 474
7105
Cov: 474 -> 474
Cov: 474 -> 474
7106
Cov: 474 -> 474
Cov: 474 -> 474
7107
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7108
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7109
Cov: 474 -> 474
Cov: 474 -> 474
7110
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
7111
Cov: 474 -> 21
Cov: 21 -> 21
7112
Cov: 21 -> 22
Cov: 22 -> 22
7113
Cov: 22 -> 154
Cov: 154 -> 154
7114
Cov: 154 -> 271
Cov: 271 -> 271
7115
Cov: 271 -> 300
Cov: 300 -> 300
7116
Cov: 300 -> 303
Cov: 303 -> 303
7117
Cov: 303 -> 326
Cov: 326 -> 326
7118
Cov: 326 -> 326
Cov: 326 -> 326
7119
Cov: 326 -> 338
Cov: 338 -> 338
7120
Cov: 338 -> 338
Cov: 338 -> 338
7121
Cov: 338 -> 343
Cov: 343 -> 343
7122
Cov: 343 -> 350
Cov: 350 -> 350
7123
Cov: 350 -> 350
Cov: 350 -> 350
7124
Cov: 350 -> 350
Cov: 350 -> 350
7125
Cov: 350 -> 350
Cov: 350 -> 350
7126
{"exception": "NameError", "msg": "name 'np' is not defined"}
7127
Cov: 350 -> 350
Cov: 350 -> 350
7128
Cov: 350 -> 350
Cov: 350 -> 350
7129
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[20, 9223372036854775807]"}
7130
Cov: 350 -> 350
Cov: 350 -> 350
7131
Cov: 350 -> 351
Cov: 351 -> 351
7132
{"exception": "RuntimeError", "msg": "mat1 and mat2 shapes cannot be multiplied (48x8 and 16x8)"}
7133
Cov: 351 -> 366
Cov: 366 -> 366
7134
Cov: 366 -> 366
Cov: 366 -> 366
7135
Cov: 366 -> 366
Cov: 366 -> 366
7136
Cov: 366 -> 366
Cov: 366 -> 366
7137
Cov: 366 -> 366
Cov: 366 -> 366
7138
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'sigmoid'"}
7139
Cov: 366 -> 366
Cov: 366 -> 366
7140
Cov: 366 -> 366
Cov: 366 -> 366
7141
Cov: 366 -> 366
Cov: 366 -> 366
7142
Cov: 366 -> 366
Cov: 366 -> 366
7143
Cov: 366 -> 383
Cov: 383 -> 383
7144
Cov: 383 -> 384
Cov: 384 -> 384
7145
Cov: 384 -> 384
Cov: 384 -> 384
7146
Cov: 384 -> 384
Cov: 384 -> 384
7147
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7148
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7149
Cov: 384 -> 384
Cov: 384 -> 384
7150
Cov: 384 -> 384
Cov: 384 -> 384
7151
{"exception": "NameError", "msg": "name 'dropout_p' is not defined"}
7152
Cov: 384 -> 388
Cov: 388 -> 388
7153
Cov: 388 -> 390
Cov: 390 -> 390
7154
Cov: 390 -> 390
Cov: 390 -> 390
7155
Cov: 390 -> 390
Cov: 390 -> 390
7156
Cov: 390 -> 390
Cov: 390 -> 390
7157
Cov: 390 -> 390
Cov: 390 -> 390
7158
Cov: 390 -> 390
Cov: 390 -> 390
7159
{"exception": "TypeError", "msg": "forward() takes 1 positional argument but 2 were given"}
7160
Cov: 390 -> 397
Cov: 397 -> 397
7161
Cov: 397 -> 397
Cov: 397 -> 397
7162
Cov: 397 -> 397
Cov: 397 -> 397
7163
Cov: 397 -> 397
Cov: 397 -> 397
7164
Cov: 397 -> 397
Cov: 397 -> 397
7165
Cov: 397 -> 397
Cov: 397 -> 397
7166
Cov: 397 -> 397
Cov: 397 -> 397
7167
Cov: 397 -> 397
Cov: 397 -> 397
7168
Cov: 397 -> 397
Cov: 397 -> 397
7169
Cov: 397 -> 397
Cov: 397 -> 397
7170
Cov: 397 -> 397
Cov: 397 -> 397
7171
Cov: 397 -> 400
Cov: 400 -> 400
7172
Cov: 400 -> 400
Cov: 400 -> 400
7173
Cov: 400 -> 400
Cov: 400 -> 400
7174
Cov: 400 -> 403
Cov: 403 -> 403
7175
Cov: 403 -> 403
Cov: 403 -> 403
7176
Cov: 403 -> 403
Cov: 403 -> 403
7177
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7178
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7179
Cov: 403 -> 403
Cov: 403 -> 403
7180
Cov: 403 -> 403
Cov: 403 -> 403
7181
Cov: 403 -> 403
Cov: 403 -> 403
7182
Cov: 403 -> 403
Cov: 403 -> 403
7183
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
7184
Cov: 403 -> 403
Cov: 403 -> 403
7185
Cov: 403 -> 403
Cov: 403 -> 403
7186
Cov: 403 -> 403
Cov: 403 -> 403
7187
Cov: 403 -> 403
Cov: 403 -> 403
7188
Cov: 403 -> 403
Cov: 403 -> 403
7189
Cov: 403 -> 403
Cov: 403 -> 403
7190
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7191
Cov: 403 -> 403
Cov: 403 -> 403
7192
{"exception": "RuntimeError", "msg": "\"normal_kernel_cpu\" not implemented for 'Long'"}
7193
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7194
Cov: 403 -> 403
Cov: 403 -> 403
7195
Cov: 403 -> 403
Cov: 403 -> 403
7196
Cov: 403 -> 403
Cov: 403 -> 403
7197
Cov: 403 -> 403
Cov: 403 -> 403
7198
Cov: 403 -> 403
Cov: 403 -> 403
7199
Cov: 403 -> 403
Cov: 403 -> 403
7200
Cov: 403 -> 403
Cov: 403 -> 403
7201
Cov: 403 -> 403
Cov: 403 -> 403
7202
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
7203
Cov: 403 -> 403
Cov: 403 -> 403
7204
Cov: 403 -> 403
Cov: 403 -> 403
7205
Cov: 403 -> 417
Cov: 417 -> 417
7206
Cov: 417 -> 417
Cov: 417 -> 417
7207
Cov: 417 -> 417
Cov: 417 -> 417
7208
Cov: 417 -> 417
Cov: 417 -> 417
7209
Cov: 417 -> 417
Cov: 417 -> 417
7210
Cov: 417 -> 417
Cov: 417 -> 417
7211
Cov: 417 -> 433
Cov: 433 -> 433
7212
Cov: 433 -> 449
Cov: 449 -> 449
7213
Cov: 449 -> 449
Cov: 449 -> 449
7214
Cov: 449 -> 449
Cov: 449 -> 449
7215
Cov: 449 -> 449
Cov: 449 -> 449
7216
Cov: 449 -> 449
Cov: 449 -> 449
7217
Cov: 449 -> 449
Cov: 449 -> 449
7218
Cov: 449 -> 449
Cov: 449 -> 449
7219
Cov: 449 -> 449
Cov: 449 -> 449
7220
{"exception": "SyntaxError", "msg": "unmatched ')' (<string>, line 13)"}
7221
Cov: 449 -> 449
Cov: 449 -> 449
7222
Cov: 449 -> 449
Cov: 449 -> 449
7223
Cov: 449 -> 449
Cov: 449 -> 449
7224
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7225
Cov: 449 -> 451
Cov: 451 -> 451
7226
Cov: 451 -> 451
Cov: 451 -> 451
7227
Cov: 451 -> 451
Cov: 451 -> 451
7228
Cov: 451 -> 451
Cov: 451 -> 451
7229
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7230
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7231
Cov: 451 -> 452
Cov: 452 -> 452
7232
Cov: 452 -> 452
Cov: 452 -> 452
7233
Cov: 452 -> 452
Cov: 452 -> 452
7234
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_heads'"}
7235
Cov: 452 -> 483
Cov: 483 -> 483
7236
Cov: 483 -> 498
Cov: 498 -> 498
7237
Cov: 498 -> 499
Cov: 499 -> 499
7238
Cov: 499 -> 499
Cov: 499 -> 499
7239
Cov: 499 -> 499
Cov: 499 -> 499
7240
Cov: 499 -> 499
Cov: 499 -> 499
7241
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7242
Cov: 499 -> 500
Cov: 500 -> 500
7243
Cov: 500 -> 500
Cov: 500 -> 500
7244
Cov: 500 -> 500
Cov: 500 -> 500
7245
Cov: 500 -> 500
Cov: 500 -> 500
7246
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
7247
Cov: 500 -> 801
Cov: 801 -> 801
7248
Cov: 801 -> 801
Cov: 801 -> 801
7249
Cov: 801 -> 801
Cov: 801 -> 801
7250
Cov: 801 -> 801
Cov: 801 -> 801
7251
Cov: 801 -> 801
Cov: 801 -> 801
7252
Cov: 801 -> 801
Cov: 801 -> 801
7253
Cov: 801 -> 801
Cov: 801 -> 801
7254
Cov: 801 -> 801
Cov: 801 -> 801
7255
Cov: 801 -> 801
Cov: 801 -> 801
7256
Cov: 801 -> 801
Cov: 801 -> 801
7257
{"exception": "NameError", "msg": "name 'input1' is not defined"}
7258
Cov: 801 -> 801
Cov: 801 -> 801
7259
Cov: 801 -> 801
Cov: 801 -> 801
7260
Cov: 801 -> 801
Cov: 801 -> 801
7261
Cov: 801 -> 801
Cov: 801 -> 801
7262
Cov: 801 -> 801
Cov: 801 -> 801
7263
Cov: 801 -> 801
Cov: 801 -> 801
7264
Cov: 801 -> 802
Cov: 802 -> 802
7265
Cov: 802 -> 802
Cov: 802 -> 802
7266
Cov: 802 -> 802
Cov: 802 -> 802
7267
Cov: 802 -> 802
Cov: 802 -> 802
7268
Cov: 802 -> 802
Cov: 802 -> 802
7269
Cov: 802 -> 806
Cov: 806 -> 806
7270
Cov: 806 -> 807
Cov: 807 -> 807
7271
Cov: 807 -> 807
Cov: 807 -> 807
7272
Cov: 807 -> 807
Cov: 807 -> 807
7273
Cov: 807 -> 807
Cov: 807 -> 807
7274
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'attention_mask_shape'"}
7275
Cov: 807 -> 807
Cov: 807 -> 807
7276
Cov: 807 -> 807
Cov: 807 -> 807
7277
Cov: 807 -> 807
Cov: 807 -> 807
7278
Cov: 807 -> 807
Cov: 807 -> 807
7279
Cov: 807 -> 807
Cov: 807 -> 807
7280
Cov: 807 -> 807
Cov: 807 -> 807
7281
Cov: 807 -> 808
Cov: 808 -> 808
7282
Cov: 808 -> 808
Cov: 808 -> 808
7283
Cov: 808 -> 808
Cov: 808 -> 808
7284
Cov: 808 -> 808
Cov: 808 -> 808
7285
Cov: 808 -> 808
Cov: 808 -> 808
7286
Cov: 808 -> 808
Cov: 808 -> 808
7287
Cov: 808 -> 808
Cov: 808 -> 808
7288
Cov: 808 -> 808
Cov: 808 -> 808
7289
Cov: 808 -> 808
Cov: 808 -> 808
7290
Cov: 808 -> 808
Cov: 808 -> 808
7291
Cov: 808 -> 814
Cov: 814 -> 814
7292
Cov: 814 -> 814
Cov: 814 -> 814
7293
Cov: 814 -> 814
Cov: 814 -> 814
7294
Cov: 814 -> 814
Cov: 814 -> 814
7295
Cov: 814 -> 814
Cov: 814 -> 814
7296
Cov: 814 -> 814
Cov: 814 -> 814
7297
Cov: 814 -> 814
Cov: 814 -> 814
7298
Cov: 814 -> 815
Cov: 815 -> 815
7299
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7300
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7301
Cov: 815 -> 815
Cov: 815 -> 815
7302
Cov: 815 -> 815
Cov: 815 -> 815
7303
Cov: 815 -> 815
Cov: 815 -> 815
7304
Cov: 815 -> 815
Cov: 815 -> 815
7305
{"exception": "NameError", "msg": "name 'MyModel' is not defined"}
7306
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
7307
Cov: 815 -> 815
Cov: 815 -> 815
7308
Cov: 815 -> 815
Cov: 815 -> 815
7309
Cov: 815 -> 815
Cov: 815 -> 815
7310
Cov: 815 -> 815
Cov: 815 -> 815
7311
Cov: 815 -> 815
Cov: 815 -> 815
7312
Cov: 815 -> 815
Cov: 815 -> 815
7313
Cov: 815 -> 815
Cov: 815 -> 815
7314
Cov: 815 -> 815
Cov: 815 -> 815
7315
Cov: 815 -> 815
Cov: 815 -> 815
7316
Cov: 815 -> 815
Cov: 815 -> 815
7317
Cov: 815 -> 815
Cov: 815 -> 815
7318
Cov: 815 -> 815
Cov: 815 -> 815
7319
Cov: 815 -> 815
Cov: 815 -> 815
7320
Cov: 815 -> 815
Cov: 815 -> 815
7321
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7322
Cov: 815 -> 815
Cov: 815 -> 815
7323
Cov: 815 -> 815
Cov: 815 -> 815
7324
Cov: 815 -> 815
Cov: 815 -> 815
7325
Cov: 815 -> 815
Cov: 815 -> 815
7326
Cov: 815 -> 827
Cov: 827 -> 827
7327
Cov: 827 -> 827
Cov: 827 -> 827
7328
Cov: 827 -> 827
Cov: 827 -> 827
7329
Cov: 827 -> 827
Cov: 827 -> 827
7330
Cov: 827 -> 827
Cov: 827 -> 827
7331
Cov: 827 -> 827
Cov: 827 -> 827
7332
Cov: 827 -> 827
Cov: 827 -> 827
7333
{"exception": "TypeError", "msg": "torch.FloatTensor is not a Module subclass"}
7334
Cov: 827 -> 832
Cov: 832 -> 832
7335
Cov: 832 -> 832
Cov: 832 -> 832
7336
Cov: 832 -> 832
Cov: 832 -> 832
7337
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
7338
Cov: 832 -> 832
Cov: 832 -> 832
7339
{"exception": "NameError", "msg": "name '_Linear' is not defined"}
7340
Cov: 832 -> 832
Cov: 832 -> 832
7341
Cov: 832 -> 832
Cov: 832 -> 832
7342
Cov: 832 -> 832
Cov: 832 -> 832
7343
Cov: 832 -> 832
Cov: 832 -> 832
7344
Cov: 832 -> 832
Cov: 832 -> 832
7345
Cov: 832 -> 832
Cov: 832 -> 832
7346
Cov: 832 -> 832
Cov: 832 -> 832
7347
Cov: 832 -> 832
Cov: 832 -> 832
7348
Cov: 832 -> 832
Cov: 832 -> 832
7349
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7350
Cov: 832 -> 832
Cov: 832 -> 832
7351
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7352
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7353
Cov: 832 -> 832
Cov: 832 -> 832
7354
Cov: 832 -> 832
Cov: 832 -> 832
7355
Cov: 832 -> 832
Cov: 832 -> 832
7356
Cov: 832 -> 832
Cov: 832 -> 832
7357
Cov: 832 -> 832
Cov: 832 -> 832
7358
Cov: 832 -> 832
Cov: 832 -> 832
7359
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
7360
Cov: 832 -> 851
Cov: 851 -> 851
7361
Cov: 851 -> 851
Cov: 851 -> 851
7362
Cov: 851 -> 851
Cov: 851 -> 851
7363
Cov: 851 -> 851
Cov: 851 -> 851
7364
Cov: 851 -> 851
Cov: 851 -> 851
7365
Cov: 851 -> 863
Cov: 863 -> 863
7366
Cov: 863 -> 863
Cov: 863 -> 863
7367
Cov: 863 -> 863
Cov: 863 -> 863
7368
Cov: 863 -> 863
Cov: 863 -> 863
7369
Cov: 863 -> 863
Cov: 863 -> 863
7370
Cov: 863 -> 864
Cov: 864 -> 864
7371
Cov: 864 -> 864
Cov: 864 -> 864
7372
Cov: 864 -> 864
Cov: 864 -> 864
7373
Cov: 864 -> 864
Cov: 864 -> 864
7374
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 's'"}
7375
Cov: 864 -> 864
Cov: 864 -> 864
7376
Cov: 864 -> 864
Cov: 864 -> 864
7377
Cov: 864 -> 864
Cov: 864 -> 864
7378
Cov: 864 -> 864
Cov: 864 -> 864
7379
Cov: 864 -> 864
Cov: 864 -> 864
7380
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7381
Cov: 864 -> 970
Cov: 970 -> 970
7382
Cov: 970 -> 971
Cov: 971 -> 971
7383
Cov: 971 -> 971
Cov: 971 -> 971
7384
Cov: 971 -> 971
Cov: 971 -> 971
7385
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[36047394, 832226597, 92, 2]"}
7386
Cov: 971 -> 971
Cov: 971 -> 971
7387
Cov: 971 -> 971
Cov: 971 -> 971
7388
Cov: 971 -> 971
Cov: 971 -> 971
7389
Cov: 971 -> 971
Cov: 971 -> 971
7390
Cov: 971 -> 971
Cov: 971 -> 971
7391
Cov: 971 -> 971
Cov: 971 -> 971
7392
Cov: 971 -> 971
Cov: 971 -> 971
7393
Cov: 971 -> 971
Cov: 971 -> 971
7394
Cov: 971 -> 971
Cov: 971 -> 971
7395
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'query', 'key', 'value', and 'dropout_p'"}
7396
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query_dim', 'key_dim', and 'value_dim'"}
7397
Cov: 971 -> 971
Cov: 971 -> 971
7398
Cov: 971 -> 971
Cov: 971 -> 971
7399
Cov: 971 -> 971
Cov: 971 -> 971
7400
Cov: 971 -> 971
Cov: 971 -> 971
7401
Cov: 971 -> 971
Cov: 971 -> 971
7402
Cov: 971 -> 971
Cov: 971 -> 971
7403
Cov: 971 -> 971
Cov: 971 -> 971
7404
Cov: 971 -> 971
Cov: 971 -> 971
7405
Cov: 971 -> 971
Cov: 971 -> 971
7406
Cov: 971 -> 971
Cov: 971 -> 971
7407
Cov: 971 -> 971
Cov: 971 -> 971
7408
{"exception": "RuntimeError", "msg": "[enforce fail at alloc_cpu.cpp:83] err == 0. DefaultCPUAllocator: can't allocate memory: you tried to allocate 1016497146010500 bytes. Error code 12 (Cannot allocate memory)"}
7409
Cov: 971 -> 971
Cov: 971 -> 971
7410
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7411
Cov: 971 -> 971
Cov: 971 -> 971
7412
Cov: 971 -> 971
Cov: 971 -> 971
7413
Cov: 971 -> 971
Cov: 971 -> 971
7414
Cov: 971 -> 971
Cov: 971 -> 971
7415
Cov: 971 -> 971
Cov: 971 -> 971
7416
Cov: 971 -> 971
Cov: 971 -> 971
7417
Cov: 971 -> 971
Cov: 971 -> 971
7418
Cov: 971 -> 971
Cov: 971 -> 971
7419
Cov: 971 -> 971
Cov: 971 -> 971
7420
Cov: 971 -> 971
Cov: 971 -> 971
7421
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7422
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7423
Cov: 971 -> 971
Cov: 971 -> 971
7424
Cov: 971 -> 971
Cov: 971 -> 971
7425
Cov: 971 -> 971
Cov: 971 -> 971
7426
Cov: 971 -> 971
Cov: 971 -> 971
7427
Cov: 971 -> 1155
Cov: 1155 -> 1155
7428
Cov: 1155 -> 1156
Cov: 1156 -> 1156
7429
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7430
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7431
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7432
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7433
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7434
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
7435
{"exception": "IndexError", "msg": "too many indices for tensor of dimension 1"}
7436
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7437
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7438
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7439
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'transposed'"}
7440
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7441
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7442
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7443
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7444
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7445
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'input_size' and 'output_size'"}
7446
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7447
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7448
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7449
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7450
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7451
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7452
Cov: 1156 -> 1156
Cov: 1156 -> 1156
7453
Cov: 1156 -> 1160
Cov: 1160 -> 1160
7454
Cov: 1160 -> 1160
Cov: 1160 -> 1160
7455
{"exception": "NameError", "msg": "name 'Block' is not defined"}
7456
{"exception": "NameError", "msg": "name 'Layer1' is not defined"}
7457
Cov: 1160 -> 1162
Cov: 1162 -> 1162
7458
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7459
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7460
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'param3'"}
7461
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7462
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7463
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7464
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7465
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7466
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7467
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7468
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7469
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7470
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7471
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7472
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7473
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7474
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7475
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7476
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7477
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7478
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7479
Cov: 1162 -> 1162
Cov: 1162 -> 1162
7480
Cov: 1162 -> 1178
Cov: 1178 -> 1178
7481
Cov: 1178 -> 1178
Cov: 1178 -> 1178
7482
Cov: 1178 -> 1180
Cov: 1180 -> 1180
7483
Cov: 1180 -> 1180
Cov: 1180 -> 1180
7484
Cov: 1180 -> 1180
Cov: 1180 -> 1180
7485
Cov: 1180 -> 1180
Cov: 1180 -> 1180
7486
Cov: 1180 -> 1180
Cov: 1180 -> 1180
7487
Cov: 1180 -> 1180
Cov: 1180 -> 1180
7488
Cov: 1180 -> 1183
Cov: 1183 -> 1183
7489
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7490
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7491
{"exception": "NameError", "msg": "name 'embedding_dim' is not defined"}
7492
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7493
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7494
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7495
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7496
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7497
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7498
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7499
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7500
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7501
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7502
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7503
Cov: 1183 -> 1183
Cov: 1183 -> 1183
7504
Cov: 1183 -> 1215
Cov: 1215 -> 1215
7505
Cov: 1215 -> 1215
Cov: 1215 -> 1215
7506
Cov: 1215 -> 1215
Cov: 1215 -> 1215
7507
Cov: 1215 -> 1215
Cov: 1215 -> 1215
7508
Cov: 1215 -> 1216
Cov: 1216 -> 1216
7509
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7510
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7511
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7512
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7513
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7514
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7515
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7516
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7517
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'shape'"}
7518
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'MultiHeadAttention'"}
7519
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7520
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7521
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7522
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7523
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7524
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7525
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'num_heads' and 'embedding'"}
7526
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'query_features', 'key_features', 'num_heads', and 'dropout_p'"}
7527
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7528
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7529
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7530
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7531
{"exception": "SyntaxError", "msg": "invalid decimal literal (<string>, line 10)"}
7532
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7533
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7534
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7535
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7536
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7537
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7538
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7539
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7540
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7541
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7542
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7543
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7544
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7545
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7546
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7547
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7548
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7549
{"exception": "NameError", "msg": "name 'Linear' is not defined"}
7550
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7551
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7552
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7553
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7554
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7555
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7556
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7557
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7558
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7559
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7560
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7561
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7562
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7563
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7564
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7565
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7566
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7567
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7568
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7569
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7570
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7571
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7572
Cov: 1216 -> 1216
Cov: 1216 -> 1216
7573
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7574
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7575
Cov: 1216 -> 1218
Cov: 1218 -> 1218
7576
Cov: 1218 -> 1218
Cov: 1218 -> 1218
7577
Cov: 1218 -> 1219
Cov: 1219 -> 1219
7578
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7579
Cov: 1219 -> 1219
Cov: 1219 -> 1219
7580
Cov: 1219 -> 1219
Cov: 1219 -> 1219
7581
Cov: 1219 -> 1219
Cov: 1219 -> 1219
7582
Cov: 1219 -> 1219
Cov: 1219 -> 1219
7583
Cov: 1219 -> 1219
Cov: 1219 -> 1219
7584
Cov: 1219 -> 1219
Cov: 1219 -> 1219
7585
{"exception": "AttributeError", "msg": "cannot assign module before Module.__init__() call"}
7586
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'weight' and 'bias'"}
7587
Cov: 1219 -> 1224
Cov: 1224 -> 1224
7588
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7589
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7590
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7591
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7592
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7593
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7594
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7595
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7596
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7597
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7598
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7599
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7600
Cov: 1224 -> 1224
Cov: 1224 -> 1224
7601
Cov: 1224 -> 1225
Cov: 1225 -> 1225
7602
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7603
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7604
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7605
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7606
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7607
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7608
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7609
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7610
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7611
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7612
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7613
{"exception": "NameError", "msg": "name 'math' is not defined"}
7614
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'd_qkv', 'd_model', and 'n_heads'"}
7615
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7616
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7617
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7618
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7619
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7620
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7621
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7622
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7623
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7624
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7625
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7626
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7627
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7628
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7629
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7630
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7631
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7632
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7633
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7634
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7635
Cov: 1225 -> 1225
Cov: 1225 -> 1225
7636
Cov: 1225 -> 1241
Cov: 1241 -> 1241
7637
Cov: 1241 -> 1247
Cov: 1247 -> 1247
7638
Cov: 1247 -> 1247
Cov: 1247 -> 1247
7639
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'embed_dim' and 'num_heads'"}
7640
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim_model' and 'num_heads'"}
7641
Cov: 1247 -> 1247
Cov: 1247 -> 1247
7642
Cov: 1247 -> 1247
Cov: 1247 -> 1247
7643
Cov: 1247 -> 1256
Cov: 1256 -> 1256
7644
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7645
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7646
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7647
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7648
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7649
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7650
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7651
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7652
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7653
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7654
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7655
Cov: 1256 -> 1256
Cov: 1256 -> 1256
7656
Cov: 1256 -> 1257
Cov: 1257 -> 1257
7657
Cov: 1257 -> 1257
Cov: 1257 -> 1257
7658
Cov: 1257 -> 1257
Cov: 1257 -> 1257
7659
Cov: 1257 -> 1258
Cov: 1258 -> 1258
7660
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7661
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7662
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7663
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7664
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7665
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7666
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7667
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7668
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7669
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7670
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7671
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7672
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7673
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7674
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7675
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7676
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7677
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7678
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7679
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7680
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7681
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7682
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7683
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7684
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7685
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7686
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7687
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7688
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7689
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7690
Cov: 1258 -> 1258
Cov: 1258 -> 1258
7691
Cov: 1258 -> 1261
Cov: 1261 -> 1261
7692
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7693
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7694
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7695
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7696
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7697
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7698
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7699
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7700
{"exception": "NameError", "msg": "name 'Block1' is not defined"}
7701
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7702
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7703
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7704
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7705
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7706
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7707
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7708
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7709
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7710
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7711
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7712
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7713
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7714
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7715
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7716
Cov: 1261 -> 1261
Cov: 1261 -> 1261
7717
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7718
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'max'"}
7719
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
7720
Cov: 1261 -> 53
Cov: 53 -> 53
7721
Cov: 53 -> 54
Cov: 54 -> 54
7722
Cov: 54 -> 197
Cov: 197 -> 197
7723
Cov: 197 -> 272
Cov: 272 -> 272
7724
Cov: 272 -> 289
Cov: 289 -> 289
7725
Cov: 289 -> 319
Cov: 319 -> 319
7726
{"exception": "TypeError", "msg": "'<=' not supported between instances of 'tuple' and 'int'"}
7727
{"exception": "NameError", "msg": "name 'Net' is not defined"}
7728
Cov: 319 -> 360
Cov: 360 -> 360
7729
Cov: 360 -> 362
Cov: 362 -> 362
7730
Cov: 362 -> 362
Cov: 362 -> 362
7731
Cov: 362 -> 364
Cov: 364 -> 364
7732
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 7)"}
7733
{"exception": "NameError", "msg": "name 'args' is not defined"}
7734
Cov: 364 -> 365
Cov: 365 -> 365
7735
{"exception": "NameError", "msg": "name 'math' is not defined"}
7736
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'batch' and 'dim'"}
7737
Cov: 365 -> 368
Cov: 368 -> 368
7738
Cov: 368 -> 368
Cov: 368 -> 368
7739
Cov: 368 -> 368
Cov: 368 -> 368
7740
Cov: 368 -> 368
Cov: 368 -> 368
7741
Cov: 368 -> 368
Cov: 368 -> 368
7742
Cov: 368 -> 368
Cov: 368 -> 368
7743
Cov: 368 -> 368
Cov: 368 -> 368
7744
Cov: 368 -> 368
Cov: 368 -> 368
7745
Cov: 368 -> 368
Cov: 368 -> 368
7746
Cov: 368 -> 368
Cov: 368 -> 368
7747
Cov: 368 -> 368
Cov: 368 -> 368
7748
Cov: 368 -> 368
Cov: 368 -> 368
7749
Cov: 368 -> 368
Cov: 368 -> 368
7750
Cov: 368 -> 368
Cov: 368 -> 368
7751
Cov: 368 -> 368
Cov: 368 -> 368
7752
Cov: 368 -> 368
Cov: 368 -> 368
7753
Cov: 368 -> 368
Cov: 368 -> 368
7754
Cov: 368 -> 368
Cov: 368 -> 368
7755
Cov: 368 -> 368
Cov: 368 -> 368
7756
Cov: 368 -> 368
Cov: 368 -> 368
7757
Cov: 368 -> 368
Cov: 368 -> 368
7758
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7759
Cov: 368 -> 368
Cov: 368 -> 368
7760
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7761
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim' and 'num_heads'"}
7762
{"exception": "NameError", "msg": "name 'seq_length' is not defined"}
7763
Cov: 368 -> 370
Cov: 370 -> 370
7764
Cov: 370 -> 371
Cov: 371 -> 371
7765
Cov: 371 -> 371
Cov: 371 -> 371
7766
Cov: 371 -> 371
Cov: 371 -> 371
7767
Cov: 371 -> 371
Cov: 371 -> 371
7768
Cov: 371 -> 371
Cov: 371 -> 371
7769
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query', 'key', 'value', 'scale_factor', and 'dropout_p'"}
7770
Cov: 371 -> 371
Cov: 371 -> 371
7771
Cov: 371 -> 371
Cov: 371 -> 371
7772
Cov: 371 -> 371
Cov: 371 -> 371
7773
Cov: 371 -> 371
Cov: 371 -> 371
7774
Cov: 371 -> 371
Cov: 371 -> 371
7775
Cov: 371 -> 371
Cov: 371 -> 371
7776
Cov: 371 -> 371
Cov: 371 -> 371
7777
Cov: 371 -> 371
Cov: 371 -> 371
7778
Cov: 371 -> 371
Cov: 371 -> 371
7779
Cov: 371 -> 389
Cov: 389 -> 389
7780
Cov: 389 -> 396
Cov: 396 -> 396
7781
Cov: 396 -> 396
Cov: 396 -> 396
7782
Cov: 396 -> 396
Cov: 396 -> 396
7783
Cov: 396 -> 396
Cov: 396 -> 396
7784
Cov: 396 -> 396
Cov: 396 -> 396
7785
Cov: 396 -> 396
Cov: 396 -> 396
7786
Cov: 396 -> 396
Cov: 396 -> 396
7787
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7788
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7789
Cov: 396 -> 396
Cov: 396 -> 396
7790
Cov: 396 -> 396
Cov: 396 -> 396
7791
Cov: 396 -> 396
Cov: 396 -> 396
7792
Cov: 396 -> 396
Cov: 396 -> 396
7793
Cov: 396 -> 396
Cov: 396 -> 396
7794
Cov: 396 -> 396
Cov: 396 -> 396
7795
Cov: 396 -> 396
Cov: 396 -> 396
7796
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 13)"}
7797
Cov: 396 -> 396
Cov: 396 -> 396
7798
Cov: 396 -> 396
Cov: 396 -> 396
7799
Cov: 396 -> 396
Cov: 396 -> 396
7800
Cov: 396 -> 401
Cov: 401 -> 401
7801
Cov: 401 -> 401
Cov: 401 -> 401
7802
Cov: 401 -> 401
Cov: 401 -> 401
7803
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7804
Cov: 401 -> 401
Cov: 401 -> 401
7805
Cov: 401 -> 401
Cov: 401 -> 401
7806
Cov: 401 -> 401
Cov: 401 -> 401
7807
Cov: 401 -> 401
Cov: 401 -> 401
7808
Cov: 401 -> 401
Cov: 401 -> 401
7809
Cov: 401 -> 404
Cov: 404 -> 404
7810
Cov: 404 -> 404
Cov: 404 -> 404
7811
Cov: 404 -> 404
Cov: 404 -> 404
7812
{"exception": "NameError", "msg": "name 'other' is not defined"}
7813
Cov: 404 -> 421
Cov: 421 -> 421
7814
Cov: 421 -> 421
Cov: 421 -> 421
7815
Cov: 421 -> 421
Cov: 421 -> 421
7816
Cov: 421 -> 421
Cov: 421 -> 421
7817
Cov: 421 -> 421
Cov: 421 -> 421
7818
Cov: 421 -> 421
Cov: 421 -> 421
7819
Cov: 421 -> 421
Cov: 421 -> 421
7820
Cov: 421 -> 421
Cov: 421 -> 421
7821
Cov: 421 -> 421
Cov: 421 -> 421
7822
Cov: 421 -> 427
Cov: 427 -> 427
7823
Cov: 427 -> 427
Cov: 427 -> 427
7824
Cov: 427 -> 427
Cov: 427 -> 427
7825
Cov: 427 -> 445
Cov: 445 -> 445
7826
Cov: 445 -> 445
Cov: 445 -> 445
7827
Cov: 445 -> 445
Cov: 445 -> 445
7828
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'inp' and 'oup'"}
7829
Cov: 445 -> 445
Cov: 445 -> 445
7830
Cov: 445 -> 445
Cov: 445 -> 445
7831
Cov: 445 -> 445
Cov: 445 -> 445
7832
Cov: 445 -> 449
Cov: 449 -> 449
7833
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7834
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7835
Cov: 449 -> 449
Cov: 449 -> 449
7836
Cov: 449 -> 450
Cov: 450 -> 450
7837
Cov: 450 -> 450
Cov: 450 -> 450
7838
Cov: 450 -> 450
Cov: 450 -> 450
7839
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7840
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7841
Cov: 450 -> 450
Cov: 450 -> 450
7842
Cov: 450 -> 450
Cov: 450 -> 450
7843
Cov: 450 -> 450
Cov: 450 -> 450
7844
Cov: 450 -> 450
Cov: 450 -> 450
7845
{"exception": "NameError", "msg": "name 'F' is not defined"}
7846
Cov: 450 -> 526
Cov: 526 -> 526
7847
Cov: 526 -> 526
Cov: 526 -> 526
7848
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
7849
Cov: 526 -> 528
Cov: 528 -> 528
7850
Cov: 528 -> 528
Cov: 528 -> 528
7851
Cov: 528 -> 528
Cov: 528 -> 528
7852
Cov: 528 -> 528
Cov: 528 -> 528
7853
Cov: 528 -> 560
Cov: 560 -> 560
7854
Cov: 560 -> 560
Cov: 560 -> 560
7855
Cov: 560 -> 560
Cov: 560 -> 560
7856
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
7857
Cov: 560 -> 560
Cov: 560 -> 560
7858
Cov: 560 -> 565
Cov: 565 -> 565
7859
Cov: 565 -> 566
Cov: 566 -> 566
7860
Cov: 566 -> 566
Cov: 566 -> 566
7861
Cov: 566 -> 566
Cov: 566 -> 566
7862
Cov: 566 -> 566
Cov: 566 -> 566
7863
Cov: 566 -> 566
Cov: 566 -> 566
7864
Cov: 566 -> 566
Cov: 566 -> 566
7865
Cov: 566 -> 569
Cov: 569 -> 569
7866
Cov: 569 -> 569
Cov: 569 -> 569
7867
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7868
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7869
Cov: 569 -> 569
Cov: 569 -> 569
7870
Cov: 569 -> 569
Cov: 569 -> 569
7871
Cov: 569 -> 569
Cov: 569 -> 569
7872
Cov: 569 -> 569
Cov: 569 -> 569
7873
Cov: 569 -> 569
Cov: 569 -> 569
7874
Cov: 569 -> 570
Cov: 570 -> 570
7875
Cov: 570 -> 570
Cov: 570 -> 570
7876
Cov: 570 -> 570
Cov: 570 -> 570
7877
Cov: 570 -> 570
Cov: 570 -> 570
7878
Cov: 570 -> 570
Cov: 570 -> 570
7879
Cov: 570 -> 570
Cov: 570 -> 570
7880
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
7881
Cov: 570 -> 570
Cov: 570 -> 570
7882
Cov: 570 -> 570
Cov: 570 -> 570
7883
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 20)"}
7884
Cov: 570 -> 570
Cov: 570 -> 570
7885
Cov: 570 -> 570
Cov: 570 -> 570
7886
Cov: 570 -> 570
Cov: 570 -> 570
7887
Cov: 570 -> 570
Cov: 570 -> 570
7888
Cov: 570 -> 572
Cov: 572 -> 572
7889
Cov: 572 -> 572
Cov: 572 -> 572
7890
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 6)"}
7891
Cov: 572 -> 572
Cov: 572 -> 572
7892
Cov: 572 -> 573
Cov: 573 -> 573
7893
Cov: 573 -> 573
Cov: 573 -> 573
7894
Cov: 573 -> 573
Cov: 573 -> 573
7895
Cov: 573 -> 573
Cov: 573 -> 573
7896
Cov: 573 -> 573
Cov: 573 -> 573
7897
Cov: 573 -> 573
Cov: 573 -> 573
7898
Cov: 573 -> 573
Cov: 573 -> 573
7899
Cov: 573 -> 573
Cov: 573 -> 573
7900
Cov: 573 -> 573
Cov: 573 -> 573
7901
Cov: 573 -> 573
Cov: 573 -> 573
7902
Cov: 573 -> 573
Cov: 573 -> 573
7903
Cov: 573 -> 573
Cov: 573 -> 573
7904
Cov: 573 -> 573
Cov: 573 -> 573
7905
Cov: 573 -> 573
Cov: 573 -> 573
7906
Cov: 573 -> 573
Cov: 573 -> 573
7907
Cov: 573 -> 573
Cov: 573 -> 573
7908
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
7909
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7910
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7911
Cov: 573 -> 573
Cov: 573 -> 573
7912
Cov: 573 -> 573
Cov: 573 -> 573
7913
Cov: 573 -> 573
Cov: 573 -> 573
7914
Cov: 573 -> 573
Cov: 573 -> 573
7915
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
7916
Cov: 573 -> 573
Cov: 573 -> 573
7917
Cov: 573 -> 573
Cov: 573 -> 573
7918
Cov: 573 -> 573
Cov: 573 -> 573
7919
Cov: 573 -> 573
Cov: 573 -> 573
7920
Cov: 573 -> 573
Cov: 573 -> 573
7921
Cov: 573 -> 573
Cov: 573 -> 573
7922
Cov: 573 -> 573
Cov: 573 -> 573
7923
Cov: 573 -> 573
Cov: 573 -> 573
7924
Cov: 573 -> 573
Cov: 573 -> 573
7925
Cov: 573 -> 573
Cov: 573 -> 573
7926
Cov: 573 -> 573
Cov: 573 -> 573
7927
Cov: 573 -> 573
Cov: 573 -> 573
7928
Cov: 573 -> 573
Cov: 573 -> 573
7929
Cov: 573 -> 573
Cov: 573 -> 573
7930
Cov: 573 -> 573
Cov: 573 -> 573
7931
Cov: 573 -> 573
Cov: 573 -> 573
7932
Cov: 573 -> 573
Cov: 573 -> 573
7933
Cov: 573 -> 573
Cov: 573 -> 573
7934
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 3)"}
7935
Cov: 573 -> 573
Cov: 573 -> 573
7936
Cov: 573 -> 573
Cov: 573 -> 573
7937
Cov: 573 -> 573
Cov: 573 -> 573
7938
Cov: 573 -> 573
Cov: 573 -> 573
7939
Cov: 573 -> 573
Cov: 573 -> 573
7940
Cov: 573 -> 573
Cov: 573 -> 573
7941
Cov: 573 -> 573
Cov: 573 -> 573
7942
Cov: 573 -> 573
Cov: 573 -> 573
7943
Cov: 573 -> 602
Cov: 602 -> 602
7944
Cov: 602 -> 617
Cov: 617 -> 617
7945
Cov: 617 -> 617
Cov: 617 -> 617
7946
Cov: 617 -> 617
Cov: 617 -> 617
7947
Cov: 617 -> 617
Cov: 617 -> 617
7948
Cov: 617 -> 617
Cov: 617 -> 617
7949
Cov: 617 -> 617
Cov: 617 -> 617
7950
Cov: 617 -> 617
Cov: 617 -> 617
7951
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7952
Cov: 617 -> 617
Cov: 617 -> 617
7953
Cov: 617 -> 617
Cov: 617 -> 617
7954
Cov: 617 -> 617
Cov: 617 -> 617
7955
Cov: 617 -> 617
Cov: 617 -> 617
7956
Cov: 617 -> 617
Cov: 617 -> 617
7957
Cov: 617 -> 617
Cov: 617 -> 617
7958
Cov: 617 -> 617
Cov: 617 -> 617
7959
Cov: 617 -> 617
Cov: 617 -> 617
7960
Cov: 617 -> 617
Cov: 617 -> 617
7961
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
7962
Cov: 617 -> 617
Cov: 617 -> 617
7963
Cov: 617 -> 617
Cov: 617 -> 617
7964
Cov: 617 -> 617
Cov: 617 -> 617
7965
Cov: 617 -> 617
Cov: 617 -> 617
7966
Cov: 617 -> 617
Cov: 617 -> 617
7967
{"exception": "NameError", "msg": "name 'EmbeddingBag' is not defined"}
7968
{"exception": "NameError", "msg": "name 'nn' is not defined"}
7969
Cov: 617 -> 617
Cov: 617 -> 617
7970
Cov: 617 -> 617
Cov: 617 -> 617
7971
Cov: 617 -> 617
Cov: 617 -> 617
7972
Cov: 617 -> 617
Cov: 617 -> 617
7973
Cov: 617 -> 617
Cov: 617 -> 617
7974
Cov: 617 -> 617
Cov: 617 -> 617
7975
Cov: 617 -> 617
Cov: 617 -> 617
7976
Cov: 617 -> 617
Cov: 617 -> 617
7977
Cov: 617 -> 617
Cov: 617 -> 617
7978
Cov: 617 -> 617
Cov: 617 -> 617
7979
Cov: 617 -> 617
Cov: 617 -> 617
7980
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query', 'key', and 'value'"}
7981
Cov: 617 -> 617
Cov: 617 -> 617
7982
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'output_padding'"}
7983
Cov: 617 -> 617
Cov: 617 -> 617
7984
Cov: 617 -> 617
Cov: 617 -> 617
7985
Cov: 617 -> 617
Cov: 617 -> 617
7986
Cov: 617 -> 617
Cov: 617 -> 617
7987
Cov: 617 -> 617
Cov: 617 -> 617
7988
Cov: 617 -> 617
Cov: 617 -> 617
7989
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7990
Cov: 617 -> 617
Cov: 617 -> 617
7991
Cov: 617 -> 617
Cov: 617 -> 617
7992
Cov: 617 -> 617
Cov: 617 -> 617
7993
Cov: 617 -> 617
Cov: 617 -> 617
7994
{"exception": "NameError", "msg": "name 'Model' is not defined"}
7995
Cov: 617 -> 618
Cov: 618 -> 618
7996
Cov: 618 -> 618
Cov: 618 -> 618
7997
Cov: 618 -> 618
Cov: 618 -> 618
7998
Cov: 618 -> 618
Cov: 618 -> 618
7999
Cov: 618 -> 618
Cov: 618 -> 618
8000
Cov: 618 -> 618
Cov: 618 -> 618
8001
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8002
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8003
Cov: 618 -> 624
Cov: 624 -> 624
8004
Cov: 624 -> 624
Cov: 624 -> 624
8005
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'channel_axis', 'd_model', and 'num_heads'"}
8006
{"exception": "NameError", "msg": "name 'math' is not defined"}
8007
Cov: 624 -> 626
Cov: 626 -> 626
8008
Cov: 626 -> 626
Cov: 626 -> 626
8009
Cov: 626 -> 626
Cov: 626 -> 626
8010
Cov: 626 -> 626
Cov: 626 -> 626
8011
Cov: 626 -> 626
Cov: 626 -> 626
8012
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'paddind'"}
8013
Cov: 626 -> 626
Cov: 626 -> 626
8014
Cov: 626 -> 626
Cov: 626 -> 626
8015
Cov: 626 -> 626
Cov: 626 -> 626
8016
Cov: 626 -> 626
Cov: 626 -> 626
8017
Cov: 626 -> 626
Cov: 626 -> 626
8018
Cov: 626 -> 626
Cov: 626 -> 626
8019
Cov: 626 -> 626
Cov: 626 -> 626
8020
Cov: 626 -> 626
Cov: 626 -> 626
8021
{"exception": "NameError", "msg": "name 'd' is not defined"}
8022
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
8023
Cov: 626 -> 626
Cov: 626 -> 626
8024
Cov: 626 -> 626
Cov: 626 -> 626
8025
{"exception": "NameError", "msg": "name 'ConvBn2d' is not defined"}
8026
Cov: 626 -> 626
Cov: 626 -> 626
8027
Cov: 626 -> 626
Cov: 626 -> 626
8028
Cov: 626 -> 626
Cov: 626 -> 626
8029
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
8030
Cov: 626 -> 626
Cov: 626 -> 626
8031
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8032
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8033
Cov: 626 -> 626
Cov: 626 -> 626
8034
Cov: 626 -> 626
Cov: 626 -> 626
8035
Cov: 626 -> 626
Cov: 626 -> 626
8036
Cov: 626 -> 626
Cov: 626 -> 626
8037
Cov: 626 -> 626
Cov: 626 -> 626
8038
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
8039
Cov: 626 -> 626
Cov: 626 -> 626
8040
{"exception": "SyntaxError", "msg": "closing parenthesis ')' does not match opening parenthesis '[' (<string>, line 8)"}
8041
Cov: 626 -> 626
Cov: 626 -> 626
8042
Cov: 626 -> 626
Cov: 626 -> 626
8043
Cov: 626 -> 626
Cov: 626 -> 626
8044
Cov: 626 -> 626
Cov: 626 -> 626
8045
Cov: 626 -> 626
Cov: 626 -> 626
8046
Cov: 626 -> 626
Cov: 626 -> 626
8047
Cov: 626 -> 626
Cov: 626 -> 626
8048
Cov: 626 -> 626
Cov: 626 -> 626
8049
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 60)"}
8050
Cov: 626 -> 626
Cov: 626 -> 626
8051
Cov: 626 -> 626
Cov: 626 -> 626
8052
Cov: 626 -> 626
Cov: 626 -> 626
8053
Cov: 626 -> 626
Cov: 626 -> 626
8054
Cov: 626 -> 626
Cov: 626 -> 626
8055
Cov: 626 -> 626
Cov: 626 -> 626
8056
Cov: 626 -> 626
Cov: 626 -> 626
8057
Cov: 626 -> 626
Cov: 626 -> 626
8058
Cov: 626 -> 628
Cov: 628 -> 628
8059
Cov: 628 -> 628
Cov: 628 -> 628
8060
Cov: 628 -> 628
Cov: 628 -> 628
8061
Cov: 628 -> 628
Cov: 628 -> 628
8062
Cov: 628 -> 628
Cov: 628 -> 628
8063
Cov: 628 -> 628
Cov: 628 -> 628
8064
Cov: 628 -> 628
Cov: 628 -> 628
8065
{"exception": "NameError", "msg": "name 'OrderedDict' is not defined"}
8066
Cov: 628 -> 630
Cov: 630 -> 630
8067
Cov: 630 -> 630
Cov: 630 -> 630
8068
Cov: 630 -> 630
Cov: 630 -> 630
8069
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8070
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8071
Cov: 630 -> 630
Cov: 630 -> 630
8072
Cov: 630 -> 630
Cov: 630 -> 630
8073
{"exception": "TypeError", "msg": "Model.__init__() takes 1 positional argument but 2 were given"}
8074
Cov: 630 -> 633
Cov: 633 -> 633
8075
Cov: 633 -> 633
Cov: 633 -> 633
8076
Cov: 633 -> 633
Cov: 633 -> 633
8077
Cov: 633 -> 633
Cov: 633 -> 633
8078
Cov: 633 -> 633
Cov: 633 -> 633
8079
Cov: 633 -> 633
Cov: 633 -> 633
8080
Cov: 633 -> 633
Cov: 633 -> 633
8081
Cov: 633 -> 633
Cov: 633 -> 633
8082
Cov: 633 -> 633
Cov: 633 -> 633
8083
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8084
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8085
Cov: 633 -> 633
Cov: 633 -> 633
8086
Cov: 633 -> 633
Cov: 633 -> 633
8087
Cov: 633 -> 633
Cov: 633 -> 633
8088
Cov: 633 -> 633
Cov: 633 -> 633
8089
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8090
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8091
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
8092
Cov: 633 -> 633
Cov: 633 -> 633
8093
Cov: 633 -> 633
Cov: 633 -> 633
8094
Cov: 633 -> 633
Cov: 633 -> 633
8095
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8096
Cov: 633 -> 633
Cov: 633 -> 633
8097
Cov: 633 -> 635
Cov: 635 -> 635
8098
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8099
Cov: 635 -> 635
Cov: 635 -> 635
8100
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
8101
Cov: 635 -> 635
Cov: 635 -> 635
8102
Cov: 635 -> 635
Cov: 635 -> 635
8103
Cov: 635 -> 635
Cov: 635 -> 635
8104
Cov: 635 -> 635
Cov: 635 -> 635
8105
Cov: 635 -> 635
Cov: 635 -> 635
8106
Cov: 635 -> 635
Cov: 635 -> 635
8107
Cov: 635 -> 635
Cov: 635 -> 635
8108
Cov: 635 -> 635
Cov: 635 -> 635
8109
Cov: 635 -> 635
Cov: 635 -> 635
8110
Cov: 635 -> 635
Cov: 635 -> 635
8111
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8112
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8113
Cov: 635 -> 635
Cov: 635 -> 635
8114
Cov: 635 -> 635
Cov: 635 -> 635
8115
Cov: 635 -> 635
Cov: 635 -> 635
8116
Cov: 635 -> 635
Cov: 635 -> 635
8117
Cov: 635 -> 635
Cov: 635 -> 635
8118
Cov: 635 -> 635
Cov: 635 -> 635
8119
Cov: 635 -> 635
Cov: 635 -> 635
8120
Cov: 635 -> 635
Cov: 635 -> 635
8121
Cov: 635 -> 635
Cov: 635 -> 635
8122
Cov: 635 -> 635
Cov: 635 -> 635
8123
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8124
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8125
Cov: 635 -> 635
Cov: 635 -> 635
8126
Cov: 635 -> 635
Cov: 635 -> 635
8127
{"exception": "NameError", "msg": "name 'math' is not defined"}
8128
Cov: 635 -> 635
Cov: 635 -> 635
8129
Cov: 635 -> 635
Cov: 635 -> 635
8130
Cov: 635 -> 635
Cov: 635 -> 635
8131
Cov: 635 -> 636
Cov: 636 -> 636
8132
Cov: 636 -> 636
Cov: 636 -> 636
8133
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8134
Cov: 636 -> 637
Cov: 637 -> 637
8135
Cov: 637 -> 652
Cov: 652 -> 652
8136
Cov: 652 -> 652
Cov: 652 -> 652
8137
Cov: 652 -> 652
Cov: 652 -> 652
8138
Cov: 652 -> 652
Cov: 652 -> 652
8139
Cov: 652 -> 652
Cov: 652 -> 652
8140
Cov: 652 -> 652
Cov: 652 -> 652
8141
Cov: 652 -> 652
Cov: 652 -> 652
8142
Cov: 652 -> 652
Cov: 652 -> 652
8143
Cov: 652 -> 652
Cov: 652 -> 652
8144
Cov: 652 -> 652
Cov: 652 -> 652
8145
Cov: 652 -> 652
Cov: 652 -> 652
8146
Cov: 652 -> 652
Cov: 652 -> 652
8147
Cov: 652 -> 652
Cov: 652 -> 652
8148
Cov: 652 -> 652
Cov: 652 -> 652
8149
Cov: 652 -> 652
Cov: 652 -> 652
8150
Cov: 652 -> 652
Cov: 652 -> 652
8151
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
8152
Cov: 652 -> 652
Cov: 652 -> 652
8153
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8154
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8155
Cov: 652 -> 652
Cov: 652 -> 652
8156
Cov: 652 -> 652
Cov: 652 -> 652
8157
Cov: 652 -> 652
Cov: 652 -> 652
8158
Cov: 652 -> 652
Cov: 652 -> 652
8159
Cov: 652 -> 652
Cov: 652 -> 652
8160
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
8161
Cov: 652 -> 652
Cov: 652 -> 652
8162
Cov: 652 -> 652
Cov: 652 -> 652
8163
Cov: 652 -> 652
Cov: 652 -> 652
8164
Cov: 652 -> 652
Cov: 652 -> 652
8165
Cov: 652 -> 652
Cov: 652 -> 652
8166
Cov: 652 -> 652
Cov: 652 -> 652
8167
Cov: 652 -> 652
Cov: 652 -> 652
8168
Cov: 652 -> 652
Cov: 652 -> 652
8169
Cov: 652 -> 652
Cov: 652 -> 652
8170
Cov: 652 -> 652
Cov: 652 -> 652
8171
Cov: 652 -> 652
Cov: 652 -> 652
8172
Cov: 652 -> 652
Cov: 652 -> 652
8173
Cov: 652 -> 652
Cov: 652 -> 652
8174
Cov: 652 -> 652
Cov: 652 -> 652
8175
Cov: 652 -> 652
Cov: 652 -> 652
8176
Cov: 652 -> 652
Cov: 652 -> 652
8177
Cov: 652 -> 652
Cov: 652 -> 652
8178
Cov: 652 -> 652
Cov: 652 -> 652
8179
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8180
Cov: 652 -> 652
Cov: 652 -> 652
8181
Cov: 652 -> 652
Cov: 652 -> 652
8182
Cov: 652 -> 652
Cov: 652 -> 652
8183
Cov: 652 -> 652
Cov: 652 -> 652
8184
Cov: 652 -> 652
Cov: 652 -> 652
8185
Cov: 652 -> 652
Cov: 652 -> 652
8186
Cov: 652 -> 652
Cov: 652 -> 652
8187
Cov: 652 -> 652
Cov: 652 -> 652
8188
{"exception": "NameError", "msg": "name 'Block' is not defined"}
8189
Cov: 652 -> 652
Cov: 652 -> 652
8190
Cov: 652 -> 652
Cov: 652 -> 652
8191
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
8192
Cov: 652 -> 652
Cov: 652 -> 652
8193
Cov: 652 -> 652
Cov: 652 -> 652
8194
Cov: 652 -> 652
Cov: 652 -> 652
8195
Cov: 652 -> 652
Cov: 652 -> 652
8196
Cov: 652 -> 652
Cov: 652 -> 652
8197
Cov: 652 -> 652
Cov: 652 -> 652
8198
Cov: 652 -> 652
Cov: 652 -> 652
8199
Cov: 652 -> 652
Cov: 652 -> 652
8200
Cov: 652 -> 652
Cov: 652 -> 652
8201
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 6)"}
8202
Cov: 652 -> 652
Cov: 652 -> 652
8203
Cov: 652 -> 652
Cov: 652 -> 652
8204
Cov: 652 -> 652
Cov: 652 -> 652
8205
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8206
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8207
Cov: 652 -> 652
Cov: 652 -> 652
8208
Cov: 652 -> 652
Cov: 652 -> 652
8209
Cov: 652 -> 652
Cov: 652 -> 652
8210
Cov: 652 -> 652
Cov: 652 -> 652
8211
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8212
Cov: 652 -> 654
Cov: 654 -> 654
8213
Cov: 654 -> 654
Cov: 654 -> 654
8214
Cov: 654 -> 654
Cov: 654 -> 654
8215
Cov: 654 -> 654
Cov: 654 -> 654
8216
Cov: 654 -> 654
Cov: 654 -> 654
8217
Cov: 654 -> 654
Cov: 654 -> 654
8218
Cov: 654 -> 654
Cov: 654 -> 654
8219
Cov: 654 -> 661
Cov: 661 -> 661
8220
Cov: 661 -> 661
Cov: 661 -> 661
8221
{"exception": "NameError", "msg": "name 'self' is not defined"}
8222
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
8223
Cov: 661 -> 661
Cov: 661 -> 661
8224
Cov: 661 -> 661
Cov: 661 -> 661
8225
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
8226
{"exception": "TypeError", "msg": "randn() received an invalid combination of arguments - got (int, int, int, int, groups=int), but expected one of:\n * (tuple of ints size, *, torch.Generator generator, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, torch.Generator generator, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n * (tuple of ints size, *, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)\n"}
8227
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'p985'"}
8228
Cov: 661 -> 663
Cov: 663 -> 663
8229
Cov: 663 -> 663
Cov: 663 -> 663
8230
Cov: 663 -> 665
Cov: 665 -> 665
8231
Cov: 665 -> 665
Cov: 665 -> 665
8232
Cov: 665 -> 665
Cov: 665 -> 665
8233
Cov: 665 -> 665
Cov: 665 -> 665
8234
Cov: 665 -> 665
Cov: 665 -> 665
8235
Cov: 665 -> 665
Cov: 665 -> 665
8236
Cov: 665 -> 665
Cov: 665 -> 665
8237
Cov: 665 -> 665
Cov: 665 -> 665
8238
Cov: 665 -> 665
Cov: 665 -> 665
8239
Cov: 665 -> 665
Cov: 665 -> 665
8240
Cov: 665 -> 665
Cov: 665 -> 665
8241
Cov: 665 -> 665
Cov: 665 -> 665
8242
Cov: 665 -> 665
Cov: 665 -> 665
8243
Cov: 665 -> 665
Cov: 665 -> 665
8244
Cov: 665 -> 665
Cov: 665 -> 665
8245
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8246
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8247
Cov: 665 -> 665
Cov: 665 -> 665
8248
Cov: 665 -> 665
Cov: 665 -> 665
8249
Cov: 665 -> 665
Cov: 665 -> 665
8250
Cov: 665 -> 665
Cov: 665 -> 665
8251
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
8252
{"exception": "TypeError", "msg": "clamp_min() received an invalid combination of arguments - got (float, float), but expected one of:\n * (Tensor input, Tensor min, *, Tensor out)\n * (Tensor input, Number min, *, Tensor out)\n"}
8253
Cov: 665 -> 226
Cov: 226 -> 226
8254
Cov: 226 -> 227
Cov: 227 -> 227
8255
Cov: 227 -> 300
Cov: 300 -> 300
8256
Cov: 300 -> 300
Cov: 300 -> 300
8257
Cov: 300 -> 324
Cov: 324 -> 324
8258
Cov: 324 -> 331
Cov: 331 -> 331
8259
Cov: 331 -> 331
Cov: 331 -> 331
8260
Cov: 331 -> 331
Cov: 331 -> 331
8261
Cov: 331 -> 332
Cov: 332 -> 332
8262
Cov: 332 -> 332
Cov: 332 -> 332
8263
Cov: 332 -> 336
Cov: 336 -> 336
8264
Cov: 336 -> 336
Cov: 336 -> 336
8265
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
8266
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
8267
Cov: 336 -> 336
Cov: 336 -> 336
8268
Cov: 336 -> 336
Cov: 336 -> 336
8269
Cov: 336 -> 336
Cov: 336 -> 336
8270
Cov: 336 -> 354
Cov: 354 -> 354
8271
Cov: 354 -> 354
Cov: 354 -> 354
8272
Cov: 354 -> 354
Cov: 354 -> 354
8273
Cov: 354 -> 355
Cov: 355 -> 355
8274
Cov: 355 -> 355
Cov: 355 -> 355
8275
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8276
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8277
Cov: 355 -> 355
Cov: 355 -> 355
8278
Cov: 355 -> 355
Cov: 355 -> 355
8279
Cov: 355 -> 355
Cov: 355 -> 355
8280
Cov: 355 -> 355
Cov: 355 -> 355
8281
Cov: 355 -> 355
Cov: 355 -> 355
8282
Cov: 355 -> 355
Cov: 355 -> 355
8283
Cov: 355 -> 355
Cov: 355 -> 355
8284
Cov: 355 -> 355
Cov: 355 -> 355
8285
Cov: 355 -> 355
Cov: 355 -> 355
8286
Cov: 355 -> 355
Cov: 355 -> 355
8287
Cov: 355 -> 355
Cov: 355 -> 355
8288
Cov: 355 -> 355
Cov: 355 -> 355
8289
Cov: 355 -> 355
Cov: 355 -> 355
8290
Cov: 355 -> 355
Cov: 355 -> 355
8291
Cov: 355 -> 355
Cov: 355 -> 355
8292
Cov: 355 -> 355
Cov: 355 -> 355
8293
Cov: 355 -> 355
Cov: 355 -> 355
8294
Cov: 355 -> 355
Cov: 355 -> 355
8295
Cov: 355 -> 355
Cov: 355 -> 355
8296
Cov: 355 -> 368
Cov: 368 -> 368
8297
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8298
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8299
Cov: 368 -> 372
Cov: 372 -> 372
8300
Cov: 372 -> 372
Cov: 372 -> 372
8301
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'ch1' and 'p1'"}
8302
Cov: 372 -> 376
Cov: 376 -> 376
8303
{"exception": "NameError", "msg": "name 'torchvision' is not defined"}
8304
Cov: 376 -> 376
Cov: 376 -> 376
8305
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 9)"}
8306
Cov: 376 -> 376
Cov: 376 -> 376
8307
Cov: 376 -> 376
Cov: 376 -> 376
8308
Cov: 376 -> 376
Cov: 376 -> 376
8309
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8310
Cov: 376 -> 391
Cov: 391 -> 391
8311
Cov: 391 -> 391
Cov: 391 -> 391
8312
Cov: 391 -> 391
Cov: 391 -> 391
8313
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8314
Cov: 391 -> 392
Cov: 392 -> 392
8315
Cov: 392 -> 401
Cov: 401 -> 401
8316
Cov: 401 -> 401
Cov: 401 -> 401
8317
Cov: 401 -> 406
Cov: 406 -> 406
8318
Cov: 406 -> 406
Cov: 406 -> 406
8319
Cov: 406 -> 406
Cov: 406 -> 406
8320
Cov: 406 -> 406
Cov: 406 -> 406
8321
Cov: 406 -> 407
Cov: 407 -> 407
8322
Cov: 407 -> 407
Cov: 407 -> 407
8323
Cov: 407 -> 407
Cov: 407 -> 407
8324
Cov: 407 -> 424
Cov: 424 -> 424
8325
Cov: 424 -> 424
Cov: 424 -> 424
8326
Cov: 424 -> 424
Cov: 424 -> 424
8327
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8328
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8329
Cov: 424 -> 425
Cov: 425 -> 425
8330
Cov: 425 -> 426
Cov: 426 -> 426
8331
Cov: 426 -> 426
Cov: 426 -> 426
8332
{"exception": "NameError", "msg": "name 'x' is not defined"}
8333
{"exception": "NameError", "msg": "name 'Net' is not defined"}
8334
Cov: 426 -> 9083
Cov: 9083 -> 9083
8335
Cov: 9083 -> 9083
Cov: 9083 -> 9083
8336
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8337
Cov: 9083 -> 9083
Cov: 9083 -> 9083
8338
Cov: 9083 -> 9083
Cov: 9083 -> 9083
8339
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
8340
Cov: 9083 -> 202
Cov: 202 -> 202
8341
Cov: 202 -> 253
Cov: 253 -> 253
8342
Cov: 253 -> 269
Cov: 269 -> 269
8343
Cov: 269 -> 292
Cov: 292 -> 292
8344
Cov: 292 -> 294
Cov: 294 -> 294
8345
Cov: 294 -> 295
Cov: 295 -> 295
8346
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'dim', 'heads', 'dim_head', 'dropout', and 'input_shape'"}
8347
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8348
Cov: 295 -> 297
Cov: 297 -> 297
8349
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'n1' and 'n2'"}
8350
Cov: 297 -> 297
Cov: 297 -> 297
8351
Cov: 297 -> 297
Cov: 297 -> 297
8352
Cov: 297 -> 297
Cov: 297 -> 297
8353
Cov: 297 -> 297
Cov: 297 -> 297
8354
Cov: 297 -> 297
Cov: 297 -> 297
8355
Cov: 297 -> 297
Cov: 297 -> 297
8356
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8357
Cov: 297 -> 297
Cov: 297 -> 297
8358
Cov: 297 -> 297
Cov: 297 -> 297
8359
Cov: 297 -> 297
Cov: 297 -> 297
8360
Cov: 297 -> 297
Cov: 297 -> 297
8361
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8362
Cov: 297 -> 297
Cov: 297 -> 297
8363
Cov: 297 -> 297
Cov: 297 -> 297
8364
Cov: 297 -> 297
Cov: 297 -> 297
8365
Cov: 297 -> 297
Cov: 297 -> 297
8366
Cov: 297 -> 297
Cov: 297 -> 297
8367
Cov: 297 -> 299
Cov: 299 -> 299
8368
Cov: 299 -> 299
Cov: 299 -> 299
8369
Cov: 299 -> 299
Cov: 299 -> 299
8370
Cov: 299 -> 299
Cov: 299 -> 299
8371
Cov: 299 -> 299
Cov: 299 -> 299
8372
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dropout_p' and 'inv_scale_factor'"}
8373
Cov: 299 -> 299
Cov: 299 -> 299
8374
Cov: 299 -> 316
Cov: 316 -> 316
8375
Cov: 316 -> 316
Cov: 316 -> 316
8376
Cov: 316 -> 316
Cov: 316 -> 316
8377
Cov: 316 -> 316
Cov: 316 -> 316
8378
Cov: 316 -> 316
Cov: 316 -> 316
8379
Cov: 316 -> 325
Cov: 325 -> 325
8380
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query', 'key', and 'value'"}
8381
Cov: 325 -> 325
Cov: 325 -> 325
8382
Cov: 325 -> 325
Cov: 325 -> 325
8383
Cov: 325 -> 325
Cov: 325 -> 325
8384
{"exception": "NameError", "msg": "name 'self' is not defined"}
8385
Cov: 325 -> 325
Cov: 325 -> 325
8386
Cov: 325 -> 325
Cov: 325 -> 325
8387
Cov: 325 -> 390
Cov: 390 -> 390
8388
Cov: 390 -> 395
Cov: 395 -> 395
8389
Cov: 395 -> 395
Cov: 395 -> 395
8390
Cov: 395 -> 395
Cov: 395 -> 395
8391
Cov: 395 -> 395
Cov: 395 -> 395
8392
Cov: 395 -> 395
Cov: 395 -> 395
8393
Cov: 395 -> 395
Cov: 395 -> 395
8394
Cov: 395 -> 411
Cov: 411 -> 411
8395
Cov: 411 -> 411
Cov: 411 -> 411
8396
Cov: 411 -> 411
Cov: 411 -> 411
8397
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8398
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8399
Cov: 411 -> 411
Cov: 411 -> 411
8400
Cov: 411 -> 411
Cov: 411 -> 411
8401
Cov: 411 -> 411
Cov: 411 -> 411
8402
Cov: 411 -> 411
Cov: 411 -> 411
8403
Cov: 411 -> 411
Cov: 411 -> 411
8404
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
8405
Cov: 411 -> 411
Cov: 411 -> 411
8406
Cov: 411 -> 411
Cov: 411 -> 411
8407
Cov: 411 -> 411
Cov: 411 -> 411
8408
Cov: 411 -> 411
Cov: 411 -> 411
8409
Cov: 411 -> 411
Cov: 411 -> 411
8410
Cov: 411 -> 411
Cov: 411 -> 411
8411
Cov: 411 -> 411
Cov: 411 -> 411
8412
Cov: 411 -> 411
Cov: 411 -> 411
8413
Cov: 411 -> 411
Cov: 411 -> 411
8414
Cov: 411 -> 411
Cov: 411 -> 411
8415
Cov: 411 -> 411
Cov: 411 -> 411
8416
Cov: 411 -> 420
Cov: 420 -> 420
8417
Cov: 420 -> 420
Cov: 420 -> 420
8418
Cov: 420 -> 420
Cov: 420 -> 420
8419
Cov: 420 -> 423
Cov: 423 -> 423
8420
Cov: 423 -> 423
Cov: 423 -> 423
8421
Cov: 423 -> 423
Cov: 423 -> 423
8422
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 11)"}
8423
Cov: 423 -> 423
Cov: 423 -> 423
8424
Cov: 423 -> 437
Cov: 437 -> 437
8425
Cov: 437 -> 437
Cov: 437 -> 437
8426
Cov: 437 -> 437
Cov: 437 -> 437
8427
Cov: 437 -> 437
Cov: 437 -> 437
8428
Cov: 437 -> 437
Cov: 437 -> 437
8429
Cov: 437 -> 454
Cov: 454 -> 454
8430
Cov: 454 -> 454
Cov: 454 -> 454
8431
Cov: 454 -> 473
Cov: 473 -> 473
8432
Cov: 473 -> 477
Cov: 477 -> 477
8433
Cov: 477 -> 477
Cov: 477 -> 477
8434
Cov: 477 -> 477
Cov: 477 -> 477
8435
Cov: 477 -> 477
Cov: 477 -> 477
8436
Cov: 477 -> 477
Cov: 477 -> 477
8437
Cov: 477 -> 477
Cov: 477 -> 477
8438
Cov: 477 -> 477
Cov: 477 -> 477
8439
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'Lineary'"}
8440
Cov: 477 -> 477
Cov: 477 -> 477
8441
Cov: 477 -> 477
Cov: 477 -> 477
8442
Cov: 477 -> 477
Cov: 477 -> 477
8443
Cov: 477 -> 569
Cov: 569 -> 569
8444
Cov: 569 -> 569
Cov: 569 -> 569
8445
Cov: 569 -> 569
Cov: 569 -> 569
8446
{"exception": "ValueError", "msg": "Only \"zeros\" padding mode is supported for ConvTranspose2d"}
8447
Cov: 569 -> 571
Cov: 571 -> 571
8448
Cov: 571 -> 571
Cov: 571 -> 571
8449
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8450
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8451
Cov: 571 -> 572
Cov: 572 -> 572
8452
Cov: 572 -> 573
Cov: 573 -> 573
8453
Cov: 573 -> 573
Cov: 573 -> 573
8454
Cov: 573 -> 573
Cov: 573 -> 573
8455
Cov: 573 -> 579
Cov: 579 -> 579
8456
Cov: 579 -> 613
Cov: 613 -> 613
8457
Cov: 613 -> 637
Cov: 637 -> 637
8458
Cov: 637 -> 637
Cov: 637 -> 637
8459
Cov: 637 -> 637
Cov: 637 -> 637
8460
Cov: 637 -> 637
Cov: 637 -> 637
8461
Cov: 637 -> 637
Cov: 637 -> 637
8462
Cov: 637 -> 637
Cov: 637 -> 637
8463
Cov: 637 -> 637
Cov: 637 -> 637
8464
Cov: 637 -> 637
Cov: 637 -> 637
8465
Cov: 637 -> 637
Cov: 637 -> 637
8466
Cov: 637 -> 637
Cov: 637 -> 637
8467
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'n_head', 'd_embed', and 'dropout_p'"}
8468
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'num_heads' and 'd_model'"}
8469
Cov: 637 -> 637
Cov: 637 -> 637
8470
Cov: 637 -> 637
Cov: 637 -> 637
8471
Cov: 637 -> 637
Cov: 637 -> 637
8472
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
8473
Cov: 637 -> 637
Cov: 637 -> 637
8474
Cov: 637 -> 637
Cov: 637 -> 637
8475
Cov: 637 -> 637
Cov: 637 -> 637
8476
{"exception": "RuntimeError", "msg": "[enforce fail at alloc_cpu.cpp:83] err == 0. DefaultCPUAllocator: can't allocate memory: you tried to allocate 32769827584560 bytes. Error code 12 (Cannot allocate memory)"}
8477
Cov: 637 -> 638
Cov: 638 -> 638
8478
Cov: 638 -> 638
Cov: 638 -> 638
8479
Cov: 638 -> 638
Cov: 638 -> 638
8480
Cov: 638 -> 638
Cov: 638 -> 638
8481
{"exception": "AttributeError", "msg": "cannot assign module before Module.__init__() call"}
8482
Cov: 638 -> 642
Cov: 642 -> 642
8483
Cov: 642 -> 642
Cov: 642 -> 642
8484
Cov: 642 -> 642
Cov: 642 -> 642
8485
Cov: 642 -> 642
Cov: 642 -> 642
8486
Cov: 642 -> 642
Cov: 642 -> 642
8487
Cov: 642 -> 642
Cov: 642 -> 642
8488
Cov: 642 -> 642
Cov: 642 -> 642
8489
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8490
Cov: 642 -> 642
Cov: 642 -> 642
8491
Cov: 642 -> 642
Cov: 642 -> 642
8492
Cov: 642 -> 642
Cov: 642 -> 642
8493
Cov: 642 -> 642
Cov: 642 -> 642
8494
{"exception": "NameError", "msg": "name 'MultiHeadAttention' is not defined"}
8495
Cov: 642 -> 642
Cov: 642 -> 642
8496
Cov: 642 -> 642
Cov: 642 -> 642
8497
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8498
Cov: 642 -> 642
Cov: 642 -> 642
8499
Cov: 642 -> 642
Cov: 642 -> 642
8500
Cov: 642 -> 642
Cov: 642 -> 642
8501
Cov: 642 -> 708
Cov: 708 -> 708
8502
Cov: 708 -> 708
Cov: 708 -> 708
8503
Cov: 708 -> 708
Cov: 708 -> 708
8504
Cov: 708 -> 708
Cov: 708 -> 708
8505
Cov: 708 -> 708
Cov: 708 -> 708
8506
Cov: 708 -> 708
Cov: 708 -> 708
8507
Cov: 708 -> 708
Cov: 708 -> 708
8508
Cov: 708 -> 708
Cov: 708 -> 708
8509
Cov: 708 -> 708
Cov: 708 -> 708
8510
Cov: 708 -> 708
Cov: 708 -> 708
8511
Cov: 708 -> 708
Cov: 708 -> 708
8512
Cov: 708 -> 708
Cov: 708 -> 708
8513
Cov: 708 -> 708
Cov: 708 -> 708
8514
Cov: 708 -> 708
Cov: 708 -> 708
8515
Cov: 708 -> 708
Cov: 708 -> 708
8516
Cov: 708 -> 708
Cov: 708 -> 708
8517
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
8518
Cov: 708 -> 708
Cov: 708 -> 708
8519
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8520
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8521
Cov: 708 -> 708
Cov: 708 -> 708
8522
Cov: 708 -> 708
Cov: 708 -> 708
8523
Cov: 708 -> 708
Cov: 708 -> 708
8524
Cov: 708 -> 708
Cov: 708 -> 708
8525
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 18)"}
8526
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'min_value'"}
8527
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 254)"}
8528
Cov: 708 -> 708
Cov: 708 -> 708
8529
Cov: 708 -> 708
Cov: 708 -> 708
8530
Cov: 708 -> 708
Cov: 708 -> 708
8531
Cov: 708 -> 708
Cov: 708 -> 708
8532
Cov: 708 -> 708
Cov: 708 -> 708
8533
Cov: 708 -> 708
Cov: 708 -> 708
8534
Cov: 708 -> 708
Cov: 708 -> 708
8535
Cov: 708 -> 708
Cov: 708 -> 708
8536
Cov: 708 -> 708
Cov: 708 -> 708
8537
Cov: 708 -> 708
Cov: 708 -> 708
8538
{"exception": "TypeError", "msg": "unsupported operand type(s) for +: 'Conv2d' and 'Conv2d'"}
8539
Cov: 708 -> 710
Cov: 710 -> 710
8540
Cov: 710 -> 710
Cov: 710 -> 710
8541
Cov: 710 -> 714
Cov: 714 -> 714
8542
Cov: 714 -> 714
Cov: 714 -> 714
8543
Cov: 714 -> 714
Cov: 714 -> 714
8544
Cov: 714 -> 714
Cov: 714 -> 714
8545
Cov: 714 -> 714
Cov: 714 -> 714
8546
Cov: 714 -> 714
Cov: 714 -> 714
8547
Cov: 714 -> 714
Cov: 714 -> 714
8548
Cov: 714 -> 714
Cov: 714 -> 714
8549
Cov: 714 -> 714
Cov: 714 -> 714
8550
Cov: 714 -> 714
Cov: 714 -> 714
8551
Cov: 714 -> 714
Cov: 714 -> 714
8552
Cov: 714 -> 714
Cov: 714 -> 714
8553
{"exception": "KeyError", "msg": "'module name can\\'t contain \".\", got: features.0'"}
8554
Cov: 714 -> 732
Cov: 732 -> 732
8555
Cov: 732 -> 732
Cov: 732 -> 732
8556
Cov: 732 -> 732
Cov: 732 -> 732
8557
Cov: 732 -> 735
Cov: 735 -> 735
8558
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8559
Cov: 735 -> 735
Cov: 735 -> 735
8560
Cov: 735 -> 735
Cov: 735 -> 735
8561
Cov: 735 -> 735
Cov: 735 -> 735
8562
Cov: 735 -> 735
Cov: 735 -> 735
8563
Cov: 735 -> 735
Cov: 735 -> 735
8564
Cov: 735 -> 735
Cov: 735 -> 735
8565
Cov: 735 -> 735
Cov: 735 -> 735
8566
Cov: 735 -> 735
Cov: 735 -> 735
8567
Cov: 735 -> 735
Cov: 735 -> 735
8568
Cov: 735 -> 735
Cov: 735 -> 735
8569
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 9)"}
8570
Cov: 735 -> 735
Cov: 735 -> 735
8571
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8572
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8573
Cov: 735 -> 735
Cov: 735 -> 735
8574
Cov: 735 -> 735
Cov: 735 -> 735
8575
Cov: 735 -> 735
Cov: 735 -> 735
8576
Cov: 735 -> 735
Cov: 735 -> 735
8577
Cov: 735 -> 735
Cov: 735 -> 735
8578
Cov: 735 -> 744
Cov: 744 -> 744
8579
Cov: 744 -> 744
Cov: 744 -> 744
8580
Cov: 744 -> 750
Cov: 750 -> 750
8581
Cov: 750 -> 750
Cov: 750 -> 750
8582
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8583
Cov: 750 -> 750
Cov: 750 -> 750
8584
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'ceil_mode'"}
8585
Cov: 750 -> 750
Cov: 750 -> 750
8586
Cov: 750 -> 750
Cov: 750 -> 750
8587
Cov: 750 -> 751
Cov: 751 -> 751
8588
Cov: 751 -> 751
Cov: 751 -> 751
8589
Cov: 751 -> 751
Cov: 751 -> 751
8590
{"exception": "NameError", "msg": "name 'MultiHeadAttention' is not defined"}
8591
Cov: 751 -> 751
Cov: 751 -> 751
8592
Cov: 751 -> 751
Cov: 751 -> 751
8593
Cov: 751 -> 751
Cov: 751 -> 751
8594
Cov: 751 -> 751
Cov: 751 -> 751
8595
Cov: 751 -> 751
Cov: 751 -> 751
8596
Cov: 751 -> 751
Cov: 751 -> 751
8597
Cov: 751 -> 751
Cov: 751 -> 751
8598
Cov: 751 -> 751
Cov: 751 -> 751
8599
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8600
Cov: 751 -> 751
Cov: 751 -> 751
8601
Cov: 751 -> 751
Cov: 751 -> 751
8602
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'x2'"}
8603
Cov: 751 -> 751
Cov: 751 -> 751
8604
Cov: 751 -> 765
Cov: 765 -> 765
8605
Cov: 765 -> 766
Cov: 766 -> 766
8606
Cov: 766 -> 766
Cov: 766 -> 766
8607
Cov: 766 -> 767
Cov: 767 -> 767
8608
Cov: 767 -> 767
Cov: 767 -> 767
8609
Cov: 767 -> 767
Cov: 767 -> 767
8610
Cov: 767 -> 767
Cov: 767 -> 767
8611
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8612
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8613
Cov: 767 -> 767
Cov: 767 -> 767
8614
Cov: 767 -> 767
Cov: 767 -> 767
8615
Cov: 767 -> 767
Cov: 767 -> 767
8616
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query_channels', 'key_channels', 'num_hidden', 'dropout_p', and 'num_heads'"}
8617
Cov: 767 -> 767
Cov: 767 -> 767
8618
Cov: 767 -> 767
Cov: 767 -> 767
8619
Cov: 767 -> 767
Cov: 767 -> 767
8620
Cov: 767 -> 767
Cov: 767 -> 767
8621
Cov: 767 -> 767
Cov: 767 -> 767
8622
Cov: 767 -> 767
Cov: 767 -> 767
8623
{"exception": "NameError", "msg": "name 'mask' is not defined"}
8624
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'vocab_size', 'num_attention_heads', 'hidden_size', and 'hidden_dropout_prob'"}
8625
Cov: 767 -> 773
Cov: 773 -> 773
8626
Cov: 773 -> 773
Cov: 773 -> 773
8627
Cov: 773 -> 773
Cov: 773 -> 773
8628
Cov: 773 -> 773
Cov: 773 -> 773
8629
Cov: 773 -> 773
Cov: 773 -> 773
8630
Cov: 773 -> 773
Cov: 773 -> 773
8631
Cov: 773 -> 773
Cov: 773 -> 773
8632
Cov: 773 -> 773
Cov: 773 -> 773
8633
Cov: 773 -> 773
Cov: 773 -> 773
8634
Cov: 773 -> 773
Cov: 773 -> 773
8635
Cov: 773 -> 774
Cov: 774 -> 774
8636
Cov: 774 -> 774
Cov: 774 -> 774
8637
Cov: 774 -> 774
Cov: 774 -> 774
8638
{"exception": "NameError", "msg": "name 's' is not defined"}
8639
Cov: 774 -> 774
Cov: 774 -> 774
8640
Cov: 774 -> 774
Cov: 774 -> 774
8641
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8642
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8643
Cov: 774 -> 774
Cov: 774 -> 774
8644
Cov: 774 -> 774
Cov: 774 -> 774
8645
Cov: 774 -> 774
Cov: 774 -> 774
8646
Cov: 774 -> 774
Cov: 774 -> 774
8647
Cov: 774 -> 774
Cov: 774 -> 774
8648
Cov: 774 -> 774
Cov: 774 -> 774
8649
Cov: 774 -> 774
Cov: 774 -> 774
8650
Cov: 774 -> 774
Cov: 774 -> 774
8651
Cov: 774 -> 774
Cov: 774 -> 774
8652
Cov: 774 -> 774
Cov: 774 -> 774
8653
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 4)"}
8654
Cov: 774 -> 774
Cov: 774 -> 774
8655
Cov: 774 -> 774
Cov: 774 -> 774
8656
Cov: 774 -> 774
Cov: 774 -> 774
8657
Cov: 774 -> 774
Cov: 774 -> 774
8658
Cov: 774 -> 774
Cov: 774 -> 774
8659
Cov: 774 -> 774
Cov: 774 -> 774
8660
Cov: 774 -> 774
Cov: 774 -> 774
8661
Cov: 774 -> 774
Cov: 774 -> 774
8662
Cov: 774 -> 774
Cov: 774 -> 774
8663
Cov: 774 -> 774
Cov: 774 -> 774
8664
Cov: 774 -> 774
Cov: 774 -> 774
8665
Cov: 774 -> 774
Cov: 774 -> 774
8666
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
8667
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
8668
Cov: 774 -> 774
Cov: 774 -> 774
8669
Cov: 774 -> 774
Cov: 774 -> 774
8670
Cov: 774 -> 775
Cov: 775 -> 775
8671
Cov: 775 -> 775
Cov: 775 -> 775
8672
Cov: 775 -> 775
Cov: 775 -> 775
8673
Cov: 775 -> 775
Cov: 775 -> 775
8674
Cov: 775 -> 775
Cov: 775 -> 775
8675
Cov: 775 -> 816
Cov: 816 -> 816
8676
{"exception": "AssertionError", "msg": "embed_dim must be divisible by num_heads"}
8677
Cov: 816 -> 836
Cov: 836 -> 836
8678
Cov: 836 -> 836
Cov: 836 -> 836
8679
Cov: 836 -> 836
Cov: 836 -> 836
8680
Cov: 836 -> 836
Cov: 836 -> 836
8681
Cov: 836 -> 836
Cov: 836 -> 836
8682
Cov: 836 -> 836
Cov: 836 -> 836
8683
Cov: 836 -> 836
Cov: 836 -> 836
8684
Cov: 836 -> 836
Cov: 836 -> 836
8685
Cov: 836 -> 836
Cov: 836 -> 836
8686
Cov: 836 -> 836
Cov: 836 -> 836
8687
Cov: 836 -> 836
Cov: 836 -> 836
8688
Cov: 836 -> 836
Cov: 836 -> 836
8689
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'batch_size' and 'channels'"}
8690
Cov: 836 -> 836
Cov: 836 -> 836
8691
Cov: 836 -> 836
Cov: 836 -> 836
8692
Cov: 836 -> 836
Cov: 836 -> 836
8693
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8694
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8695
Cov: 836 -> 836
Cov: 836 -> 836
8696
Cov: 836 -> 836
Cov: 836 -> 836
8697
Cov: 836 -> 836
Cov: 836 -> 836
8698
Cov: 836 -> 836
Cov: 836 -> 836
8699
Cov: 836 -> 836
Cov: 836 -> 836
8700
Cov: 836 -> 837
Cov: 837 -> 837
8701
Cov: 837 -> 837
Cov: 837 -> 837
8702
Cov: 837 -> 837
Cov: 837 -> 837
8703
Cov: 837 -> 837
Cov: 837 -> 837
8704
Cov: 837 -> 837
Cov: 837 -> 837
8705
Cov: 837 -> 837
Cov: 837 -> 837
8706
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8707
Cov: 837 -> 837
Cov: 837 -> 837
8708
Cov: 837 -> 838
Cov: 838 -> 838
8709
Cov: 838 -> 838
Cov: 838 -> 838
8710
Cov: 838 -> 838
Cov: 838 -> 838
8711
{"exception": "NameError", "msg": "name 'input_vocab_size' is not defined"}
8712
Cov: 838 -> 838
Cov: 838 -> 838
8713
Cov: 838 -> 839
Cov: 839 -> 839
8714
Cov: 839 -> 839
Cov: 839 -> 839
8715
Cov: 839 -> 839
Cov: 839 -> 839
8716
Cov: 839 -> 839
Cov: 839 -> 839
8717
Cov: 839 -> 839
Cov: 839 -> 839
8718
Cov: 839 -> 839
Cov: 839 -> 839
8719
Cov: 839 -> 839
Cov: 839 -> 839
8720
Cov: 839 -> 839
Cov: 839 -> 839
8721
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8722
Cov: 839 -> 839
Cov: 839 -> 839
8723
Cov: 839 -> 839
Cov: 839 -> 839
8724
Cov: 839 -> 839
Cov: 839 -> 839
8725
Cov: 839 -> 839
Cov: 839 -> 839
8726
Cov: 839 -> 839
Cov: 839 -> 839
8727
Cov: 839 -> 839
Cov: 839 -> 839
8728
Cov: 839 -> 839
Cov: 839 -> 839
8729
Cov: 839 -> 839
Cov: 839 -> 839
8730
Cov: 839 -> 839
Cov: 839 -> 839
8731
Cov: 839 -> 839
Cov: 839 -> 839
8732
Cov: 839 -> 839
Cov: 839 -> 839
8733
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8734
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8735
Cov: 839 -> 839
Cov: 839 -> 839
8736
Cov: 839 -> 843
Cov: 843 -> 843
8737
Cov: 843 -> 843
Cov: 843 -> 843
8738
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'inv_scale_factor' and 'dropout_p'"}
8739
Cov: 843 -> 843
Cov: 843 -> 843
8740
Cov: 843 -> 843
Cov: 843 -> 843
8741
Cov: 843 -> 844
Cov: 844 -> 844
8742
Cov: 844 -> 844
Cov: 844 -> 844
8743
{"exception": "NameError", "msg": "name 'copy' is not defined"}
8744
Cov: 844 -> 847
Cov: 847 -> 847
8745
Cov: 847 -> 847
Cov: 847 -> 847
8746
Cov: 847 -> 847
Cov: 847 -> 847
8747
Cov: 847 -> 847
Cov: 847 -> 847
8748
Cov: 847 -> 847
Cov: 847 -> 847
8749
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
8750
Cov: 847 -> 35
Cov: 35 -> 35
8751
Cov: 35 -> 36
Cov: 36 -> 36
8752
Cov: 36 -> 198
Cov: 198 -> 198
8753
Cov: 198 -> 223
Cov: 223 -> 223
8754
Cov: 223 -> 223
Cov: 223 -> 223
8755
Cov: 223 -> 223
Cov: 223 -> 223
8756
Cov: 223 -> 227
Cov: 227 -> 227
8757
Cov: 227 -> 232
Cov: 232 -> 232
8758
Cov: 232 -> 232
Cov: 232 -> 232
8759
Cov: 232 -> 232
Cov: 232 -> 232
8760
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'stride'"}
8761
Cov: 232 -> 232
Cov: 232 -> 232
8762
Cov: 232 -> 232
Cov: 232 -> 232
8763
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8764
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8765
Cov: 232 -> 232
Cov: 232 -> 232
8766
Cov: 232 -> 232
Cov: 232 -> 232
8767
Cov: 232 -> 232
Cov: 232 -> 232
8768
Cov: 232 -> 232
Cov: 232 -> 232
8769
Cov: 232 -> 232
Cov: 232 -> 232
8770
Cov: 232 -> 232
Cov: 232 -> 232
8771
Cov: 232 -> 232
Cov: 232 -> 232
8772
Cov: 232 -> 232
Cov: 232 -> 232
8773
Cov: 232 -> 232
Cov: 232 -> 232
8774
Cov: 232 -> 232
Cov: 232 -> 232
8775
Cov: 232 -> 234
Cov: 234 -> 234
8776
Cov: 234 -> 234
Cov: 234 -> 234
8777
Cov: 234 -> 234
Cov: 234 -> 234
8778
Cov: 234 -> 234
Cov: 234 -> 234
8779
Cov: 234 -> 234
Cov: 234 -> 234
8780
Cov: 234 -> 234
Cov: 234 -> 234
8781
Cov: 234 -> 234
Cov: 234 -> 234
8782
Cov: 234 -> 236
Cov: 236 -> 236
8783
Cov: 236 -> 236
Cov: 236 -> 236
8784
Cov: 236 -> 236
Cov: 236 -> 236
8785
Cov: 236 -> 265
Cov: 265 -> 265
8786
Cov: 265 -> 266
Cov: 266 -> 266
8787
Cov: 266 -> 266
Cov: 266 -> 266
8788
Cov: 266 -> 267
Cov: 267 -> 267
8789
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8790
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8791
Cov: 267 -> 269
Cov: 269 -> 269
8792
Cov: 269 -> 269
Cov: 269 -> 269
8793
Cov: 269 -> 269
Cov: 269 -> 269
8794
Cov: 269 -> 269
Cov: 269 -> 269
8795
Cov: 269 -> 269
Cov: 269 -> 269
8796
Cov: 269 -> 269
Cov: 269 -> 269
8797
Cov: 269 -> 281
Cov: 281 -> 281
8798
Cov: 281 -> 281
Cov: 281 -> 281
8799
Cov: 281 -> 281
Cov: 281 -> 281
8800
Cov: 281 -> 282
Cov: 282 -> 282
8801
Cov: 282 -> 284
Cov: 284 -> 284
8802
Cov: 284 -> 284
Cov: 284 -> 284
8803
Cov: 284 -> 284
Cov: 284 -> 284
8804
Cov: 284 -> 284
Cov: 284 -> 284
8805
Cov: 284 -> 284
Cov: 284 -> 284
8806
Cov: 284 -> 284
Cov: 284 -> 284
8807
Cov: 284 -> 284
Cov: 284 -> 284
8808
Cov: 284 -> 284
Cov: 284 -> 284
8809
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8810
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8811
Cov: 284 -> 284
Cov: 284 -> 284
8812
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
8813
Cov: 284 -> 286
Cov: 286 -> 286
8814
Cov: 286 -> 286
Cov: 286 -> 286
8815
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8816
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8817
Cov: 286 -> 287
Cov: 287 -> 287
8818
Cov: 287 -> 287
Cov: 287 -> 287
8819
Cov: 287 -> 287
Cov: 287 -> 287
8820
Cov: 287 -> 287
Cov: 287 -> 287
8821
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8822
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8823
Cov: 287 -> 287
Cov: 287 -> 287
8824
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8825
Cov: 287 -> 292
Cov: 292 -> 292
8826
Cov: 292 -> 292
Cov: 292 -> 292
8827
Cov: 292 -> 306
Cov: 306 -> 306
8828
Cov: 306 -> 306
Cov: 306 -> 306
8829
Cov: 306 -> 307
Cov: 307 -> 307
8830
Cov: 307 -> 307
Cov: 307 -> 307
8831
Cov: 307 -> 307
Cov: 307 -> 307
8832
Cov: 307 -> 307
Cov: 307 -> 307
8833
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'hidden_size', 'num_heads', 'num_queries', 'num_keys', and 'max_len'"}
8834
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'embed_dim'"}
8835
Cov: 307 -> 307
Cov: 307 -> 307
8836
Cov: 307 -> 307
Cov: 307 -> 307
8837
Cov: 307 -> 307
Cov: 307 -> 307
8838
Cov: 307 -> 307
Cov: 307 -> 307
8839
Cov: 307 -> 307
Cov: 307 -> 307
8840
Cov: 307 -> 307
Cov: 307 -> 307
8841
Cov: 307 -> 307
Cov: 307 -> 307
8842
Cov: 307 -> 307
Cov: 307 -> 307
8843
Cov: 307 -> 307
Cov: 307 -> 307
8844
Cov: 307 -> 307
Cov: 307 -> 307
8845
Cov: 307 -> 307
Cov: 307 -> 307
8846
Cov: 307 -> 323
Cov: 323 -> 323
8847
Cov: 323 -> 323
Cov: 323 -> 323
8848
Cov: 323 -> 323
Cov: 323 -> 323
8849
Cov: 323 -> 323
Cov: 323 -> 323
8850
Cov: 323 -> 340
Cov: 340 -> 340
8851
Cov: 340 -> 340
Cov: 340 -> 340
8852
{"exception": "TypeError", "msg": "unsupported operand type(s) for %: 'NoneType' and 'int'"}
8853
Cov: 340 -> 341
Cov: 341 -> 341
8854
Cov: 341 -> 341
Cov: 341 -> 341
8855
Cov: 341 -> 341
Cov: 341 -> 341
8856
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8857
Cov: 341 -> 347
Cov: 347 -> 347
8858
Cov: 347 -> 347
Cov: 347 -> 347
8859
Cov: 347 -> 354
Cov: 354 -> 354
8860
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query', 'key', 'value', 'inv_scale_factor', and 'dropout_p'"}
8861
Cov: 354 -> 354
Cov: 354 -> 354
8862
Cov: 354 -> 354
Cov: 354 -> 354
8863
Cov: 354 -> 354
Cov: 354 -> 354
8864
Cov: 354 -> 427
Cov: 427 -> 427
8865
Cov: 427 -> 427
Cov: 427 -> 427
8866
Cov: 427 -> 427
Cov: 427 -> 427
8867
Cov: 427 -> 427
Cov: 427 -> 427
8868
{"exception": "IndentationError", "msg": "expected an indented block (<string>, line 15)"}
8869
Cov: 427 -> 427
Cov: 427 -> 427
8870
Cov: 427 -> 427
Cov: 427 -> 427
8871
{"exception": "IndentationError", "msg": "unindent does not match any outer indentation level (<string>, line 44)"}
8872
Cov: 427 -> 427
Cov: 427 -> 427
8873
Cov: 427 -> 427
Cov: 427 -> 427
8874
Cov: 427 -> 427
Cov: 427 -> 427
8875
Cov: 427 -> 427
Cov: 427 -> 427
8876
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
8877
Cov: 427 -> 441
Cov: 441 -> 441
8878
Cov: 441 -> 441
Cov: 441 -> 441
8879
{"exception": "NameError", "msg": "name 'view' is not defined"}
8880
Cov: 441 -> 445
Cov: 445 -> 445
8881
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dim'"}
8882
Cov: 445 -> 445
Cov: 445 -> 445
8883
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
8884
Cov: 445 -> 445
Cov: 445 -> 445
8885
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8886
{"exception": "NameError", "msg": "name 'nn' is not defined"}
8887
Cov: 445 -> 445
Cov: 445 -> 445
8888
Cov: 445 -> 445
Cov: 445 -> 445
8889
Cov: 445 -> 445
Cov: 445 -> 445
8890
Cov: 445 -> 445
Cov: 445 -> 445
8891
Cov: 445 -> 445
Cov: 445 -> 445
8892
Cov: 445 -> 445
Cov: 445 -> 445
8893
Cov: 445 -> 445
Cov: 445 -> 445
8894
Cov: 445 -> 445
Cov: 445 -> 445
8895
Cov: 445 -> 445
Cov: 445 -> 445
8896
Cov: 445 -> 446
Cov: 446 -> 446
8897
Cov: 446 -> 446
Cov: 446 -> 446
8898
Cov: 446 -> 446
Cov: 446 -> 446
8899
Cov: 446 -> 446
Cov: 446 -> 446
8900
Cov: 446 -> 446
Cov: 446 -> 446
8901
Cov: 446 -> 446
Cov: 446 -> 446
8902
Cov: 446 -> 446
Cov: 446 -> 446
8903
Cov: 446 -> 446
Cov: 446 -> 446
8904
Cov: 446 -> 446
Cov: 446 -> 446
8905
Cov: 446 -> 446
Cov: 446 -> 446
8906
Cov: 446 -> 446
Cov: 446 -> 446
8907
Cov: 446 -> 447
Cov: 447 -> 447
8908
Cov: 447 -> 448
Cov: 448 -> 448
8909
Cov: 448 -> 448
Cov: 448 -> 448
8910
Cov: 448 -> 448
Cov: 448 -> 448
8911
Cov: 448 -> 448
Cov: 448 -> 448
8912
Cov: 448 -> 448
Cov: 448 -> 448
8913
Cov: 448 -> 448
Cov: 448 -> 448
8914
Cov: 448 -> 448
Cov: 448 -> 448
8915
Cov: 448 -> 448
Cov: 448 -> 448
8916
Cov: 448 -> 448
Cov: 448 -> 448
8917
Cov: 448 -> 448
Cov: 448 -> 448
8918
Cov: 448 -> 448
Cov: 448 -> 448
8919
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8920
{"exception": "NameError", "msg": "name 'Block' is not defined"}
8921
Cov: 448 -> 448
Cov: 448 -> 448
8922
Cov: 448 -> 448
Cov: 448 -> 448
8923
Cov: 448 -> 448
Cov: 448 -> 448
8924
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8925
Cov: 448 -> 448
Cov: 448 -> 448
8926
Cov: 448 -> 448
Cov: 448 -> 448
8927
Cov: 448 -> 448
Cov: 448 -> 448
8928
Cov: 448 -> 448
Cov: 448 -> 448
8929
Cov: 448 -> 448
Cov: 448 -> 448
8930
Cov: 448 -> 448
Cov: 448 -> 448
8931
Cov: 448 -> 448
Cov: 448 -> 448
8932
Cov: 448 -> 448
Cov: 448 -> 448
8933
Cov: 448 -> 448
Cov: 448 -> 448
8934
Cov: 448 -> 448
Cov: 448 -> 448
8935
Cov: 448 -> 448
Cov: 448 -> 448
8936
Cov: 448 -> 448
Cov: 448 -> 448
8937
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8938
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
8939
Cov: 448 -> 448
Cov: 448 -> 448
8940
Cov: 448 -> 448
Cov: 448 -> 448
8941
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 9)"}
8942
Cov: 448 -> 448
Cov: 448 -> 448
8943
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
8944
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'tracking_running_stats'"}
8945
Cov: 448 -> 448
Cov: 448 -> 448
8946
Cov: 448 -> 448
Cov: 448 -> 448
8947
Cov: 448 -> 448
Cov: 448 -> 448
8948
Cov: 448 -> 448
Cov: 448 -> 448
8949
Cov: 448 -> 448
Cov: 448 -> 448
8950
Cov: 448 -> 448
Cov: 448 -> 448
8951
Cov: 448 -> 448
Cov: 448 -> 448
8952
Cov: 448 -> 448
Cov: 448 -> 448
8953
Cov: 448 -> 448
Cov: 448 -> 448
8954
Cov: 448 -> 448
Cov: 448 -> 448
8955
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'd_model' and 'num_heads'"}
8956
Cov: 448 -> 452
Cov: 452 -> 452
8957
Cov: 452 -> 452
Cov: 452 -> 452
8958
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8959
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8960
Cov: 452 -> 453
Cov: 453 -> 453
8961
Cov: 453 -> 453
Cov: 453 -> 453
8962
Cov: 453 -> 453
Cov: 453 -> 453
8963
Cov: 453 -> 453
Cov: 453 -> 453
8964
Cov: 453 -> 453
Cov: 453 -> 453
8965
Cov: 453 -> 453
Cov: 453 -> 453
8966
Cov: 453 -> 453
Cov: 453 -> 453
8967
Cov: 453 -> 453
Cov: 453 -> 453
8968
Cov: 453 -> 453
Cov: 453 -> 453
8969
Cov: 453 -> 453
Cov: 453 -> 453
8970
Cov: 453 -> 453
Cov: 453 -> 453
8971
Cov: 453 -> 453
Cov: 453 -> 453
8972
Cov: 453 -> 453
Cov: 453 -> 453
8973
Cov: 453 -> 453
Cov: 453 -> 453
8974
Cov: 453 -> 453
Cov: 453 -> 453
8975
Cov: 453 -> 453
Cov: 453 -> 453
8976
Cov: 453 -> 453
Cov: 453 -> 453
8977
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8978
{"exception": "NameError", "msg": "name 'Model' is not defined"}
8979
Cov: 453 -> 453
Cov: 453 -> 453
8980
Cov: 453 -> 453
Cov: 453 -> 453
8981
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
8982
{"exception": "NameError", "msg": "name 'math' is not defined"}
8983
Cov: 453 -> 453
Cov: 453 -> 453
8984
Cov: 453 -> 453
Cov: 453 -> 453
8985
Cov: 453 -> 453
Cov: 453 -> 453
8986
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
8987
Cov: 453 -> 453
Cov: 453 -> 453
8988
Cov: 453 -> 453
Cov: 453 -> 453
8989
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query_channels', 'key_channels', and 'output_channels'"}
8990
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dropout_p'"}
8991
{"exception": "SyntaxError", "msg": "invalid syntax (<string>, line 16)"}
8992
Cov: 453 -> 453
Cov: 453 -> 453
8993
Cov: 453 -> 453
Cov: 453 -> 453
8994
Cov: 453 -> 453
Cov: 453 -> 453
8995
Cov: 453 -> 453
Cov: 453 -> 453
8996
Cov: 453 -> 453
Cov: 453 -> 453
8997
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'w'"}
8998
Cov: 453 -> 453
Cov: 453 -> 453
8999
Cov: 453 -> 453
Cov: 453 -> 453
9000
Cov: 453 -> 453
Cov: 453 -> 453
9001
Cov: 453 -> 453
Cov: 453 -> 453
9002
Cov: 453 -> 453
Cov: 453 -> 453
9003
Cov: 453 -> 453
Cov: 453 -> 453
9004
Cov: 453 -> 453
Cov: 453 -> 453
9005
Cov: 453 -> 453
Cov: 453 -> 453
9006
Cov: 453 -> 455
Cov: 455 -> 455
9007
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9008
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9009
Cov: 455 -> 455
Cov: 455 -> 455
9010
Cov: 455 -> 455
Cov: 455 -> 455
9011
Cov: 455 -> 455
Cov: 455 -> 455
9012
Cov: 455 -> 455
Cov: 455 -> 455
9013
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'minmax'"}
9014
Cov: 455 -> 455
Cov: 455 -> 455
9015
Cov: 455 -> 455
Cov: 455 -> 455
9016
Cov: 455 -> 455
Cov: 455 -> 455
9017
Cov: 455 -> 455
Cov: 455 -> 455
9018
Cov: 455 -> 455
Cov: 455 -> 455
9019
Cov: 455 -> 455
Cov: 455 -> 455
9020
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'in_channels'"}
9021
Cov: 455 -> 455
Cov: 455 -> 455
9022
Cov: 455 -> 455
Cov: 455 -> 455
9023
Cov: 455 -> 455
Cov: 455 -> 455
9024
Cov: 455 -> 455
Cov: 455 -> 455
9025
Cov: 455 -> 456
Cov: 456 -> 456
9026
Cov: 456 -> 456
Cov: 456 -> 456
9027
Cov: 456 -> 456
Cov: 456 -> 456
9028
Cov: 456 -> 456
Cov: 456 -> 456
9029
Cov: 456 -> 478
Cov: 478 -> 478
9030
Cov: 478 -> 478
Cov: 478 -> 478
9031
Cov: 478 -> 478
Cov: 478 -> 478
9032
Cov: 478 -> 478
Cov: 478 -> 478
9033
Cov: 478 -> 478
Cov: 478 -> 478
9034
Cov: 478 -> 479
Cov: 479 -> 479
9035
Cov: 479 -> 479
Cov: 479 -> 479
9036
Cov: 479 -> 479
Cov: 479 -> 479
9037
Cov: 479 -> 479
Cov: 479 -> 479
9038
Cov: 479 -> 479
Cov: 479 -> 479
9039
Cov: 479 -> 479
Cov: 479 -> 479
9040
Cov: 479 -> 479
Cov: 479 -> 479
9041
Cov: 479 -> 485
Cov: 485 -> 485
9042
Cov: 485 -> 488
Cov: 488 -> 488
9043
Cov: 488 -> 488
Cov: 488 -> 488
9044
Cov: 488 -> 488
Cov: 488 -> 488
9045
Cov: 488 -> 488
Cov: 488 -> 488
9046
Cov: 488 -> 488
Cov: 488 -> 488
9047
Cov: 488 -> 488
Cov: 488 -> 488
9048
Cov: 488 -> 488
Cov: 488 -> 488
9049
Cov: 488 -> 488
Cov: 488 -> 488
9050
Cov: 488 -> 488
Cov: 488 -> 488
9051
Cov: 488 -> 488
Cov: 488 -> 488
9052
Cov: 488 -> 488
Cov: 488 -> 488
9053
Cov: 488 -> 488
Cov: 488 -> 488
9054
Cov: 488 -> 488
Cov: 488 -> 488
9055
Cov: 488 -> 488
Cov: 488 -> 488
9056
{"exception": "ValueError", "msg": "Only \"zeros\" padding mode is supported for ConvTranspose2d"}
9057
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9058
Cov: 488 -> 490
Cov: 490 -> 490
9059
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9060
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9061
Cov: 490 -> 490
Cov: 490 -> 490
9062
Cov: 490 -> 490
Cov: 490 -> 490
9063
Cov: 490 -> 490
Cov: 490 -> 490
9064
Cov: 490 -> 490
Cov: 490 -> 490
9065
Cov: 490 -> 490
Cov: 490 -> 490
9066
Cov: 490 -> 490
Cov: 490 -> 490
9067
Cov: 490 -> 490
Cov: 490 -> 490
9068
Cov: 490 -> 490
Cov: 490 -> 490
9069
Cov: 490 -> 490
Cov: 490 -> 490
9070
Cov: 490 -> 490
Cov: 490 -> 490
9071
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9072
Cov: 490 -> 492
Cov: 492 -> 492
9073
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9074
Cov: 492 -> 492
Cov: 492 -> 492
9075
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'stride'"}
9076
{"exception": "TypeError", "msg": "Model.__init__() takes 1 positional argument but 3 were given"}
9077
Cov: 492 -> 494
Cov: 494 -> 494
9078
Cov: 494 -> 494
Cov: 494 -> 494
9079
Cov: 494 -> 494
Cov: 494 -> 494
9080
Cov: 494 -> 494
Cov: 494 -> 494
9081
Cov: 494 -> 494
Cov: 494 -> 494
9082
Cov: 494 -> 494
Cov: 494 -> 494
9083
Cov: 494 -> 494
Cov: 494 -> 494
9084
Cov: 494 -> 494
Cov: 494 -> 494
9085
Cov: 494 -> 510
Cov: 510 -> 510
9086
Cov: 510 -> 510
Cov: 510 -> 510
9087
Cov: 510 -> 510
Cov: 510 -> 510
9088
Cov: 510 -> 510
Cov: 510 -> 510
9089
Cov: 510 -> 510
Cov: 510 -> 510
9090
Cov: 510 -> 510
Cov: 510 -> 510
9091
Cov: 510 -> 516
Cov: 516 -> 516
9092
Cov: 516 -> 516
Cov: 516 -> 516
9093
Cov: 516 -> 516
Cov: 516 -> 516
9094
Cov: 516 -> 516
Cov: 516 -> 516
9095
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'shape', 'out_ch1', 'out_ch2', and 'out_ch3'"}
9096
Cov: 516 -> 516
Cov: 516 -> 516
9097
Cov: 516 -> 516
Cov: 516 -> 516
9098
Cov: 516 -> 516
Cov: 516 -> 516
9099
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9100
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9101
Cov: 516 -> 516
Cov: 516 -> 516
9102
Cov: 516 -> 516
Cov: 516 -> 516
9103
Cov: 516 -> 516
Cov: 516 -> 516
9104
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'dim' and 'num_heads'"}
9105
Cov: 516 -> 516
Cov: 516 -> 516
9106
Cov: 516 -> 533
Cov: 533 -> 533
9107
Cov: 533 -> 533
Cov: 533 -> 533
9108
Cov: 533 -> 533
Cov: 533 -> 533
9109
Cov: 533 -> 533
Cov: 533 -> 533
9110
Cov: 533 -> 533
Cov: 533 -> 533
9111
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'query', 'key', and 'value'"}
9112
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'n_head', 'n_hid', and 'dropout_p'"}
9113
Cov: 533 -> 533
Cov: 533 -> 533
9114
Cov: 533 -> 533
Cov: 533 -> 533
9115
{"exception": "RuntimeError", "msg": "[enforce fail at alloc_cpu.cpp:83] err == 0. DefaultCPUAllocator: can't allocate memory: you tried to allocate 787200000000000 bytes. Error code 12 (Cannot allocate memory)"}
9116
Cov: 533 -> 533
Cov: 533 -> 533
9117
Cov: 533 -> 533
Cov: 533 -> 533
9118
Cov: 533 -> 533
Cov: 533 -> 533
9119
Cov: 533 -> 533
Cov: 533 -> 533
9120
Cov: 533 -> 533
Cov: 533 -> 533
9121
Cov: 533 -> 533
Cov: 533 -> 533
9122
Cov: 533 -> 533
Cov: 533 -> 533
9123
Cov: 533 -> 533
Cov: 533 -> 533
9124
Cov: 533 -> 533
Cov: 533 -> 533
9125
Cov: 533 -> 533
Cov: 533 -> 533
9126
Cov: 533 -> 533
Cov: 533 -> 533
9127
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'W' and 'b'"}
9128
Cov: 533 -> 533
Cov: 533 -> 533
9129
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9130
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9131
Cov: 533 -> 533
Cov: 533 -> 533
9132
Cov: 533 -> 533
Cov: 533 -> 533
9133
Cov: 533 -> 533
Cov: 533 -> 533
9134
Cov: 533 -> 533
Cov: 533 -> 533
9135
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
9136
Cov: 533 -> 533
Cov: 533 -> 533
9137
Cov: 533 -> 533
Cov: 533 -> 533
9138
Cov: 533 -> 533
Cov: 533 -> 533
9139
Cov: 533 -> 533
Cov: 533 -> 533
9140
Cov: 533 -> 533
Cov: 533 -> 533
9141
Cov: 533 -> 533
Cov: 533 -> 533
9142
Cov: 533 -> 533
Cov: 533 -> 533
9143
Cov: 533 -> 533
Cov: 533 -> 533
9144
{"exception": "AttributeError", "msg": "'_OpNamespace' 'aten' object has no attribute 'convert_element_type'"}
9145
Cov: 533 -> 546
Cov: 546 -> 546
9146
Cov: 546 -> 546
Cov: 546 -> 546
9147
Cov: 546 -> 546
Cov: 546 -> 546
9148
Cov: 546 -> 546
Cov: 546 -> 546
9149
Cov: 546 -> 546
Cov: 546 -> 546
9150
Cov: 546 -> 546
Cov: 546 -> 546
9151
Cov: 546 -> 546
Cov: 546 -> 546
9152
Cov: 546 -> 546
Cov: 546 -> 546
9153
Cov: 546 -> 546
Cov: 546 -> 546
9154
Cov: 546 -> 546
Cov: 546 -> 546
9155
Cov: 546 -> 546
Cov: 546 -> 546
9156
Cov: 546 -> 546
Cov: 546 -> 546
9157
Cov: 546 -> 546
Cov: 546 -> 546
9158
Cov: 546 -> 546
Cov: 546 -> 546
9159
Cov: 546 -> 546
Cov: 546 -> 546
9160
Cov: 546 -> 546
Cov: 546 -> 546
9161
Cov: 546 -> 546
Cov: 546 -> 546
9162
Cov: 546 -> 546
Cov: 546 -> 546
9163
Cov: 546 -> 548
Cov: 548 -> 548
9164
Cov: 548 -> 549
Cov: 549 -> 549
9165
Cov: 549 -> 549
Cov: 549 -> 549
9166
Cov: 549 -> 549
Cov: 549 -> 549
9167
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
9168
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute '_ConvTransposeNd'"}
9169
=================================================================
timeout reached. testcase took: 10
[Error] ...
Hangs during coverage collection.
Had to restart coverage executor...
timeout
9170
Cov: 549 -> 143
Cov: 143 -> 143
9171
Cov: 143 -> 143
Cov: 143 -> 143
9172
Cov: 143 -> 143
Cov: 143 -> 143
9173
Cov: 143 -> 144
Cov: 144 -> 144
9174
Cov: 144 -> 219
Cov: 219 -> 219
9175
Cov: 219 -> 219
Cov: 219 -> 219
9176
Cov: 219 -> 219
Cov: 219 -> 219
9177
Cov: 219 -> 253
Cov: 253 -> 253
9178
Cov: 253 -> 253
Cov: 253 -> 253
9179
Cov: 253 -> 254
Cov: 254 -> 254
9180
Cov: 254 -> 254
Cov: 254 -> 254
9181
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9182
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9183
Cov: 254 -> 255
Cov: 255 -> 255
9184
Cov: 255 -> 256
Cov: 256 -> 256
9185
Cov: 256 -> 256
Cov: 256 -> 256
9186
Cov: 256 -> 256
Cov: 256 -> 256
9187
Cov: 256 -> 256
Cov: 256 -> 256
9188
Cov: 256 -> 329
Cov: 329 -> 329
9189
Cov: 329 -> 333
Cov: 333 -> 333
9190
Cov: 333 -> 334
Cov: 334 -> 334
9191
Cov: 334 -> 334
Cov: 334 -> 334
9192
Cov: 334 -> 334
Cov: 334 -> 334
9193
Cov: 334 -> 351
Cov: 351 -> 351
9194
Cov: 351 -> 351
Cov: 351 -> 351
9195
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9196
Cov: 351 -> 354
Cov: 354 -> 354
9197
Cov: 354 -> 354
Cov: 354 -> 354
9198
Cov: 354 -> 354
Cov: 354 -> 354
9199
Cov: 354 -> 354
Cov: 354 -> 354
9200
Cov: 354 -> 362
Cov: 362 -> 362
9201
Cov: 362 -> 362
Cov: 362 -> 362
9202
Cov: 362 -> 362
Cov: 362 -> 362
9203
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
9204
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 't7'"}
9205
Cov: 362 -> 362
Cov: 362 -> 362
9206
Cov: 362 -> 362
Cov: 362 -> 362
9207
Cov: 362 -> 378
Cov: 378 -> 378
9208
Cov: 378 -> 378
Cov: 378 -> 378
9209
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9210
Cov: 378 -> 378
Cov: 378 -> 378
9211
Cov: 378 -> 382
Cov: 382 -> 382
9212
Cov: 382 -> 382
Cov: 382 -> 382
9213
Cov: 382 -> 382
Cov: 382 -> 382
9214
Cov: 382 -> 385
Cov: 385 -> 385
9215
Cov: 385 -> 385
Cov: 385 -> 385
9216
Cov: 385 -> 385
Cov: 385 -> 385
9217
Cov: 385 -> 385
Cov: 385 -> 385
9218
Cov: 385 -> 385
Cov: 385 -> 385
9219
Cov: 385 -> 387
Cov: 387 -> 387
9220
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'in_channels'"}
9221
Cov: 387 -> 403
Cov: 403 -> 403
9222
Cov: 403 -> 419
Cov: 419 -> 419
9223
Cov: 419 -> 419
Cov: 419 -> 419
9224
Cov: 419 -> 419
Cov: 419 -> 419
9225
Cov: 419 -> 421
Cov: 421 -> 421
9226
Cov: 421 -> 421
Cov: 421 -> 421
9227
Cov: 421 -> 422
Cov: 422 -> 422
9228
Cov: 422 -> 422
Cov: 422 -> 422
9229
Cov: 422 -> 422
Cov: 422 -> 422
9230
Cov: 422 -> 422
Cov: 422 -> 422
9231
Cov: 422 -> 422
Cov: 422 -> 422
9232
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9233
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9234
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9235
Cov: 422 -> 422
Cov: 422 -> 422
9236
Cov: 422 -> 422
Cov: 422 -> 422
9237
Cov: 422 -> 422
Cov: 422 -> 422
9238
Cov: 422 -> 422
Cov: 422 -> 422
9239
Cov: 422 -> 422
Cov: 422 -> 422
9240
Cov: 422 -> 422
Cov: 422 -> 422
9241
Cov: 422 -> 422
Cov: 422 -> 422
9242
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
9243
Cov: 422 -> 422
Cov: 422 -> 422
9244
Cov: 422 -> 422
Cov: 422 -> 422
9245
Cov: 422 -> 422
Cov: 422 -> 422
9246
Cov: 422 -> 422
Cov: 422 -> 422
9247
Cov: 422 -> 422
Cov: 422 -> 422
9248
Cov: 422 -> 422
Cov: 422 -> 422
9249
Cov: 422 -> 422
Cov: 422 -> 422
9250
{"exception": "SyntaxError", "msg": "positional argument follows keyword argument (<string>, line 11)"}
9251
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9252
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9253
Cov: 422 -> 422
Cov: 422 -> 422
9254
Cov: 422 -> 422
Cov: 422 -> 422
9255
Cov: 422 -> 422
Cov: 422 -> 422
9256
Cov: 422 -> 422
Cov: 422 -> 422
9257
Cov: 422 -> 438
Cov: 438 -> 438
9258
Cov: 438 -> 439
Cov: 439 -> 439
9259
Cov: 439 -> 439
Cov: 439 -> 439
9260
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'loopVar'"}
9261
Cov: 439 -> 439
Cov: 439 -> 439
9262
Cov: 439 -> 439
Cov: 439 -> 439
9263
Cov: 439 -> 439
Cov: 439 -> 439
9264
Cov: 439 -> 439
Cov: 439 -> 439
9265
Cov: 439 -> 439
Cov: 439 -> 439
9266
Cov: 439 -> 439
Cov: 439 -> 439
9267
Cov: 439 -> 439
Cov: 439 -> 439
9268
Cov: 439 -> 439
Cov: 439 -> 439
9269
Cov: 439 -> 439
Cov: 439 -> 439
9270
Cov: 439 -> 439
Cov: 439 -> 439
9271
Cov: 439 -> 439
Cov: 439 -> 439
9272
Cov: 439 -> 439
Cov: 439 -> 439
9273
Cov: 439 -> 439
Cov: 439 -> 439
9274
Cov: 439 -> 456
Cov: 456 -> 456
9275
Cov: 456 -> 456
Cov: 456 -> 456
9276
Cov: 456 -> 456
Cov: 456 -> 456
9277
Cov: 456 -> 456
Cov: 456 -> 456
9278
Cov: 456 -> 456
Cov: 456 -> 456
9279
Cov: 456 -> 456
Cov: 456 -> 456
9280
Cov: 456 -> 456
Cov: 456 -> 456
9281
Cov: 456 -> 456
Cov: 456 -> 456
9282
Cov: 456 -> 456
Cov: 456 -> 456
9283
Cov: 456 -> 456
Cov: 456 -> 456
9284
Cov: 456 -> 456
Cov: 456 -> 456
9285
Cov: 456 -> 465
Cov: 465 -> 465
9286
Cov: 465 -> 466
Cov: 466 -> 466
9287
Cov: 466 -> 466
Cov: 466 -> 466
9288
Cov: 466 -> 466
Cov: 466 -> 466
9289
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9290
Cov: 466 -> 466
Cov: 466 -> 466
9291
Cov: 466 -> 494
Cov: 494 -> 494
9292
Cov: 494 -> 495
Cov: 495 -> 495
9293
Cov: 495 -> 495
Cov: 495 -> 495
9294
Cov: 495 -> 495
Cov: 495 -> 495
9295
Cov: 495 -> 495
Cov: 495 -> 495
9296
Cov: 495 -> 495
Cov: 495 -> 495
9297
Cov: 495 -> 495
Cov: 495 -> 495
9298
Cov: 495 -> 495
Cov: 495 -> 495
9299
Cov: 495 -> 495
Cov: 495 -> 495
9300
Cov: 495 -> 495
Cov: 495 -> 495
9301
Cov: 495 -> 495
Cov: 495 -> 495
9302
Cov: 495 -> 495
Cov: 495 -> 495
9303
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9304
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9305
Cov: 495 -> 495
Cov: 495 -> 495
9306
Cov: 495 -> 495
Cov: 495 -> 495
9307
Cov: 495 -> 495
Cov: 495 -> 495
9308
Cov: 495 -> 495
Cov: 495 -> 495
9309
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9310
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9311
Cov: 495 -> 495
Cov: 495 -> 495
9312
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
9313
Cov: 495 -> 497
Cov: 497 -> 497
9314
Cov: 497 -> 497
Cov: 497 -> 497
9315
Cov: 497 -> 497
Cov: 497 -> 497
9316
Cov: 497 -> 497
Cov: 497 -> 497
9317
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9318
Cov: 497 -> 497
Cov: 497 -> 497
9319
Cov: 497 -> 497
Cov: 497 -> 497
9320
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
9321
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'hidden_size' and 'num_heads'"}
9322
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'num_attention_heads' and 'hidden_size'"}
9323
Cov: 497 -> 497
Cov: 497 -> 497
9324
{"exception": "FileNotFoundError", "msg": "[Errno 2] No such file or directory: 'input0.npz'"}
9325
Cov: 497 -> 497
Cov: 497 -> 497
9326
{"exception": "RuntimeError", "msg": "Storage size calculation overflowed with sizes=[1, 9223372036854775807, 40, 40]"}
9327
Cov: 497 -> 497
Cov: 497 -> 497
9328
Cov: 497 -> 497
Cov: 497 -> 497
9329
Cov: 497 -> 497
Cov: 497 -> 497
9330
Cov: 497 -> 497
Cov: 497 -> 497
9331
Cov: 497 -> 497
Cov: 497 -> 497
9332
Cov: 497 -> 497
Cov: 497 -> 497
9333
Cov: 497 -> 497
Cov: 497 -> 497
9334
Cov: 497 -> 523
Cov: 523 -> 523
9335
Cov: 523 -> 523
Cov: 523 -> 523
9336
Cov: 523 -> 523
Cov: 523 -> 523
9337
Cov: 523 -> 523
Cov: 523 -> 523
9338
Cov: 523 -> 523
Cov: 523 -> 523
9339
Cov: 523 -> 523
Cov: 523 -> 523
9340
Cov: 523 -> 523
Cov: 523 -> 523
9341
Cov: 523 -> 524
Cov: 524 -> 524
9342
Cov: 524 -> 524
Cov: 524 -> 524
9343
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9344
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9345
Cov: 524 -> 524
Cov: 524 -> 524
9346
Cov: 524 -> 524
Cov: 524 -> 524
9347
{"exception": "NameError", "msg": "name 'PositionalEncoding' is not defined"}
9348
Cov: 524 -> 558
Cov: 558 -> 558
9349
Cov: 558 -> 558
Cov: 558 -> 558
9350
Cov: 558 -> 558
Cov: 558 -> 558
9351
Cov: 558 -> 558
Cov: 558 -> 558
9352
Cov: 558 -> 558
Cov: 558 -> 558
9353
Cov: 558 -> 558
Cov: 558 -> 558
9354
Cov: 558 -> 558
Cov: 558 -> 558
9355
Cov: 558 -> 558
Cov: 558 -> 558
9356
Cov: 558 -> 558
Cov: 558 -> 558
9357
Cov: 558 -> 558
Cov: 558 -> 558
9358
Cov: 558 -> 558
Cov: 558 -> 558
9359
Cov: 558 -> 558
Cov: 558 -> 558
9360
Cov: 558 -> 558
Cov: 558 -> 558
9361
Cov: 558 -> 558
Cov: 558 -> 558
9362
Cov: 558 -> 558
Cov: 558 -> 558
9363
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other_tensor'"}
9364
Cov: 558 -> 558
Cov: 558 -> 558
9365
Cov: 558 -> 558
Cov: 558 -> 558
9366
Cov: 558 -> 558
Cov: 558 -> 558
9367
Cov: 558 -> 558
Cov: 558 -> 558
9368
Cov: 558 -> 558
Cov: 558 -> 558
9369
Cov: 558 -> 558
Cov: 558 -> 558
9370
{"exception": "TypeError", "msg": "empty(): argument 'size' failed to unpack the object at pos 2 with error \"type must be tuple of ints,but got list\""}
9371
Cov: 558 -> 559
Cov: 559 -> 559
9372
{"exception": "RuntimeError", "msg": "mat1 and mat2 shapes cannot be multiplied (24x8 and 3x8)"}
9373
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9374
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9375
Cov: 559 -> 560
Cov: 560 -> 560
9376
Cov: 560 -> 560
Cov: 560 -> 560
9377
Cov: 560 -> 560
Cov: 560 -> 560
9378
Cov: 560 -> 560
Cov: 560 -> 560
9379
Cov: 560 -> 560
Cov: 560 -> 560
9380
{"exception": "KeyError", "msg": "'min_value'"}
9381
Cov: 560 -> 560
Cov: 560 -> 560
9382
Cov: 560 -> 560
Cov: 560 -> 560
9383
Cov: 560 -> 560
Cov: 560 -> 560
9384
Cov: 560 -> 560
Cov: 560 -> 560
9385
Cov: 560 -> 560
Cov: 560 -> 560
9386
Cov: 560 -> 560
Cov: 560 -> 560
9387
Cov: 560 -> 650
Cov: 650 -> 650
9388
Cov: 650 -> 650
Cov: 650 -> 650
9389
Cov: 650 -> 650
Cov: 650 -> 650
9390
Cov: 650 -> 650
Cov: 650 -> 650
9391
Cov: 650 -> 650
Cov: 650 -> 650
9392
Cov: 650 -> 650
Cov: 650 -> 650
9393
Cov: 650 -> 650
Cov: 650 -> 650
9394
Cov: 650 -> 650
Cov: 650 -> 650
9395
Cov: 650 -> 650
Cov: 650 -> 650
9396
Cov: 650 -> 650
Cov: 650 -> 650
9397
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
9398
Cov: 650 -> 650
Cov: 650 -> 650
9399
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9400
Cov: 650 -> 650
Cov: 650 -> 650
9401
Cov: 650 -> 650
Cov: 650 -> 650
9402
Cov: 650 -> 650
Cov: 650 -> 650
9403
Cov: 650 -> 650
Cov: 650 -> 650
9404
Cov: 650 -> 650
Cov: 650 -> 650
9405
Cov: 650 -> 650
Cov: 650 -> 650
9406
Cov: 650 -> 650
Cov: 650 -> 650
9407
Cov: 650 -> 680
Cov: 680 -> 680
9408
{"exception": "AttributeError", "msg": "module 'torch.nn' has no attribute 'ModuleLists'"}
9409
Cov: 680 -> 680
Cov: 680 -> 680
9410
Cov: 680 -> 680
Cov: 680 -> 680
9411
{"exception": "NameError", "msg": "name 'x2' is not defined"}
9412
Cov: 680 -> 680
Cov: 680 -> 680
9413
Cov: 680 -> 680
Cov: 680 -> 680
9414
Cov: 680 -> 680
Cov: 680 -> 680
9415
Cov: 680 -> 680
Cov: 680 -> 680
9416
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9417
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9418
Cov: 680 -> 682
Cov: 682 -> 682
9419
Cov: 682 -> 682
Cov: 682 -> 682
9420
Cov: 682 -> 682
Cov: 682 -> 682
9421
Cov: 682 -> 683
Cov: 683 -> 683
9422
Cov: 683 -> 683
Cov: 683 -> 683
9423
Cov: 683 -> 683
Cov: 683 -> 683
9424
Cov: 683 -> 683
Cov: 683 -> 683
9425
Cov: 683 -> 683
Cov: 683 -> 683
9426
Cov: 683 -> 683
Cov: 683 -> 683
9427
Cov: 683 -> 683
Cov: 683 -> 683
9428
Cov: 683 -> 683
Cov: 683 -> 683
9429
Cov: 683 -> 683
Cov: 683 -> 683
9430
Cov: 683 -> 683
Cov: 683 -> 683
9431
{"exception": "NameError", "msg": "name 'F' is not defined"}
9432
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9433
Cov: 683 -> 688
Cov: 688 -> 688
9434
Cov: 688 -> 688
Cov: 688 -> 688
9435
Cov: 688 -> 688
Cov: 688 -> 688
9436
Cov: 688 -> 688
Cov: 688 -> 688
9437
Cov: 688 -> 688
Cov: 688 -> 688
9438
Cov: 688 -> 688
Cov: 688 -> 688
9439
Cov: 688 -> 688
Cov: 688 -> 688
9440
Cov: 688 -> 688
Cov: 688 -> 688
9441
Cov: 688 -> 688
Cov: 688 -> 688
9442
Cov: 688 -> 688
Cov: 688 -> 688
9443
Cov: 688 -> 688
Cov: 688 -> 688
9444
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9445
Cov: 688 -> 688
Cov: 688 -> 688
9446
Cov: 688 -> 688
Cov: 688 -> 688
9447
Cov: 688 -> 688
Cov: 688 -> 688
9448
Cov: 688 -> 688
Cov: 688 -> 688
9449
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'n1', 'n2', and 'n3'"}
9450
Cov: 688 -> 688
Cov: 688 -> 688
9451
Cov: 688 -> 688
Cov: 688 -> 688
9452
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
9453
Cov: 688 -> 688
Cov: 688 -> 688
9454
Cov: 688 -> 688
Cov: 688 -> 688
9455
Cov: 688 -> 688
Cov: 688 -> 688
9456
Cov: 688 -> 688
Cov: 688 -> 688
9457
Cov: 688 -> 688
Cov: 688 -> 688
9458
Cov: 688 -> 688
Cov: 688 -> 688
9459
Cov: 688 -> 688
Cov: 688 -> 688
9460
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9461
Cov: 688 -> 688
Cov: 688 -> 688
9462
Cov: 688 -> 688
Cov: 688 -> 688
9463
Cov: 688 -> 688
Cov: 688 -> 688
9464
Cov: 688 -> 688
Cov: 688 -> 688
9465
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9466
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9467
Cov: 688 -> 688
Cov: 688 -> 688
9468
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'v1'"}
9469
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'in_channels'"}
9470
Cov: 688 -> 688
Cov: 688 -> 688
9471
Cov: 688 -> 688
Cov: 688 -> 688
9472
Cov: 688 -> 688
Cov: 688 -> 688
9473
Cov: 688 -> 688
Cov: 688 -> 688
9474
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9475
Cov: 688 -> 688
Cov: 688 -> 688
9476
Cov: 688 -> 688
Cov: 688 -> 688
9477
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query', 'key', 'value', 'scale_factor', and 'dropout_p'"}
9478
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'd_model'"}
9479
Cov: 688 -> 688
Cov: 688 -> 688
9480
Cov: 688 -> 688
Cov: 688 -> 688
9481
Cov: 688 -> 688
Cov: 688 -> 688
9482
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9483
Cov: 688 -> 688
Cov: 688 -> 688
9484
Cov: 688 -> 688
Cov: 688 -> 688
9485
Cov: 688 -> 688
Cov: 688 -> 688
9486
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other_tensor'"}
9487
Cov: 688 -> 688
Cov: 688 -> 688
9488
Cov: 688 -> 688
Cov: 688 -> 688
9489
Cov: 688 -> 688
Cov: 688 -> 688
9490
Cov: 688 -> 688
Cov: 688 -> 688
9491
Cov: 688 -> 688
Cov: 688 -> 688
9492
Cov: 688 -> 688
Cov: 688 -> 688
9493
Cov: 688 -> 688
Cov: 688 -> 688
9494
Cov: 688 -> 688
Cov: 688 -> 688
9495
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9496
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9497
Cov: 688 -> 688
Cov: 688 -> 688
9498
Cov: 688 -> 688
Cov: 688 -> 688
9499
Cov: 688 -> 688
Cov: 688 -> 688
9500
Cov: 688 -> 688
Cov: 688 -> 688
9501
Cov: 688 -> 688
Cov: 688 -> 688
9502
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
9503
Cov: 688 -> 688
Cov: 688 -> 688
9504
Cov: 688 -> 688
Cov: 688 -> 688
9505
Cov: 688 -> 688
Cov: 688 -> 688
9506
Cov: 688 -> 688
Cov: 688 -> 688
9507
Cov: 688 -> 688
Cov: 688 -> 688
9508
Cov: 688 -> 688
Cov: 688 -> 688
9509
Cov: 688 -> 688
Cov: 688 -> 688
9510
Cov: 688 -> 688
Cov: 688 -> 688
9511
Cov: 688 -> 688
Cov: 688 -> 688
9512
Cov: 688 -> 688
Cov: 688 -> 688
9513
Cov: 688 -> 688
Cov: 688 -> 688
9514
Cov: 688 -> 688
Cov: 688 -> 688
9515
Cov: 688 -> 688
Cov: 688 -> 688
9516
Cov: 688 -> 688
Cov: 688 -> 688
9517
Cov: 688 -> 688
Cov: 688 -> 688
9518
Cov: 688 -> 688
Cov: 688 -> 688
9519
Cov: 688 -> 692
Cov: 692 -> 692
9520
Cov: 692 -> 692
Cov: 692 -> 692
9521
Cov: 692 -> 692
Cov: 692 -> 692
9522
Cov: 692 -> 692
Cov: 692 -> 692
9523
Cov: 692 -> 692
Cov: 692 -> 692
9524
Cov: 692 -> 692
Cov: 692 -> 692
9525
Cov: 692 -> 692
Cov: 692 -> 692
9526
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9527
Cov: 692 -> 692
Cov: 692 -> 692
9528
Cov: 692 -> 692
Cov: 692 -> 692
9529
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9530
{"exception": "NameError", "msg": "name 'Module' is not defined"}
9531
Cov: 692 -> 692
Cov: 692 -> 692
9532
Cov: 692 -> 692
Cov: 692 -> 692
9533
Cov: 692 -> 696
Cov: 696 -> 696
9534
Cov: 696 -> 696
Cov: 696 -> 696
9535
Cov: 696 -> 696
Cov: 696 -> 696
9536
Cov: 696 -> 696
Cov: 696 -> 696
9537
{"exception": "SyntaxError", "msg": "unexpected EOF while parsing (<string>, line 28)"}
9538
Cov: 696 -> 696
Cov: 696 -> 696
9539
Cov: 696 -> 696
Cov: 696 -> 696
9540
Cov: 696 -> 696
Cov: 696 -> 696
9541
Cov: 696 -> 696
Cov: 696 -> 696
9542
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9543
Cov: 696 -> 696
Cov: 696 -> 696
9544
Cov: 696 -> 697
Cov: 697 -> 697
9545
Cov: 697 -> 697
Cov: 697 -> 697
9546
Cov: 697 -> 697
Cov: 697 -> 697
9547
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9548
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9549
Cov: 697 -> 697
Cov: 697 -> 697
9550
Cov: 697 -> 697
Cov: 697 -> 697
9551
Cov: 697 -> 697
Cov: 697 -> 697
9552
Cov: 697 -> 697
Cov: 697 -> 697
9553
Cov: 697 -> 699
Cov: 699 -> 699
9554
Cov: 699 -> 699
Cov: 699 -> 699
9555
Cov: 699 -> 699
Cov: 699 -> 699
9556
Cov: 699 -> 699
Cov: 699 -> 699
9557
Cov: 699 -> 699
Cov: 699 -> 699
9558
Cov: 699 -> 699
Cov: 699 -> 699
9559
{"exception": "TypeError", "msg": "__init__() got multiple values for argument 'kernel_size'"}
9560
Cov: 699 -> 699
Cov: 699 -> 699
9561
Cov: 699 -> 699
Cov: 699 -> 699
9562
Cov: 699 -> 699
Cov: 699 -> 699
9563
Cov: 699 -> 699
Cov: 699 -> 699
9564
Cov: 699 -> 699
Cov: 699 -> 699
9565
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'embed_dim' and 'num_heads'"}
9566
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9567
Cov: 699 -> 699
Cov: 699 -> 699
9568
Cov: 699 -> 699
Cov: 699 -> 699
9569
Cov: 699 -> 699
Cov: 699 -> 699
9570
Cov: 699 -> 699
Cov: 699 -> 699
9571
Cov: 699 -> 699
Cov: 699 -> 699
9572
Cov: 699 -> 699
Cov: 699 -> 699
9573
Cov: 699 -> 699
Cov: 699 -> 699
9574
Cov: 699 -> 699
Cov: 699 -> 699
9575
Cov: 699 -> 699
Cov: 699 -> 699
9576
Cov: 699 -> 699
Cov: 699 -> 699
9577
Cov: 699 -> 699
Cov: 699 -> 699
9578
Cov: 699 -> 699
Cov: 699 -> 699
9579
Cov: 699 -> 700
Cov: 700 -> 700
9580
Cov: 700 -> 700
Cov: 700 -> 700
9581
Cov: 700 -> 700
Cov: 700 -> 700
9582
Cov: 700 -> 700
Cov: 700 -> 700
9583
Cov: 700 -> 713
Cov: 713 -> 713
9584
Cov: 713 -> 713
Cov: 713 -> 713
9585
Cov: 713 -> 713
Cov: 713 -> 713
9586
Cov: 713 -> 713
Cov: 713 -> 713
9587
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9588
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9589
Cov: 713 -> 713
Cov: 713 -> 713
9590
Cov: 713 -> 713
Cov: 713 -> 713
9591
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'dropout_p', 'query', 'key', 'value', and 'inv_scale_factor'"}
9592
Cov: 713 -> 713
Cov: 713 -> 713
9593
Cov: 713 -> 713
Cov: 713 -> 713
9594
Cov: 713 -> 713
Cov: 713 -> 713
9595
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'num_features'"}
9596
Cov: 713 -> 713
Cov: 713 -> 713
9597
Cov: 713 -> 714
Cov: 714 -> 714
9598
Cov: 714 -> 714
Cov: 714 -> 714
9599
Cov: 714 -> 714
Cov: 714 -> 714
9600
Cov: 714 -> 714
Cov: 714 -> 714
9601
Cov: 714 -> 714
Cov: 714 -> 714
9602
Cov: 714 -> 714
Cov: 714 -> 714
9603
Cov: 714 -> 714
Cov: 714 -> 714
9604
Cov: 714 -> 714
Cov: 714 -> 714
9605
Cov: 714 -> 714
Cov: 714 -> 714
9606
Cov: 714 -> 714
Cov: 714 -> 714
9607
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
9608
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
9609
Cov: 714 -> 714
Cov: 714 -> 714
9610
Cov: 714 -> 714
Cov: 714 -> 714
9611
Cov: 714 -> 714
Cov: 714 -> 714
9612
Cov: 714 -> 714
Cov: 714 -> 714
9613
Cov: 714 -> 714
Cov: 714 -> 714
9614
Cov: 714 -> 714
Cov: 714 -> 714
9615
Cov: 714 -> 714
Cov: 714 -> 714
9616
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'out_features'"}
9617
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9618
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9619
Cov: 714 -> 714
Cov: 714 -> 714
9620
Cov: 714 -> 714
Cov: 714 -> 714
9621
Cov: 714 -> 714
Cov: 714 -> 714
9622
Cov: 714 -> 714
Cov: 714 -> 714
9623
Cov: 714 -> 714
Cov: 714 -> 714
9624
Cov: 714 -> 714
Cov: 714 -> 714
9625
Cov: 714 -> 714
Cov: 714 -> 714
9626
Cov: 714 -> 714
Cov: 714 -> 714
9627
Cov: 714 -> 714
Cov: 714 -> 714
9628
Cov: 714 -> 714
Cov: 714 -> 714
9629
Cov: 714 -> 714
Cov: 714 -> 714
9630
{"exception": "NameError", "msg": "name '__model__' is not defined"}
9631
Cov: 714 -> 714
Cov: 714 -> 714
9632
Cov: 714 -> 714
Cov: 714 -> 714
9633
Cov: 714 -> 714
Cov: 714 -> 714
9634
Cov: 714 -> 714
Cov: 714 -> 714
9635
Cov: 714 -> 714
Cov: 714 -> 714
9636
Cov: 714 -> 714
Cov: 714 -> 714
9637
Cov: 714 -> 714
Cov: 714 -> 714
9638
Cov: 714 -> 714
Cov: 714 -> 714
9639
Cov: 714 -> 714
Cov: 714 -> 714
9640
Cov: 714 -> 714
Cov: 714 -> 714
9641
Cov: 714 -> 714
Cov: 714 -> 714
9642
Cov: 714 -> 714
Cov: 714 -> 714
9643
Cov: 714 -> 714
Cov: 714 -> 714
9644
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9645
Cov: 714 -> 714
Cov: 714 -> 714
9646
Cov: 714 -> 714
Cov: 714 -> 714
9647
Cov: 714 -> 714
Cov: 714 -> 714
9648
Cov: 714 -> 714
Cov: 714 -> 714
9649
Cov: 714 -> 714
Cov: 714 -> 714
9650
Cov: 714 -> 714
Cov: 714 -> 714
9651
Cov: 714 -> 714
Cov: 714 -> 714
9652
Cov: 714 -> 720
Cov: 720 -> 720
9653
Cov: 720 -> 720
Cov: 720 -> 720
9654
Cov: 720 -> 720
Cov: 720 -> 720
9655
Cov: 720 -> 720
Cov: 720 -> 720
9656
Cov: 720 -> 720
Cov: 720 -> 720
9657
Cov: 720 -> 720
Cov: 720 -> 720
9658
Cov: 720 -> 720
Cov: 720 -> 720
9659
Cov: 720 -> 720
Cov: 720 -> 720
9660
Cov: 720 -> 720
Cov: 720 -> 720
9661
Cov: 720 -> 720
Cov: 720 -> 720
9662
Cov: 720 -> 720
Cov: 720 -> 720
9663
Cov: 720 -> 720
Cov: 720 -> 720
9664
Cov: 720 -> 721
Cov: 721 -> 721
9665
Cov: 721 -> 721
Cov: 721 -> 721
9666
Cov: 721 -> 721
Cov: 721 -> 721
9667
Cov: 721 -> 721
Cov: 721 -> 721
9668
Cov: 721 -> 721
Cov: 721 -> 721
9669
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9670
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9671
Cov: 721 -> 721
Cov: 721 -> 721
9672
Cov: 721 -> 721
Cov: 721 -> 721
9673
Cov: 721 -> 721
Cov: 721 -> 721
9674
Cov: 721 -> 721
Cov: 721 -> 721
9675
Cov: 721 -> 721
Cov: 721 -> 721
9676
Cov: 721 -> 722
Cov: 722 -> 722
9677
Cov: 722 -> 722
Cov: 722 -> 722
9678
Cov: 722 -> 722
Cov: 722 -> 722
9679
Cov: 722 -> 722
Cov: 722 -> 722
9680
Cov: 722 -> 722
Cov: 722 -> 722
9681
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9682
Cov: 722 -> 722
Cov: 722 -> 722
9683
Cov: 722 -> 722
Cov: 722 -> 722
9684
Cov: 722 -> 722
Cov: 722 -> 722
9685
Cov: 722 -> 722
Cov: 722 -> 722
9686
Cov: 722 -> 722
Cov: 722 -> 722
9687
Cov: 722 -> 722
Cov: 722 -> 722
9688
Cov: 722 -> 722
Cov: 722 -> 722
9689
Cov: 722 -> 722
Cov: 722 -> 722
9690
Cov: 722 -> 722
Cov: 722 -> 722
9691
{"exception": "RuntimeError", "msg": "Sizes of tensors must match except in dimension 3. Expected size 224 but got size 225 for tensor number 1 in the list."}
9692
Cov: 722 -> 722
Cov: 722 -> 722
9693
Cov: 722 -> 722
Cov: 722 -> 722
9694
Cov: 722 -> 722
Cov: 722 -> 722
9695
Cov: 722 -> 722
Cov: 722 -> 722
9696
Cov: 722 -> 722
Cov: 722 -> 722
9697
Cov: 722 -> 722
Cov: 722 -> 722
9698
Cov: 722 -> 722
Cov: 722 -> 722
9699
Cov: 722 -> 722
Cov: 722 -> 722
9700
Cov: 722 -> 722
Cov: 722 -> 722
9701
Cov: 722 -> 722
Cov: 722 -> 722
9702
Cov: 722 -> 722
Cov: 722 -> 722
9703
Cov: 722 -> 722
Cov: 722 -> 722
9704
Cov: 722 -> 722
Cov: 722 -> 722
9705
Cov: 722 -> 722
Cov: 722 -> 722
9706
Cov: 722 -> 722
Cov: 722 -> 722
9707
Cov: 722 -> 722
Cov: 722 -> 722
9708
Cov: 722 -> 722
Cov: 722 -> 722
9709
{"exception": "NameError", "msg": "name 'model' is not defined"}
9710
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9711
Cov: 722 -> 722
Cov: 722 -> 722
9712
Cov: 722 -> 724
Cov: 724 -> 724
9713
Cov: 724 -> 724
Cov: 724 -> 724
9714
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'dropout_p'"}
9715
Cov: 724 -> 724
Cov: 724 -> 724
9716
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9717
Cov: 724 -> 724
Cov: 724 -> 724
9718
Cov: 724 -> 724
Cov: 724 -> 724
9719
Cov: 724 -> 724
Cov: 724 -> 724
9720
Cov: 724 -> 724
Cov: 724 -> 724
9721
{"exception": "TypeError", "msg": "__init__() missing 5 required positional arguments: 'query_len', 'key_len', 'value_len', 'heads', and 'd_model'"}
9722
Cov: 724 -> 724
Cov: 724 -> 724
9723
Cov: 724 -> 724
Cov: 724 -> 724
9724
Cov: 724 -> 724
Cov: 724 -> 724
9725
Cov: 724 -> 724
Cov: 724 -> 724
9726
Cov: 724 -> 724
Cov: 724 -> 724
9727
Cov: 724 -> 724
Cov: 724 -> 724
9728
Cov: 724 -> 724
Cov: 724 -> 724
9729
Cov: 724 -> 724
Cov: 724 -> 724
9730
Cov: 724 -> 724
Cov: 724 -> 724
9731
{"exception": "NameError", "msg": "name 'Lambda' is not defined"}
9732
Cov: 724 -> 724
Cov: 724 -> 724
9733
Cov: 724 -> 724
Cov: 724 -> 724
9734
Cov: 724 -> 724
Cov: 724 -> 724
9735
Cov: 724 -> 724
Cov: 724 -> 724
9736
Cov: 724 -> 724
Cov: 724 -> 724
9737
Cov: 724 -> 724
Cov: 724 -> 724
9738
Cov: 724 -> 724
Cov: 724 -> 724
9739
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9740
Cov: 724 -> 724
Cov: 724 -> 724
9741
Cov: 724 -> 724
Cov: 724 -> 724
9742
Cov: 724 -> 724
Cov: 724 -> 724
9743
Cov: 724 -> 724
Cov: 724 -> 724
9744
Cov: 724 -> 724
Cov: 724 -> 724
9745
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9746
Cov: 724 -> 724
Cov: 724 -> 724
9747
Cov: 724 -> 724
Cov: 724 -> 724
9748
Cov: 724 -> 724
Cov: 724 -> 724
9749
Cov: 724 -> 724
Cov: 724 -> 724
9750
Cov: 724 -> 724
Cov: 724 -> 724
9751
Cov: 724 -> 724
Cov: 724 -> 724
9752
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'in_features' and 'out_features'"}
9753
Cov: 724 -> 724
Cov: 724 -> 724
9754
Cov: 724 -> 724
Cov: 724 -> 724
9755
{"exception": "NameError", "msg": "name 'Submodule' is not defined"}
9756
Cov: 724 -> 724
Cov: 724 -> 724
9757
Cov: 724 -> 724
Cov: 724 -> 724
9758
Cov: 724 -> 724
Cov: 724 -> 724
9759
Cov: 724 -> 724
Cov: 724 -> 724
9760
Cov: 724 -> 724
Cov: 724 -> 724
9761
Cov: 724 -> 727
Cov: 727 -> 727
9762
Cov: 727 -> 729
Cov: 729 -> 729
9763
Cov: 729 -> 729
Cov: 729 -> 729
9764
Cov: 729 -> 729
Cov: 729 -> 729
9765
Cov: 729 -> 729
Cov: 729 -> 729
9766
Cov: 729 -> 729
Cov: 729 -> 729
9767
Cov: 729 -> 729
Cov: 729 -> 729
9768
Cov: 729 -> 729
Cov: 729 -> 729
9769
Cov: 729 -> 729
Cov: 729 -> 729
9770
Cov: 729 -> 729
Cov: 729 -> 729
9771
Cov: 729 -> 729
Cov: 729 -> 729
9772
Cov: 729 -> 729
Cov: 729 -> 729
9773
Cov: 729 -> 734
Cov: 734 -> 734
9774
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9775
Cov: 734 -> 734
Cov: 734 -> 734
9776
Cov: 734 -> 734
Cov: 734 -> 734
9777
Cov: 734 -> 734
Cov: 734 -> 734
9778
Cov: 734 -> 734
Cov: 734 -> 734
9779
Cov: 734 -> 734
Cov: 734 -> 734
9780
Cov: 734 -> 734
Cov: 734 -> 734
9781
Cov: 734 -> 734
Cov: 734 -> 734
9782
Cov: 734 -> 734
Cov: 734 -> 734
9783
Cov: 734 -> 734
Cov: 734 -> 734
9784
Cov: 734 -> 734
Cov: 734 -> 734
9785
Cov: 734 -> 734
Cov: 734 -> 734
9786
Cov: 734 -> 734
Cov: 734 -> 734
9787
Cov: 734 -> 734
Cov: 734 -> 734
9788
Cov: 734 -> 734
Cov: 734 -> 734
9789
Cov: 734 -> 734
Cov: 734 -> 734
9790
Cov: 734 -> 734
Cov: 734 -> 734
9791
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9792
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9793
Cov: 734 -> 734
Cov: 734 -> 734
9794
Cov: 734 -> 734
Cov: 734 -> 734
9795
Cov: 734 -> 734
Cov: 734 -> 734
9796
Cov: 734 -> 734
Cov: 734 -> 734
9797
{"exception": "NameError", "msg": "name 'model' is not defined"}
9798
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9799
Cov: 734 -> 735
Cov: 735 -> 735
9800
Cov: 735 -> 735
Cov: 735 -> 735
9801
Cov: 735 -> 735
Cov: 735 -> 735
9802
Cov: 735 -> 735
Cov: 735 -> 735
9803
Cov: 735 -> 735
Cov: 735 -> 735
9804
{"exception": "NameError", "msg": "name 'resnet18' is not defined"}
9805
Cov: 735 -> 735
Cov: 735 -> 735
9806
Cov: 735 -> 735
Cov: 735 -> 735
9807
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
9808
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'negative_slope'"}
9809
Cov: 735 -> 735
Cov: 735 -> 735
9810
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'num_heads', 'd_model', 'dropout_p', and 'scale_factor'"}
9811
Cov: 735 -> 735
Cov: 735 -> 735
9812
Cov: 735 -> 735
Cov: 735 -> 735
9813
Cov: 735 -> 735
Cov: 735 -> 735
9814
Cov: 735 -> 735
Cov: 735 -> 735
9815
{"exception": "TypeError", "msg": "__init__() got an unexpected keyword argument 'stride'"}
9816
Cov: 735 -> 735
Cov: 735 -> 735
9817
Cov: 735 -> 735
Cov: 735 -> 735
9818
Cov: 735 -> 739
Cov: 739 -> 739
9819
Cov: 739 -> 739
Cov: 739 -> 739
9820
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9821
Cov: 739 -> 802
Cov: 802 -> 802
9822
Cov: 802 -> 802
Cov: 802 -> 802
9823
Cov: 802 -> 802
Cov: 802 -> 802
9824
Cov: 802 -> 802
Cov: 802 -> 802
9825
Cov: 802 -> 802
Cov: 802 -> 802
9826
Cov: 802 -> 802
Cov: 802 -> 802
9827
Cov: 802 -> 802
Cov: 802 -> 802
9828
Cov: 802 -> 803
Cov: 803 -> 803
9829
Cov: 803 -> 803
Cov: 803 -> 803
9830
Cov: 803 -> 803
Cov: 803 -> 803
9831
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9832
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9833
Cov: 803 -> 804
Cov: 804 -> 804
9834
Cov: 804 -> 804
Cov: 804 -> 804
9835
Cov: 804 -> 822
Cov: 822 -> 822
9836
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'input_shape' and 'num_heads'"}
9837
Cov: 822 -> 822
Cov: 822 -> 822
9838
Cov: 822 -> 822
Cov: 822 -> 822
9839
Cov: 822 -> 822
Cov: 822 -> 822
9840
Cov: 822 -> 822
Cov: 822 -> 822
9841
Cov: 822 -> 822
Cov: 822 -> 822
9842
Cov: 822 -> 822
Cov: 822 -> 822
9843
Cov: 822 -> 822
Cov: 822 -> 822
9844
Cov: 822 -> 822
Cov: 822 -> 822
9845
Cov: 822 -> 822
Cov: 822 -> 822
9846
Cov: 822 -> 822
Cov: 822 -> 822
9847
Cov: 822 -> 822
Cov: 822 -> 822
9848
Cov: 822 -> 822
Cov: 822 -> 822
9849
Cov: 822 -> 822
Cov: 822 -> 822
9850
Cov: 822 -> 822
Cov: 822 -> 822
9851
Cov: 822 -> 822
Cov: 822 -> 822
9852
Cov: 822 -> 822
Cov: 822 -> 822
9853
Cov: 822 -> 822
Cov: 822 -> 822
9854
Cov: 822 -> 822
Cov: 822 -> 822
9855
Cov: 822 -> 822
Cov: 822 -> 822
9856
Cov: 822 -> 822
Cov: 822 -> 822
9857
Cov: 822 -> 822
Cov: 822 -> 822
9858
Cov: 822 -> 822
Cov: 822 -> 822
9859
Cov: 822 -> 822
Cov: 822 -> 822
9860
Cov: 822 -> 822
Cov: 822 -> 822
9861
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9862
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9863
Cov: 822 -> 822
Cov: 822 -> 822
9864
Cov: 822 -> 822
Cov: 822 -> 822
9865
Cov: 822 -> 822
Cov: 822 -> 822
9866
Cov: 822 -> 822
Cov: 822 -> 822
9867
Cov: 822 -> 822
Cov: 822 -> 822
9868
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
9869
Cov: 822 -> 822
Cov: 822 -> 822
9870
Cov: 822 -> 822
Cov: 822 -> 822
9871
Cov: 822 -> 822
Cov: 822 -> 822
9872
Cov: 822 -> 822
Cov: 822 -> 822
9873
Cov: 822 -> 822
Cov: 822 -> 822
9874
Cov: 822 -> 822
Cov: 822 -> 822
9875
Cov: 822 -> 822
Cov: 822 -> 822
9876
Cov: 822 -> 822
Cov: 822 -> 822
9877
Cov: 822 -> 822
Cov: 822 -> 822
9878
Cov: 822 -> 822
Cov: 822 -> 822
9879
Cov: 822 -> 822
Cov: 822 -> 822
9880
Cov: 822 -> 822
Cov: 822 -> 822
9881
Cov: 822 -> 822
Cov: 822 -> 822
9882
Cov: 822 -> 822
Cov: 822 -> 822
9883
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'kernel_size'"}
9884
Cov: 822 -> 822
Cov: 822 -> 822
9885
Cov: 822 -> 822
Cov: 822 -> 822
9886
Cov: 822 -> 822
Cov: 822 -> 822
9887
Cov: 822 -> 822
Cov: 822 -> 822
9888
Cov: 822 -> 823
Cov: 823 -> 823
9889
Cov: 823 -> 823
Cov: 823 -> 823
9890
Cov: 823 -> 823
Cov: 823 -> 823
9891
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9892
Cov: 823 -> 823
Cov: 823 -> 823
9893
Cov: 823 -> 823
Cov: 823 -> 823
9894
Cov: 823 -> 823
Cov: 823 -> 823
9895
Cov: 823 -> 823
Cov: 823 -> 823
9896
{"exception": "NameError", "msg": "name 'Block' is not defined"}
9897
Cov: 823 -> 823
Cov: 823 -> 823
9898
Cov: 823 -> 823
Cov: 823 -> 823
9899
Cov: 823 -> 823
Cov: 823 -> 823
9900
Cov: 823 -> 823
Cov: 823 -> 823
9901
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
9902
Cov: 823 -> 823
Cov: 823 -> 823
9903
Cov: 823 -> 823
Cov: 823 -> 823
9904
Cov: 823 -> 823
Cov: 823 -> 823
9905
Cov: 823 -> 823
Cov: 823 -> 823
9906
Cov: 823 -> 823
Cov: 823 -> 823
9907
Cov: 823 -> 823
Cov: 823 -> 823
9908
Cov: 823 -> 823
Cov: 823 -> 823
9909
Cov: 823 -> 823
Cov: 823 -> 823
9910
Cov: 823 -> 823
Cov: 823 -> 823
9911
Cov: 823 -> 823
Cov: 823 -> 823
9912
Cov: 823 -> 823
Cov: 823 -> 823
9913
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9914
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
9915
Cov: 823 -> 823
Cov: 823 -> 823
9916
Cov: 823 -> 823
Cov: 823 -> 823
9917
Cov: 823 -> 823
Cov: 823 -> 823
9918
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9919
Cov: 823 -> 824
Cov: 824 -> 824
9920
Cov: 824 -> 832
Cov: 832 -> 832
9921
Cov: 832 -> 833
Cov: 833 -> 833
9922
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
9923
Cov: 833 -> 833
Cov: 833 -> 833
9924
Cov: 833 -> 833
Cov: 833 -> 833
9925
Cov: 833 -> 833
Cov: 833 -> 833
9926
Cov: 833 -> 833
Cov: 833 -> 833
9927
Cov: 833 -> 833
Cov: 833 -> 833
9928
Cov: 833 -> 833
Cov: 833 -> 833
9929
Cov: 833 -> 833
Cov: 833 -> 833
9930
{"exception": "NameError", "msg": "name 's' is not defined"}
9931
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9932
Cov: 833 -> 833
Cov: 833 -> 833
9933
Cov: 833 -> 833
Cov: 833 -> 833
9934
Cov: 833 -> 833
Cov: 833 -> 833
9935
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'size'"}
9936
Cov: 833 -> 833
Cov: 833 -> 833
9937
Cov: 833 -> 833
Cov: 833 -> 833
9938
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'linear'"}
9939
Cov: 833 -> 833
Cov: 833 -> 833
9940
Cov: 833 -> 833
Cov: 833 -> 833
9941
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9942
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9943
Cov: 833 -> 833
Cov: 833 -> 833
9944
Cov: 833 -> 833
Cov: 833 -> 833
9945
Cov: 833 -> 833
Cov: 833 -> 833
9946
Cov: 833 -> 833
Cov: 833 -> 833
9947
Cov: 833 -> 833
Cov: 833 -> 833
9948
Cov: 833 -> 833
Cov: 833 -> 833
9949
Cov: 833 -> 833
Cov: 833 -> 833
9950
Cov: 833 -> 833
Cov: 833 -> 833
9951
Cov: 833 -> 833
Cov: 833 -> 833
9952
Cov: 833 -> 833
Cov: 833 -> 833
9953
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9954
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9955
Cov: 833 -> 833
Cov: 833 -> 833
9956
Cov: 833 -> 837
Cov: 837 -> 837
9957
Cov: 837 -> 837
Cov: 837 -> 837
9958
Cov: 837 -> 837
Cov: 837 -> 837
9959
Cov: 837 -> 837
Cov: 837 -> 837
9960
Cov: 837 -> 837
Cov: 837 -> 837
9961
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9962
{"exception": "NameError", "msg": "name 'Model' is not defined"}
9963
Cov: 837 -> 837
Cov: 837 -> 837
9964
Cov: 837 -> 837
Cov: 837 -> 837
9965
{"exception": "NameError", "msg": "name 'B' is not defined"}
9966
{"exception": "TypeError", "msg": "__init__() missing 4 required positional arguments: 'num_attention_heads', 'feedforward_dim', 'embedding_dim', and 'dropout_p'"}
9967
Cov: 837 -> 1022
Cov: 1022 -> 1022
9968
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9969
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9970
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9971
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9972
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9973
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
9974
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9975
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9976
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9977
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9978
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9979
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9980
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9981
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9982
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9983
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9984
{"exception": "NameError", "msg": "name 'nn' is not defined"}
9985
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9986
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9987
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9988
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9989
{"exception": "SyntaxError", "msg": "'return' outside function (<string>, line 12)"}
9990
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min_value' and 'max_value'"}
9991
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9992
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9993
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9994
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9995
{"exception": "TypeError", "msg": "__init__() missing 1 required positional argument: 'other'"}
9996
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9997
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9998
Cov: 1022 -> 1022
Cov: 1022 -> 1022
9999
Cov: 1022 -> 1022
Cov: 1022 -> 1022
10000
Cov: 1022 -> 1022
Cov: 1022 -> 1022

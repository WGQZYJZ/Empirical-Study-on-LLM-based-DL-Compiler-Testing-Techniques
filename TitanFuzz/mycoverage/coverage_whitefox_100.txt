1
Cov: 0 -> 34
Cov: 34 -> 34
2
Cov: 34 -> 204
Cov: 204 -> 204
3
Cov: 204 -> 228
Cov: 228 -> 228
4
Cov: 228 -> 228
Cov: 228 -> 228
5
Cov: 228 -> 250
Cov: 250 -> 250
6
Cov: 250 -> 252
Cov: 252 -> 252
7
Cov: 252 -> 253
Cov: 253 -> 253
8
Cov: 253 -> 253
Cov: 253 -> 253
9
Cov: 253 -> 253
Cov: 253 -> 253
10
Cov: 253 -> 254
Cov: 254 -> 254
11
Cov: 254 -> 254
Cov: 254 -> 254
12
Cov: 254 -> 254
Cov: 254 -> 254
13
{"exception": "NameError", "msg": "name 'Model' is not defined"}
14
{"exception": "NameError", "msg": "name 'Model' is not defined"}
15
Cov: 254 -> 254
Cov: 254 -> 254
16
Cov: 254 -> 254
Cov: 254 -> 254
17
Cov: 254 -> 259
Cov: 259 -> 259
18
Cov: 259 -> 259
Cov: 259 -> 259
19
Cov: 259 -> 259
Cov: 259 -> 259
20
Cov: 259 -> 259
Cov: 259 -> 259
21
Cov: 259 -> 259
Cov: 259 -> 259
22
Cov: 259 -> 259
Cov: 259 -> 259
23
Cov: 259 -> 259
Cov: 259 -> 259
24
Cov: 259 -> 276
Cov: 276 -> 276
25
Cov: 276 -> 278
Cov: 278 -> 278
26
Cov: 278 -> 278
Cov: 278 -> 278
27
Cov: 278 -> 278
Cov: 278 -> 278
28
Cov: 278 -> 280
Cov: 280 -> 280
29
Cov: 280 -> 280
Cov: 280 -> 280
30
Cov: 280 -> 280
Cov: 280 -> 280
31
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
32
{"exception": "TypeError", "msg": "__init__() missing 2 required positional arguments: 'min' and 'max'"}
33
Cov: 280 -> 281
Cov: 281 -> 281
34
Cov: 281 -> 282
Cov: 282 -> 282
35
Cov: 282 -> 282
Cov: 282 -> 282
36
Cov: 282 -> 289
Cov: 289 -> 289
37
Cov: 289 -> 322
Cov: 322 -> 322
38
Cov: 322 -> 432
Cov: 432 -> 432
39
{"exception": "ValueError", "msg": "out_channels must be divisible by groups"}
40
Cov: 432 -> 437
Cov: 437 -> 437
41
Cov: 437 -> 437
Cov: 437 -> 437
42
Cov: 437 -> 437
Cov: 437 -> 437
43
Cov: 437 -> 437
Cov: 437 -> 437
44
Cov: 437 -> 437
Cov: 437 -> 437
45
{"exception": "TypeError", "msg": "interpolate() missing 1 required positional argument: 'input'"}
46
Cov: 437 -> 437
Cov: 437 -> 437
47
Cov: 437 -> 437
Cov: 437 -> 437
48
Cov: 437 -> 438
Cov: 438 -> 438
49
{"exception": "NameError", "msg": "name 'np' is not defined"}
50
Cov: 438 -> 438
Cov: 438 -> 438
51
Cov: 438 -> 439
Cov: 439 -> 439
52
Cov: 439 -> 443
Cov: 443 -> 443
53
Cov: 443 -> 443
Cov: 443 -> 443
54
Cov: 443 -> 443
Cov: 443 -> 443
55
Cov: 443 -> 443
Cov: 443 -> 443
56
Cov: 443 -> 443
Cov: 443 -> 443
57
Cov: 443 -> 443
Cov: 443 -> 443
58
Cov: 443 -> 443
Cov: 443 -> 443
59
Cov: 443 -> 443
Cov: 443 -> 443
60
Cov: 443 -> 443
Cov: 443 -> 443
61
Cov: 443 -> 443
Cov: 443 -> 443
62
Cov: 443 -> 443
Cov: 443 -> 443
63
{"exception": "IndentationError", "msg": "unexpected indent (<string>, line 3)"}
64
Cov: 443 -> 443
Cov: 443 -> 443
65
Cov: 443 -> 443
Cov: 443 -> 443
66
Cov: 443 -> 443
Cov: 443 -> 443
67
Cov: 443 -> 443
Cov: 443 -> 443
68
Cov: 443 -> 443
Cov: 443 -> 443
69
Cov: 443 -> 443
Cov: 443 -> 443
70
Cov: 443 -> 443
Cov: 443 -> 443
71
Cov: 443 -> 443
Cov: 443 -> 443
72
Cov: 443 -> 443
Cov: 443 -> 443
73
Cov: 443 -> 444
Cov: 444 -> 444
74
Cov: 444 -> 444
Cov: 444 -> 444
75
{"exception": "TypeError", "msg": "__init__() missing 3 required positional arguments: 'input_dim', 'output_dim', and 'num_heads'"}
76
Cov: 444 -> 444
Cov: 444 -> 444
77
Cov: 444 -> 444
Cov: 444 -> 444
78
Cov: 444 -> 444
Cov: 444 -> 444
79
Cov: 444 -> 445
Cov: 445 -> 445
80
Cov: 445 -> 445
Cov: 445 -> 445
81
Cov: 445 -> 445
Cov: 445 -> 445
82
Cov: 445 -> 445
Cov: 445 -> 445
83
Cov: 445 -> 445
Cov: 445 -> 445
84
Cov: 445 -> 447
Cov: 447 -> 447
85
Cov: 447 -> 447
Cov: 447 -> 447
86
Cov: 447 -> 447
Cov: 447 -> 447
87
Cov: 447 -> 447
Cov: 447 -> 447
88
Cov: 447 -> 447
Cov: 447 -> 447
89
Cov: 447 -> 447
Cov: 447 -> 447
90
Cov: 447 -> 447
Cov: 447 -> 447
91
Cov: 447 -> 447
Cov: 447 -> 447
92
Cov: 447 -> 447
Cov: 447 -> 447
93
Cov: 447 -> 447
Cov: 447 -> 447
94
{"exception": "ValueError", "msg": "in_channels must be divisible by groups"}
95
Cov: 447 -> 449
Cov: 449 -> 449
96
Cov: 449 -> 449
Cov: 449 -> 449
97
Cov: 449 -> 449
Cov: 449 -> 449
98
Cov: 449 -> 449
Cov: 449 -> 449
99
Cov: 449 -> 449
Cov: 449 -> 449
100
Cov: 449 -> 449
Cov: 449 -> 449
test_torch_cov passed
